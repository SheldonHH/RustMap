{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 4, "end_byte": 9, "start_point": [0, 4], "end_point": [0, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 11, "end_byte": 16, "start_point": [0, 11], "end_point": [0, 16], "text": "bzip2"}], "start_byte": 4, "end_byte": 16, "start_point": [0, 4], "end_point": [0, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 16, "end_byte": 18, "start_point": [0, 16], "end_point": [0, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 18, "end_byte": 40, "start_point": [0, 18], "end_point": [0, 40], "text": "scc_90_root_52_setExit"}], "start_byte": 4, "end_byte": 40, "start_point": [0, 4], "end_point": [0, 40], "text": "crate::bzip2::scc_90_root_52_setExit"}, {"type": "::", "children": [], "start_byte": 40, "end_byte": 42, "start_point": [0, 40], "end_point": [0, 42], "text": "::"}, {"type": "*", "children": [], "start_byte": 42, "end_byte": 43, "start_point": [0, 42], "end_point": [0, 43], "text": "*"}], "start_byte": 4, "end_byte": 43, "start_point": [0, 4], "end_point": [0, 43], "text": "crate::bzip2::scc_90_root_52_setExit::*"}, {"type": ";", "children": [], "start_byte": 43, "end_byte": 44, "start_point": [0, 43], "end_point": [0, 44], "text": ";"}], "start_byte": 0, "end_byte": 44, "start_point": [0, 0], "end_point": [0, 44], "text": "use crate::bzip2::scc_90_root_52_setExit::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 45, "end_byte": 48, "start_point": [1, 0], "end_point": [1, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 49, "end_byte": 54, "start_point": [1, 4], "end_point": [1, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 54, "end_byte": 56, "start_point": [1, 9], "end_point": [1, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 56, "end_byte": 67, "start_point": [1, 11], "end_point": [1, 22], "text": "global_vars"}], "start_byte": 49, "end_byte": 67, "start_point": [1, 4], "end_point": [1, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 67, "end_byte": 69, "start_point": [1, 22], "end_point": [1, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 69, "end_byte": 77, "start_point": [1, 24], "end_point": [1, 32], "text": "bzip2_c5"}], "start_byte": 49, "end_byte": 77, "start_point": [1, 4], "end_point": [1, 32], "text": "crate::global_vars::bzip2_c5"}, {"type": "::", "children": [], "start_byte": 77, "end_byte": 79, "start_point": [1, 32], "end_point": [1, 34], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 79, "end_byte": 80, "start_point": [1, 34], "end_point": [1, 35], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 80, "end_byte": 89, "start_point": [1, 35], "end_point": [1, 44], "text": "exitValue"}, {"type": "}", "children": [], "start_byte": 89, "end_byte": 90, "start_point": [1, 44], "end_point": [1, 45], "text": "}"}], "start_byte": 79, "end_byte": 90, "start_point": [1, 34], "end_point": [1, 45], "text": "{exitValue}"}], "start_byte": 49, "end_byte": 90, "start_point": [1, 4], "end_point": [1, 45], "text": "crate::global_vars::bzip2_c5::{exitValue}"}, {"type": ";", "children": [], "start_byte": 90, "end_byte": 91, "start_point": [1, 45], "end_point": [1, 46], "text": ";"}], "start_byte": 45, "end_byte": 91, "start_point": [1, 0], "end_point": [1, 46], "text": "use crate::global_vars::bzip2_c5::{exitValue};"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 93, "end_byte": 96, "start_point": [3, 0], "end_point": [3, 3], "text": "pub"}], "start_byte": 93, "end_byte": 96, "start_point": [3, 0], "end_point": [3, 3], "text": "pub"}, {"type": "fn", "children": [], "start_byte": 97, "end_byte": 99, "start_point": [3, 4], "end_point": [3, 6], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 100, "end_byte": 114, "start_point": [3, 7], "end_point": [3, 21], "text": "copy_file_name"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 114, "end_byte": 115, "start_point": [3, 21], "end_point": [3, 22], "text": "("}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 115, "end_byte": 117, "start_point": [3, 22], "end_point": [3, 24], "text": "to"}, {"type": ":", "children": [], "start_byte": 117, "end_byte": 118, "start_point": [3, 24], "end_point": [3, 25], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 119, "end_byte": 120, "start_point": [3, 26], "end_point": [3, 27], "text": "&"}, {"type": "mutable_specifier", "children": [], "start_byte": 120, "end_byte": 123, "start_point": [3, 27], "end_point": [3, 30], "text": "mut"}, {"type": "type_identifier", "children": [], "start_byte": 124, "end_byte": 130, "start_point": [3, 31], "end_point": [3, 37], "text": "String"}], "start_byte": 119, "end_byte": 130, "start_point": [3, 26], "end_point": [3, 37], "text": "&mut String"}], "start_byte": 115, "end_byte": 130, "start_point": [3, 22], "end_point": [3, 37], "text": "to: &mut String"}, {"type": ",", "children": [], "start_byte": 130, "end_byte": 131, "start_point": [3, 37], "end_point": [3, 38], "text": ","}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 132, "end_byte": 136, "start_point": [3, 39], "end_point": [3, 43], "text": "from"}, {"type": ":", "children": [], "start_byte": 136, "end_byte": 137, "start_point": [3, 43], "end_point": [3, 44], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 138, "end_byte": 139, "start_point": [3, 45], "end_point": [3, 46], "text": "&"}, {"type": "primitive_type", "children": [], "start_byte": 139, "end_byte": 142, "start_point": [3, 46], "end_point": [3, 49], "text": "str"}], "start_byte": 138, "end_byte": 142, "start_point": [3, 45], "end_point": [3, 49], "text": "&str"}], "start_byte": 132, "end_byte": 142, "start_point": [3, 39], "end_point": [3, 49], "text": "from: &str"}, {"type": ")", "children": [], "start_byte": 142, "end_byte": 143, "start_point": [3, 49], "end_point": [3, 50], "text": ")"}], "start_byte": 114, "end_byte": 143, "start_point": [3, 21], "end_point": [3, 50], "text": "(to: &mut String, from: &str)"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 144, "end_byte": 145, "start_point": [3, 51], "end_point": [3, 52], "text": "{"}, {"type": "const_item", "children": [{"type": "const", "children": [], "start_byte": 150, "end_byte": 155, "start_point": [4, 4], "end_point": [4, 9], "text": "const"}, {"type": "identifier", "children": [], "start_byte": 156, "end_byte": 163, "start_point": [4, 10], "end_point": [4, 17], "text": "MAX_LEN"}, {"type": ":", "children": [], "start_byte": 163, "end_byte": 164, "start_point": [4, 17], "end_point": [4, 18], "text": ":"}, {"type": "primitive_type", "children": [], "start_byte": 165, "end_byte": 170, "start_point": [4, 19], "end_point": [4, 24], "text": "usize"}, {"type": "=", "children": [], "start_byte": 171, "end_byte": 172, "start_point": [4, 25], "end_point": [4, 26], "text": "="}, {"type": "binary_expression", "children": [{"type": "integer_literal", "children": [], "start_byte": 173, "end_byte": 177, "start_point": [4, 27], "end_point": [4, 31], "text": "1034"}, {"type": "-", "children": [], "start_byte": 178, "end_byte": 179, "start_point": [4, 32], "end_point": [4, 33], "text": "-"}, {"type": "integer_literal", "children": [], "start_byte": 180, "end_byte": 182, "start_point": [4, 34], "end_point": [4, 36], "text": "10"}], "start_byte": 173, "end_byte": 182, "start_point": [4, 27], "end_point": [4, 36], "text": "1034 - 10"}, {"type": ";", "children": [], "start_byte": 182, "end_byte": 183, "start_point": [4, 36], "end_point": [4, 37], "text": ";"}], "start_byte": 150, "end_byte": 183, "start_point": [4, 4], "end_point": [4, 37], "text": "const MAX_LEN: usize = 1034 - 10;"}, {"type": "line_comment", "children": [], "start_byte": 184, "end_byte": 211, "start_point": [4, 38], "end_point": [4, 65], "text": "// \u660e\u786e\u6ce8\u91ca\u6570\u5b57\u7c7b\u578b\n\n    if from.le"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 217, "end_byte": 219, "start_point": [6, 4], "end_point": [6, 6], "text": "MA"}, {"type": "binary_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 220, "end_byte": 224, "start_point": [6, 7], "end_point": [6, 11], "text": "_LEN"}, {"type": ".", "children": [], "start_byte": 224, "end_byte": 225, "start_point": [6, 11], "end_point": [6, 12], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 225, "end_byte": 228, "start_point": [6, 12], "end_point": [6, 15], "text": "{\n "}], "start_byte": 220, "end_byte": 228, "start_point": [6, 7], "end_point": [6, 15], "text": "_LEN {\n "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 228, "end_byte": 229, "start_point": [6, 15], "end_point": [6, 16], "text": " "}, {"type": ")", "children": [], "start_byte": 229, "end_byte": 230, "start_point": [6, 16], "end_point": [6, 17], "text": " "}], "start_byte": 228, "end_byte": 230, "start_point": [6, 15], "end_point": [6, 17], "text": "  "}], "start_byte": 220, "end_byte": 230, "start_point": [6, 7], "end_point": [6, 17], "text": "_LEN {\n   "}, {"type": ">", "children": [], "start_byte": 231, "end_byte": 232, "start_point": [6, 18], "end_point": [6, 19], "text": " "}, {"type": "identifier", "children": [], "start_byte": 233, "end_byte": 240, "start_point": [6, 20], "end_point": [6, 27], "text": "  eprin"}], "start_byte": 220, "end_byte": 240, "start_point": [6, 7], "end_point": [6, 27], "text": "_LEN {\n        eprin"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 241, "end_byte": 242, "start_point": [6, 28], "end_point": [6, 29], "text": "l"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 251, "end_byte": 259, "start_point": [7, 8], "end_point": [7, 16], "text": "       \""}, {"type": "!", "children": [], "start_byte": 259, "end_byte": 260, "start_point": [7, 16], "end_point": [7, 17], "text": "b"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 260, "end_byte": 261, "start_point": [7, 17], "end_point": [7, 18], "text": "z"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 274, "end_byte": 275, "start_point": [8, 12], "end_point": [8, 13], "text": "e"}, {"type": "escape_sequence", "children": [], "start_byte": 291, "end_byte": 293, "start_point": [8, 29], "end_point": [8, 31], "text": "ic"}, {"type": "escape_sequence", "children": [], "start_byte": 297, "end_byte": 299, "start_point": [8, 35], "end_point": [8, 37], "text": "ly"}, {"type": "escape_sequence", "children": [], "start_byte": 342, "end_byte": 344, "start_point": [8, 80], "end_point": [8, 82], "text": "ea"}, {"type": "\"", "children": [], "start_byte": 398, "end_byte": 399, "start_point": [8, 136], "end_point": [8, 137], "text": "r"}], "start_byte": 274, "end_byte": 399, "start_point": [8, 12], "end_point": [8, 137], "text": "e\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            fr"}, {"type": "identifier", "children": [], "start_byte": 413, "end_byte": 417, "start_point": [9, 12], "end_point": [9, 16], "text": "    "}, {"type": "identifier", "children": [], "start_byte": 419, "end_byte": 426, "start_point": [9, 18], "end_point": [9, 25], "text": ");\n    "}, {"type": ")", "children": [], "start_byte": 435, "end_byte": 436, "start_point": [10, 8], "end_point": [10, 9], "text": "e"}], "start_byte": 260, "end_byte": 436, "start_point": [7, 17], "end_point": [10, 9], "text": "zip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe"}], "start_byte": 251, "end_byte": 436, "start_point": [7, 8], "end_point": [10, 9], "text": "       \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe"}, {"type": ";", "children": [], "start_byte": 436, "end_byte": 437, "start_point": [10, 9], "end_point": [10, 10], "text": " "}], "start_byte": 251, "end_byte": 437, "start_point": [7, 8], "end_point": [10, 10], "text": "       \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe "}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 446, "end_byte": 452, "start_point": [11, 8], "end_point": [11, 14], "text": "     s"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 453, "end_byte": 454, "start_point": [11, 15], "end_point": [11, 16], "text": "t"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 467, "end_byte": 475, "start_point": [12, 12], "end_point": [12, 20], "text": "        "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 475, "end_byte": 476, "start_point": [12, 20], "end_point": [12, 21], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 476, "end_byte": 477, "start_point": [12, 21], "end_point": [12, 22], "text": "s"}, {"type": ")", "children": [], "start_byte": 477, "end_byte": 478, "start_point": [12, 22], "end_point": [12, 23], "text": "t"}], "start_byte": 475, "end_byte": 478, "start_point": [12, 20], "end_point": [12, 23], "text": " st"}], "start_byte": 467, "end_byte": 478, "start_point": [12, 12], "end_point": [12, 23], "text": "         st"}, {"type": ";", "children": [], "start_byte": 478, "end_byte": 479, "start_point": [12, 23], "end_point": [12, 24], "text": "d"}], "start_byte": 467, "end_byte": 479, "start_point": [12, 12], "end_point": [12, 24], "text": "         std"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 492, "end_byte": 495, "start_point": [13, 12], "end_point": [13, 15], "text": "it("}, {"type": "::", "children": [], "start_byte": 495, "end_byte": 497, "start_point": [13, 15], "end_point": [13, 17], "text": "ex"}, {"type": "identifier", "children": [], "start_byte": 497, "end_byte": 504, "start_point": [13, 17], "end_point": [13, 24], "text": "itValue"}], "start_byte": 492, "end_byte": 504, "start_point": [13, 12], "end_point": [13, 24], "text": "it(exitValue"}, {"type": "::", "children": [], "start_byte": 504, "end_byte": 506, "start_point": [13, 24], "end_point": [13, 26], "text": ");"}, {"type": "identifier", "children": [], "start_byte": 506, "end_byte": 510, "start_point": [13, 26], "end_point": [13, 30], "text": "\n   "}], "start_byte": 492, "end_byte": 510, "start_point": [13, 12], "end_point": [13, 30], "text": "it(exitValue);\n   "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 510, "end_byte": 511, "start_point": [13, 30], "end_point": [13, 31], "text": " "}, {"type": "identifier", "children": [], "start_byte": 511, "end_byte": 520, "start_point": [13, 31], "end_point": [13, 40], "text": "    }\n   "}, {"type": ")", "children": [], "start_byte": 520, "end_byte": 521, "start_point": [13, 40], "end_point": [13, 41], "text": " "}], "start_byte": 510, "end_byte": 521, "start_point": [13, 30], "end_point": [13, 41], "text": "     }\n    "}], "start_byte": 492, "end_byte": 521, "start_point": [13, 12], "end_point": [13, 41], "text": "it(exitValue);\n        }\n    "}, {"type": ";", "children": [], "start_byte": 521, "end_byte": 522, "start_point": [13, 41], "end_point": [13, 42], "text": "}"}], "start_byte": 492, "end_byte": 522, "start_point": [13, 12], "end_point": [13, 42], "text": "it(exitValue);\n        }\n    }"}, {"type": "}", "children": [], "start_byte": 531, "end_byte": 532, "start_point": [14, 8], "end_point": [14, 9], "text": "c"}], "start_byte": 453, "end_byte": 532, "start_point": [11, 15], "end_point": [14, 9], "text": "t_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.c"}], "start_byte": 446, "end_byte": 532, "start_point": [11, 8], "end_point": [14, 9], "text": "     set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.c"}], "start_byte": 446, "end_byte": 532, "start_point": [11, 8], "end_point": [14, 9], "text": "     set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.c"}, {"type": "}", "children": [], "start_byte": 537, "end_byte": 538, "start_point": [15, 4], "end_point": [15, 5], "text": ")"}], "start_byte": 241, "end_byte": 538, "start_point": [6, 28], "end_point": [15, 5], "text": "ln!(\n            \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe {\n            set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.clear()"}], "start_byte": 217, "end_byte": 538, "start_point": [6, 4], "end_point": [15, 5], "text": "MAX_LEN {\n        eprintln!(\n            \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe {\n            set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.clear()"}], "start_byte": 217, "end_byte": 538, "start_point": [6, 4], "end_point": [15, 5], "text": "MAX_LEN {\n        eprintln!(\n            \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe {\n            set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.clear()"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 544, "end_byte": 546, "start_point": [17, 4], "end_point": [17, 6], "text": "to"}, {"type": ".", "children": [], "start_byte": 546, "end_byte": 547, "start_point": [17, 6], "end_point": [17, 7], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 547, "end_byte": 552, "start_point": [17, 7], "end_point": [17, 12], "text": "push_"}], "start_byte": 544, "end_byte": 552, "start_point": [17, 4], "end_point": [17, 12], "text": "to.push_"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 552, "end_byte": 553, "start_point": [17, 12], "end_point": [17, 13], "text": "s"}, {"type": ")", "children": [], "start_byte": 553, "end_byte": 554, "start_point": [17, 13], "end_point": [17, 14], "text": "t"}], "start_byte": 552, "end_byte": 554, "start_point": [17, 12], "end_point": [17, 14], "text": "st"}], "start_byte": 544, "end_byte": 554, "start_point": [17, 4], "end_point": [17, 14], "text": "to.push_st"}, {"type": ";", "children": [], "start_byte": 554, "end_byte": 555, "start_point": [17, 14], "end_point": [17, 15], "text": "r"}], "start_byte": 544, "end_byte": 555, "start_point": [17, 4], "end_point": [17, 15], "text": "to.push_str"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 560, "end_byte": 562, "start_point": [18, 4], "end_point": [18, 6], "text": "m["}, {"type": ".", "children": [], "start_byte": 562, "end_byte": 563, "start_point": [18, 6], "end_point": [18, 7], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 563, "end_byte": 571, "start_point": [18, 7], "end_point": [18, 15], "text": ".from.le"}], "start_byte": 560, "end_byte": 571, "start_point": [18, 4], "end_point": [18, 15], "text": "m[..from.le"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 571, "end_byte": 572, "start_point": [18, 15], "end_point": [18, 16], "text": "n"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 572, "end_byte": 573, "start_point": [18, 16], "end_point": [18, 17], "text": "("}, {"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 573, "end_byte": 577, "start_point": [18, 17], "end_point": [18, 21], "text": ").mi"}, {"type": "[", "children": [], "start_byte": 577, "end_byte": 578, "start_point": [18, 21], "end_point": [18, 22], "text": "n"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "range_expression", "children": [{"type": "..", "children": [], "start_byte": 578, "end_byte": 580, "start_point": [18, 22], "end_point": [18, 24], "text": "(M"}, {"type": "identifier", "children": [], "start_byte": 580, "end_byte": 584, "start_point": [18, 24], "end_point": [18, 28], "text": "AX_L"}], "start_byte": 578, "end_byte": 584, "start_point": [18, 22], "end_point": [18, 28], "text": "(MAX_L"}, {"type": ".", "children": [], "start_byte": 584, "end_byte": 585, "start_point": [18, 28], "end_point": [18, 29], "text": "E"}, {"type": "field_identifier", "children": [], "start_byte": 585, "end_byte": 588, "start_point": [18, 29], "end_point": [18, 32], "text": "N)]"}], "start_byte": 578, "end_byte": 588, "start_point": [18, 22], "end_point": [18, 32], "text": "(MAX_LEN)]"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 588, "end_byte": 589, "start_point": [18, 32], "end_point": [18, 33], "text": ")"}, {"type": ")", "children": [], "start_byte": 589, "end_byte": 590, "start_point": [18, 33], "end_point": [18, 34], "text": ";"}], "start_byte": 588, "end_byte": 590, "start_point": [18, 32], "end_point": [18, 34], "text": ");"}], "start_byte": 578, "end_byte": 590, "start_point": [18, 22], "end_point": [18, 34], "text": "(MAX_LEN)]);"}, {"type": ".", "children": [], "start_byte": 590, "end_byte": 591, "start_point": [18, 34], "end_point": [18, 35], "text": "\n"}, {"type": "field_identifier", "children": [], "start_byte": 591, "end_byte": 594, "start_point": [18, 35], "end_point": [18, 38], "text": "}\n\n"}], "start_byte": 578, "end_byte": 594, "start_point": [18, 22], "end_point": [18, 38], "text": "(MAX_LEN)]);\n}\n\n"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 594, "end_byte": 595, "start_point": [18, 38], "end_point": [18, 39], "text": "#"}, {"type": "identifier", "children": [], "start_byte": 595, "end_byte": 602, "start_point": [18, 39], "end_point": [18, 46], "text": "[cfg(te"}, {"type": ")", "children": [], "start_byte": 602, "end_byte": 603, "start_point": [18, 46], "end_point": [18, 47], "text": "s"}], "start_byte": 594, "end_byte": 603, "start_point": [18, 38], "end_point": [18, 47], "text": "#[cfg(tes"}], "start_byte": 578, "end_byte": 603, "start_point": [18, 22], "end_point": [18, 47], "text": "(MAX_LEN)]);\n}\n\n#[cfg(tes"}, {"type": "]", "children": [], "start_byte": 603, "end_byte": 604, "start_point": [18, 47], "end_point": [18, 48], "text": "t"}], "start_byte": 573, "end_byte": 604, "start_point": [18, 17], "end_point": [18, 48], "text": ").min(MAX_LEN)]);\n}\n\n#[cfg(test"}], "start_byte": 572, "end_byte": 604, "start_point": [18, 16], "end_point": [18, 48], "text": "().min(MAX_LEN)]);\n}\n\n#[cfg(test"}, {"type": ")", "children": [], "start_byte": 604, "end_byte": 605, "start_point": [18, 48], "end_point": [18, 49], "text": ")"}], "start_byte": 571, "end_byte": 605, "start_point": [18, 15], "end_point": [18, 49], "text": "n().min(MAX_LEN)]);\n}\n\n#[cfg(test)"}], "start_byte": 560, "end_byte": 605, "start_point": [18, 4], "end_point": [18, 49], "text": "m[..from.len().min(MAX_LEN)]);\n}\n\n#[cfg(test)"}, {"type": ";", "children": [], "start_byte": 605, "end_byte": 606, "start_point": [18, 49], "end_point": [18, 50], "text": "]"}], "start_byte": 560, "end_byte": 606, "start_point": [18, 4], "end_point": [18, 50], "text": "m[..from.len().min(MAX_LEN)]);\n}\n\n#[cfg(test)]"}, {"type": "}", "children": [], "start_byte": 607, "end_byte": 608, "start_point": [19, 0], "end_point": [19, 1], "text": "m"}], "start_byte": 144, "end_byte": 608, "start_point": [3, 51], "end_point": [19, 1], "text": "{\n    const MAX_LEN: usize = 1034 - 10; // \u660e\u786e\u6ce8\u91ca\u6570\u5b57\u7c7b\u578b\n\n    if from.len() > MAX_LEN {\n        eprintln!(\n            \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe {\n            set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.clear();\n    to.push_str(&from[..from.len().min(MAX_LEN)]);\n}\n\n#[cfg(test)]\nm"}], "start_byte": 93, "end_byte": 608, "start_point": [3, 0], "end_point": [19, 1], "text": "pub fn copy_file_name(to: &mut String, from: &str) {\n    const MAX_LEN: usize = 1034 - 10; // \u660e\u786e\u6ce8\u91ca\u6570\u5b57\u7c7b\u578b\n\n    if from.len() > MAX_LEN {\n        eprintln!(\n            \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe {\n            set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.clear();\n    to.push_str(&from[..from.len().min(MAX_LEN)]);\n}\n\n#[cfg(test)]\nm"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 610, "end_byte": 611, "start_point": [21, 0], "end_point": [21, 1], "text": " "}, {"type": "[", "children": [], "start_byte": 611, "end_byte": 612, "start_point": [21, 1], "end_point": [21, 2], "text": "t"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 612, "end_byte": 615, "start_point": [21, 2], "end_point": [21, 5], "text": "est"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 615, "end_byte": 616, "start_point": [21, 5], "end_point": [21, 6], "text": "s"}, {"type": "identifier", "children": [], "start_byte": 616, "end_byte": 620, "start_point": [21, 6], "end_point": [21, 10], "text": " {\n "}, {"type": ")", "children": [], "start_byte": 620, "end_byte": 621, "start_point": [21, 10], "end_point": [21, 11], "text": " "}], "start_byte": 615, "end_byte": 621, "start_point": [21, 5], "end_point": [21, 11], "text": "s {\n  "}], "start_byte": 612, "end_byte": 621, "start_point": [21, 2], "end_point": [21, 11], "text": "ests {\n  "}, {"type": "]", "children": [], "start_byte": 621, "end_byte": 622, "start_point": [21, 11], "end_point": [21, 12], "text": " "}], "start_byte": 610, "end_byte": 622, "start_point": [21, 0], "end_point": [21, 12], "text": " tests {\n   "}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 623, "end_byte": 626, "start_point": [22, 0], "end_point": [22, 3], "text": "use"}, {"type": "identifier", "children": [], "start_byte": 627, "end_byte": 632, "start_point": [22, 4], "end_point": [22, 9], "text": "super"}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 633, "end_byte": 634, "start_point": [22, 10], "end_point": [22, 11], "text": ":"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 639, "end_byte": 642, "start_point": [23, 4], "end_point": [23, 7], "text": "  u"}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 643, "end_byte": 648, "start_point": [23, 8], "end_point": [23, 13], "text": "e std"}, {"type": "::", "children": [], "start_byte": 648, "end_byte": 650, "start_point": [23, 13], "end_point": [23, 15], "text": "::"}, {"type": "*", "children": [], "start_byte": 650, "end_byte": 651, "start_point": [23, 15], "end_point": [23, 16], "text": "p"}], "start_byte": 643, "end_byte": 651, "start_point": [23, 8], "end_point": [23, 16], "text": "e std::p"}, {"type": ";", "children": [], "start_byte": 651, "end_byte": 652, "start_point": [23, 16], "end_point": [23, 17], "text": "a"}], "start_byte": 639, "end_byte": 652, "start_point": [23, 4], "end_point": [23, 17], "text": "  use std::pa"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 657, "end_byte": 660, "start_point": [24, 4], "end_point": [24, 7], "text": "\n  "}, {"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 661, "end_byte": 664, "start_point": [24, 8], "end_point": [24, 11], "text": " #["}, {"type": "::", "children": [], "start_byte": 664, "end_byte": 666, "start_point": [24, 11], "end_point": [24, 13], "text": "te"}, {"type": "identifier", "children": [], "start_byte": 666, "end_byte": 671, "start_point": [24, 13], "end_point": [24, 18], "text": "st]\n "}], "start_byte": 661, "end_byte": 671, "start_point": [24, 8], "end_point": [24, 18], "text": " #[test]\n "}, {"type": ";", "children": [], "start_byte": 671, "end_byte": 672, "start_point": [24, 18], "end_point": [24, 19], "text": " "}], "start_byte": 657, "end_byte": 672, "start_point": [24, 4], "end_point": [24, 19], "text": "\n    #[test]\n  "}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 678, "end_byte": 679, "start_point": [26, 4], "end_point": [26, 5], "text": "e"}, {"type": "[", "children": [], "start_byte": 679, "end_byte": 680, "start_point": [26, 5], "end_point": [26, 6], "text": "s"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 680, "end_byte": 684, "start_point": [26, 6], "end_point": [26, 10], "text": "t_co"}], "start_byte": 680, "end_byte": 684, "start_point": [26, 6], "end_point": [26, 10], "text": "t_co"}, {"type": "]", "children": [], "start_byte": 684, "end_byte": 685, "start_point": [26, 10], "end_point": [26, 11], "text": "p"}], "start_byte": 678, "end_byte": 685, "start_point": [26, 4], "end_point": [26, 11], "text": "est_cop"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 690, "end_byte": 692, "start_point": [27, 4], "end_point": [27, 6], "text": "e_"}, {"type": "identifier", "children": [], "start_byte": 693, "end_byte": 718, "start_point": [27, 7], "end_point": [27, 32], "text": "ame_valid() {\n        let"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 718, "end_byte": 719, "start_point": [27, 32], "end_point": [27, 33], "text": " "}, {"type": ")", "children": [], "start_byte": 719, "end_byte": 720, "start_point": [27, 33], "end_point": [27, 34], "text": "m"}], "start_byte": 718, "end_byte": 720, "start_point": [27, 32], "end_point": [27, 34], "text": " m"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 721, "end_byte": 722, "start_point": [27, 35], "end_point": [27, 36], "text": "t"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 731, "end_byte": 734, "start_point": [28, 8], "end_point": [28, 11], "text": "tri"}, {"type": "mutable_specifier", "children": [], "start_byte": 735, "end_byte": 738, "start_point": [28, 12], "end_point": [28, 15], "text": "g::"}, {"type": "identifier", "children": [], "start_byte": 739, "end_byte": 743, "start_point": [28, 16], "end_point": [28, 20], "text": "ew()"}, {"type": "=", "children": [], "start_byte": 744, "end_byte": 745, "start_point": [28, 21], "end_point": [28, 22], "text": "\n"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 746, "end_byte": 752, "start_point": [28, 23], "end_point": [28, 29], "text": "      "}, {"type": "::", "children": [], "start_byte": 752, "end_byte": 754, "start_point": [28, 29], "end_point": [28, 31], "text": " l"}, {"type": "identifier", "children": [], "start_byte": 754, "end_byte": 757, "start_point": [28, 31], "end_point": [28, 34], "text": "et "}], "start_byte": 746, "end_byte": 757, "start_point": [28, 23], "end_point": [28, 34], "text": "       let "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 757, "end_byte": 758, "start_point": [28, 34], "end_point": [28, 35], "text": "s"}, {"type": ")", "children": [], "start_byte": 758, "end_byte": 759, "start_point": [28, 35], "end_point": [28, 36], "text": "o"}], "start_byte": 757, "end_byte": 759, "start_point": [28, 34], "end_point": [28, 36], "text": "so"}], "start_byte": 746, "end_byte": 759, "start_point": [28, 23], "end_point": [28, 36], "text": "       let so"}, {"type": ";", "children": [], "start_byte": 759, "end_byte": 760, "start_point": [28, 36], "end_point": [28, 37], "text": "u"}], "start_byte": 731, "end_byte": 760, "start_point": [28, 8], "end_point": [28, 37], "text": "tring::new();\n        let sou"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 769, "end_byte": 772, "start_point": [29, 8], "end_point": [29, 11], "text": "st."}, {"type": "identifier", "children": [], "start_byte": 773, "end_byte": 779, "start_point": [29, 12], "end_point": [29, 18], "text": "xt\";\n "}, {"type": "=", "children": [], "start_byte": 780, "end_byte": 781, "start_point": [29, 19], "end_point": [29, 20], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 782, "end_byte": 783, "start_point": [29, 21], "end_point": [29, 22], "text": " "}, {"type": "\"", "children": [], "start_byte": 791, "end_byte": 792, "start_point": [29, 30], "end_point": [29, 31], "text": "f"}], "start_byte": 782, "end_byte": 792, "start_point": [29, 21], "end_point": [29, 31], "text": "    copy_f"}, {"type": ";", "children": [], "start_byte": 792, "end_byte": 793, "start_point": [29, 31], "end_point": [29, 32], "text": "i"}], "start_byte": 769, "end_byte": 793, "start_point": [29, 8], "end_point": [29, 32], "text": "st.txt\";\n        copy_fi"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 802, "end_byte": 816, "start_point": [30, 8], "end_point": [30, 22], "text": "mut dest, sour"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 816, "end_byte": 817, "start_point": [30, 22], "end_point": [30, 23], "text": "c"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 817, "end_byte": 818, "start_point": [30, 23], "end_point": [30, 24], "text": "e"}, {"type": "mutable_specifier", "children": [], "start_byte": 818, "end_byte": 821, "start_point": [30, 24], "end_point": [30, 27], "text": ");\n"}, {"type": "identifier", "children": [], "start_byte": 822, "end_byte": 826, "start_point": [30, 28], "end_point": [30, 32], "text": "    "}], "start_byte": 817, "end_byte": 826, "start_point": [30, 23], "end_point": [30, 32], "text": "e);\n     "}, {"type": ",", "children": [], "start_byte": 826, "end_byte": 827, "start_point": [30, 32], "end_point": [30, 33], "text": " "}, {"type": "identifier", "children": [], "start_byte": 828, "end_byte": 834, "start_point": [30, 34], "end_point": [30, 40], "text": " asser"}, {"type": ")", "children": [], "start_byte": 834, "end_byte": 835, "start_point": [30, 40], "end_point": [30, 41], "text": "t"}], "start_byte": 816, "end_byte": 835, "start_point": [30, 22], "end_point": [30, 41], "text": "ce);\n        assert"}], "start_byte": 802, "end_byte": 835, "start_point": [30, 8], "end_point": [30, 41], "text": "mut dest, source);\n        assert"}, {"type": ";", "children": [], "start_byte": 835, "end_byte": 836, "start_point": [30, 41], "end_point": [30, 42], "text": "_"}], "start_byte": 802, "end_byte": 836, "start_point": [30, 8], "end_point": [30, 42], "text": "mut dest, source);\n        assert_"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 845, "end_byte": 854, "start_point": [31, 8], "end_point": [31, 17], "text": " source);"}, {"type": "!", "children": [], "start_byte": 854, "end_byte": 855, "start_point": [31, 17], "end_point": [31, 18], "text": "\n"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 855, "end_byte": 856, "start_point": [31, 18], "end_point": [31, 19], "text": " "}, {"type": "identifier", "children": [], "start_byte": 856, "end_byte": 860, "start_point": [31, 19], "end_point": [31, 23], "text": "   }"}, {"type": "identifier", "children": [], "start_byte": 862, "end_byte": 868, "start_point": [31, 25], "end_point": [31, 31], "text": "    #["}, {"type": ")", "children": [], "start_byte": 868, "end_byte": 869, "start_point": [31, 31], "end_point": [31, 32], "text": "t"}], "start_byte": 855, "end_byte": 869, "start_point": [31, 18], "end_point": [31, 32], "text": "    }\n\n    #[t"}], "start_byte": 845, "end_byte": 869, "start_point": [31, 8], "end_point": [31, 32], "text": " source);\n    }\n\n    #[t"}, {"type": ";", "children": [], "start_byte": 869, "end_byte": 870, "start_point": [31, 32], "end_point": [31, 33], "text": "e"}], "start_byte": 845, "end_byte": 870, "start_point": [31, 8], "end_point": [31, 33], "text": " source);\n    }\n\n    #[te"}, {"type": "}", "children": [], "start_byte": 875, "end_byte": 876, "start_point": [32, 4], "end_point": [32, 5], "text": " "}], "start_byte": 721, "end_byte": 876, "start_point": [27, 35], "end_point": [32, 5], "text": "t dest = String::new();\n        let source = \"test.txt\";\n        copy_file_name(&mut dest, source);\n        assert_eq!(dest, source);\n    }\n\n    #[test]\n  "}], "start_byte": 690, "end_byte": 876, "start_point": [27, 4], "end_point": [32, 5], "text": "e_name_valid() {\n        let mut dest = String::new();\n        let source = \"test.txt\";\n        copy_file_name(&mut dest, source);\n        assert_eq!(dest, source);\n    }\n\n    #[test]\n  "}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 882, "end_byte": 883, "start_point": [34, 4], "end_point": [34, 5], "text": "e"}, {"type": "[", "children": [], "start_byte": 883, "end_byte": 884, "start_point": [34, 5], "end_point": [34, 6], "text": "s"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 884, "end_byte": 888, "start_point": [34, 6], "end_point": [34, 10], "text": "t_co"}], "start_byte": 884, "end_byte": 888, "start_point": [34, 6], "end_point": [34, 10], "text": "t_co"}, {"type": "]", "children": [], "start_byte": 888, "end_byte": 889, "start_point": [34, 10], "end_point": [34, 11], "text": "p"}], "start_byte": 882, "end_byte": 889, "start_point": [34, 4], "end_point": [34, 11], "text": "est_cop"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 894, "end_byte": 896, "start_point": [35, 4], "end_point": [35, 6], "text": "e_"}, {"type": "identifier", "children": [], "start_byte": 897, "end_byte": 925, "start_point": [35, 7], "end_point": [35, 35], "text": "ame_too_long() {\n        let"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 925, "end_byte": 926, "start_point": [35, 35], "end_point": [35, 36], "text": " "}, {"type": ")", "children": [], "start_byte": 926, "end_byte": 927, "start_point": [35, 36], "end_point": [35, 37], "text": "r"}], "start_byte": 925, "end_byte": 927, "start_point": [35, 35], "end_point": [35, 37], "text": " r"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 928, "end_byte": 929, "start_point": [35, 38], "end_point": [35, 39], "text": "s"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 938, "end_byte": 941, "start_point": [36, 8], "end_point": [36, 11], "text": "ic:"}, {"type": "identifier", "children": [], "start_byte": 942, "end_byte": 948, "start_point": [36, 12], "end_point": [36, 18], "text": "catch_"}, {"type": "=", "children": [], "start_byte": 949, "end_byte": 950, "start_point": [36, 19], "end_point": [36, 20], "text": "n"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 951, "end_byte": 956, "start_point": [36, 21], "end_point": [36, 26], "text": "ind(|"}, {"type": "::", "children": [], "start_byte": 956, "end_byte": 958, "start_point": [36, 26], "end_point": [36, 28], "text": "| "}, {"type": "identifier", "children": [], "start_byte": 958, "end_byte": 970, "start_point": [36, 28], "end_point": [36, 40], "text": "{\n          "}], "start_byte": 951, "end_byte": 970, "start_point": [36, 21], "end_point": [36, 40], "text": "ind(|| {\n          "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 970, "end_byte": 971, "start_point": [36, 40], "end_point": [36, 41], "text": " "}, {"type": "closure_expression", "children": [{"type": "closure_parameters", "children": [{"type": "|", "children": [], "start_byte": 971, "end_byte": 972, "start_point": [36, 41], "end_point": [36, 42], "text": " "}, {"type": "|", "children": [], "start_byte": 972, "end_byte": 973, "start_point": [36, 42], "end_point": [36, 43], "text": "l"}], "start_byte": 971, "end_byte": 973, "start_point": [36, 41], "end_point": [36, 43], "text": " l"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 974, "end_byte": 975, "start_point": [36, 44], "end_point": [36, 45], "text": "t"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 988, "end_byte": 991, "start_point": [37, 12], "end_point": [37, 15], "text": "tri"}, {"type": "mutable_specifier", "children": [], "start_byte": 992, "end_byte": 995, "start_point": [37, 16], "end_point": [37, 19], "text": "g::"}, {"type": "identifier", "children": [], "start_byte": 996, "end_byte": 1000, "start_point": [37, 20], "end_point": [37, 24], "text": "ew()"}, {"type": "=", "children": [], "start_byte": 1001, "end_byte": 1002, "start_point": [37, 25], "end_point": [37, 26], "text": "\n"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1003, "end_byte": 1009, "start_point": [37, 27], "end_point": [37, 33], "text": "      "}, {"type": "::", "children": [], "start_byte": 1009, "end_byte": 1011, "start_point": [37, 33], "end_point": [37, 35], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 1011, "end_byte": 1014, "start_point": [37, 35], "end_point": [37, 38], "text": "   "}], "start_byte": 1003, "end_byte": 1014, "start_point": [37, 27], "end_point": [37, 38], "text": "           "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1014, "end_byte": 1015, "start_point": [37, 38], "end_point": [37, 39], "text": "l"}, {"type": ")", "children": [], "start_byte": 1015, "end_byte": 1016, "start_point": [37, 39], "end_point": [37, 40], "text": "e"}], "start_byte": 1014, "end_byte": 1016, "start_point": [37, 38], "end_point": [37, 40], "text": "le"}], "start_byte": 1003, "end_byte": 1016, "start_point": [37, 27], "end_point": [37, 40], "text": "           le"}, {"type": ";", "children": [], "start_byte": 1016, "end_byte": 1017, "start_point": [37, 40], "end_point": [37, 41], "text": "t"}], "start_byte": 988, "end_byte": 1017, "start_point": [37, 12], "end_point": [37, 41], "text": "tring::new();\n            let"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1030, "end_byte": 1033, "start_point": [38, 12], "end_point": [38, 15], "text": ".re"}, {"type": "identifier", "children": [], "start_byte": 1034, "end_byte": 1040, "start_point": [38, 16], "end_point": [38, 22], "text": "eat(10"}, {"type": "=", "children": [], "start_byte": 1041, "end_byte": 1042, "start_point": [38, 23], "end_point": [38, 24], "text": "4"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1043, "end_byte": 1044, "start_point": [38, 25], "end_point": [38, 26], "text": ";"}, {"type": "\"", "children": [], "start_byte": 1045, "end_byte": 1046, "start_point": [38, 27], "end_point": [38, 28], "text": " "}], "start_byte": 1043, "end_byte": 1046, "start_point": [38, 25], "end_point": [38, 28], "text": ";\n "}, {"type": ".", "children": [], "start_byte": 1046, "end_byte": 1047, "start_point": [38, 28], "end_point": [38, 29], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1047, "end_byte": 1053, "start_point": [38, 29], "end_point": [38, 35], "text": "      "}], "start_byte": 1043, "end_byte": 1053, "start_point": [38, 25], "end_point": [38, 35], "text": ";\n        "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1053, "end_byte": 1054, "start_point": [38, 35], "end_point": [38, 36], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 1054, "end_byte": 1058, "start_point": [38, 36], "end_point": [38, 40], "text": "   c"}, {"type": ")", "children": [], "start_byte": 1058, "end_byte": 1059, "start_point": [38, 40], "end_point": [38, 41], "text": "o"}], "start_byte": 1053, "end_byte": 1059, "start_point": [38, 35], "end_point": [38, 41], "text": "    co"}], "start_byte": 1043, "end_byte": 1059, "start_point": [38, 25], "end_point": [38, 41], "text": ";\n            co"}, {"type": ";", "children": [], "start_byte": 1059, "end_byte": 1060, "start_point": [38, 41], "end_point": [38, 42], "text": "p"}], "start_byte": 1030, "end_byte": 1060, "start_point": [38, 12], "end_point": [38, 42], "text": ".repeat(1024);\n            cop"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1073, "end_byte": 1087, "start_point": [39, 12], "end_point": [39, 26], "text": "mut dest, &sou"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1087, "end_byte": 1088, "start_point": [39, 26], "end_point": [39, 27], "text": "r"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1088, "end_byte": 1089, "start_point": [39, 27], "end_point": [39, 28], "text": "c"}, {"type": "mutable_specifier", "children": [], "start_byte": 1089, "end_byte": 1092, "start_point": [39, 28], "end_point": [39, 31], "text": "e);"}, {"type": "identifier", "children": [], "start_byte": 1093, "end_byte": 1097, "start_point": [39, 32], "end_point": [39, 36], "text": "    "}], "start_byte": 1088, "end_byte": 1097, "start_point": [39, 27], "end_point": [39, 36], "text": "ce);\n    "}, {"type": ",", "children": [], "start_byte": 1097, "end_byte": 1098, "start_point": [39, 36], "end_point": [39, 37], "text": " "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1099, "end_byte": 1100, "start_point": [39, 38], "end_point": [39, 39], "text": " "}, {"type": "identifier", "children": [], "start_byte": 1100, "end_byte": 1106, "start_point": [39, 39], "end_point": [39, 45], "text": " });\n "}], "start_byte": 1099, "end_byte": 1106, "start_point": [39, 38], "end_point": [39, 45], "text": "  });\n "}, {"type": ")", "children": [], "start_byte": 1106, "end_byte": 1107, "start_point": [39, 45], "end_point": [39, 46], "text": " "}], "start_byte": 1087, "end_byte": 1107, "start_point": [39, 26], "end_point": [39, 46], "text": "rce);\n        });\n  "}], "start_byte": 1073, "end_byte": 1107, "start_point": [39, 12], "end_point": [39, 46], "text": "mut dest, &source);\n        });\n  "}, {"type": ";", "children": [], "start_byte": 1107, "end_byte": 1108, "start_point": [39, 46], "end_point": [39, 47], "text": " "}], "start_byte": 1073, "end_byte": 1108, "start_point": [39, 12], "end_point": [39, 47], "text": "mut dest, &source);\n        });\n   "}, {"type": "}", "children": [], "start_byte": 1117, "end_byte": 1118, "start_point": [40, 8], "end_point": [40, 9], "text": "r"}], "start_byte": 974, "end_byte": 1118, "start_point": [36, 44], "end_point": [40, 9], "text": "t mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        asser"}], "start_byte": 971, "end_byte": 1118, "start_point": [36, 41], "end_point": [40, 9], "text": " let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        asser"}, {"type": ")", "children": [], "start_byte": 1118, "end_byte": 1119, "start_point": [40, 9], "end_point": [40, 10], "text": "t"}], "start_byte": 970, "end_byte": 1119, "start_point": [36, 40], "end_point": [40, 10], "text": "  let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert"}], "start_byte": 951, "end_byte": 1119, "start_point": [36, 21], "end_point": [40, 10], "text": "ind(|| {\n            let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert"}, {"type": ";", "children": [], "start_byte": 1119, "end_byte": 1120, "start_point": [40, 10], "end_point": [40, 11], "text": "!"}], "start_byte": 938, "end_byte": 1120, "start_point": [36, 8], "end_point": [40, 11], "text": "ic::catch_unwind(|| {\n            let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert!"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1129, "end_byte": 1135, "start_point": [41, 8], "end_point": [41, 14], "text": "s_err("}, {"type": "!", "children": [], "start_byte": 1135, "end_byte": 1136, "start_point": [41, 14], "end_point": [41, 15], "text": ")"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1136, "end_byte": 1137, "start_point": [41, 15], "end_point": [41, 16], "text": ")"}, {"type": "identifier", "children": [], "start_byte": 1137, "end_byte": 1143, "start_point": [41, 16], "end_point": [41, 22], "text": ";\n    "}, {"type": "identifier", "children": [], "start_byte": 1144, "end_byte": 1150, "start_point": [41, 23], "end_point": [41, 29], "text": "\n}\n"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1150, "end_byte": 1151, "start_point": [41, 29], "end_point": [41, 30], "text": ""}, {"type": ")", "children": [], "start_byte": 1151, "end_byte": 1152, "start_point": [41, 30], "end_point": [41, 31], "text": ""}], "start_byte": 1150, "end_byte": 1152, "start_point": [41, 29], "end_point": [41, 31], "text": ""}, {"type": ")", "children": [], "start_byte": 1152, "end_byte": 1153, "start_point": [41, 31], "end_point": [41, 32], "text": ""}], "start_byte": 1136, "end_byte": 1153, "start_point": [41, 15], "end_point": [41, 32], "text": ");\n    }\n}\n"}], "start_byte": 1129, "end_byte": 1153, "start_point": [41, 8], "end_point": [41, 32], "text": "s_err());\n    }\n}\n"}, {"type": ";", "children": [], "start_byte": 1153, "end_byte": 1154, "start_point": [41, 32], "end_point": [41, 33], "text": ""}], "start_byte": 1129, "end_byte": 1154, "start_point": [41, 8], "end_point": [41, 33], "text": "s_err());\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1159, "end_byte": 1160, "start_point": [42, 4], "end_point": [42, 5], "text": ""}], "start_byte": 928, "end_byte": 1160, "start_point": [35, 38], "end_point": [42, 5], "text": "sult = panic::catch_unwind(|| {\n            let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert!(result.is_err());\n    }\n}\n"}], "start_byte": 894, "end_byte": 1160, "start_point": [35, 4], "end_point": [42, 5], "text": "e_name_too_long() {\n        let result = panic::catch_unwind(|| {\n            let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert!(result.is_err());\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1161, "end_byte": 1162, "start_point": [43, 0], "end_point": [43, 1], "text": ""}], "start_byte": 633, "end_byte": 1162, "start_point": [22, 10], "end_point": [43, 1], "text": ":*;\n    use std::panic;\n\n    #[test]\n    fn test_copy_file_name_valid() {\n        let mut dest = String::new();\n        let source = \"test.txt\";\n        copy_file_name(&mut dest, source);\n        assert_eq!(dest, source);\n    }\n\n    #[test]\n    fn test_copy_file_name_too_long() {\n        let result = panic::catch_unwind(|| {\n            let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert!(result.is_err());\n    }\n}\n"}], "start_byte": 623, "end_byte": 1162, "start_point": [22, 0], "end_point": [43, 1], "text": "use super::*;\n    use std::panic;\n\n    #[test]\n    fn test_copy_file_name_valid() {\n        let mut dest = String::new();\n        let source = \"test.txt\";\n        copy_file_name(&mut dest, source);\n        assert_eq!(dest, source);\n    }\n\n    #[test]\n    fn test_copy_file_name_too_long() {\n        let result = panic::catch_unwind(|| {\n            let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert!(result.is_err());\n    }\n}\n"}], "start_byte": 0, "end_byte": 1163, "start_point": [0, 0], "end_point": [44, 0], "text": "use crate::bzip2::scc_90_root_52_setExit::*;\nuse crate::global_vars::bzip2_c5::{exitValue};\n\npub fn copy_file_name(to: &mut String, from: &str) {\n    const MAX_LEN: usize = 1034 - 10; // \u660e\u786e\u6ce8\u91ca\u6570\u5b57\u7c7b\u578b\n\n    if from.len() > MAX_LEN {\n        eprintln!(\n            \"bzip2: file name\\n`{}'\\n is suspiciously (more than {} chars) long.\\n Try using a reasonable file name instead.  Sorry! :-)\",\n            from, MAX_LEN\n        );\n        unsafe {\n            set_exit(1);\n            std::process::exit(exitValue);\n        }\n    }\n\n    to.clear();\n    to.push_str(&from[..from.len().min(MAX_LEN)]);\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::panic;\n\n    #[test]\n    fn test_copy_file_name_valid() {\n        let mut dest = String::new();\n        let source = \"test.txt\";\n        copy_file_name(&mut dest, source);\n        assert_eq!(dest, source);\n    }\n\n    #[test]\n    fn test_copy_file_name_too_long() {\n        let result = panic::catch_unwind(|| {\n            let mut dest = String::new();\n            let source = \"a\".repeat(1024);\n            copy_file_name(&mut dest, &source);\n        });\n        assert!(result.is_err());\n    }\n}\n"}