{"type": "source_file", "children": [{"type": "line_comment", "children": [], "start_byte": 0, "end_byte": 38, "start_point": [0, 0], "end_point": [0, 38], "text": "// use crate::bzip2::scc_111_testf::*;"}, {"type": "line_comment", "children": [], "start_byte": 39, "end_byte": 95, "start_point": [1, 0], "end_point": [1, 56], "text": "// use crate::bzlib::scc_61_root_42_BZ2_bzlibVersion::*;"}, {"type": "line_comment", "children": [], "start_byte": 96, "end_byte": 149, "start_point": [2, 0], "end_point": [2, 53], "text": "// use crate::bzip2recover::scc_88_root_50_strcpy::*;"}, {"type": "line_comment", "children": [], "start_byte": 150, "end_byte": 201, "start_point": [3, 0], "end_point": [3, 51], "text": "// use crate::bzip2::scc_56_fopen_output_safely::*;"}, {"type": "line_comment", "children": [], "start_byte": 202, "end_byte": 259, "start_point": [4, 0], "end_point": [4, 57], "text": "// use crate::bzip2::scc_106_mySIGSEGVorSIGBUScatcher::*;"}, {"type": "line_comment", "children": [], "start_byte": 260, "end_byte": 302, "start_point": [5, 0], "end_point": [5, 42], "text": "// use crate::bzip2::scc_87_fileExists::*;"}, {"type": "line_comment", "children": [], "start_byte": 303, "end_byte": 346, "start_point": [6, 0], "end_point": [6, 43], "text": "// use crate::bzip2::scc_99_outOfMemory::*;"}, {"type": "line_comment", "children": [], "start_byte": 347, "end_byte": 393, "start_point": [7, 0], "end_point": [7, 46], "text": "// use crate::bzip2::scc_91_cleanUpAndFail::*;"}, {"type": "line_comment", "children": [], "start_byte": 394, "end_byte": 537, "start_point": [8, 0], "end_point": [8, 143], "text": "// use crate::global_vars::bzip2_c5::{deleteOutputOnInterrupt, inName, noisy, outName, outputHandleJustInCase, srcMode, testFailsExist, stat};a"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 538, "end_byte": 541, "start_point": [9, 0], "end_point": [9, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 542, "end_byte": 547, "start_point": [9, 4], "end_point": [9, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 547, "end_byte": 549, "start_point": [9, 9], "end_point": [9, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 549, "end_byte": 560, "start_point": [9, 11], "end_point": [9, 22], "text": "global_vars"}], "start_byte": 542, "end_byte": 560, "start_point": [9, 4], "end_point": [9, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 560, "end_byte": 562, "start_point": [9, 22], "end_point": [9, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 562, "end_byte": 570, "start_point": [9, 24], "end_point": [9, 32], "text": "bzip2_c5"}], "start_byte": 542, "end_byte": 570, "start_point": [9, 4], "end_point": [9, 32], "text": "crate::global_vars::bzip2_c5"}, {"type": "::", "children": [], "start_byte": 570, "end_byte": 572, "start_point": [9, 32], "end_point": [9, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 572, "end_byte": 573, "start_point": [9, 34], "end_point": [9, 35], "text": "*"}], "start_byte": 542, "end_byte": 573, "start_point": [9, 4], "end_point": [9, 35], "text": "crate::global_vars::bzip2_c5::*"}, {"type": ";", "children": [], "start_byte": 573, "end_byte": 574, "start_point": [9, 35], "end_point": [9, 36], "text": ";"}], "start_byte": 538, "end_byte": 574, "start_point": [9, 0], "end_point": [9, 36], "text": "use crate::global_vars::bzip2_c5::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 575, "end_byte": 578, "start_point": [10, 0], "end_point": [10, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 579, "end_byte": 584, "start_point": [10, 4], "end_point": [10, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 584, "end_byte": 586, "start_point": [10, 9], "end_point": [10, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 586, "end_byte": 597, "start_point": [10, 11], "end_point": [10, 22], "text": "global_vars"}], "start_byte": 579, "end_byte": 597, "start_point": [10, 4], "end_point": [10, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 597, "end_byte": 599, "start_point": [10, 22], "end_point": [10, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 599, "end_byte": 607, "start_point": [10, 24], "end_point": [10, 32], "text": "bzip2_c2"}], "start_byte": 579, "end_byte": 607, "start_point": [10, 4], "end_point": [10, 32], "text": "crate::global_vars::bzip2_c2"}, {"type": "::", "children": [], "start_byte": 607, "end_byte": 609, "start_point": [10, 32], "end_point": [10, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 609, "end_byte": 610, "start_point": [10, 34], "end_point": [10, 35], "text": "*"}], "start_byte": 579, "end_byte": 610, "start_point": [10, 4], "end_point": [10, 35], "text": "crate::global_vars::bzip2_c2::*"}, {"type": ";", "children": [], "start_byte": 610, "end_byte": 611, "start_point": [10, 35], "end_point": [10, 36], "text": ";"}], "start_byte": 575, "end_byte": 611, "start_point": [10, 0], "end_point": [10, 36], "text": "use crate::global_vars::bzip2_c2::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 612, "end_byte": 615, "start_point": [11, 0], "end_point": [11, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 616, "end_byte": 621, "start_point": [11, 4], "end_point": [11, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 621, "end_byte": 623, "start_point": [11, 9], "end_point": [11, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 623, "end_byte": 634, "start_point": [11, 11], "end_point": [11, 22], "text": "global_vars"}], "start_byte": 616, "end_byte": 634, "start_point": [11, 4], "end_point": [11, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 634, "end_byte": 636, "start_point": [11, 22], "end_point": [11, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 636, "end_byte": 644, "start_point": [11, 24], "end_point": [11, 32], "text": "bzip2_c1"}], "start_byte": 616, "end_byte": 644, "start_point": [11, 4], "end_point": [11, 32], "text": "crate::global_vars::bzip2_c1"}, {"type": "::", "children": [], "start_byte": 644, "end_byte": 646, "start_point": [11, 32], "end_point": [11, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 646, "end_byte": 647, "start_point": [11, 34], "end_point": [11, 35], "text": "*"}], "start_byte": 616, "end_byte": 647, "start_point": [11, 4], "end_point": [11, 35], "text": "crate::global_vars::bzip2_c1::*"}, {"type": ";", "children": [], "start_byte": 647, "end_byte": 648, "start_point": [11, 35], "end_point": [11, 36], "text": ";"}], "start_byte": 612, "end_byte": 648, "start_point": [11, 0], "end_point": [11, 36], "text": "use crate::global_vars::bzip2_c1::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 649, "end_byte": 652, "start_point": [12, 0], "end_point": [12, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 653, "end_byte": 658, "start_point": [12, 4], "end_point": [12, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 658, "end_byte": 660, "start_point": [12, 9], "end_point": [12, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 660, "end_byte": 665, "start_point": [12, 11], "end_point": [12, 16], "text": "bzip2"}], "start_byte": 653, "end_byte": 665, "start_point": [12, 4], "end_point": [12, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 665, "end_byte": 667, "start_point": [12, 16], "end_point": [12, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 667, "end_byte": 702, "start_point": [12, 18], "end_point": [12, 53], "text": "scc_60_root_41_containsDubiousChars"}], "start_byte": 653, "end_byte": 702, "start_point": [12, 4], "end_point": [12, 53], "text": "crate::bzip2::scc_60_root_41_containsDubiousChars"}, {"type": "::", "children": [], "start_byte": 702, "end_byte": 704, "start_point": [12, 53], "end_point": [12, 55], "text": "::"}, {"type": "*", "children": [], "start_byte": 704, "end_byte": 705, "start_point": [12, 55], "end_point": [12, 56], "text": "*"}], "start_byte": 653, "end_byte": 705, "start_point": [12, 4], "end_point": [12, 56], "text": "crate::bzip2::scc_60_root_41_containsDubiousChars::*"}, {"type": ";", "children": [], "start_byte": 705, "end_byte": 706, "start_point": [12, 56], "end_point": [12, 57], "text": ";"}], "start_byte": 649, "end_byte": 706, "start_point": [12, 0], "end_point": [12, 57], "text": "use crate::bzip2::scc_60_root_41_containsDubiousChars::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 707, "end_byte": 710, "start_point": [13, 0], "end_point": [13, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 711, "end_byte": 716, "start_point": [13, 4], "end_point": [13, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 716, "end_byte": 718, "start_point": [13, 9], "end_point": [13, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 718, "end_byte": 723, "start_point": [13, 11], "end_point": [13, 16], "text": "bzip2"}], "start_byte": 711, "end_byte": 723, "start_point": [13, 4], "end_point": [13, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 723, "end_byte": 725, "start_point": [13, 16], "end_point": [13, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 725, "end_byte": 745, "start_point": [13, 18], "end_point": [13, 38], "text": "scc_105_copyFileName"}], "start_byte": 711, "end_byte": 745, "start_point": [13, 4], "end_point": [13, 38], "text": "crate::bzip2::scc_105_copyFileName"}, {"type": "::", "children": [], "start_byte": 745, "end_byte": 747, "start_point": [13, 38], "end_point": [13, 40], "text": "::"}, {"type": "*", "children": [], "start_byte": 747, "end_byte": 748, "start_point": [13, 40], "end_point": [13, 41], "text": "*"}], "start_byte": 711, "end_byte": 748, "start_point": [13, 4], "end_point": [13, 41], "text": "crate::bzip2::scc_105_copyFileName::*"}, {"type": ";", "children": [], "start_byte": 748, "end_byte": 749, "start_point": [13, 41], "end_point": [13, 42], "text": ";"}], "start_byte": 707, "end_byte": 749, "start_point": [13, 0], "end_point": [13, 42], "text": "use crate::bzip2::scc_105_copyFileName::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 750, "end_byte": 753, "start_point": [14, 0], "end_point": [14, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 754, "end_byte": 759, "start_point": [14, 4], "end_point": [14, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 759, "end_byte": 761, "start_point": [14, 9], "end_point": [14, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 761, "end_byte": 766, "start_point": [14, 11], "end_point": [14, 16], "text": "bzip2"}], "start_byte": 754, "end_byte": 766, "start_point": [14, 4], "end_point": [14, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 766, "end_byte": 768, "start_point": [14, 16], "end_point": [14, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 768, "end_byte": 785, "start_point": [14, 18], "end_point": [14, 35], "text": "scc_87_fileExists"}], "start_byte": 754, "end_byte": 785, "start_point": [14, 4], "end_point": [14, 35], "text": "crate::bzip2::scc_87_fileExists"}, {"type": "::", "children": [], "start_byte": 785, "end_byte": 787, "start_point": [14, 35], "end_point": [14, 37], "text": "::"}, {"type": "*", "children": [], "start_byte": 787, "end_byte": 788, "start_point": [14, 37], "end_point": [14, 38], "text": "*"}], "start_byte": 754, "end_byte": 788, "start_point": [14, 4], "end_point": [14, 38], "text": "crate::bzip2::scc_87_fileExists::*"}, {"type": ";", "children": [], "start_byte": 788, "end_byte": 789, "start_point": [14, 38], "end_point": [14, 39], "text": ";"}], "start_byte": 750, "end_byte": 789, "start_point": [14, 0], "end_point": [14, 39], "text": "use crate::bzip2::scc_87_fileExists::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 790, "end_byte": 793, "start_point": [15, 0], "end_point": [15, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 794, "end_byte": 799, "start_point": [15, 4], "end_point": [15, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 799, "end_byte": 801, "start_point": [15, 9], "end_point": [15, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 801, "end_byte": 806, "start_point": [15, 11], "end_point": [15, 16], "text": "bzip2"}], "start_byte": 794, "end_byte": 806, "start_point": [15, 4], "end_point": [15, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 806, "end_byte": 808, "start_point": [15, 16], "end_point": [15, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 808, "end_byte": 826, "start_point": [15, 18], "end_point": [15, 36], "text": "scc_108_testStream"}], "start_byte": 794, "end_byte": 826, "start_point": [15, 4], "end_point": [15, 36], "text": "crate::bzip2::scc_108_testStream"}, {"type": "::", "children": [], "start_byte": 826, "end_byte": 828, "start_point": [15, 36], "end_point": [15, 38], "text": "::"}, {"type": "*", "children": [], "start_byte": 828, "end_byte": 829, "start_point": [15, 38], "end_point": [15, 39], "text": "*"}], "start_byte": 794, "end_byte": 829, "start_point": [15, 4], "end_point": [15, 39], "text": "crate::bzip2::scc_108_testStream::*"}, {"type": ";", "children": [], "start_byte": 829, "end_byte": 830, "start_point": [15, 39], "end_point": [15, 40], "text": ";"}], "start_byte": 790, "end_byte": 830, "start_point": [15, 0], "end_point": [15, 40], "text": "use crate::bzip2::scc_108_testStream::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 832, "end_byte": 835, "start_point": [17, 0], "end_point": [17, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 836, "end_byte": 839, "start_point": [17, 4], "end_point": [17, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 839, "end_byte": 841, "start_point": [17, 7], "end_point": [17, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 841, "end_byte": 843, "start_point": [17, 9], "end_point": [17, 11], "text": "fs"}], "start_byte": 836, "end_byte": 843, "start_point": [17, 4], "end_point": [17, 11], "text": "std::fs"}, {"type": "::", "children": [], "start_byte": 843, "end_byte": 845, "start_point": [17, 11], "end_point": [17, 13], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 845, "end_byte": 846, "start_point": [17, 13], "end_point": [17, 14], "text": "{"}, {"type": "self", "children": [], "start_byte": 846, "end_byte": 850, "start_point": [17, 14], "end_point": [17, 18], "text": "self"}, {"type": ",", "children": [], "start_byte": 850, "end_byte": 851, "start_point": [17, 18], "end_point": [17, 19], "text": ","}, {"type": "identifier", "children": [], "start_byte": 852, "end_byte": 856, "start_point": [17, 20], "end_point": [17, 24], "text": "File"}, {"type": "}", "children": [], "start_byte": 856, "end_byte": 857, "start_point": [17, 24], "end_point": [17, 25], "text": "}"}], "start_byte": 845, "end_byte": 857, "start_point": [17, 13], "end_point": [17, 25], "text": "{self, File}"}], "start_byte": 836, "end_byte": 857, "start_point": [17, 4], "end_point": [17, 25], "text": "std::fs::{self, File}"}, {"type": ";", "children": [], "start_byte": 857, "end_byte": 858, "start_point": [17, 25], "end_point": [17, 26], "text": ";"}], "start_byte": 832, "end_byte": 858, "start_point": [17, 0], "end_point": [17, 26], "text": "use std::fs::{self, File};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 859, "end_byte": 862, "start_point": [18, 0], "end_point": [18, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 863, "end_byte": 866, "start_point": [18, 4], "end_point": [18, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 866, "end_byte": 868, "start_point": [18, 7], "end_point": [18, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 868, "end_byte": 870, "start_point": [18, 9], "end_point": [18, 11], "text": "io"}], "start_byte": 863, "end_byte": 870, "start_point": [18, 4], "end_point": [18, 11], "text": "std::io"}, {"type": "::", "children": [], "start_byte": 870, "end_byte": 872, "start_point": [18, 11], "end_point": [18, 13], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 872, "end_byte": 873, "start_point": [18, 13], "end_point": [18, 14], "text": "{"}, {"type": "self", "children": [], "start_byte": 873, "end_byte": 877, "start_point": [18, 14], "end_point": [18, 18], "text": "self"}, {"type": ",", "children": [], "start_byte": 877, "end_byte": 878, "start_point": [18, 18], "end_point": [18, 19], "text": ","}, {"type": "identifier", "children": [], "start_byte": 879, "end_byte": 888, "start_point": [18, 20], "end_point": [18, 29], "text": "BufReader"}, {"type": "}", "children": [], "start_byte": 888, "end_byte": 889, "start_point": [18, 29], "end_point": [18, 30], "text": "}"}], "start_byte": 872, "end_byte": 889, "start_point": [18, 13], "end_point": [18, 30], "text": "{self, BufReader}"}], "start_byte": 863, "end_byte": 889, "start_point": [18, 4], "end_point": [18, 30], "text": "std::io::{self, BufReader}"}, {"type": ";", "children": [], "start_byte": 889, "end_byte": 890, "start_point": [18, 30], "end_point": [18, 31], "text": ";"}], "start_byte": 859, "end_byte": 890, "start_point": [18, 0], "end_point": [18, 31], "text": "use std::io::{self, BufReader};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 891, "end_byte": 894, "start_point": [19, 0], "end_point": [19, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 895, "end_byte": 898, "start_point": [19, 4], "end_point": [19, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 898, "end_byte": 900, "start_point": [19, 7], "end_point": [19, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 900, "end_byte": 902, "start_point": [19, 9], "end_point": [19, 11], "text": "os"}], "start_byte": 895, "end_byte": 902, "start_point": [19, 4], "end_point": [19, 11], "text": "std::os"}, {"type": "::", "children": [], "start_byte": 902, "end_byte": 904, "start_point": [19, 11], "end_point": [19, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 904, "end_byte": 908, "start_point": [19, 13], "end_point": [19, 17], "text": "unix"}], "start_byte": 895, "end_byte": 908, "start_point": [19, 4], "end_point": [19, 17], "text": "std::os::unix"}, {"type": "::", "children": [], "start_byte": 908, "end_byte": 910, "start_point": [19, 17], "end_point": [19, 19], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 910, "end_byte": 912, "start_point": [19, 19], "end_point": [19, 21], "text": "io"}], "start_byte": 895, "end_byte": 912, "start_point": [19, 4], "end_point": [19, 21], "text": "std::os::unix::io"}, {"type": "::", "children": [], "start_byte": 912, "end_byte": 914, "start_point": [19, 21], "end_point": [19, 23], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 914, "end_byte": 921, "start_point": [19, 23], "end_point": [19, 30], "text": "AsRawFd"}], "start_byte": 895, "end_byte": 921, "start_point": [19, 4], "end_point": [19, 30], "text": "std::os::unix::io::AsRawFd"}, {"type": ";", "children": [], "start_byte": 921, "end_byte": 922, "start_point": [19, 30], "end_point": [19, 31], "text": ";"}], "start_byte": 891, "end_byte": 922, "start_point": [19, 0], "end_point": [19, 31], "text": "use std::os::unix::io::AsRawFd;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 923, "end_byte": 926, "start_point": [20, 0], "end_point": [20, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 927, "end_byte": 930, "start_point": [20, 4], "end_point": [20, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 930, "end_byte": 932, "start_point": [20, 7], "end_point": [20, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 932, "end_byte": 936, "start_point": [20, 9], "end_point": [20, 13], "text": "path"}], "start_byte": 927, "end_byte": 936, "start_point": [20, 4], "end_point": [20, 13], "text": "std::path"}, {"type": "::", "children": [], "start_byte": 936, "end_byte": 938, "start_point": [20, 13], "end_point": [20, 15], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 938, "end_byte": 942, "start_point": [20, 15], "end_point": [20, 19], "text": "Path"}], "start_byte": 927, "end_byte": 942, "start_point": [20, 4], "end_point": [20, 19], "text": "std::path::Path"}, {"type": ";", "children": [], "start_byte": 942, "end_byte": 943, "start_point": [20, 19], "end_point": [20, 20], "text": ";"}], "start_byte": 923, "end_byte": 943, "start_point": [20, 0], "end_point": [20, 20], "text": "use std::path::Path;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 944, "end_byte": 947, "start_point": [21, 0], "end_point": [21, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "identifier", "children": [], "start_byte": 948, "end_byte": 952, "start_point": [21, 4], "end_point": [21, 8], "text": "libc"}, {"type": "::", "children": [], "start_byte": 952, "end_byte": 954, "start_point": [21, 8], "end_point": [21, 10], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 954, "end_byte": 955, "start_point": [21, 10], "end_point": [21, 11], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 955, "end_byte": 961, "start_point": [21, 11], "end_point": [21, 17], "text": "isatty"}, {"type": ",", "children": [], "start_byte": 961, "end_byte": 962, "start_point": [21, 17], "end_point": [21, 18], "text": ","}, {"type": "identifier", "children": [], "start_byte": 963, "end_byte": 967, "start_point": [21, 19], "end_point": [21, 23], "text": "stat"}, {"type": ",", "children": [], "start_byte": 967, "end_byte": 968, "start_point": [21, 23], "end_point": [21, 24], "text": ","}, {"type": "identifier", "children": [], "start_byte": 969, "end_byte": 976, "start_point": [21, 25], "end_point": [21, 32], "text": "S_IFDIR"}, {"type": "}", "children": [], "start_byte": 976, "end_byte": 977, "start_point": [21, 32], "end_point": [21, 33], "text": "}"}], "start_byte": 954, "end_byte": 977, "start_point": [21, 10], "end_point": [21, 33], "text": "{isatty, stat, S_IFDIR}"}], "start_byte": 948, "end_byte": 977, "start_point": [21, 4], "end_point": [21, 33], "text": "libc::{isatty, stat, S_IFDIR}"}, {"type": ";", "children": [], "start_byte": 977, "end_byte": 978, "start_point": [21, 33], "end_point": [21, 34], "text": ";"}], "start_byte": 944, "end_byte": 978, "start_point": [21, 0], "end_point": [21, 34], "text": "use libc::{isatty, stat, S_IFDIR};"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 982, "end_byte": 985, "start_point": [25, 0], "end_point": [25, 3], "text": "pub"}], "start_byte": 982, "end_byte": 985, "start_point": [25, 0], "end_point": [25, 3], "text": "pub"}, {"type": "fn", "children": [], "start_byte": 986, "end_byte": 988, "start_point": [25, 4], "end_point": [25, 6], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 989, "end_byte": 994, "start_point": [25, 7], "end_point": [25, 12], "text": "testf"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 994, "end_byte": 995, "start_point": [25, 12], "end_point": [25, 13], "text": "("}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 995, "end_byte": 999, "start_point": [25, 13], "end_point": [25, 17], "text": "name"}, {"type": ":", "children": [], "start_byte": 999, "end_byte": 1000, "start_point": [25, 17], "end_point": [25, 18], "text": ":"}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 1001, "end_byte": 1007, "start_point": [25, 19], "end_point": [25, 25], "text": "Option"}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 1007, "end_byte": 1008, "start_point": [25, 25], "end_point": [25, 26], "text": "<"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 1008, "end_byte": 1009, "start_point": [25, 26], "end_point": [25, 27], "text": "&"}, {"type": "primitive_type", "children": [], "start_byte": 1009, "end_byte": 1012, "start_point": [25, 27], "end_point": [25, 30], "text": "str"}], "start_byte": 1008, "end_byte": 1012, "start_point": [25, 26], "end_point": [25, 30], "text": "&str"}, {"type": ">", "children": [], "start_byte": 1012, "end_byte": 1013, "start_point": [25, 30], "end_point": [25, 31], "text": ">"}], "start_byte": 1007, "end_byte": 1013, "start_point": [25, 25], "end_point": [25, 31], "text": "<&str>"}], "start_byte": 1001, "end_byte": 1013, "start_point": [25, 19], "end_point": [25, 31], "text": "Option<&str>"}], "start_byte": 995, "end_byte": 1013, "start_point": [25, 13], "end_point": [25, 31], "text": "name: Option<&str>"}, {"type": ")", "children": [], "start_byte": 1013, "end_byte": 1014, "start_point": [25, 31], "end_point": [25, 32], "text": ")"}], "start_byte": 994, "end_byte": 1014, "start_point": [25, 12], "end_point": [25, 32], "text": "(name: Option<&str>)"}, {"type": "->", "children": [], "start_byte": 1015, "end_byte": 1017, "start_point": [25, 33], "end_point": [25, 35], "text": "->"}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 1018, "end_byte": 1024, "start_point": [25, 36], "end_point": [25, 42], "text": "Result"}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 1024, "end_byte": 1025, "start_point": [25, 42], "end_point": [25, 43], "text": "<"}, {"type": "unit_type", "children": [{"type": "(", "children": [], "start_byte": 1025, "end_byte": 1026, "start_point": [25, 43], "end_point": [25, 44], "text": "("}, {"type": ")", "children": [], "start_byte": 1026, "end_byte": 1027, "start_point": [25, 44], "end_point": [25, 45], "text": ")"}], "start_byte": 1025, "end_byte": 1027, "start_point": [25, 43], "end_point": [25, 45], "text": "()"}, {"type": ",", "children": [], "start_byte": 1027, "end_byte": 1028, "start_point": [25, 45], "end_point": [25, 46], "text": ","}, {"type": "scoped_type_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1029, "end_byte": 1031, "start_point": [25, 47], "end_point": [25, 49], "text": "io"}, {"type": "::", "children": [], "start_byte": 1031, "end_byte": 1033, "start_point": [25, 49], "end_point": [25, 51], "text": "::"}, {"type": "type_identifier", "children": [], "start_byte": 1033, "end_byte": 1038, "start_point": [25, 51], "end_point": [25, 56], "text": "Error"}], "start_byte": 1029, "end_byte": 1038, "start_point": [25, 47], "end_point": [25, 56], "text": "io::Error"}, {"type": ">", "children": [], "start_byte": 1038, "end_byte": 1039, "start_point": [25, 56], "end_point": [25, 57], "text": ">"}], "start_byte": 1024, "end_byte": 1039, "start_point": [25, 42], "end_point": [25, 57], "text": "<(), io::Error>"}], "start_byte": 1018, "end_byte": 1039, "start_point": [25, 36], "end_point": [25, 57], "text": "Result<(), io::Error>"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1040, "end_byte": 1041, "start_point": [25, 58], "end_point": [25, 59], "text": "{"}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 1046, "end_byte": 1052, "start_point": [26, 4], "end_point": [26, 10], "text": "unsafe"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1053, "end_byte": 1054, "start_point": [26, 11], "end_point": [26, 12], "text": "{"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1063, "end_byte": 1089, "start_point": [27, 8], "end_point": [27, 34], "text": "DELETE_OUTPUT_ON_INTERRUPT"}, {"type": "=", "children": [], "start_byte": 1090, "end_byte": 1091, "start_point": [27, 35], "end_point": [27, 36], "text": "="}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 1092, "end_byte": 1097, "start_point": [27, 37], "end_point": [27, 42], "text": "false"}], "start_byte": 1092, "end_byte": 1097, "start_point": [27, 37], "end_point": [27, 42], "text": "false"}], "start_byte": 1063, "end_byte": 1097, "start_point": [27, 8], "end_point": [27, 42], "text": "DELETE_OUTPUT_ON_INTERRUPT = false"}, {"type": ";", "children": [], "start_byte": 1097, "end_byte": 1098, "start_point": [27, 42], "end_point": [27, 43], "text": ";"}], "start_byte": 1063, "end_byte": 1098, "start_point": [27, 8], "end_point": [27, 43], "text": "DELETE_OUTPUT_ON_INTERRUPT = false;"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 1108, "end_byte": 1110, "start_point": [29, 8], "end_point": [29, 10], "text": "if"}, {"type": "binary_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1111, "end_byte": 1115, "start_point": [29, 11], "end_point": [29, 15], "text": "name"}, {"type": ".", "children": [], "start_byte": 1115, "end_byte": 1116, "start_point": [29, 15], "end_point": [29, 16], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 1116, "end_byte": 1123, "start_point": [29, 16], "end_point": [29, 23], "text": "is_none"}], "start_byte": 1111, "end_byte": 1123, "start_point": [29, 11], "end_point": [29, 23], "text": "name.is_none"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1123, "end_byte": 1124, "start_point": [29, 23], "end_point": [29, 24], "text": "("}, {"type": ")", "children": [], "start_byte": 1124, "end_byte": 1125, "start_point": [29, 24], "end_point": [29, 25], "text": ")"}], "start_byte": 1123, "end_byte": 1125, "start_point": [29, 23], "end_point": [29, 25], "text": "()"}], "start_byte": 1111, "end_byte": 1125, "start_point": [29, 11], "end_point": [29, 25], "text": "name.is_none()"}, {"type": "&&", "children": [], "start_byte": 1126, "end_byte": 1128, "start_point": [29, 26], "end_point": [29, 28], "text": "&&"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1129, "end_byte": 1137, "start_point": [29, 29], "end_point": [29, 37], "text": "SRC_MODE"}, {"type": "!=", "children": [], "start_byte": 1138, "end_byte": 1140, "start_point": [29, 38], "end_point": [29, 40], "text": "!="}, {"type": "integer_literal", "children": [], "start_byte": 1141, "end_byte": 1142, "start_point": [29, 41], "end_point": [29, 42], "text": "1"}], "start_byte": 1129, "end_byte": 1142, "start_point": [29, 29], "end_point": [29, 42], "text": "SRC_MODE != 1"}], "start_byte": 1111, "end_byte": 1142, "start_point": [29, 11], "end_point": [29, 42], "text": "name.is_none() && SRC_MODE != 1"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1143, "end_byte": 1144, "start_point": [29, 43], "end_point": [29, 44], "text": "{"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1157, "end_byte": 1162, "start_point": [30, 12], "end_point": [30, 17], "text": "panic"}, {"type": "!", "children": [], "start_byte": 1162, "end_byte": 1163, "start_point": [30, 17], "end_point": [30, 18], "text": "!"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1163, "end_byte": 1164, "start_point": [30, 18], "end_point": [30, 19], "text": "("}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1164, "end_byte": 1165, "start_point": [30, 19], "end_point": [30, 20], "text": "\""}, {"type": "escape_sequence", "children": [], "start_byte": 1181, "end_byte": 1183, "start_point": [30, 36], "end_point": [30, 38], "text": "\\n"}, {"type": "\"", "children": [], "start_byte": 1183, "end_byte": 1184, "start_point": [30, 38], "end_point": [30, 39], "text": "\""}], "start_byte": 1164, "end_byte": 1184, "start_point": [30, 19], "end_point": [30, 39], "text": "\"testf: bad modes\\n\""}, {"type": ")", "children": [], "start_byte": 1184, "end_byte": 1185, "start_point": [30, 39], "end_point": [30, 40], "text": ")"}], "start_byte": 1163, "end_byte": 1185, "start_point": [30, 18], "end_point": [30, 40], "text": "(\"testf: bad modes\\n\")"}], "start_byte": 1157, "end_byte": 1185, "start_point": [30, 12], "end_point": [30, 40], "text": "panic!(\"testf: bad modes\\n\")"}, {"type": ";", "children": [], "start_byte": 1185, "end_byte": 1186, "start_point": [30, 40], "end_point": [30, 41], "text": ";"}], "start_byte": 1157, "end_byte": 1186, "start_point": [30, 12], "end_point": [30, 41], "text": "panic!(\"testf: bad modes\\n\");"}, {"type": "}", "children": [], "start_byte": 1195, "end_byte": 1196, "start_point": [31, 8], "end_point": [31, 9], "text": "}"}], "start_byte": 1143, "end_byte": 1196, "start_point": [29, 43], "end_point": [31, 9], "text": "{\n            panic!(\"testf: bad modes\\n\");\n        }"}], "start_byte": 1108, "end_byte": 1196, "start_point": [29, 8], "end_point": [31, 9], "text": "if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }"}], "start_byte": 1108, "end_byte": 1196, "start_point": [29, 8], "end_point": [31, 9], "text": "if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1206, "end_byte": 1209, "start_point": [33, 8], "end_point": [33, 11], "text": "let"}, {"type": "mutable_specifier", "children": [], "start_byte": 1210, "end_byte": 1213, "start_point": [33, 12], "end_point": [33, 15], "text": "mut"}, {"type": "identifier", "children": [], "start_byte": 1214, "end_byte": 1222, "start_point": [33, 16], "end_point": [33, 24], "text": "out_name"}, {"type": "=", "children": [], "start_byte": 1223, "end_byte": 1224, "start_point": [33, 25], "end_point": [33, 26], "text": "="}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1225, "end_byte": 1231, "start_point": [33, 27], "end_point": [33, 33], "text": "String"}, {"type": "::", "children": [], "start_byte": 1231, "end_byte": 1233, "start_point": [33, 33], "end_point": [33, 35], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 1233, "end_byte": 1236, "start_point": [33, 35], "end_point": [33, 38], "text": "new"}], "start_byte": 1225, "end_byte": 1236, "start_point": [33, 27], "end_point": [33, 38], "text": "String::new"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1236, "end_byte": 1237, "start_point": [33, 38], "end_point": [33, 39], "text": "("}, {"type": ")", "children": [], "start_byte": 1237, "end_byte": 1238, "start_point": [33, 39], "end_point": [33, 40], "text": ")"}], "start_byte": 1236, "end_byte": 1238, "start_point": [33, 38], "end_point": [33, 40], "text": "()"}], "start_byte": 1225, "end_byte": 1238, "start_point": [33, 27], "end_point": [33, 40], "text": "String::new()"}, {"type": ";", "children": [], "start_byte": 1238, "end_byte": 1239, "start_point": [33, 40], "end_point": [33, 41], "text": ";"}], "start_byte": 1206, "end_byte": 1239, "start_point": [33, 8], "end_point": [33, 41], "text": "let mut out_name = String::new();"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1248, "end_byte": 1251, "start_point": [34, 8], "end_point": [34, 11], "text": "let"}, {"type": "mutable_specifier", "children": [], "start_byte": 1252, "end_byte": 1255, "start_point": [34, 12], "end_point": [34, 15], "text": "mut"}, {"type": "identifier", "children": [], "start_byte": 1256, "end_byte": 1263, "start_point": [34, 16], "end_point": [34, 23], "text": "in_name"}, {"type": "=", "children": [], "start_byte": 1264, "end_byte": 1265, "start_point": [34, 24], "end_point": [34, 25], "text": "="}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1266, "end_byte": 1272, "start_point": [34, 26], "end_point": [34, 32], "text": "String"}, {"type": "::", "children": [], "start_byte": 1272, "end_byte": 1274, "start_point": [34, 32], "end_point": [34, 34], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 1274, "end_byte": 1277, "start_point": [34, 34], "end_point": [34, 37], "text": "new"}], "start_byte": 1266, "end_byte": 1277, "start_point": [34, 26], "end_point": [34, 37], "text": "String::new"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1277, "end_byte": 1278, "start_point": [34, 37], "end_point": [34, 38], "text": "("}, {"type": ")", "children": [], "start_byte": 1278, "end_byte": 1279, "start_point": [34, 38], "end_point": [34, 39], "text": ")"}], "start_byte": 1277, "end_byte": 1279, "start_point": [34, 37], "end_point": [34, 39], "text": "()"}], "start_byte": 1266, "end_byte": 1279, "start_point": [34, 26], "end_point": [34, 39], "text": "String::new()"}, {"type": ";", "children": [], "start_byte": 1279, "end_byte": 1280, "start_point": [34, 39], "end_point": [34, 40], "text": ";"}], "start_byte": 1248, "end_byte": 1280, "start_point": [34, 8], "end_point": [34, 40], "text": "let mut in_name = String::new();"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1289, "end_byte": 1303, "start_point": [35, 8], "end_point": [35, 22], "text": "copy_file_name"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1303, "end_byte": 1304, "start_point": [35, 22], "end_point": [35, 23], "text": "("}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1304, "end_byte": 1305, "start_point": [35, 23], "end_point": [35, 24], "text": "&"}, {"type": "mutable_specifier", "children": [], "start_byte": 1305, "end_byte": 1308, "start_point": [35, 24], "end_point": [35, 27], "text": "mut"}, {"type": "identifier", "children": [], "start_byte": 1309, "end_byte": 1317, "start_point": [35, 28], "end_point": [35, 36], "text": "out_name"}], "start_byte": 1304, "end_byte": 1317, "start_point": [35, 23], "end_point": [35, 36], "text": "&mut out_name"}, {"type": ",", "children": [], "start_byte": 1317, "end_byte": 1318, "start_point": [35, 36], "end_point": [35, 37], "text": ","}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1319, "end_byte": 1320, "start_point": [35, 38], "end_point": [35, 39], "text": "\""}, {"type": "\"", "children": [], "start_byte": 1326, "end_byte": 1327, "start_point": [35, 45], "end_point": [35, 46], "text": "\""}], "start_byte": 1319, "end_byte": 1327, "start_point": [35, 38], "end_point": [35, 46], "text": "\"(none)\""}, {"type": ")", "children": [], "start_byte": 1327, "end_byte": 1328, "start_point": [35, 46], "end_point": [35, 47], "text": ")"}], "start_byte": 1303, "end_byte": 1328, "start_point": [35, 22], "end_point": [35, 47], "text": "(&mut out_name, \"(none)\")"}], "start_byte": 1289, "end_byte": 1328, "start_point": [35, 8], "end_point": [35, 47], "text": "copy_file_name(&mut out_name, \"(none)\")"}, {"type": ";", "children": [], "start_byte": 1328, "end_byte": 1329, "start_point": [35, 47], "end_point": [35, 48], "text": ";"}], "start_byte": 1289, "end_byte": 1329, "start_point": [35, 8], "end_point": [35, 48], "text": "copy_file_name(&mut out_name, \"(none)\");"}, {"type": "expression_statement", "children": [{"type": "match_expression", "children": [{"type": "match", "children": [], "start_byte": 1339, "end_byte": 1344, "start_point": [37, 8], "end_point": [37, 13], "text": "match"}, {"type": "identifier", "children": [], "start_byte": 1345, "end_byte": 1353, "start_point": [37, 14], "end_point": [37, 22], "text": "SRC_MODE"}, {"type": "match_block", "children": [{"type": "{", "children": [], "start_byte": 1354, "end_byte": 1355, "start_point": [37, 23], "end_point": [37, 24], "text": "{"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "integer_literal", "children": [], "start_byte": 1368, "end_byte": 1369, "start_point": [38, 12], "end_point": [38, 13], "text": "1"}], "start_byte": 1368, "end_byte": 1369, "start_point": [38, 12], "end_point": [38, 13], "text": "1"}, {"type": "=>", "children": [], "start_byte": 1370, "end_byte": 1372, "start_point": [38, 14], "end_point": [38, 16], "text": "=>"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1373, "end_byte": 1387, "start_point": [38, 17], "end_point": [38, 31], "text": "copy_file_name"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1387, "end_byte": 1388, "start_point": [38, 31], "end_point": [38, 32], "text": "("}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1388, "end_byte": 1389, "start_point": [38, 32], "end_point": [38, 33], "text": "&"}, {"type": "mutable_specifier", "children": [], "start_byte": 1389, "end_byte": 1392, "start_point": [38, 33], "end_point": [38, 36], "text": "mut"}, {"type": "identifier", "children": [], "start_byte": 1393, "end_byte": 1400, "start_point": [38, 37], "end_point": [38, 44], "text": "in_name"}], "start_byte": 1388, "end_byte": 1400, "start_point": [38, 32], "end_point": [38, 44], "text": "&mut in_name"}, {"type": ",", "children": [], "start_byte": 1400, "end_byte": 1401, "start_point": [38, 44], "end_point": [38, 45], "text": ","}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1402, "end_byte": 1403, "start_point": [38, 46], "end_point": [38, 47], "text": "\""}, {"type": "\"", "children": [], "start_byte": 1410, "end_byte": 1411, "start_point": [38, 54], "end_point": [38, 55], "text": "\""}], "start_byte": 1402, "end_byte": 1411, "start_point": [38, 46], "end_point": [38, 55], "text": "\"(stdin)\""}, {"type": ")", "children": [], "start_byte": 1411, "end_byte": 1412, "start_point": [38, 55], "end_point": [38, 56], "text": ")"}], "start_byte": 1387, "end_byte": 1412, "start_point": [38, 31], "end_point": [38, 56], "text": "(&mut in_name, \"(stdin)\")"}], "start_byte": 1373, "end_byte": 1412, "start_point": [38, 17], "end_point": [38, 56], "text": "copy_file_name(&mut in_name, \"(stdin)\")"}, {"type": ",", "children": [], "start_byte": 1412, "end_byte": 1413, "start_point": [38, 56], "end_point": [38, 57], "text": ","}], "start_byte": 1368, "end_byte": 1413, "start_point": [38, 12], "end_point": [38, 57], "text": "1 => copy_file_name(&mut in_name, \"(stdin)\"),"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "or_pattern", "children": [{"type": "integer_literal", "children": [], "start_byte": 1426, "end_byte": 1427, "start_point": [39, 12], "end_point": [39, 13], "text": "2"}, {"type": "|", "children": [], "start_byte": 1428, "end_byte": 1429, "start_point": [39, 14], "end_point": [39, 15], "text": "|"}, {"type": "integer_literal", "children": [], "start_byte": 1430, "end_byte": 1431, "start_point": [39, 16], "end_point": [39, 17], "text": "3"}], "start_byte": 1426, "end_byte": 1431, "start_point": [39, 12], "end_point": [39, 17], "text": "2 | 3"}], "start_byte": 1426, "end_byte": 1431, "start_point": [39, 12], "end_point": [39, 17], "text": "2 | 3"}, {"type": "=>", "children": [], "start_byte": 1432, "end_byte": 1434, "start_point": [39, 18], "end_point": [39, 20], "text": "=>"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1435, "end_byte": 1449, "start_point": [39, 21], "end_point": [39, 35], "text": "copy_file_name"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1449, "end_byte": 1450, "start_point": [39, 35], "end_point": [39, 36], "text": "("}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1450, "end_byte": 1451, "start_point": [39, 36], "end_point": [39, 37], "text": "&"}, {"type": "mutable_specifier", "children": [], "start_byte": 1451, "end_byte": 1454, "start_point": [39, 37], "end_point": [39, 40], "text": "mut"}, {"type": "identifier", "children": [], "start_byte": 1455, "end_byte": 1462, "start_point": [39, 41], "end_point": [39, 48], "text": "in_name"}], "start_byte": 1450, "end_byte": 1462, "start_point": [39, 36], "end_point": [39, 48], "text": "&mut in_name"}, {"type": ",", "children": [], "start_byte": 1462, "end_byte": 1463, "start_point": [39, 48], "end_point": [39, 49], "text": ","}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1464, "end_byte": 1468, "start_point": [39, 50], "end_point": [39, 54], "text": "name"}, {"type": ".", "children": [], "start_byte": 1468, "end_byte": 1469, "start_point": [39, 54], "end_point": [39, 55], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 1469, "end_byte": 1475, "start_point": [39, 55], "end_point": [39, 61], "text": "unwrap"}], "start_byte": 1464, "end_byte": 1475, "start_point": [39, 50], "end_point": [39, 61], "text": "name.unwrap"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1475, "end_byte": 1476, "start_point": [39, 61], "end_point": [39, 62], "text": "("}, {"type": ")", "children": [], "start_byte": 1476, "end_byte": 1477, "start_point": [39, 62], "end_point": [39, 63], "text": ")"}], "start_byte": 1475, "end_byte": 1477, "start_point": [39, 61], "end_point": [39, 63], "text": "()"}], "start_byte": 1464, "end_byte": 1477, "start_point": [39, 50], "end_point": [39, 63], "text": "name.unwrap()"}, {"type": ")", "children": [], "start_byte": 1477, "end_byte": 1478, "start_point": [39, 63], "end_point": [39, 64], "text": ")"}], "start_byte": 1449, "end_byte": 1478, "start_point": [39, 35], "end_point": [39, 64], "text": "(&mut in_name, name.unwrap())"}], "start_byte": 1435, "end_byte": 1478, "start_point": [39, 21], "end_point": [39, 64], "text": "copy_file_name(&mut in_name, name.unwrap())"}, {"type": ",", "children": [], "start_byte": 1478, "end_byte": 1479, "start_point": [39, 64], "end_point": [39, 65], "text": ","}], "start_byte": 1426, "end_byte": 1479, "start_point": [39, 12], "end_point": [39, 65], "text": "2 | 3 => copy_file_name(&mut in_name, name.unwrap()),"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "_", "children": [], "start_byte": 1492, "end_byte": 1493, "start_point": [40, 12], "end_point": [40, 13], "text": "_"}], "start_byte": 1492, "end_byte": 1493, "start_point": [40, 12], "end_point": [40, 13], "text": "_"}, {"type": "=>", "children": [], "start_byte": 1494, "end_byte": 1496, "start_point": [40, 14], "end_point": [40, 16], "text": "=>"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1497, "end_byte": 1498, "start_point": [40, 17], "end_point": [40, 18], "text": "{"}, {"type": "}", "children": [], "start_byte": 1498, "end_byte": 1499, "start_point": [40, 18], "end_point": [40, 19], "text": "}"}], "start_byte": 1497, "end_byte": 1499, "start_point": [40, 17], "end_point": [40, 19], "text": "{}"}], "start_byte": 1492, "end_byte": 1499, "start_point": [40, 12], "end_point": [40, 19], "text": "_ => {}"}, {"type": "}", "children": [], "start_byte": 1508, "end_byte": 1509, "start_point": [41, 8], "end_point": [41, 9], "text": "}"}], "start_byte": 1354, "end_byte": 1509, "start_point": [37, 23], "end_point": [41, 9], "text": "{\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }"}], "start_byte": 1339, "end_byte": 1509, "start_point": [37, 8], "end_point": [41, 9], "text": "match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }"}], "start_byte": 1339, "end_byte": 1509, "start_point": [37, 8], "end_point": [41, 9], "text": "match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 1519, "end_byte": 1521, "start_point": [43, 8], "end_point": [43, 10], "text": "if"}, {"type": "binary_expression", "children": [{"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1522, "end_byte": 1530, "start_point": [43, 11], "end_point": [43, 19], "text": "SRC_MODE"}, {"type": "!=", "children": [], "start_byte": 1531, "end_byte": 1533, "start_point": [43, 20], "end_point": [43, 22], "text": "!="}, {"type": "integer_literal", "children": [], "start_byte": 1534, "end_byte": 1535, "start_point": [43, 23], "end_point": [43, 24], "text": "1"}], "start_byte": 1522, "end_byte": 1535, "start_point": [43, 11], "end_point": [43, 24], "text": "SRC_MODE != 1"}, {"type": "&&", "children": [], "start_byte": 1536, "end_byte": 1538, "start_point": [43, 25], "end_point": [43, 27], "text": "&&"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1539, "end_byte": 1561, "start_point": [43, 28], "end_point": [43, 50], "text": "contains_dubious_chars"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1561, "end_byte": 1562, "start_point": [43, 50], "end_point": [43, 51], "text": "("}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1562, "end_byte": 1563, "start_point": [43, 51], "end_point": [43, 52], "text": "&"}, {"type": "identifier", "children": [], "start_byte": 1563, "end_byte": 1570, "start_point": [43, 52], "end_point": [43, 59], "text": "in_name"}], "start_byte": 1562, "end_byte": 1570, "start_point": [43, 51], "end_point": [43, 59], "text": "&in_name"}, {"type": ")", "children": [], "start_byte": 1570, "end_byte": 1571, "start_point": [43, 59], "end_point": [43, 60], "text": ")"}], "start_byte": 1561, "end_byte": 1571, "start_point": [43, 50], "end_point": [43, 60], "text": "(&in_name)"}], "start_byte": 1539, "end_byte": 1571, "start_point": [43, 28], "end_point": [43, 60], "text": "contains_dubious_chars(&in_name)"}], "start_byte": 1522, "end_byte": 1571, "start_point": [43, 11], "end_point": [43, 60], "text": "SRC_MODE != 1 && contains_dubious_chars(&in_name)"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1572, "end_byte": 1573, "start_point": [43, 61], "end_point": [43, 62], "text": "{"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 1586, "end_byte": 1588, "start_point": [44, 12], "end_point": [44, 14], "text": "if"}, {"type": "identifier", "children": [], "start_byte": 1589, "end_byte": 1594, "start_point": [44, 15], "end_point": [44, 20], "text": "NOISY"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1595, "end_byte": 1596, "start_point": [44, 21], "end_point": [44, 22], "text": "{"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1613, "end_byte": 1621, "start_point": [45, 16], "end_point": [45, 24], "text": "eprintln"}, {"type": "!", "children": [], "start_byte": 1621, "end_byte": 1622, "start_point": [45, 24], "end_point": [45, 25], "text": "!"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1622, "end_byte": 1623, "start_point": [45, 25], "end_point": [45, 26], "text": "("}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1623, "end_byte": 1624, "start_point": [45, 26], "end_point": [45, 27], "text": "\""}, {"type": "escape_sequence", "children": [], "start_byte": 1661, "end_byte": 1663, "start_point": [45, 64], "end_point": [45, 66], "text": "\\n"}, {"type": "\"", "children": [], "start_byte": 1663, "end_byte": 1664, "start_point": [45, 66], "end_point": [45, 67], "text": "\""}], "start_byte": 1623, "end_byte": 1664, "start_point": [45, 26], "end_point": [45, 67], "text": "\"{}: There are no files matching `{}`.\\n\""}, {"type": "identifier", "children": [], "start_byte": 1666, "end_byte": 1669, "start_point": [45, 69], "end_point": [45, 72], "text": "std"}, {"type": "primitive_type", "children": [], "start_byte": 1671, "end_byte": 1674, "start_point": [45, 74], "end_point": [45, 77], "text": "str"}, {"type": "identifier", "children": [], "start_byte": 1676, "end_byte": 1695, "start_point": [45, 79], "end_point": [45, 98], "text": "from_utf8_unchecked"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1695, "end_byte": 1696, "start_point": [45, 98], "end_point": [45, 99], "text": "("}, {"type": "identifier", "children": [], "start_byte": 1697, "end_byte": 1706, "start_point": [45, 100], "end_point": [45, 109], "text": "PROG_NAME"}, {"type": ")", "children": [], "start_byte": 1706, "end_byte": 1707, "start_point": [45, 109], "end_point": [45, 110], "text": ")"}], "start_byte": 1695, "end_byte": 1707, "start_point": [45, 98], "end_point": [45, 110], "text": "(&PROG_NAME)"}, {"type": "identifier", "children": [], "start_byte": 1709, "end_byte": 1716, "start_point": [45, 112], "end_point": [45, 119], "text": "in_name"}, {"type": ")", "children": [], "start_byte": 1716, "end_byte": 1717, "start_point": [45, 119], "end_point": [45, 120], "text": ")"}], "start_byte": 1622, "end_byte": 1717, "start_point": [45, 25], "end_point": [45, 120], "text": "(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name)"}], "start_byte": 1613, "end_byte": 1717, "start_point": [45, 16], "end_point": [45, 120], "text": "eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name)"}, {"type": ";", "children": [], "start_byte": 1717, "end_byte": 1718, "start_point": [45, 120], "end_point": [45, 121], "text": ";"}], "start_byte": 1613, "end_byte": 1718, "start_point": [45, 16], "end_point": [45, 121], "text": "eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);"}, {"type": "}", "children": [], "start_byte": 1731, "end_byte": 1732, "start_point": [46, 12], "end_point": [46, 13], "text": "}"}], "start_byte": 1595, "end_byte": 1732, "start_point": [44, 21], "end_point": [46, 13], "text": "{\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }"}], "start_byte": 1586, "end_byte": 1732, "start_point": [44, 12], "end_point": [46, 13], "text": "if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }"}], "start_byte": 1586, "end_byte": 1732, "start_point": [44, 12], "end_point": [46, 13], "text": "if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }"}, {"type": "line_comment", "children": [], "start_byte": 1745, "end_byte": 1795, "start_point": [47, 12], "end_point": [47, 62], "text": "// set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            retur"}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 1808, "end_byte": 1814, "start_point": [48, 12], "end_point": [48, 18], "text": "     }"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1815, "end_byte": 1817, "start_point": [48, 19], "end_point": [48, 21], "text": "\n "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1817, "end_byte": 1818, "start_point": [48, 21], "end_point": [48, 22], "text": " "}, {"type": "unit_expression", "children": [{"type": "(", "children": [], "start_byte": 1818, "end_byte": 1819, "start_point": [48, 22], "end_point": [48, 23], "text": " "}, {"type": ")", "children": [], "start_byte": 1819, "end_byte": 1820, "start_point": [48, 23], "end_point": [48, 24], "text": " "}], "start_byte": 1818, "end_byte": 1820, "start_point": [48, 22], "end_point": [48, 24], "text": "  "}, {"type": ")", "children": [], "start_byte": 1820, "end_byte": 1821, "start_point": [48, 24], "end_point": [48, 25], "text": " "}], "start_byte": 1817, "end_byte": 1821, "start_point": [48, 21], "end_point": [48, 25], "text": "    "}], "start_byte": 1815, "end_byte": 1821, "start_point": [48, 19], "end_point": [48, 25], "text": "\n     "}], "start_byte": 1808, "end_byte": 1821, "start_point": [48, 12], "end_point": [48, 25], "text": "     }\n\n     "}, {"type": ";", "children": [], "start_byte": 1821, "end_byte": 1822, "start_point": [48, 25], "end_point": [48, 26], "text": " "}], "start_byte": 1808, "end_byte": 1822, "start_point": [48, 12], "end_point": [48, 26], "text": "     }\n\n      "}, {"type": "}", "children": [], "start_byte": 1831, "end_byte": 1832, "start_point": [49, 8], "end_point": [49, 9], "text": "M"}], "start_byte": 1572, "end_byte": 1832, "start_point": [43, 61], "end_point": [49, 9], "text": "{\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_M"}], "start_byte": 1519, "end_byte": 1832, "start_point": [43, 8], "end_point": [49, 9], "text": "if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_M"}], "start_byte": 1519, "end_byte": 1832, "start_point": [43, 8], "end_point": [49, 9], "text": "if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_M"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 1842, "end_byte": 1844, "start_point": [51, 8], "end_point": [51, 10], "text": "& "}, {"type": "binary_expression", "children": [{"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1845, "end_byte": 1853, "start_point": [51, 11], "end_point": [51, 19], "text": "file_exi"}, {"type": "!=", "children": [], "start_byte": 1854, "end_byte": 1856, "start_point": [51, 20], "end_point": [51, 22], "text": "ts"}, {"type": "integer_literal", "children": [], "start_byte": 1857, "end_byte": 1858, "start_point": [51, 23], "end_point": [51, 24], "text": "&"}], "start_byte": 1845, "end_byte": 1858, "start_point": [51, 11], "end_point": [51, 24], "text": "file_exists(&"}, {"type": "&&", "children": [], "start_byte": 1859, "end_byte": 1861, "start_point": [51, 25], "end_point": [51, 27], "text": "n_"}, {"type": "unary_expression", "children": [{"type": "!", "children": [], "start_byte": 1862, "end_byte": 1863, "start_point": [51, 28], "end_point": [51, 29], "text": "a"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1863, "end_byte": 1874, "start_point": [51, 29], "end_point": [51, 40], "text": "me) {\n     "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1874, "end_byte": 1875, "start_point": [51, 40], "end_point": [51, 41], "text": " "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1875, "end_byte": 1876, "start_point": [51, 41], "end_point": [51, 42], "text": " "}, {"type": "identifier", "children": [], "start_byte": 1876, "end_byte": 1883, "start_point": [51, 42], "end_point": [51, 49], "text": "     ep"}], "start_byte": 1875, "end_byte": 1883, "start_point": [51, 41], "end_point": [51, 49], "text": "      ep"}, {"type": ")", "children": [], "start_byte": 1883, "end_byte": 1884, "start_point": [51, 49], "end_point": [51, 50], "text": "r"}], "start_byte": 1874, "end_byte": 1884, "start_point": [51, 40], "end_point": [51, 50], "text": "       epr"}], "start_byte": 1863, "end_byte": 1884, "start_point": [51, 29], "end_point": [51, 50], "text": "me) {\n            epr"}], "start_byte": 1862, "end_byte": 1884, "start_point": [51, 28], "end_point": [51, 50], "text": "ame) {\n            epr"}], "start_byte": 1845, "end_byte": 1884, "start_point": [51, 11], "end_point": [51, 50], "text": "file_exists(&in_name) {\n            epr"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1885, "end_byte": 1886, "start_point": [51, 51], "end_point": [51, 52], "text": "n"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1899, "end_byte": 1907, "start_point": [52, 12], "end_point": [52, 20], "text": "'t open "}, {"type": "!", "children": [], "start_byte": 1907, "end_byte": 1908, "start_point": [52, 20], "end_point": [52, 21], "text": "i"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1908, "end_byte": 1909, "start_point": [52, 21], "end_point": [52, 22], "text": "n"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1909, "end_byte": 1910, "start_point": [52, 22], "end_point": [52, 23], "text": "p"}, {"type": "escape_sequence", "children": [], "start_byte": 1937, "end_byte": 1939, "start_point": [52, 50], "end_point": [52, 52], "text": "m_"}, {"type": "\"", "children": [], "start_byte": 1939, "end_byte": 1940, "start_point": [52, 52], "end_point": [52, 53], "text": "u"}], "start_byte": 1909, "end_byte": 1940, "start_point": [52, 22], "end_point": [52, 53], "text": "put {}: {}\\n\", std::str::from_u"}, {"type": "identifier", "children": [], "start_byte": 1942, "end_byte": 1945, "start_point": [52, 55], "end_point": [52, 58], "text": "8_u"}, {"type": "primitive_type", "children": [], "start_byte": 1947, "end_byte": 1950, "start_point": [52, 60], "end_point": [52, 63], "text": "hec"}, {"type": "identifier", "children": [], "start_byte": 1952, "end_byte": 1971, "start_point": [52, 65], "end_point": [52, 84], "text": "d(&PROG_NAME), in_n"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1971, "end_byte": 1972, "start_point": [52, 84], "end_point": [52, 85], "text": "a"}, {"type": "identifier", "children": [], "start_byte": 1973, "end_byte": 1982, "start_point": [52, 86], "end_point": [52, 95], "text": "e, io::Er"}, {"type": ")", "children": [], "start_byte": 1982, "end_byte": 1983, "start_point": [52, 95], "end_point": [52, 96], "text": "r"}], "start_byte": 1971, "end_byte": 1983, "start_point": [52, 84], "end_point": [52, 96], "text": "ame, io::Err"}, {"type": "identifier", "children": [], "start_byte": 1985, "end_byte": 1992, "start_point": [52, 98], "end_point": [52, 105], "text": "::last_"}, {"type": "identifier", "children": [], "start_byte": 1994, "end_byte": 1996, "start_point": [52, 107], "end_point": [52, 109], "text": "_e"}, {"type": "identifier", "children": [], "start_byte": 1998, "end_byte": 2003, "start_point": [52, 111], "end_point": [52, 116], "text": "or())"}, {"type": "identifier", "children": [], "start_byte": 2005, "end_byte": 2018, "start_point": [52, 118], "end_point": [52, 131], "text": "            /"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2018, "end_byte": 2019, "start_point": [52, 131], "end_point": [52, 132], "text": "/"}, {"type": ")", "children": [], "start_byte": 2019, "end_byte": 2020, "start_point": [52, 132], "end_point": [52, 133], "text": " "}], "start_byte": 2018, "end_byte": 2020, "start_point": [52, 131], "end_point": [52, 133], "text": "/ "}, {"type": ")", "children": [], "start_byte": 2020, "end_byte": 2021, "start_point": [52, 133], "end_point": [52, 134], "text": "s"}], "start_byte": 1908, "end_byte": 2021, "start_point": [52, 21], "end_point": [52, 134], "text": "nput {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // s"}], "start_byte": 1899, "end_byte": 2021, "start_point": [52, 12], "end_point": [52, 134], "text": "'t open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // s"}, {"type": ";", "children": [], "start_byte": 2021, "end_byte": 2022, "start_point": [52, 134], "end_point": [52, 135], "text": "e"}], "start_byte": 1899, "end_byte": 2022, "start_point": [52, 12], "end_point": [52, 135], "text": "'t open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // se"}, {"type": "line_comment", "children": [], "start_byte": 2035, "end_byte": 2085, "start_point": [53, 12], "end_point": [53, 62], "text": " \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        "}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 2098, "end_byte": 2104, "start_point": [54, 12], "end_point": [54, 18], "text": " SRC_M"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2105, "end_byte": 2107, "start_point": [54, 19], "end_point": [54, 21], "text": "DE"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2107, "end_byte": 2108, "start_point": [54, 21], "end_point": [54, 22], "text": " "}, {"type": "unit_expression", "children": [{"type": "(", "children": [], "start_byte": 2108, "end_byte": 2109, "start_point": [54, 22], "end_point": [54, 23], "text": "!"}, {"type": ")", "children": [], "start_byte": 2109, "end_byte": 2110, "start_point": [54, 23], "end_point": [54, 24], "text": "="}], "start_byte": 2108, "end_byte": 2110, "start_point": [54, 22], "end_point": [54, 24], "text": "!="}, {"type": ")", "children": [], "start_byte": 2110, "end_byte": 2111, "start_point": [54, 24], "end_point": [54, 25], "text": " "}], "start_byte": 2107, "end_byte": 2111, "start_point": [54, 21], "end_point": [54, 25], "text": " != "}], "start_byte": 2105, "end_byte": 2111, "start_point": [54, 19], "end_point": [54, 25], "text": "DE != "}], "start_byte": 2098, "end_byte": 2111, "start_point": [54, 12], "end_point": [54, 25], "text": " SRC_MODE != "}, {"type": ";", "children": [], "start_byte": 2111, "end_byte": 2112, "start_point": [54, 25], "end_point": [54, 26], "text": "1"}], "start_byte": 2098, "end_byte": 2112, "start_point": [54, 12], "end_point": [54, 26], "text": " SRC_MODE != 1"}, {"type": "}", "children": [], "start_byte": 2121, "end_byte": 2122, "start_point": [55, 8], "end_point": [55, 9], "text": " "}], "start_byte": 1885, "end_byte": 2122, "start_point": [51, 51], "end_point": [55, 9], "text": "ntln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n       "}], "start_byte": 1842, "end_byte": 2122, "start_point": [51, 8], "end_point": [55, 9], "text": "& !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n       "}], "start_byte": 1842, "end_byte": 2122, "start_point": [51, 8], "end_point": [55, 9], "text": "& !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n       "}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 2132, "end_byte": 2134, "start_point": [57, 8], "end_point": [57, 10], "text": "et"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2135, "end_byte": 2143, "start_point": [57, 11], "end_point": [57, 19], "text": "data = f"}, {"type": "!=", "children": [], "start_byte": 2144, "end_byte": 2146, "start_point": [57, 20], "end_point": [57, 22], "text": "::"}, {"type": "integer_literal", "children": [], "start_byte": 2147, "end_byte": 2148, "start_point": [57, 23], "end_point": [57, 24], "text": "e"}], "start_byte": 2135, "end_byte": 2148, "start_point": [57, 11], "end_point": [57, 24], "text": "data = fs::me"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 2149, "end_byte": 2150, "start_point": [57, 25], "end_point": [57, 26], "text": "a"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 2163, "end_byte": 2166, "start_point": [58, 12], "end_point": [58, 15], "text": ")?;"}, {"type": "identifier", "children": [], "start_byte": 2167, "end_byte": 2175, "start_point": [58, 16], "end_point": [58, 24], "text": "        "}, {"type": "=", "children": [], "start_byte": 2176, "end_byte": 2177, "start_point": [58, 25], "end_point": [58, 26], "text": " "}, {"type": "try_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 2178, "end_byte": 2180, "start_point": [58, 27], "end_point": [58, 29], "text": " i"}, {"type": "::", "children": [], "start_byte": 2180, "end_byte": 2182, "start_point": [58, 29], "end_point": [58, 31], "text": "f "}, {"type": "identifier", "children": [], "start_byte": 2182, "end_byte": 2190, "start_point": [58, 31], "end_point": [58, 39], "text": "(metadat"}], "start_byte": 2178, "end_byte": 2190, "start_point": [58, 27], "end_point": [58, 39], "text": " if (metadat"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2190, "end_byte": 2191, "start_point": [58, 39], "end_point": [58, 40], "text": "a"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 2191, "end_byte": 2192, "start_point": [58, 40], "end_point": [58, 41], "text": "."}, {"type": "identifier", "children": [], "start_byte": 2192, "end_byte": 2199, "start_point": [58, 41], "end_point": [58, 48], "text": "file_ty"}], "start_byte": 2191, "end_byte": 2199, "start_point": [58, 40], "end_point": [58, 48], "text": ".file_ty"}, {"type": ")", "children": [], "start_byte": 2199, "end_byte": 2200, "start_point": [58, 48], "end_point": [58, 49], "text": "p"}], "start_byte": 2190, "end_byte": 2200, "start_point": [58, 39], "end_point": [58, 49], "text": "a.file_typ"}], "start_byte": 2178, "end_byte": 2200, "start_point": [58, 27], "end_point": [58, 49], "text": " if (metadata.file_typ"}, {"type": "?", "children": [], "start_byte": 2200, "end_byte": 2201, "start_point": [58, 49], "end_point": [58, 50], "text": "e"}], "start_byte": 2178, "end_byte": 2201, "start_point": [58, 27], "end_point": [58, 50], "text": " if (metadata.file_type"}, {"type": ";", "children": [], "start_byte": 2201, "end_byte": 2202, "start_point": [58, 50], "end_point": [58, 51], "text": "("}], "start_byte": 2163, "end_byte": 2202, "start_point": [58, 12], "end_point": [58, 51], "text": ")?;\n            if (metadata.file_type("}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 2215, "end_byte": 2217, "start_point": [59, 12], "end_point": [59, 14], "text": "\n "}, {"type": "parenthesized_expression", "children": [{"type": "(", "children": [], "start_byte": 2218, "end_byte": 2219, "start_point": [59, 15], "end_point": [59, 16], "text": " "}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2219, "end_byte": 2227, "start_point": [59, 16], "end_point": [59, 24], "text": "        "}, {"type": ".", "children": [], "start_byte": 2227, "end_byte": 2228, "start_point": [59, 24], "end_point": [59, 25], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 2228, "end_byte": 2237, "start_point": [59, 25], "end_point": [59, 34], "text": "    eprin"}], "start_byte": 2219, "end_byte": 2237, "start_point": [59, 16], "end_point": [59, 34], "text": "             eprin"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2237, "end_byte": 2238, "start_point": [59, 34], "end_point": [59, 35], "text": "t"}, {"type": ")", "children": [], "start_byte": 2238, "end_byte": 2239, "start_point": [59, 35], "end_point": [59, 36], "text": "l"}], "start_byte": 2237, "end_byte": 2239, "start_point": [59, 34], "end_point": [59, 36], "text": "tl"}], "start_byte": 2219, "end_byte": 2239, "start_point": [59, 16], "end_point": [59, 36], "text": "             eprintl"}, {"type": ".", "children": [], "start_byte": 2239, "end_byte": 2240, "start_point": [59, 36], "end_point": [59, 37], "text": "n"}, {"type": "field_identifier", "children": [], "start_byte": 2240, "end_byte": 2246, "start_point": [59, 37], "end_point": [59, 43], "text": "!(\"{}:"}], "start_byte": 2219, "end_byte": 2246, "start_point": [59, 16], "end_point": [59, 43], "text": "             eprintln!(\"{}:"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2246, "end_byte": 2247, "start_point": [59, 43], "end_point": [59, 44], "text": " "}, {"type": ")", "children": [], "start_byte": 2247, "end_byte": 2248, "start_point": [59, 44], "end_point": [59, 45], "text": "I"}], "start_byte": 2246, "end_byte": 2248, "start_point": [59, 43], "end_point": [59, 45], "text": " I"}], "start_byte": 2219, "end_byte": 2248, "start_point": [59, 16], "end_point": [59, 45], "text": "             eprintln!(\"{}: I"}, {"type": ")", "children": [], "start_byte": 2248, "end_byte": 2249, "start_point": [59, 45], "end_point": [59, 46], "text": "n"}], "start_byte": 2218, "end_byte": 2249, "start_point": [59, 15], "end_point": [59, 46], "text": "              eprintln!(\"{}: In"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 2250, "end_byte": 2251, "start_point": [59, 47], "end_point": [59, 48], "text": "u"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 2268, "end_byte": 2276, "start_point": [60, 16], "end_point": [60, 24], "text": "rectory."}, {"type": "!", "children": [], "start_byte": 2276, "end_byte": 2277, "start_point": [60, 24], "end_point": [60, 25], "text": "\\"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2277, "end_byte": 2278, "start_point": [60, 25], "end_point": [60, 26], "text": "n"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 2278, "end_byte": 2279, "start_point": [60, 26], "end_point": [60, 27], "text": "\""}, {"type": "escape_sequence", "children": [], "start_byte": 2312, "end_byte": 2314, "start_point": [60, 60], "end_point": [60, 62], "text": "PR"}, {"type": "\"", "children": [], "start_byte": 2314, "end_byte": 2315, "start_point": [60, 62], "end_point": [60, 63], "text": "O"}], "start_byte": 2278, "end_byte": 2315, "start_point": [60, 26], "end_point": [60, 63], "text": "\", std::str::from_utf8_unchecked(&PRO"}, {"type": "identifier", "children": [], "start_byte": 2317, "end_byte": 2320, "start_point": [60, 65], "end_point": [60, 68], "text": "NAM"}, {"type": "primitive_type", "children": [], "start_byte": 2322, "end_byte": 2325, "start_point": [60, 70], "end_point": [60, 73], "text": ", i"}, {"type": "identifier", "children": [], "start_byte": 2327, "end_byte": 2346, "start_point": [60, 75], "end_point": [60, 94], "text": "name);\n            "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2346, "end_byte": 2347, "start_point": [60, 94], "end_point": [60, 95], "text": " "}, {"type": "identifier", "children": [], "start_byte": 2348, "end_byte": 2357, "start_point": [60, 96], "end_point": [60, 105], "text": "  // set_"}, {"type": ")", "children": [], "start_byte": 2357, "end_byte": 2358, "start_point": [60, 105], "end_point": [60, 106], "text": "e"}], "start_byte": 2346, "end_byte": 2358, "start_point": [60, 94], "end_point": [60, 106], "text": "    // set_e"}, {"type": "identifier", "children": [], "start_byte": 2360, "end_byte": 2367, "start_point": [60, 108], "end_point": [60, 115], "text": "t(1); /"}, {"type": ")", "children": [], "start_byte": 2367, "end_byte": 2368, "start_point": [60, 115], "end_point": [60, 116], "text": "/"}], "start_byte": 2277, "end_byte": 2368, "start_point": [60, 25], "end_point": [60, 116], "text": "n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); //"}], "start_byte": 2268, "end_byte": 2368, "start_point": [60, 16], "end_point": [60, 116], "text": "rectory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); //"}, {"type": ";", "children": [], "start_byte": 2368, "end_byte": 2369, "start_point": [60, 116], "end_point": [60, 117], "text": " "}], "start_byte": 2268, "end_byte": 2369, "start_point": [60, 16], "end_point": [60, 117], "text": "rectory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // "}, {"type": "line_comment", "children": [], "start_byte": 2386, "end_byte": 2436, "start_point": [61, 16], "end_point": [61, 66], "text": "             return Ok(());\n            }\n        "}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 2453, "end_byte": 2459, "start_point": [62, 16], "end_point": [62, 22], "text": " in_st"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2460, "end_byte": 2462, "start_point": [62, 23], "end_point": [62, 25], "text": "ea"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2462, "end_byte": 2463, "start_point": [62, 25], "end_point": [62, 26], "text": "m"}, {"type": "unit_expression", "children": [{"type": "(", "children": [], "start_byte": 2463, "end_byte": 2464, "start_point": [62, 26], "end_point": [62, 27], "text": " "}, {"type": ")", "children": [], "start_byte": 2464, "end_byte": 2465, "start_point": [62, 27], "end_point": [62, 28], "text": "="}], "start_byte": 2463, "end_byte": 2465, "start_point": [62, 26], "end_point": [62, 28], "text": " ="}, {"type": ")", "children": [], "start_byte": 2465, "end_byte": 2466, "start_point": [62, 28], "end_point": [62, 29], "text": " "}], "start_byte": 2462, "end_byte": 2466, "start_point": [62, 25], "end_point": [62, 29], "text": "m = "}], "start_byte": 2460, "end_byte": 2466, "start_point": [62, 23], "end_point": [62, 29], "text": "eam = "}], "start_byte": 2453, "end_byte": 2466, "start_point": [62, 16], "end_point": [62, 29], "text": " in_stream = "}, {"type": ";", "children": [], "start_byte": 2466, "end_byte": 2467, "start_point": [62, 29], "end_point": [62, 30], "text": "m"}], "start_byte": 2453, "end_byte": 2467, "start_point": [62, 16], "end_point": [62, 30], "text": " in_stream = m"}, {"type": "}", "children": [], "start_byte": 2480, "end_byte": 2481, "start_point": [63, 12], "end_point": [63, 13], "text": " "}], "start_byte": 2250, "end_byte": 2481, "start_point": [59, 47], "end_point": [63, 13], "text": "ut file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE "}], "start_byte": 2215, "end_byte": 2481, "start_point": [59, 12], "end_point": [63, 13], "text": "\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE "}], "start_byte": 2215, "end_byte": 2481, "start_point": [59, 12], "end_point": [63, 13], "text": "\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE "}, {"type": "}", "children": [], "start_byte": 2490, "end_byte": 2491, "start_point": [64, 8], "end_point": [64, 9], "text": " "}], "start_byte": 2149, "end_byte": 2491, "start_point": [57, 25], "end_point": [64, 9], "text": "adata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        "}], "start_byte": 2132, "end_byte": 2491, "start_point": [57, 8], "end_point": [64, 9], "text": "etadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        "}], "start_byte": 2132, "end_byte": 2491, "start_point": [57, 8], "end_point": [64, 9], "text": "etadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        "}, {"type": "line_comment", "children": [], "start_byte": 2501, "end_byte": 2536, "start_point": [66, 8], "end_point": [66, 43], "text": "> {\n        //         if unsafe { "}, {"type": "line_comment", "children": [], "start_byte": 2545, "end_byte": 2558, "start_point": [67, 8], "end_point": [67, 21], "text": "::stdin().as_"}, {"type": "line_comment", "children": [], "start_byte": 2567, "end_byte": 2630, "start_point": [68, 8], "end_point": [68, 71], "text": " } != 0 {\n        //             eprintln!(\"{}: I won't read co"}, {"type": "line_comment", "children": [], "start_byte": 2639, "end_byte": 2762, "start_point": [69, 8], "end_point": [69, 131], "text": "data from a terminal.\\n\", std::str::from_utf8_unchecked(&PROG_NAME));\n        //             eprintln!(\"{}: For help, type:"}, {"type": "line_comment", "children": [], "start_byte": 2771, "end_byte": 2920, "start_point": [70, 8], "end_point": [70, 157], "text": "lp'.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), std::str::from_utf8_unchecked(&PROG_NAME));\n        //             // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust"}, {"type": "line_comment", "children": [], "start_byte": 2929, "end_byte": 2994, "start_point": [71, 8], "end_point": [71, 73], "text": "  //             return Ok(());\n        //         }\n        //  "}, {"type": "line_comment", "children": [], "start_byte": 3003, "end_byte": 3032, "start_point": [72, 8], "end_point": [72, 37], "text": "fReader::new(io::stdin())\n   "}, {"type": "line_comment", "children": [], "start_byte": 3041, "end_byte": 3053, "start_point": [73, 8], "end_point": [73, 20], "text": "   }\n       "}, {"type": "line_comment", "children": [], "start_byte": 3062, "end_byte": 3100, "start_point": [74, 8], "end_point": [74, 46], "text": " | 3 => {\n        //         let file "}, {"type": "line_comment", "children": [], "start_byte": 3109, "end_byte": 3117, "start_point": [75, 8], "end_point": [75, 16], "text": "pen(&in_"}, {"type": "line_comment", "children": [], "start_byte": 3126, "end_byte": 3143, "start_point": [76, 8], "end_point": [76, 25], "text": "       //        "}, {"type": "line_comment", "children": [], "start_byte": 3152, "end_byte": 3196, "start_point": [77, 8], "end_point": [77, 52], "text": "r::new(file)\n        //     }\n        //    "}, {"type": "line_comment", "children": [], "start_byte": 3205, "end_byte": 3236, "start_point": [78, 8], "end_point": [78, 39], "text": "ic!(\"testf: bad srcMode\"),\n    "}, {"type": "line_comment", "children": [], "start_byte": 3245, "end_byte": 3253, "start_point": [79, 8], "end_point": [79, 16], "text": "\n\n      "}, {"type": "line_comment", "children": [], "start_byte": 3262, "end_byte": 3303, "start_point": [80, 8], "end_point": [80, 49], "text": "erbosity >= 1 ...\n        // \u6b64\u5904\u7701\u7565\u4e86\u4e00\u4e9b\u65e5\u5fd7\u548c\u9519\u8bef"}, {"type": "line_comment", "children": [], "start_byte": 3312, "end_byte": 3317, "start_point": [81, 8], "end_point": [81, 13], "text": "     "}, {"type": "line_comment", "children": [], "start_byte": 3327, "end_byte": 3351, "start_point": [83, 8], "end_point": [83, 32], "text": "t z_stream = in_stream; "}, {"type": "line_comment", "children": [], "start_byte": 3360, "end_byte": 3414, "start_point": [84, 8], "end_point": [84, 62], "text": "_stream\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n        // let all_ok = test_stream(&m"}, {"type": "line_comment", "children": [], "start_byte": 3424, "end_byte": 3501, "start_point": [86, 8], "end_point": [86, 85], "text": "m); // \u5047\u8bbetest_stream\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\n\n        // if all_ok && true /* replace with ver"}, {"type": "line_comment", "children": [], "start_byte": 3510, "end_byte": 3595, "start_point": [87, 8], "end_point": [87, 93], "text": "eck */ {\n        //     eprintln!(\"ok\\n\");\n        // }\n        // if !all_ok {\n     "}, {"type": "line_comment", "children": [], "start_byte": 3605, "end_byte": 3662, "start_point": [89, 8], "end_point": [89, 65], "text": "TEST_FAILS_EXIST = true;\n        // }\n\n        Ok(())\n   "}, {"type": "line_comment", "children": [], "start_byte": 3671, "end_byte": 3696, "start_point": [90, 8], "end_point": [90, 33], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 3705, "end_byte": 3709, "start_point": [91, 8], "end_point": [91, 12], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 3718, "end_byte": 3733, "start_point": [92, 8], "end_point": [92, 23], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 3742, "end_byte": 3773, "start_point": [93, 8], "end_point": [93, 39], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 3782, "end_byte": 3786, "start_point": [94, 8], "end_point": [94, 12], "text": ""}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3796, "end_byte": 3798, "start_point": [96, 8], "end_point": [96, 10], "text": ""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3798, "end_byte": 3799, "start_point": [96, 10], "end_point": [96, 11], "text": ""}, {"type": "unit_expression", "children": [{"type": "(", "children": [], "start_byte": 3799, "end_byte": 3800, "start_point": [96, 11], "end_point": [96, 12], "text": ""}, {"type": ")", "children": [], "start_byte": 3800, "end_byte": 3801, "start_point": [96, 12], "end_point": [96, 13], "text": ""}], "start_byte": 3799, "end_byte": 3801, "start_point": [96, 11], "end_point": [96, 13], "text": ""}, {"type": ")", "children": [], "start_byte": 3801, "end_byte": 3802, "start_point": [96, 13], "end_point": [96, 14], "text": ""}], "start_byte": 3798, "end_byte": 3802, "start_point": [96, 10], "end_point": [96, 14], "text": ""}], "start_byte": 3796, "end_byte": 3802, "start_point": [96, 8], "end_point": [96, 14], "text": ""}, {"type": "}", "children": [], "start_byte": 3807, "end_byte": 3808, "start_point": [97, 4], "end_point": [97, 5], "text": ""}], "start_byte": 1053, "end_byte": 3808, "start_point": [26, 11], "end_point": [97, 5], "text": "{\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }\n\n        let mut out_name = String::new();\n        let mut in_name = String::new();\n        copy_file_name(&mut out_name, \"(none)\");\n\n        match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }\n\n        if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 && !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n            let metadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        //     1 => {\n        //         if unsafe { isatty(io::stdin().as_raw_fd()) } != 0 {\n        //             eprintln!(\"{}: I won't read compressed data from a terminal.\\n\", std::str::from_utf8_unchecked(&PROG_NAME));\n        //             eprintln!(\"{}: For help, type: `{} --help'.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), std::str::from_utf8_unchecked(&PROG_NAME));\n        //             // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n        //             return Ok(());\n        //         }\n        //         BufReader::new(io::stdin())\n        //     }\n        //     2 | 3 => {\n        //         let file = File::open(&in_name)?;\n        //         BufReader::new(file)\n        //     }\n        //     _ => panic!(\"testf: bad srcMode\"),\n        // };\n\n        // if verbosity >= 1 ...\n        // \u6b64\u5904\u7701\u7565\u4e86\u4e00\u4e9b\u65e5\u5fd7\u548c\u9519\u8bef\u5904\u7406\u7684\u4ee3\u7801\n\n        // let mut z_stream = in_stream; // \u5047\u8bbetest_stream\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n        // let all_ok = test_stream(&mut z_stream); // \u5047\u8bbetest_stream\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\n\n        // if all_ok && true /* replace with verbosity check */ {\n        //     eprintln!(\"ok\\n\");\n        // }\n        // if !all_ok {\n        //     TEST_FAILS_EXIST = true;\n        // }\n\n        Ok(())\n    }\n}\n"}], "start_byte": 1046, "end_byte": 3808, "start_point": [26, 4], "end_point": [97, 5], "text": "unsafe {\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }\n\n        let mut out_name = String::new();\n        let mut in_name = String::new();\n        copy_file_name(&mut out_name, \"(none)\");\n\n        match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }\n\n        if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 && !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n            let metadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        //     1 => {\n        //         if unsafe { isatty(io::stdin().as_raw_fd()) } != 0 {\n        //             eprintln!(\"{}: I won't read compressed data from a terminal.\\n\", std::str::from_utf8_unchecked(&PROG_NAME));\n        //             eprintln!(\"{}: For help, type: `{} --help'.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), std::str::from_utf8_unchecked(&PROG_NAME));\n        //             // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n        //             return Ok(());\n        //         }\n        //         BufReader::new(io::stdin())\n        //     }\n        //     2 | 3 => {\n        //         let file = File::open(&in_name)?;\n        //         BufReader::new(file)\n        //     }\n        //     _ => panic!(\"testf: bad srcMode\"),\n        // };\n\n        // if verbosity >= 1 ...\n        // \u6b64\u5904\u7701\u7565\u4e86\u4e00\u4e9b\u65e5\u5fd7\u548c\u9519\u8bef\u5904\u7406\u7684\u4ee3\u7801\n\n        // let mut z_stream = in_stream; // \u5047\u8bbetest_stream\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n        // let all_ok = test_stream(&mut z_stream); // \u5047\u8bbetest_stream\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\n\n        // if all_ok && true /* replace with verbosity check */ {\n        //     eprintln!(\"ok\\n\");\n        // }\n        // if !all_ok {\n        //     TEST_FAILS_EXIST = true;\n        // }\n\n        Ok(())\n    }\n}\n"}], "start_byte": 1046, "end_byte": 3808, "start_point": [26, 4], "end_point": [97, 5], "text": "unsafe {\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }\n\n        let mut out_name = String::new();\n        let mut in_name = String::new();\n        copy_file_name(&mut out_name, \"(none)\");\n\n        match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }\n\n        if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 && !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n            let metadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        //     1 => {\n        //         if unsafe { isatty(io::stdin().as_raw_fd()) } != 0 {\n        //             eprintln!(\"{}: I won't read compressed data from a terminal.\\n\", std::str::from_utf8_unchecked(&PROG_NAME));\n        //             eprintln!(\"{}: For help, type: `{} --help'.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), std::str::from_utf8_unchecked(&PROG_NAME));\n        //             // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n        //             return Ok(());\n        //         }\n        //         BufReader::new(io::stdin())\n        //     }\n        //     2 | 3 => {\n        //         let file = File::open(&in_name)?;\n        //         BufReader::new(file)\n        //     }\n        //     _ => panic!(\"testf: bad srcMode\"),\n        // };\n\n        // if verbosity >= 1 ...\n        // \u6b64\u5904\u7701\u7565\u4e86\u4e00\u4e9b\u65e5\u5fd7\u548c\u9519\u8bef\u5904\u7406\u7684\u4ee3\u7801\n\n        // let mut z_stream = in_stream; // \u5047\u8bbetest_stream\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n        // let all_ok = test_stream(&mut z_stream); // \u5047\u8bbetest_stream\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\n\n        // if all_ok && true /* replace with verbosity check */ {\n        //     eprintln!(\"ok\\n\");\n        // }\n        // if !all_ok {\n        //     TEST_FAILS_EXIST = true;\n        // }\n\n        Ok(())\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 3809, "end_byte": 3810, "start_point": [98, 0], "end_point": [98, 1], "text": ""}], "start_byte": 1040, "end_byte": 3810, "start_point": [25, 58], "end_point": [98, 1], "text": "{\n    unsafe {\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }\n\n        let mut out_name = String::new();\n        let mut in_name = String::new();\n        copy_file_name(&mut out_name, \"(none)\");\n\n        match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }\n\n        if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 && !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n            let metadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        //     1 => {\n        //         if unsafe { isatty(io::stdin().as_raw_fd()) } != 0 {\n        //             eprintln!(\"{}: I won't read compressed data from a terminal.\\n\", std::str::from_utf8_unchecked(&PROG_NAME));\n        //             eprintln!(\"{}: For help, type: `{} --help'.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), std::str::from_utf8_unchecked(&PROG_NAME));\n        //             // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n        //             return Ok(());\n        //         }\n        //         BufReader::new(io::stdin())\n        //     }\n        //     2 | 3 => {\n        //         let file = File::open(&in_name)?;\n        //         BufReader::new(file)\n        //     }\n        //     _ => panic!(\"testf: bad srcMode\"),\n        // };\n\n        // if verbosity >= 1 ...\n        // \u6b64\u5904\u7701\u7565\u4e86\u4e00\u4e9b\u65e5\u5fd7\u548c\u9519\u8bef\u5904\u7406\u7684\u4ee3\u7801\n\n        // let mut z_stream = in_stream; // \u5047\u8bbetest_stream\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n        // let all_ok = test_stream(&mut z_stream); // \u5047\u8bbetest_stream\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\n\n        // if all_ok && true /* replace with verbosity check */ {\n        //     eprintln!(\"ok\\n\");\n        // }\n        // if !all_ok {\n        //     TEST_FAILS_EXIST = true;\n        // }\n\n        Ok(())\n    }\n}\n"}], "start_byte": 982, "end_byte": 3810, "start_point": [25, 0], "end_point": [98, 1], "text": "pub fn testf(name: Option<&str>) -> Result<(), io::Error> {\n    unsafe {\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }\n\n        let mut out_name = String::new();\n        let mut in_name = String::new();\n        copy_file_name(&mut out_name, \"(none)\");\n\n        match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }\n\n        if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 && !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n            let metadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        //     1 => {\n        //         if unsafe { isatty(io::stdin().as_raw_fd()) } != 0 {\n        //             eprintln!(\"{}: I won't read compressed data from a terminal.\\n\", std::str::from_utf8_unchecked(&PROG_NAME));\n        //             eprintln!(\"{}: For help, type: `{} --help'.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), std::str::from_utf8_unchecked(&PROG_NAME));\n        //             // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n        //             return Ok(());\n        //         }\n        //         BufReader::new(io::stdin())\n        //     }\n        //     2 | 3 => {\n        //         let file = File::open(&in_name)?;\n        //         BufReader::new(file)\n        //     }\n        //     _ => panic!(\"testf: bad srcMode\"),\n        // };\n\n        // if verbosity >= 1 ...\n        // \u6b64\u5904\u7701\u7565\u4e86\u4e00\u4e9b\u65e5\u5fd7\u548c\u9519\u8bef\u5904\u7406\u7684\u4ee3\u7801\n\n        // let mut z_stream = in_stream; // \u5047\u8bbetest_stream\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n        // let all_ok = test_stream(&mut z_stream); // \u5047\u8bbetest_stream\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\n\n        // if all_ok && true /* replace with verbosity check */ {\n        //     eprintln!(\"ok\\n\");\n        // }\n        // if !all_ok {\n        //     TEST_FAILS_EXIST = true;\n        // }\n\n        Ok(())\n    }\n}\n"}], "start_byte": 0, "end_byte": 3811, "start_point": [0, 0], "end_point": [99, 0], "text": "// use crate::bzip2::scc_111_testf::*;\n// use crate::bzlib::scc_61_root_42_BZ2_bzlibVersion::*;\n// use crate::bzip2recover::scc_88_root_50_strcpy::*;\n// use crate::bzip2::scc_56_fopen_output_safely::*;\n// use crate::bzip2::scc_106_mySIGSEGVorSIGBUScatcher::*;\n// use crate::bzip2::scc_87_fileExists::*;\n// use crate::bzip2::scc_99_outOfMemory::*;\n// use crate::bzip2::scc_91_cleanUpAndFail::*;\n// use crate::global_vars::bzip2_c5::{deleteOutputOnInterrupt, inName, noisy, outName, outputHandleJustInCase, srcMode, testFailsExist, stat};a\nuse crate::global_vars::bzip2_c5::*;\nuse crate::global_vars::bzip2_c2::*;\nuse crate::global_vars::bzip2_c1::*;\nuse crate::bzip2::scc_60_root_41_containsDubiousChars::*;\nuse crate::bzip2::scc_105_copyFileName::*;\nuse crate::bzip2::scc_87_fileExists::*;\nuse crate::bzip2::scc_108_testStream::*;\n\nuse std::fs::{self, File};\nuse std::io::{self, BufReader};\nuse std::os::unix::io::AsRawFd;\nuse std::path::Path;\nuse libc::{isatty, stat, S_IFDIR};\n\n\n\npub fn testf(name: Option<&str>) -> Result<(), io::Error> {\n    unsafe {\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"testf: bad modes\\n\");\n        }\n\n        let mut out_name = String::new();\n        let mut in_name = String::new();\n        copy_file_name(&mut out_name, \"(none)\");\n\n        match SRC_MODE {\n            1 => copy_file_name(&mut in_name, \"(stdin)\"),\n            2 | 3 => copy_file_name(&mut in_name, name.unwrap()),\n            _ => {}\n        }\n\n        if SRC_MODE != 1 && contains_dubious_chars(&in_name) {\n            if NOISY {\n                eprintln!(\"{}: There are no files matching `{}`.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n            }\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 && !file_exists(&in_name) {\n            eprintln!(\"{}: Can't open input {}: {}\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name, io::Error::last_os_error());\n            // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n            return Ok(());\n        }\n\n        if SRC_MODE != 1 {\n            let metadata = fs::metadata(&in_name)?;\n            if (metadata.file_type().is_dir()) {\n                eprintln!(\"{}: Input file {} is a directory.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), in_name);\n                // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n                return Ok(());\n            }\n        }\n\n        // let in_stream = match SRC_MODE {\n        //     1 => {\n        //         if unsafe { isatty(io::stdin().as_raw_fd()) } != 0 {\n        //             eprintln!(\"{}: I won't read compressed data from a terminal.\\n\", std::str::from_utf8_unchecked(&PROG_NAME));\n        //             eprintln!(\"{}: For help, type: `{} --help'.\\n\", std::str::from_utf8_unchecked(&PROG_NAME), std::str::from_utf8_unchecked(&PROG_NAME));\n        //             // set_exit(1); // \u9700\u8981\u4e00\u4e2a\u76f8\u5e94\u7684Rust\u5b9e\u73b0\n        //             return Ok(());\n        //         }\n        //         BufReader::new(io::stdin())\n        //     }\n        //     2 | 3 => {\n        //         let file = File::open(&in_name)?;\n        //         BufReader::new(file)\n        //     }\n        //     _ => panic!(\"testf: bad srcMode\"),\n        // };\n\n        // if verbosity >= 1 ...\n        // \u6b64\u5904\u7701\u7565\u4e86\u4e00\u4e9b\u65e5\u5fd7\u548c\u9519\u8bef\u5904\u7406\u7684\u4ee3\u7801\n\n        // let mut z_stream = in_stream; // \u5047\u8bbetest_stream\u9700\u8981\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n        // let all_ok = test_stream(&mut z_stream); // \u5047\u8bbetest_stream\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\n\n        // if all_ok && true /* replace with verbosity check */ {\n        //     eprintln!(\"ok\\n\");\n        // }\n        // if !all_ok {\n        //     TEST_FAILS_EXIST = true;\n        // }\n\n        Ok(())\n    }\n}\n"}