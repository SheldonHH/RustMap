        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:4
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2: 
        -:    3:/* C's % operator actually calculates the remainder of a / b so we need a
        -:    4: * small adjustment so it works as expected for negative values */
        -:    5:#define mod(n,m) ((((n) % (m)) + (m)) % (m))
        -:    6: 
     3972:    7:int is_prime(unsigned int n)
        -:    8:{
     3972:    9:    if (n <= 3) {
        8:   10:        return n > 1;
        -:   11:    }
     3964:   12:    else if (!(n % 2) || !(n % 3)) {
     1000:   13:        return 0;
        -:   14:    }
        -:   15:    else {
        -:   16:        unsigned int i;
     9136:   17:        for (i = 5; i*i <= n; i += 6)
     7444:   18:            if (!(n % i) || !(n % (i + 2)))
     1272:   19:                return 0;
     1692:   20:        return 1;
        -:   21:    }
     3972:   22:}
        -:   23: 
      240:   24:void carmichael3(int p1)
        -:   25:{
      240:   26:    if (!is_prime(p1)) return;
        -:   27: 
        -:   28:    int h3, d, p2, p3;
     2004:   29:    for (h3 = 1; h3 < p1; ++h3) {
   119856:   30:        for (d = 1; d < h3 + p1; ++d) {
   117924:   31:            if ((h3 + p1)*(p1 - 1) % d == 0 && mod(-p1 * p1, h3) == d % h3) {
     2548:   32:                p2 = 1 + ((p1 - 1) * (h3 + p1)/d);
     2548:   33:                if (!is_prime(p2)) continue;
     1184:   34:                p3 = 1 + (p1 * p2 / h3);
     1184:   35:                if (!is_prime(p3) || (p2 * p3) % (p1 - 1) != 1) continue;
      276:   36:                printf("%d %d %d\n", p1, p2, p3);
      276:   37:            }
   115652:   38:        }
     1932:   39:    }
      240:   40:}
        -:   41: 
        4:   42:int main(void)
        -:   43:{
        -:   44:    int p1;
      244:   45:    for (p1 = 2; p1 < 62; ++p1)
      240:   46:        carmichael3(p1);
        4:   47:    return 0;
        -:   48:}
