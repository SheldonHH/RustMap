        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3: 
        -:    4:struct replace_info {
        -:    5:    int n;
        -:    6:    char *text;
        -:    7:};
        -:    8: 
        9:    9:int compare(const void *a, const void *b)
        -:   10:{
        9:   11:    struct replace_info *x = (struct replace_info *) a;
        9:   12:    struct replace_info *y = (struct replace_info *) b;
        9:   13:    return x->n - y->n;
        -:   14:}
        -:   15: 
        3:   16:void generic_fizz_buzz(int max, struct replace_info *info, int info_length)
        -:   17:{
        -:   18:    int i, it;
        -:   19:    int found_word;
        -:   20: 
       60:   21:    for (i = 1; i < max; ++i) {
       57:   22:        found_word = 0;
        -:   23: 
        -:   24:        /* Assume sorted order of values in the info array */
      228:   25:        for (it = 0; it < info_length; ++it) {
      171:   26:            if (0 == i % info[it].n) {
       33:   27:                printf("%s", info[it].text);
       33:   28:                found_word = 1;
       33:   29:            }
      171:   30:        }
        -:   31: 
       57:   32:        if (0 == found_word)
       27:   33:            printf("%d", i);
        -:   34: 
       57:   35:        printf("\n");
       57:   36:    }
        3:   37:}
        -:   38: 
        3:   39:int main(void)
        -:   40:{
        3:   41:    struct replace_info info[3] = {
        -:   42:        {5, "Buzz"},
        -:   43:        {7, "Baxx"},
        -:   44:        {3, "Fizz"}
        -:   45:    };
        -:   46: 
        -:   47:    /* Sort information array */
        3:   48:    qsort(info, 3, sizeof(struct replace_info), compare);
        -:   49: 
        -:   50:    /* Print output for generic FizzBuzz */
        3:   51:    generic_fizz_buzz(20, info, 3);
        3:   52:    return 0;
        -:   53:}
