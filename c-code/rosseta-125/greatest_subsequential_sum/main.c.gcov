        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include "stdio.h"
        -:    2: 
        -:    3:typedef struct Range {
        -:    4:    int start, end, sum;
        -:    5:} Range;
        -:    6: 
        3:    7:Range maxSubseq(const int sequence[], const int len) {
        3:    8:    int maxSum = 0, thisSum = 0, i = 0;
        3:    9:    int start = 0, end = -1, j;
        -:   10: 
       36:   11:    for (j = 0; j < len; j++) {
       33:   12:        thisSum += sequence[j];
       33:   13:        if (thisSum < 0) {
        6:   14:            i = j + 1;
        6:   15:            thisSum = 0;
       33:   16:        } else if (thisSum > maxSum) {
       12:   17:            maxSum = thisSum;
       12:   18:            start = i;
       12:   19:            end   = j;
       12:   20:        }
       33:   21:    }
        -:   22: 
        -:   23:    Range r;
        3:   24:    if (start <= end && start >= 0 && end >= 0) {
        3:   25:        r.start = start;
        3:   26:        r.end = end + 1;
        3:   27:        r.sum = maxSum;
        3:   28:    } else {
    #####:   29:        r.start = 0;
    #####:   30:        r.end = 0;
    #####:   31:        r.sum = 0;
        -:   32:    }
        3:   33:    return r;
        -:   34:}
        -:   35: 
        3:   36:int main(int argc, char **argv) {
        3:   37:    int a[] = {-1 , -2 , 3 , 5 , 6 , -2 , -1 , 4 , -4 , 2 , -1};
        3:   38:    int alength = sizeof(a)/sizeof(a[0]);
        -:   39: 
        3:   40:    Range r = maxSubseq(a, alength);
        3:   41:    printf("Max sum = %d\n", r.sum);
        -:   42:    int i;
       21:   43:    for (i = r.start; i < r.end; i++)
       18:   44:        printf("%d ", a[i]);
        3:   45:    printf("\n");
        -:   46: 
        3:   47:    return 0;
        -:   48:}
