        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3: 
        -:    4: 
        -:    5: 
    #####:    6:int number_of_digits(int x){
        -:    7:    int NumberOfDigits;
    #####:    8:    for(NumberOfDigits=0;x!=0;NumberOfDigits++){
    #####:    9:        x=x/10;
    #####:   10:    }
    #####:   11:    return NumberOfDigits;
        -:   12:}
        -:   13: 
        3:   14:int* convert_array(char array[], int NumberOfElements)  //converts integer arguments from char to int
        -:   15:{
        3:   16:    int *convertedArray=malloc(NumberOfElements*sizeof(int));
        -:   17:    int originalElement, convertedElement;
        -:   18: 
        3:   19:    for(convertedElement=0, originalElement=0; convertedElement<NumberOfElements; convertedElement++)
        -:   20:    {
    #####:   21:       convertedArray[convertedElement]=atoi(&array[originalElement]);
    #####:   22:       originalElement+=number_of_digits(convertedArray[convertedElement])+1; //computes where is the beginning of the next element
        -:   23: 
    #####:   24:    }
        3:   25:    return convertedArray;
        -:   26:}
        -:   27: 
        -:   28: 
        -:   29: 
        3:   30:int isSorted(int array[], int numberOfElements){
        3:   31:    int sorted=1;
        3:   32:    for(int counter=0;counter<numberOfElements;counter++){
    #####:   33:        if(counter!=0 && array[counter-1]>array[counter]) sorted--;
        -:   34: 
    #####:   35:    }
        3:   36:    return sorted;
        -:   37:}
        3:   38:int main(int argc, char* argv[])
        -:   39:{
        -:   40:    int* convertedArray;
        -:   41: 
        -:   42: 
        3:   43:    convertedArray=convert_array(*(argv+1), argc-1);
        -:   44: 
        -:   45: 
        -:   46: 
        3:   47:    if(isSorted(convertedArray, argc-1)==1) printf("Did you forgot to turn on your brain?! This array is already sorted!\n");
    #####:   48:    else if(argc-1<=10) printf("Am I really supposed to sort this? Sort it by yourself!\n");
    #####:   49:    else printf("Am I really supposed to sort this? Bhahahaha!\n");
        3:   50:    free(convertedArray);
        3:   51:    return 0;
        -:   52: 
        -:   53: 
        -:   54: 
        -:   55:}
