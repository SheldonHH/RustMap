Running main.c in 100_doors/
door #1 is open.
door #2 is closed.
door #3 is closed.
door #4 is open.
door #5 is closed.
door #6 is closed.
door #7 is closed.
door #8 is closed.
door #9 is open.
door #10 is closed.
door #11 is closed.
door #12 is closed.
door #13 is closed.
door #14 is closed.
door #15 is closed.
door #16 is open.
door #17 is closed.
door #18 is closed.
door #19 is closed.
door #20 is closed.
door #21 is closed.
door #22 is closed.
door #23 is closed.
door #24 is closed.
door #25 is open.
door #26 is closed.
door #27 is closed.
door #28 is closed.
door #29 is closed.
door #30 is closed.
door #31 is closed.
door #32 is closed.
door #33 is closed.
door #34 is closed.
door #35 is closed.
door #36 is open.
door #37 is closed.
door #38 is closed.
door #39 is closed.
door #40 is closed.
door #41 is closed.
door #42 is closed.
door #43 is closed.
door #44 is closed.
door #45 is closed.
door #46 is closed.
door #47 is closed.
door #48 is closed.
door #49 is open.
door #50 is closed.
door #51 is closed.
door #52 is closed.
door #53 is closed.
door #54 is closed.
door #55 is closed.
door #56 is closed.
door #57 is closed.
door #58 is closed.
door #59 is closed.
door #60 is closed.
door #61 is closed.
door #62 is closed.
door #63 is closed.
door #64 is open.
door #65 is closed.
door #66 is closed.
door #67 is closed.
door #68 is closed.
door #69 is closed.
door #70 is closed.
door #71 is closed.
door #72 is closed.
door #73 is closed.
door #74 is closed.
door #75 is closed.
door #76 is closed.
door #77 is closed.
door #78 is closed.
door #79 is closed.
door #80 is closed.
door #81 is open.
door #82 is closed.
door #83 is closed.
door #84 is closed.
door #85 is closed.
door #86 is closed.
door #87 is closed.
door #88 is closed.
door #89 is closed.
door #90 is closed.
door #91 is closed.
door #92 is closed.
door #93 is closed.
door #94 is closed.
door #95 is closed.
door #96 is closed.
door #97 is closed.
door #98 is closed.
door #99 is closed.
door #100 is open.
Running main.c in 4_rings_puzzle/

4 7 1 3 2 6 5
6 4 1 5 2 3 7
3 7 2 1 5 4 6
5 6 2 3 1 7 4
7 3 2 5 1 4 6
4 5 3 1 6 2 7
6 4 5 1 2 7 3
7 2 6 1 3 5 4

8 unique solutions in 1 to 7

7 8 3 4 5 6 9
8 7 3 5 4 6 9
9 6 4 5 3 7 8
9 6 5 4 3 8 7

4 unique solutions in 3 to 9


2860 non-unique solutions in 0 to 9
Running main.c in 99_bottles_of_beer/
99 bottles of beer on the wall, 99 bottles of beer.
Take one down and pass it around, 98 bottles of beer on the wall.

98 bottles of beer on the wall, 98 bottles of beer.
Take one down and pass it around, 97 bottles of beer on the wall.

97 bottles of beer on the wall, 97 bottles of beer.
Take one down and pass it around, 96 bottles of beer on the wall.

96 bottles of beer on the wall, 96 bottles of beer.
Take one down and pass it around, 95 bottles of beer on the wall.

95 bottles of beer on the wall, 95 bottles of beer.
Take one down and pass it around, 94 bottles of beer on the wall.

94 bottles of beer on the wall, 94 bottles of beer.
Take one down and pass it around, 93 bottles of beer on the wall.

93 bottles of beer on the wall, 93 bottles of beer.
Take one down and pass it around, 92 bottles of beer on the wall.

92 bottles of beer on the wall, 92 bottles of beer.
Take one down and pass it around, 91 bottles of beer on the wall.

91 bottles of beer on the wall, 91 bottles of beer.
Take one down and pass it around, 90 bottles of beer on the wall.

90 bottles of beer on the wall, 90 bottles of beer.
Take one down and pass it around, 89 bottles of beer on the wall.

89 bottles of beer on the wall, 89 bottles of beer.
Take one down and pass it around, 88 bottles of beer on the wall.

88 bottles of beer on the wall, 88 bottles of beer.
Take one down and pass it around, 87 bottles of beer on the wall.

87 bottles of beer on the wall, 87 bottles of beer.
Take one down and pass it around, 86 bottles of beer on the wall.

86 bottles of beer on the wall, 86 bottles of beer.
Take one down and pass it around, 85 bottles of beer on the wall.

85 bottles of beer on the wall, 85 bottles of beer.
Take one down and pass it around, 84 bottles of beer on the wall.

84 bottles of beer on the wall, 84 bottles of beer.
Take one down and pass it around, 83 bottles of beer on the wall.

83 bottles of beer on the wall, 83 bottles of beer.
Take one down and pass it around, 82 bottles of beer on the wall.

82 bottles of beer on the wall, 82 bottles of beer.
Take one down and pass it around, 81 bottles of beer on the wall.

81 bottles of beer on the wall, 81 bottles of beer.
Take one down and pass it around, 80 bottles of beer on the wall.

80 bottles of beer on the wall, 80 bottles of beer.
Take one down and pass it around, 79 bottles of beer on the wall.

79 bottles of beer on the wall, 79 bottles of beer.
Take one down and pass it around, 78 bottles of beer on the wall.

78 bottles of beer on the wall, 78 bottles of beer.
Take one down and pass it around, 77 bottles of beer on the wall.

77 bottles of beer on the wall, 77 bottles of beer.
Take one down and pass it around, 76 bottles of beer on the wall.

76 bottles of beer on the wall, 76 bottles of beer.
Take one down and pass it around, 75 bottles of beer on the wall.

75 bottles of beer on the wall, 75 bottles of beer.
Take one down and pass it around, 74 bottles of beer on the wall.

74 bottles of beer on the wall, 74 bottles of beer.
Take one down and pass it around, 73 bottles of beer on the wall.

73 bottles of beer on the wall, 73 bottles of beer.
Take one down and pass it around, 72 bottles of beer on the wall.

72 bottles of beer on the wall, 72 bottles of beer.
Take one down and pass it around, 71 bottles of beer on the wall.

71 bottles of beer on the wall, 71 bottles of beer.
Take one down and pass it around, 70 bottles of beer on the wall.

70 bottles of beer on the wall, 70 bottles of beer.
Take one down and pass it around, 69 bottles of beer on the wall.

69 bottles of beer on the wall, 69 bottles of beer.
Take one down and pass it around, 68 bottles of beer on the wall.

68 bottles of beer on the wall, 68 bottles of beer.
Take one down and pass it around, 67 bottles of beer on the wall.

67 bottles of beer on the wall, 67 bottles of beer.
Take one down and pass it around, 66 bottles of beer on the wall.

66 bottles of beer on the wall, 66 bottles of beer.
Take one down and pass it around, 65 bottles of beer on the wall.

65 bottles of beer on the wall, 65 bottles of beer.
Take one down and pass it around, 64 bottles of beer on the wall.

64 bottles of beer on the wall, 64 bottles of beer.
Take one down and pass it around, 63 bottles of beer on the wall.

63 bottles of beer on the wall, 63 bottles of beer.
Take one down and pass it around, 62 bottles of beer on the wall.

62 bottles of beer on the wall, 62 bottles of beer.
Take one down and pass it around, 61 bottles of beer on the wall.

61 bottles of beer on the wall, 61 bottles of beer.
Take one down and pass it around, 60 bottles of beer on the wall.

60 bottles of beer on the wall, 60 bottles of beer.
Take one down and pass it around, 59 bottles of beer on the wall.

59 bottles of beer on the wall, 59 bottles of beer.
Take one down and pass it around, 58 bottles of beer on the wall.

58 bottles of beer on the wall, 58 bottles of beer.
Take one down and pass it around, 57 bottles of beer on the wall.

57 bottles of beer on the wall, 57 bottles of beer.
Take one down and pass it around, 56 bottles of beer on the wall.

56 bottles of beer on the wall, 56 bottles of beer.
Take one down and pass it around, 55 bottles of beer on the wall.

55 bottles of beer on the wall, 55 bottles of beer.
Take one down and pass it around, 54 bottles of beer on the wall.

54 bottles of beer on the wall, 54 bottles of beer.
Take one down and pass it around, 53 bottles of beer on the wall.

53 bottles of beer on the wall, 53 bottles of beer.
Take one down and pass it around, 52 bottles of beer on the wall.

52 bottles of beer on the wall, 52 bottles of beer.
Take one down and pass it around, 51 bottles of beer on the wall.

51 bottles of beer on the wall, 51 bottles of beer.
Take one down and pass it around, 50 bottles of beer on the wall.

50 bottles of beer on the wall, 50 bottles of beer.
Take one down and pass it around, 49 bottles of beer on the wall.

49 bottles of beer on the wall, 49 bottles of beer.
Take one down and pass it around, 48 bottles of beer on the wall.

48 bottles of beer on the wall, 48 bottles of beer.
Take one down and pass it around, 47 bottles of beer on the wall.

47 bottles of beer on the wall, 47 bottles of beer.
Take one down and pass it around, 46 bottles of beer on the wall.

46 bottles of beer on the wall, 46 bottles of beer.
Take one down and pass it around, 45 bottles of beer on the wall.

45 bottles of beer on the wall, 45 bottles of beer.
Take one down and pass it around, 44 bottles of beer on the wall.

44 bottles of beer on the wall, 44 bottles of beer.
Take one down and pass it around, 43 bottles of beer on the wall.

43 bottles of beer on the wall, 43 bottles of beer.
Take one down and pass it around, 42 bottles of beer on the wall.

42 bottles of beer on the wall, 42 bottles of beer.
Take one down and pass it around, 41 bottles of beer on the wall.

41 bottles of beer on the wall, 41 bottles of beer.
Take one down and pass it around, 40 bottles of beer on the wall.

40 bottles of beer on the wall, 40 bottles of beer.
Take one down and pass it around, 39 bottles of beer on the wall.

39 bottles of beer on the wall, 39 bottles of beer.
Take one down and pass it around, 38 bottles of beer on the wall.

38 bottles of beer on the wall, 38 bottles of beer.
Take one down and pass it around, 37 bottles of beer on the wall.

37 bottles of beer on the wall, 37 bottles of beer.
Take one down and pass it around, 36 bottles of beer on the wall.

36 bottles of beer on the wall, 36 bottles of beer.
Take one down and pass it around, 35 bottles of beer on the wall.

35 bottles of beer on the wall, 35 bottles of beer.
Take one down and pass it around, 34 bottles of beer on the wall.

34 bottles of beer on the wall, 34 bottles of beer.
Take one down and pass it around, 33 bottles of beer on the wall.

33 bottles of beer on the wall, 33 bottles of beer.
Take one down and pass it around, 32 bottles of beer on the wall.

32 bottles of beer on the wall, 32 bottles of beer.
Take one down and pass it around, 31 bottles of beer on the wall.

31 bottles of beer on the wall, 31 bottles of beer.
Take one down and pass it around, 30 bottles of beer on the wall.

30 bottles of beer on the wall, 30 bottles of beer.
Take one down and pass it around, 29 bottles of beer on the wall.

29 bottles of beer on the wall, 29 bottles of beer.
Take one down and pass it around, 28 bottles of beer on the wall.

28 bottles of beer on the wall, 28 bottles of beer.
Take one down and pass it around, 27 bottles of beer on the wall.

27 bottles of beer on the wall, 27 bottles of beer.
Take one down and pass it around, 26 bottles of beer on the wall.

26 bottles of beer on the wall, 26 bottles of beer.
Take one down and pass it around, 25 bottles of beer on the wall.

25 bottles of beer on the wall, 25 bottles of beer.
Take one down and pass it around, 24 bottles of beer on the wall.

24 bottles of beer on the wall, 24 bottles of beer.
Take one down and pass it around, 23 bottles of beer on the wall.

23 bottles of beer on the wall, 23 bottles of beer.
Take one down and pass it around, 22 bottles of beer on the wall.

22 bottles of beer on the wall, 22 bottles of beer.
Take one down and pass it around, 21 bottles of beer on the wall.

21 bottles of beer on the wall, 21 bottles of beer.
Take one down and pass it around, 20 bottles of beer on the wall.

20 bottles of beer on the wall, 20 bottles of beer.
Take one down and pass it around, 19 bottles of beer on the wall.

19 bottles of beer on the wall, 19 bottles of beer.
Take one down and pass it around, 18 bottles of beer on the wall.

18 bottles of beer on the wall, 18 bottles of beer.
Take one down and pass it around, 17 bottles of beer on the wall.

17 bottles of beer on the wall, 17 bottles of beer.
Take one down and pass it around, 16 bottles of beer on the wall.

16 bottles of beer on the wall, 16 bottles of beer.
Take one down and pass it around, 15 bottles of beer on the wall.

15 bottles of beer on the wall, 15 bottles of beer.
Take one down and pass it around, 14 bottles of beer on the wall.

14 bottles of beer on the wall, 14 bottles of beer.
Take one down and pass it around, 13 bottles of beer on the wall.

13 bottles of beer on the wall, 13 bottles of beer.
Take one down and pass it around, 12 bottles of beer on the wall.

12 bottles of beer on the wall, 12 bottles of beer.
Take one down and pass it around, 11 bottles of beer on the wall.

11 bottles of beer on the wall, 11 bottles of beer.
Take one down and pass it around, 10 bottles of beer on the wall.

10 bottles of beer on the wall, 10 bottles of beer.
Take one down and pass it around, 9 bottles of beer on the wall.

9 bottles of beer on the wall, 9 bottles of beer.
Take one down and pass it around, 8 bottles of beer on the wall.

8 bottles of beer on the wall, 8 bottles of beer.
Take one down and pass it around, 7 bottles of beer on the wall.

7 bottles of beer on the wall, 7 bottles of beer.
Take one down and pass it around, 6 bottles of beer on the wall.

6 bottles of beer on the wall, 6 bottles of beer.
Take one down and pass it around, 5 bottles of beer on the wall.

5 bottles of beer on the wall, 5 bottles of beer.
Take one down and pass it around, 4 bottles of beer on the wall.

4 bottles of beer on the wall, 4 bottles of beer.
Take one down and pass it around, 3 bottles of beer on the wall.

3 bottles of beer on the wall, 3 bottles of beer.
Take one down and pass it around, 2 bottles of beer on the wall.

2 bottles of beer on the wall, 2 bottles of beer.
Take one down and pass it around, 1 bottle of beer on the wall.

1 bottle of beer on the wall, 1 bottle of beer.
Take one down and pass it around, no more bottles of beer on the wall.

No more bottles of beer on the wall, no more bottles of beer.
Go to the store and buy some more, 99 bottles of beer on the wall.
Running main.c in almost_prime/
k = 1: 2 3 5 7 11 13 17 19 23 29
k = 2: 4 6 9 10 14 15 21 22 25 26
k = 3: 8 12 18 20 27 28 30 42 44 45
k = 4: 16 24 36 40 54 56 60 81 84 88
k = 5: 32 48 72 80 108 112 120 162 168 176
Running main.c in apply_a_callback_to_an_array/
Compilation failed in apply_a_callback_to_an_array/
Running main.c in approximate_equility/
100000000000000.015625, 100000000000000.015625 => 1
100.010000, 100.011000 => 0
1000000000.000000, 1000000000.000000 => 0
0.001000, 0.001000 => 0
0.000000, 0.000000 => 1
2.000000, 2.000000 => 0
-2.000000, -2.000000 => 0
3.141593, 3.141593 => 1
Running main.c in arithmetic_mean/
mean[1, 2, 2.718, 3, 3.142] = 2.372
mean[1, 2, 2.718, 3] = 2.1795
mean[1, 2, 2.718] = 1.906
mean[1, 2] = 1.5
mean[1] = 1
mean[] = nan
Running main.c in array_concatenation/
1
2
3
4
5
6
7
8
9
0
Running main.c in array_length/
2
Running main.c in attractive_numbers/
The attractive numbers up to and including 120 are:
   4   6   8   9  10  12  14  15  18  20  21  22  25  26  27  28  30  32  33  34
  35  38  39  42  44  45  46  48  49  50  51  52  55  57  58  62  63  65  66  68
  69  70  72  74  75  76  77  78  80  82  85  86  87  91  92  93  94  95  98  99
 102 105 106 108 110 111 112 114 115 116 117 118 119 120
Running main.c in base64_decode_data/
Compilation failed in base64_decode_data/
Running main.c in bell_numbers/
First fifteen Bell numbers:
 1: 1
 2: 1
 3: 2
 4: 5
 5: 15
 6: 52
 7: 203
 8: 877
 9: 4140
10: 21147
11: 115975
12: 678570
13: 4213597
14: 27644437
15: 190899322

The first ten rows of Bell's triangle:
1
1, 2
2, 3, 5
5, 7, 10, 15
15, 20, 27, 37, 52
52, 67, 87, 114, 151, 203
203, 255, 322, 409, 523, 674, 877
877, 1080, 1335, 1657, 2066, 2589, 3263, 4140
4140, 5017, 6097, 7432, 9089, 11155, 13744, 17007, 21147
21147, 25287, 30304, 36401, 43833, 52922, 64077, 77821, 94828, 115975
Running main.c in binary_search/
2 is at index 4
5 is at index -1
Running main.c in box_the_compass/
 1  North                     0.00
 2  North by east            16.87
 3  North-northeast          16.88
 4  Northeast by north       33.75
 5  Northeast                50.62
 6  Northeast by east        50.63
 7  East-northeast           67.50
 8  East by north            84.37
 9  East                     84.38
10  East by south           101.25
11  East-southeast          118.12
12  Southeast by east       118.13
13  Southeast               135.00
14  Southeast by south      151.87
15  South-southeast         151.88
16  South by east           168.75
17  South                   185.62
18  South by west           185.63
19  South-southwest         202.50
20  Southwest by south      219.37
21  Southwest               219.38
22  Southwest by west       236.25
23  West-southwest          253.12
24  West by south           253.13
25  West                    270.00
26  West by north           286.87
27  West-northwest          286.88
28  Northwest by west       303.75
29  Northwest               320.62
30  Northwest by north      320.63
31  North-northwest         337.50
32  North by west           354.37
 1  North                   354.38
Running main.c in carmichael_3_strong_pseudoprimes/
3 11 17
5 29 73
5 17 29
5 13 17
7 19 67
7 31 73
7 13 31
7 23 41
7 73 103
7 13 19
13 61 397
13 37 241
13 97 421
13 37 97
13 37 61
17 41 233
17 353 1201
19 43 409
19 199 271
23 199 353
29 113 1093
29 197 953
31 991 15361
31 61 631
31 151 1171
31 61 271
31 61 211
31 271 601
31 181 331
37 109 2017
37 73 541
37 613 1621
37 73 181
37 73 109
41 1721 35281
41 881 12041
41 101 461
41 241 761
41 241 521
41 73 137
41 61 101
43 631 13567
43 271 5827
43 127 2731
43 127 1093
43 211 757
43 631 1597
43 127 211
43 211 337
43 433 643
43 547 673
43 3361 3907
47 3359 6073
47 1151 1933
47 3727 5153
53 157 2081
53 79 599
53 157 521
59 1451 2089
61 421 12841
61 181 5521
61 1301 19841
61 277 2113
61 181 1381
61 541 3001
61 661 2521
61 271 571
61 241 421
61 3361 4021
Running main.c in casting_out_nines/
1 9 10 18 19 27 28 36 37 45 46 54 55 63 64 72 73 81 82 90 91 99 
Tring 22 numbers instead of 99 numbers saves 77.777778%
Running main.c in catalan_numbers/
	direct	summing	frac
0	1	1	1
1	1	1	1
2	2	2	2
3	5	5	5
4	14	14	14
5	42	42	42
6	132	132	132
7	429	429	429
8	1430	1430	1430
9	4862	4862	4862
10	16796	16796	16796
11	58786	58786	58786
12	208012	208012	208012
13	742900	742900	742900
14	2674440	2674440	2674440
15	9694845	9694845	9694845
Running main.c in catamorphism/
15
-13
120
Running main.c in chaocipher/
The original plaintext is : WELLDONEISBETTERTHANWELLSAID

The left and right alphabets after each permutation during encryption are :

HXUCZVAMDSLKPEFJRIGTWOBNYQ  PTLNBQDEOYSFAVZKGJRIHWXUMC
ONYQHXUCZVAMDBSLKPEFJRIGTW  XUCPTLNBQDEOYMSFAVZKGJRIHW
ADBSLKPEFJRIGMTWONYQHXUCZV  OYSFAVZKGJRIHMWXUCPTLNBQDE
HUCZVADBSLKPEXFJRIGMTWONYQ  NBDEOYSFAVZKGQJRIHMWXUCPTL
QUCZVADBSLKPEHXFJRIGMTWONY  NBEOYSFAVZKGQDJRIHMWXUCPTL
HFJRIGMTWONYQXUCZVADBSLKPE  JRHMWXUCPTLNBIEOYSFAVZKGQD
CVADBSLKPEHFJZRIGMTWONYQXU  YSAVZKGQDJRHMFWXUCPTLNBIEO
NQXUCVADBSLKPYEHFJZRIGMTWO  BIOYSAVZKGQDJERHMFWXUCPTLN
YHFJZRIGMTWONEQXUCVADBSLKP  RHFWXUCPTLNBIMOYSAVZKGQDJE
NQXUCVADBSLKPEYHFJZRIGMTWO  MOSAVZKGQDJERYHFWXUCPTLNBI
XCVADBSLKPEYHUFJZRIGMTWONQ  AVKGQDJERYHFWZXUCPTLNBIMOS
TONQXCVADBSLKWPEYHUFJZRIGM  IMSAVKGQDJERYOHFWZXUCPTLNB
SKWPEYHUFJZRILGMTONQXCVADB  RYHFWZXUCPTLNOBIMSAVKGQDJE
ZILGMTONQXCVARDBSKWPEYHUFJ  LNBIMSAVKGQDJOERYHFWZXUCPT
JILGMTONQXCVAZRDBSKWPEYHUF  LNIMSAVKGQDJOBERYHFWZXUCPT
RBSKWPEYHUFJIDLGMTONQXCVAZ  RYFWZXUCPTLNIHMSAVKGQDJOBE
RSKWPEYHUFJIDBLGMTONQXCVAZ  YFZXUCPTLNIHMWSAVKGQDJOBER
HFJIDBLGMTONQUXCVAZRSKWPEY  LNHMWSAVKGQDJIOBERYFZXUCPT
JDBLGMTONQUXCIVAZRSKWPEYHF  MWAVKGQDJIOBESRYFZXUCPTLNH
BGMTONQUXCIVALZRSKWPEYHFJD  VKQDJIOBESRYFGZXUCPTLNHMWA
YFJDBGMTONQUXHCIVALZRSKWPE  HMAVKQDJIOBESWRYFGZXUCPTLN
HIVALZRSKWPEYCFJDBGMTONQUX  RYGZXUCPTLNHMFAVKQDJIOBESW
QXHIVALZRSKWPUEYCFJDBGMTON  SWYGZXUCPTLNHRMFAVKQDJIOBE
KPUEYCFJDBGMTWONQXHIVALZRS  NHMFAVKQDJIOBRESWYGZXUCPTL
SPUEYCFJDBGMTKWONQXHIVALZR  NHFAVKQDJIOBRMESWYGZXUCPTL
OQXHIVALZRSPUNEYCFJDBGMTKW  WYZXUCPTLNHFAGVKQDJIOBRMES
UEYCFJDBGMTKWNOQXHIVALZRSP  GVQDJIOBRMESWKYZXUCPTLNHFA
JBGMTKWNOQXHIDVALZRSPUEYCF  OBMESWKYZXUCPRTLNHFAGVQDJI

The ciphertext is : OAHQHCNYNXTSZJRRHJBYHQKSOUJY

The recovered plaintext is : WELLDONEISBETTERTHANWELLSAID
Running main.c in character_codes/
97
a
Running main.c in chinese_remainder_theorem/
23
Running main.c in chinese_zodiac/
1935 is the year of the Wood Pig (yin).
1938 is the year of the Earth Tiger (yang).
1968 is the year of the Earth Monkey (yang).
1972 is the year of the Water Rat (yang).
1976 is the year of the Fire Dragon (yang).
2017 is the year of the Fire Rooster (yin).
Running main.c in cholesky_decomposition/
5.00000 0.00000 0.00000 
3.00000 3.00000 0.00000 
-1.00000 1.00000 3.00000 

4.24264 0.00000 0.00000 0.00000 
5.18545 6.56591 0.00000 0.00000 
12.72792 3.04604 1.64974 0.00000 
9.89949 1.62455 1.84971 1.39262 
Running main.c in circles_of_given_radius_through_two_points/

Case 1)
Two circles are possible.
Circle C1 with center (1.8631,1.9742), radius 2.0000 and Circle C2 with center (-0.8632,-0.7521), radius 2.0000
Case 2)
Given points are opposite ends of a diameter of the circle with center (0.0000,1.0000) and radius 1.0000
Case 3)
Infinitely many circles can be drawn through (0.1234,0.9876)
Case 4)
Given points are farther away from each other than a diameter of a circle with radius 0.5000
Case 5)
No circles can be drawn through (0.1234,0.9876)Running main.c in combinations/
0 1 2 
0 1 3 
0 1 4 
0 2 3 
0 2 4 
0 3 4 
1 2 3 
1 2 4 
1 3 4 
2 3 4 
Running main.c in comma_quibbling/
{}
{ABC}
{ABC and DEF}
{ABC, DEF and G}
{ABC, DEF, G and H}
Running main.c in command_line_arguments/
This program is named ./main.
Running main.c in compile_time_calculation/
10! = 3628800
Running main.c in count_in_factors/
1 = 1
2 = 2
3 = 3
4 = 2 x 2
5 = 5
6 = 2 x 3
7 = 7
8 = 2 x 2 x 2
9 = 3 x 3
10 = 2 x 5
11 = 11
12 = 2 x 2 x 3
13 = 13
14 = 2 x 7
15 = 3 x 5
16 = 2 x 2 x 2 x 2
17 = 17
18 = 2 x 3 x 3
19 = 19
20 = 2 x 2 x 5
21 = 3 x 7
22 = 2 x 11
23 = 23
24 = 2 x 2 x 2 x 3
25 = 5 x 5
26 = 2 x 13
27 = 3 x 3 x 3
28 = 2 x 2 x 7
29 = 29
30 = 2 x 3 x 5
31 = 31
32 = 2 x 2 x 2 x 2 x 2
33 = 3 x 11
34 = 2 x 17
35 = 5 x 7
36 = 2 x 2 x 3 x 3
37 = 37
38 = 2 x 19
39 = 3 x 13
40 = 2 x 2 x 2 x 5
41 = 41
42 = 2 x 3 x 7
43 = 43
44 = 2 x 2 x 11
45 = 3 x 3 x 5
46 = 2 x 23
47 = 47
48 = 2 x 2 x 2 x 2 x 3
49 = 7 x 7
50 = 2 x 5 x 5
51 = 3 x 17
52 = 2 x 2 x 13
53 = 53
54 = 2 x 3 x 3 x 3
55 = 5 x 11
56 = 2 x 2 x 2 x 7
57 = 3 x 19
58 = 2 x 29
59 = 59
60 = 2 x 2 x 3 x 5
61 = 61
62 = 2 x 31
63 = 3 x 3 x 7
64 = 2 x 2 x 2 x 2 x 2 x 2
65 = 5 x 13
66 = 2 x 3 x 11
67 = 67
68 = 2 x 2 x 17
69 = 3 x 23
70 = 2 x 5 x 7
71 = 71
72 = 2 x 2 x 2 x 3 x 3
73 = 73
74 = 2 x 37
75 = 3 x 5 x 5
76 = 2 x 2 x 19
77 = 7 x 11
78 = 2 x 3 x 13
79 = 79
80 = 2 x 2 x 2 x 2 x 5
81 = 3 x 3 x 3 x 3
82 = 2 x 41
83 = 83
84 = 2 x 2 x 3 x 7
85 = 5 x 17
86 = 2 x 43
87 = 3 x 29
88 = 2 x 2 x 2 x 11
89 = 89
90 = 2 x 3 x 3 x 5
91 = 7 x 13
92 = 2 x 2 x 23
93 = 3 x 31
94 = 2 x 47
95 = 5 x 19
96 = 2 x 2 x 2 x 2 x 2 x 3
97 = 97
98 = 2 x 7 x 7
99 = 3 x 3 x 11
100 = 2 x 2 x 5 x 5
101 = 101
102 = 2 x 3 x 17
103 = 103
104 = 2 x 2 x 2 x 13
105 = 3 x 5 x 7
106 = 2 x 53
107 = 107
108 = 2 x 2 x 3 x 3 x 3
109 = 109
110 = 2 x 5 x 11
111 = 3 x 37
112 = 2 x 2 x 2 x 2 x 7
113 = 113
114 = 2 x 3 x 19
115 = 5 x 23
116 = 2 x 2 x 29
117 = 3 x 3 x 13
118 = 2 x 59
119 = 7 x 17
120 = 2 x 2 x 2 x 3 x 5
121 = 11 x 11
122 = 2 x 61
123 = 3 x 41
124 = 2 x 2 x 31
125 = 5 x 5 x 5
126 = 2 x 3 x 3 x 7
127 = 127
128 = 2 x 2 x 2 x 2 x 2 x 2 x 2
129 = 3 x 43
130 = 2 x 5 x 13
131 = 131
132 = 2 x 2 x 3 x 11
133 = 7 x 19
134 = 2 x 67
135 = 3 x 3 x 3 x 5
136 = 2 x 2 x 2 x 17
137 = 137
138 = 2 x 3 x 23
139 = 139
140 = 2 x 2 x 5 x 7
141 = 3 x 47
142 = 2 x 71
143 = 11 x 13
144 = 2 x 2 x 2 x 2 x 3 x 3
145 = 5 x 29
146 = 2 x 73
147 = 3 x 7 x 7
148 = 2 x 2 x 37
149 = 149
150 = 2 x 3 x 5 x 5
151 = 151
152 = 2 x 2 x 2 x 19
153 = 3 x 3 x 17
154 = 2 x 7 x 11
155 = 5 x 31
156 = 2 x 2 x 3 x 13
157 = 157
158 = 2 x 79
159 = 3 x 53
160 = 2 x 2 x 2 x 2 x 2 x 5
161 = 7 x 23
162 = 2 x 3 x 3 x 3 x 3
163 = 163
164 = 2 x 2 x 41
165 = 3 x 5 x 11
166 = 2 x 83
167 = 167
168 = 2 x 2 x 2 x 3 x 7
169 = 13 x 13
170 = 2 x 5 x 17
171 = 3 x 3 x 19
172 = 2 x 2 x 43
173 = 173
174 = 2 x 3 x 29
175 = 5 x 5 x 7
176 = 2 x 2 x 2 x 2 x 11
177 = 3 x 59
178 = 2 x 89
179 = 179
180 = 2 x 2 x 3 x 3 x 5
181 = 181
182 = 2 x 7 x 13
183 = 3 x 61
184 = 2 x 2 x 2 x 23
185 = 5 x 37
186 = 2 x 3 x 31
187 = 11 x 17
188 = 2 x 2 x 47
189 = 3 x 3 x 3 x 7
190 = 2 x 5 x 19
191 = 191
192 = 2 x 2 x 2 x 2 x 2 x 2 x 3
193 = 193
194 = 2 x 97
195 = 3 x 5 x 13
196 = 2 x 2 x 7 x 7
197 = 197
198 = 2 x 3 x 3 x 11
199 = 199
200 = 2 x 2 x 2 x 5 x 5
201 = 3 x 67
202 = 2 x 101
203 = 7 x 29
204 = 2 x 2 x 3 x 17
205 = 5 x 41
206 = 2 x 103
207 = 3 x 3 x 23
208 = 2 x 2 x 2 x 2 x 13
209 = 11 x 19
210 = 2 x 3 x 5 x 7
211 = 211
212 = 2 x 2 x 53
213 = 3 x 71
214 = 2 x 107
215 = 5 x 43
216 = 2 x 2 x 2 x 3 x 3 x 3
217 = 7 x 31
218 = 2 x 109
219 = 3 x 73
220 = 2 x 2 x 5 x 11
221 = 13 x 17
222 = 2 x 3 x 37
223 = 223
224 = 2 x 2 x 2 x 2 x 2 x 7
225 = 3 x 3 x 5 x 5
226 = 2 x 113
227 = 227
228 = 2 x 2 x 3 x 19
229 = 229
230 = 2 x 5 x 23
231 = 3 x 7 x 11
232 = 2 x 2 x 2 x 29
233 = 233
234 = 2 x 3 x 3 x 13
235 = 5 x 47
236 = 2 x 2 x 59
237 = 3 x 79
238 = 2 x 7 x 17
239 = 239
240 = 2 x 2 x 2 x 2 x 3 x 5
241 = 241
242 = 2 x 11 x 11
243 = 3 x 3 x 3 x 3 x 3
244 = 2 x 2 x 61
245 = 5 x 7 x 7
246 = 2 x 3 x 41
247 = 13 x 19
248 = 2 x 2 x 2 x 31
249 = 3 x 83
250 = 2 x 5 x 5 x 5
251 = 251
252 = 2 x 2 x 3 x 3 x 7
253 = 11 x 23
254 = 2 x 127
255 = 3 x 5 x 17
256 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2
257 = 257
258 = 2 x 3 x 43
259 = 7 x 37
260 = 2 x 2 x 5 x 13
261 = 3 x 3 x 29
262 = 2 x 131
263 = 263
264 = 2 x 2 x 2 x 3 x 11
265 = 5 x 53
266 = 2 x 7 x 19
267 = 3 x 89
268 = 2 x 2 x 67
269 = 269
270 = 2 x 3 x 3 x 3 x 5
271 = 271
272 = 2 x 2 x 2 x 2 x 17
273 = 3 x 7 x 13
274 = 2 x 137
275 = 5 x 5 x 11
276 = 2 x 2 x 3 x 23
277 = 277
278 = 2 x 139
279 = 3 x 3 x 31
280 = 2 x 2 x 2 x 5 x 7
281 = 281
282 = 2 x 3 x 47
283 = 283
284 = 2 x 2 x 71
285 = 3 x 5 x 19
286 = 2 x 11 x 13
287 = 7 x 41
288 = 2 x 2 x 2 x 2 x 2 x 3 x 3
289 = 17 x 17
290 = 2 x 5 x 29
291 = 3 x 97
292 = 2 x 2 x 73
293 = 293
294 = 2 x 3 x 7 x 7
295 = 5 x 59
296 = 2 x 2 x 2 x 37
297 = 3 x 3 x 3 x 11
298 = 2 x 149
299 = 13 x 23
300 = 2 x 2 x 3 x 5 x 5
301 = 7 x 43
302 = 2 x 151
303 = 3 x 101
304 = 2 x 2 x 2 x 2 x 19
305 = 5 x 61
306 = 2 x 3 x 3 x 17
307 = 307
308 = 2 x 2 x 7 x 11
309 = 3 x 103
310 = 2 x 5 x 31
311 = 311
312 = 2 x 2 x 2 x 3 x 13
313 = 313
314 = 2 x 157
315 = 3 x 3 x 5 x 7
316 = 2 x 2 x 79
317 = 317
318 = 2 x 3 x 53
319 = 11 x 29
320 = 2 x 2 x 2 x 2 x 2 x 2 x 5
321 = 3 x 107
322 = 2 x 7 x 23
323 = 17 x 19
324 = 2 x 2 x 3 x 3 x 3 x 3
325 = 5 x 5 x 13
326 = 2 x 163
327 = 3 x 109
328 = 2 x 2 x 2 x 41
329 = 7 x 47
330 = 2 x 3 x 5 x 11
331 = 331
332 = 2 x 2 x 83
333 = 3 x 3 x 37
334 = 2 x 167
335 = 5 x 67
336 = 2 x 2 x 2 x 2 x 3 x 7
337 = 337
338 = 2 x 13 x 13
339 = 3 x 113
340 = 2 x 2 x 5 x 17
341 = 11 x 31
342 = 2 x 3 x 3 x 19
343 = 7 x 7 x 7
344 = 2 x 2 x 2 x 43
345 = 3 x 5 x 23
346 = 2 x 173
347 = 347
348 = 2 x 2 x 3 x 29
349 = 349
350 = 2 x 5 x 5 x 7
351 = 3 x 3 x 3 x 13
352 = 2 x 2 x 2 x 2 x 2 x 11
353 = 353
354 = 2 x 3 x 59
355 = 5 x 71
356 = 2 x 2 x 89
357 = 3 x 7 x 17
358 = 2 x 179
359 = 359
360 = 2 x 2 x 2 x 3 x 3 x 5
361 = 19 x 19
362 = 2 x 181
363 = 3 x 11 x 11
364 = 2 x 2 x 7 x 13
365 = 5 x 73
366 = 2 x 3 x 61
367 = 367
368 = 2 x 2 x 2 x 2 x 23
369 = 3 x 3 x 41
370 = 2 x 5 x 37
371 = 7 x 53
372 = 2 x 2 x 3 x 31
373 = 373
374 = 2 x 11 x 17
375 = 3 x 5 x 5 x 5
376 = 2 x 2 x 2 x 47
377 = 13 x 29
378 = 2 x 3 x 3 x 3 x 7
379 = 379
380 = 2 x 2 x 5 x 19
381 = 3 x 127
382 = 2 x 191
383 = 383
384 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 3
385 = 5 x 7 x 11
386 = 2 x 193
387 = 3 x 3 x 43
388 = 2 x 2 x 97
389 = 389
390 = 2 x 3 x 5 x 13
391 = 17 x 23
392 = 2 x 2 x 2 x 7 x 7
393 = 3 x 131
394 = 2 x 197
395 = 5 x 79
396 = 2 x 2 x 3 x 3 x 11
397 = 397
398 = 2 x 199
399 = 3 x 7 x 19
400 = 2 x 2 x 2 x 2 x 5 x 5
401 = 401
402 = 2 x 3 x 67
403 = 13 x 31
404 = 2 x 2 x 101
405 = 3 x 3 x 3 x 3 x 5
406 = 2 x 7 x 29
407 = 11 x 37
408 = 2 x 2 x 2 x 3 x 17
409 = 409
410 = 2 x 5 x 41
411 = 3 x 137
412 = 2 x 2 x 103
413 = 7 x 59
414 = 2 x 3 x 3 x 23
415 = 5 x 83
416 = 2 x 2 x 2 x 2 x 2 x 13
417 = 3 x 139
418 = 2 x 11 x 19
419 = 419
420 = 2 x 2 x 3 x 5 x 7
421 = 421
422 = 2 x 211
423 = 3 x 3 x 47
424 = 2 x 2 x 2 x 53
425 = 5 x 5 x 17
426 = 2 x 3 x 71
427 = 7 x 61
428 = 2 x 2 x 107
429 = 3 x 11 x 13
430 = 2 x 5 x 43
431 = 431
432 = 2 x 2 x 2 x 2 x 3 x 3 x 3
433 = 433
434 = 2 x 7 x 31
435 = 3 x 5 x 29
436 = 2 x 2 x 109
437 = 19 x 23
438 = 2 x 3 x 73
439 = 439
440 = 2 x 2 x 2 x 5 x 11
441 = 3 x 3 x 7 x 7
442 = 2 x 13 x 17
443 = 443
444 = 2 x 2 x 3 x 37
445 = 5 x 89
446 = 2 x 223
447 = 3 x 149
448 = 2 x 2 x 2 x 2 x 2 x 2 x 7
449 = 449
450 = 2 x 3 x 3 x 5 x 5
451 = 11 x 41
452 = 2 x 2 x 113
453 = 3 x 151
454 = 2 x 227
455 = 5 x 7 x 13
456 = 2 x 2 x 2 x 3 x 19
457 = 457
458 = 2 x 229
459 = 3 x 3 x 3 x 17
460 = 2 x 2 x 5 x 23
461 = 461
462 = 2 x 3 x 7 x 11
463 = 463
464 = 2 x 2 x 2 x 2 x 29
465 = 3 x 5 x 31
466 = 2 x 233
467 = 467
468 = 2 x 2 x 3 x 3 x 13
469 = 7 x 67
470 = 2 x 5 x 47
471 = 3 x 157
472 = 2 x 2 x 2 x 59
473 = 11 x 43
474 = 2 x 3 x 79
475 = 5 x 5 x 19
476 = 2 x 2 x 7 x 17
477 = 3 x 3 x 53
478 = 2 x 239
479 = 479
480 = 2 x 2 x 2 x 2 x 2 x 3 x 5
481 = 13 x 37
482 = 2 x 241
483 = 3 x 7 x 23
484 = 2 x 2 x 11 x 11
485 = 5 x 97
486 = 2 x 3 x 3 x 3 x 3 x 3
487 = 487
488 = 2 x 2 x 2 x 61
489 = 3 x 163
490 = 2 x 5 x 7 x 7
491 = 491
492 = 2 x 2 x 3 x 41
493 = 17 x 29
494 = 2 x 13 x 19
495 = 3 x 3 x 5 x 11
496 = 2 x 2 x 2 x 2 x 31
497 = 7 x 71
498 = 2 x 3 x 83
499 = 499
500 = 2 x 2 x 5 x 5 x 5
501 = 3 x 167
502 = 2 x 251
503 = 503
504 = 2 x 2 x 2 x 3 x 3 x 7
505 = 5 x 101
506 = 2 x 11 x 23
507 = 3 x 13 x 13
508 = 2 x 2 x 127
509 = 509
510 = 2 x 3 x 5 x 17
511 = 7 x 73
512 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2
513 = 3 x 3 x 3 x 19
514 = 2 x 257
515 = 5 x 103
516 = 2 x 2 x 3 x 43
517 = 11 x 47
518 = 2 x 7 x 37
519 = 3 x 173
520 = 2 x 2 x 2 x 5 x 13
521 = 521
522 = 2 x 3 x 3 x 29
523 = 523
524 = 2 x 2 x 131
525 = 3 x 5 x 5 x 7
526 = 2 x 263
527 = 17 x 31
528 = 2 x 2 x 2 x 2 x 3 x 11
529 = 23 x 23
530 = 2 x 5 x 53
531 = 3 x 3 x 59
532 = 2 x 2 x 7 x 19
533 = 13 x 41
534 = 2 x 3 x 89
535 = 5 x 107
536 = 2 x 2 x 2 x 67
537 = 3 x 179
538 = 2 x 269
539 = 7 x 7 x 11
540 = 2 x 2 x 3 x 3 x 3 x 5
541 = 541
542 = 2 x 271
543 = 3 x 181
544 = 2 x 2 x 2 x 2 x 2 x 17
545 = 5 x 109
546 = 2 x 3 x 7 x 13
547 = 547
548 = 2 x 2 x 137
549 = 3 x 3 x 61
550 = 2 x 5 x 5 x 11
551 = 19 x 29
552 = 2 x 2 x 2 x 3 x 23
553 = 7 x 79
554 = 2 x 277
555 = 3 x 5 x 37
556 = 2 x 2 x 139
557 = 557
558 = 2 x 3 x 3 x 31
559 = 13 x 43
560 = 2 x 2 x 2 x 2 x 5 x 7
561 = 3 x 11 x 17
562 = 2 x 281
563 = 563
564 = 2 x 2 x 3 x 47
565 = 5 x 113
566 = 2 x 283
567 = 3 x 3 x 3 x 3 x 7
568 = 2 x 2 x 2 x 71
569 = 569
570 = 2 x 3 x 5 x 19
571 = 571
572 = 2 x 2 x 11 x 13
573 = 3 x 191
574 = 2 x 7 x 41
575 = 5 x 5 x 23
576 = 2 x 2 x 2 x 2 x 2 x 2 x 3 x 3
577 = 577
578 = 2 x 17 x 17
579 = 3 x 193
580 = 2 x 2 x 5 x 29
581 = 7 x 83
582 = 2 x 3 x 97
583 = 11 x 53
584 = 2 x 2 x 2 x 73
585 = 3 x 3 x 5 x 13
586 = 2 x 293
587 = 587
588 = 2 x 2 x 3 x 7 x 7
589 = 19 x 31
590 = 2 x 5 x 59
591 = 3 x 197
592 = 2 x 2 x 2 x 2 x 37
593 = 593
594 = 2 x 3 x 3 x 3 x 11
595 = 5 x 7 x 17
596 = 2 x 2 x 149
597 = 3 x 199
598 = 2 x 13 x 23
599 = 599
600 = 2 x 2 x 2 x 3 x 5 x 5
601 = 601
602 = 2 x 7 x 43
603 = 3 x 3 x 67
604 = 2 x 2 x 151
605 = 5 x 11 x 11
606 = 2 x 3 x 101
607 = 607
608 = 2 x 2 x 2 x 2 x 2 x 19
609 = 3 x 7 x 29
610 = 2 x 5 x 61
611 = 13 x 47
612 = 2 x 2 x 3 x 3 x 17
613 = 613
614 = 2 x 307
615 = 3 x 5 x 41
616 = 2 x 2 x 2 x 7 x 11
617 = 617
618 = 2 x 3 x 103
619 = 619
620 = 2 x 2 x 5 x 31
621 = 3 x 3 x 3 x 23
622 = 2 x 311
623 = 7 x 89
624 = 2 x 2 x 2 x 2 x 3 x 13
625 = 5 x 5 x 5 x 5
626 = 2 x 313
627 = 3 x 11 x 19
628 = 2 x 2 x 157
629 = 17 x 37
630 = 2 x 3 x 3 x 5 x 7
631 = 631
632 = 2 x 2 x 2 x 79
633 = 3 x 211
634 = 2 x 317
635 = 5 x 127
636 = 2 x 2 x 3 x 53
637 = 7 x 7 x 13
638 = 2 x 11 x 29
639 = 3 x 3 x 71
640 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 5
641 = 641
642 = 2 x 3 x 107
643 = 643
644 = 2 x 2 x 7 x 23
645 = 3 x 5 x 43
646 = 2 x 17 x 19
647 = 647
648 = 2 x 2 x 2 x 3 x 3 x 3 x 3
649 = 11 x 59
650 = 2 x 5 x 5 x 13
651 = 3 x 7 x 31
652 = 2 x 2 x 163
653 = 653
654 = 2 x 3 x 109
655 = 5 x 131
656 = 2 x 2 x 2 x 2 x 41
657 = 3 x 3 x 73
658 = 2 x 7 x 47
659 = 659
660 = 2 x 2 x 3 x 5 x 11
661 = 661
662 = 2 x 331
663 = 3 x 13 x 17
664 = 2 x 2 x 2 x 83
665 = 5 x 7 x 19
666 = 2 x 3 x 3 x 37
667 = 23 x 29
668 = 2 x 2 x 167
669 = 3 x 223
670 = 2 x 5 x 67
671 = 11 x 61
672 = 2 x 2 x 2 x 2 x 2 x 3 x 7
673 = 673
674 = 2 x 337
675 = 3 x 3 x 3 x 5 x 5
676 = 2 x 2 x 13 x 13
677 = 677
678 = 2 x 3 x 113
679 = 7 x 97
680 = 2 x 2 x 2 x 5 x 17
681 = 3 x 227
682 = 2 x 11 x 31
683 = 683
684 = 2 x 2 x 3 x 3 x 19
685 = 5 x 137
686 = 2 x 7 x 7 x 7
687 = 3 x 229
688 = 2 x 2 x 2 x 2 x 43
689 = 13 x 53
690 = 2 x 3 x 5 x 23
691 = 691
692 = 2 x 2 x 173
693 = 3 x 3 x 7 x 11
694 = 2 x 347
695 = 5 x 139
696 = 2 x 2 x 2 x 3 x 29
697 = 17 x 41
698 = 2 x 349
699 = 3 x 233
700 = 2 x 2 x 5 x 5 x 7
701 = 701
702 = 2 x 3 x 3 x 3 x 13
703 = 19 x 37
704 = 2 x 2 x 2 x 2 x 2 x 2 x 11
705 = 3 x 5 x 47
706 = 2 x 353
707 = 7 x 101
708 = 2 x 2 x 3 x 59
709 = 709
710 = 2 x 5 x 71
711 = 3 x 3 x 79
712 = 2 x 2 x 2 x 89
713 = 23 x 31
714 = 2 x 3 x 7 x 17
715 = 5 x 11 x 13
716 = 2 x 2 x 179
717 = 3 x 239
718 = 2 x 359
719 = 719
720 = 2 x 2 x 2 x 2 x 3 x 3 x 5
721 = 7 x 103
722 = 2 x 19 x 19
723 = 3 x 241
724 = 2 x 2 x 181
725 = 5 x 5 x 29
726 = 2 x 3 x 11 x 11
727 = 727
728 = 2 x 2 x 2 x 7 x 13
729 = 3 x 3 x 3 x 3 x 3 x 3
730 = 2 x 5 x 73
731 = 17 x 43
732 = 2 x 2 x 3 x 61
733 = 733
734 = 2 x 367
735 = 3 x 5 x 7 x 7
736 = 2 x 2 x 2 x 2 x 2 x 23
737 = 11 x 67
738 = 2 x 3 x 3 x 41
739 = 739
740 = 2 x 2 x 5 x 37
741 = 3 x 13 x 19
742 = 2 x 7 x 53
743 = 743
744 = 2 x 2 x 2 x 3 x 31
745 = 5 x 149
746 = 2 x 373
747 = 3 x 3 x 83
748 = 2 x 2 x 11 x 17
749 = 7 x 107
750 = 2 x 3 x 5 x 5 x 5
751 = 751
752 = 2 x 2 x 2 x 2 x 47
753 = 3 x 251
754 = 2 x 13 x 29
755 = 5 x 151
756 = 2 x 2 x 3 x 3 x 3 x 7
757 = 757
758 = 2 x 379
759 = 3 x 11 x 23
760 = 2 x 2 x 2 x 5 x 19
761 = 761
762 = 2 x 3 x 127
763 = 7 x 109
764 = 2 x 2 x 191
765 = 3 x 3 x 5 x 17
766 = 2 x 383
767 = 13 x 59
768 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2 x 3
769 = 769
770 = 2 x 5 x 7 x 11
771 = 3 x 257
772 = 2 x 2 x 193
773 = 773
774 = 2 x 3 x 3 x 43
775 = 5 x 5 x 31
776 = 2 x 2 x 2 x 97
777 = 3 x 7 x 37
778 = 2 x 389
779 = 19 x 41
780 = 2 x 2 x 3 x 5 x 13
781 = 11 x 71
782 = 2 x 17 x 23
783 = 3 x 3 x 3 x 29
784 = 2 x 2 x 2 x 2 x 7 x 7
785 = 5 x 157
786 = 2 x 3 x 131
787 = 787
788 = 2 x 2 x 197
789 = 3 x 263
790 = 2 x 5 x 79
791 = 7 x 113
792 = 2 x 2 x 2 x 3 x 3 x 11
793 = 13 x 61
794 = 2 x 397
795 = 3 x 5 x 53
796 = 2 x 2 x 199
797 = 797
798 = 2 x 3 x 7 x 19
799 = 17 x 47
800 = 2 x 2 x 2 x 2 x 2 x 5 x 5
801 = 3 x 3 x 89
802 = 2 x 401
803 = 11 x 73
804 = 2 x 2 x 3 x 67
805 = 5 x 7 x 23
806 = 2 x 13 x 31
807 = 3 x 269
808 = 2 x 2 x 2 x 101
809 = 809
810 = 2 x 3 x 3 x 3 x 3 x 5
811 = 811
812 = 2 x 2 x 7 x 29
813 = 3 x 271
814 = 2 x 11 x 37
815 = 5 x 163
816 = 2 x 2 x 2 x 2 x 3 x 17
817 = 19 x 43
818 = 2 x 409
819 = 3 x 3 x 7 x 13
820 = 2 x 2 x 5 x 41
821 = 821
822 = 2 x 3 x 137
823 = 823
824 = 2 x 2 x 2 x 103
825 = 3 x 5 x 5 x 11
826 = 2 x 7 x 59
827 = 827
828 = 2 x 2 x 3 x 3 x 23
829 = 829
830 = 2 x 5 x 83
831 = 3 x 277
832 = 2 x 2 x 2 x 2 x 2 x 2 x 13
833 = 7 x 7 x 17
834 = 2 x 3 x 139
835 = 5 x 167
836 = 2 x 2 x 11 x 19
837 = 3 x 3 x 3 x 31
838 = 2 x 419
839 = 839
840 = 2 x 2 x 2 x 3 x 5 x 7
841 = 29 x 29
842 = 2 x 421
843 = 3 x 281
844 = 2 x 2 x 211
845 = 5 x 13 x 13
846 = 2 x 3 x 3 x 47
847 = 7 x 11 x 11
848 = 2 x 2 x 2 x 2 x 53
849 = 3 x 283
850 = 2 x 5 x 5 x 17
851 = 23 x 37
852 = 2 x 2 x 3 x 71
853 = 853
854 = 2 x 7 x 61
855 = 3 x 3 x 5 x 19
856 = 2 x 2 x 2 x 107
857 = 857
858 = 2 x 3 x 11 x 13
859 = 859
860 = 2 x 2 x 5 x 43
861 = 3 x 7 x 41
862 = 2 x 431
863 = 863
864 = 2 x 2 x 2 x 2 x 2 x 3 x 3 x 3
865 = 5 x 173
866 = 2 x 433
867 = 3 x 17 x 17
868 = 2 x 2 x 7 x 31
869 = 11 x 79
870 = 2 x 3 x 5 x 29
871 = 13 x 67
872 = 2 x 2 x 2 x 109
873 = 3 x 3 x 97
874 = 2 x 19 x 23
875 = 5 x 5 x 5 x 7
876 = 2 x 2 x 3 x 73
877 = 877
878 = 2 x 439
879 = 3 x 293
880 = 2 x 2 x 2 x 2 x 5 x 11
881 = 881
882 = 2 x 3 x 3 x 7 x 7
883 = 883
884 = 2 x 2 x 13 x 17
885 = 3 x 5 x 59
886 = 2 x 443
887 = 887
888 = 2 x 2 x 2 x 3 x 37
889 = 7 x 127
890 = 2 x 5 x 89
891 = 3 x 3 x 3 x 3 x 11
892 = 2 x 2 x 223
893 = 19 x 47
894 = 2 x 3 x 149
895 = 5 x 179
896 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 7
897 = 3 x 13 x 23
898 = 2 x 449
899 = 29 x 31
900 = 2 x 2 x 3 x 3 x 5 x 5
901 = 17 x 53
902 = 2 x 11 x 41
903 = 3 x 7 x 43
904 = 2 x 2 x 2 x 113
905 = 5 x 181
906 = 2 x 3 x 151
907 = 907
908 = 2 x 2 x 227
909 = 3 x 3 x 101
910 = 2 x 5 x 7 x 13
911 = 911
912 = 2 x 2 x 2 x 2 x 3 x 19
913 = 11 x 83
914 = 2 x 457
915 = 3 x 5 x 61
916 = 2 x 2 x 229
917 = 7 x 131
918 = 2 x 3 x 3 x 3 x 17
919 = 919
920 = 2 x 2 x 2 x 5 x 23
921 = 3 x 307
922 = 2 x 461
923 = 13 x 71
924 = 2 x 2 x 3 x 7 x 11
925 = 5 x 5 x 37
926 = 2 x 463
927 = 3 x 3 x 103
928 = 2 x 2 x 2 x 2 x 2 x 29
929 = 929
930 = 2 x 3 x 5 x 31
931 = 7 x 7 x 19
932 = 2 x 2 x 233
933 = 3 x 311
934 = 2 x 467
935 = 5 x 11 x 17
936 = 2 x 2 x 2 x 3 x 3 x 13
937 = 937
938 = 2 x 7 x 67
939 = 3 x 313
940 = 2 x 2 x 5 x 47
941 = 941
942 = 2 x 3 x 157
943 = 23 x 41
944 = 2 x 2 x 2 x 2 x 59
945 = 3 x 3 x 3 x 5 x 7
946 = 2 x 11 x 43
947 = 947
948 = 2 x 2 x 3 x 79
949 = 13 x 73
950 = 2 x 5 x 5 x 19
951 = 3 x 317
952 = 2 x 2 x 2 x 7 x 17
953 = 953
954 = 2 x 3 x 3 x 53
955 = 5 x 191
956 = 2 x 2 x 239
957 = 3 x 11 x 29
958 = 2 x 479
959 = 7 x 137
960 = 2 x 2 x 2 x 2 x 2 x 2 x 3 x 5
961 = 31 x 31
962 = 2 x 13 x 37
963 = 3 x 3 x 107
964 = 2 x 2 x 241
965 = 5 x 193
966 = 2 x 3 x 7 x 23
967 = 967
968 = 2 x 2 x 2 x 11 x 11
969 = 3 x 17 x 19
970 = 2 x 5 x 97
971 = 971
972 = 2 x 2 x 3 x 3 x 3 x 3 x 3
973 = 7 x 139
974 = 2 x 487
975 = 3 x 5 x 5 x 13
976 = 2 x 2 x 2 x 2 x 61
977 = 977
978 = 2 x 3 x 163
979 = 11 x 89
980 = 2 x 2 x 5 x 7 x 7
981 = 3 x 3 x 109
982 = 2 x 491
983 = 983
984 = 2 x 2 x 2 x 3 x 41
985 = 5 x 197
986 = 2 x 17 x 29
987 = 3 x 7 x 47
988 = 2 x 2 x 13 x 19
989 = 23 x 43
990 = 2 x 3 x 3 x 5 x 11
991 = 991
992 = 2 x 2 x 2 x 2 x 2 x 31
993 = 3 x 331
994 = 2 x 7 x 71
995 = 5 x 199
996 = 2 x 2 x 3 x 83
997 = 997
998 = 2 x 499
999 = 3 x 3 x 3 x 37
Running main.c in cramers_rule/
  2.000
-12.000
 -4.000
  1.000
Running main.c in crc32/
414FA339
Running main.c in damm_algorithm/
Checksum correct
Running main.c in department_number/
Police     Sanitation         Fire
----------------------------------
2		3		7
2		4		6
2		6		4
2		7		3
4		1		7
4		2		6
4		3		5
4		5		3
4		6		2
4		7		1
6		1		5
6		2		4
6		4		2
6		5		1Running main.c in dice_game_probabilities/
0.5731440767829815
0.6427886287176273
Running main.c in dot_product/
3
Running main.c in draw_a_sphere/
                               eeeeeeeeeeeeeeee&                                 
                        eooooo****ooooooooooeeeeeeee&&&                          
                    oo******!!!**********ooooooeeeeeeee&&&&                      
                 o***!!!!!!!!!!!!!!!!!*****ooooooeeeeeeee&&&&&                   
              o**!!!::::::::::::::!!!!!!*****ooooooeeeeeeee&&&&&&                
            o*!!!::::.........:::::::!!!!!*****oooooeeeeeeee&&&&&&&              
          o*!!:::................:::::!!!!!*****oooooeeeeeeee&&&&&&&&            
        o*!!:::...................:::::!!!!!****ooooooeeeeeeee&&&&&&&&&          
       **!!::......................:::::!!!!*****oooooeeeeeeee&&&&&&&&&&         
     o**!:::.......................:::::!!!!*****oooooeeeeeeeee&&&&&&&&&&&       
    o**!:::........................:::::!!!!*****oooooeeeeeeeee&&&&&&&&&&&&      
   o**!!::.........................::::!!!!!*****oooooeeeeeeeee&&&&&&&&&&&&&     
  eo*!!:::........................:::::!!!!*****ooooooeeeeeeeee&&&&&&&&&&&&&&    
  o**!!:::.......................:::::!!!!!*****ooooooeeeeeeeee&&&&&&&&&&&&&&    
 oo*!!!:::......................:::::!!!!!*****ooooooeeeeeeeee&&&&&&&&&&&&&&&&   
 o**!!!::::...................::::::!!!!!*****ooooooeeeeeeeeee&&&&&&&&&&&&&&&&   
eo***!!!::::...............:::::::!!!!!!*****oooooooeeeeeeeee&&&&&&&&&&&&&&&&&&  
eoo**!!!!::::::........:::::::::!!!!!!******oooooooeeeeeeeeee&&&&&&&&&&&&&&&&&&  
eoo***!!!!:::::::::::::::::::!!!!!!!*******ooooooeeeeeeeeeee&&&&&&&&&&&&&&&&&&&  
eooo***!!!!!!:::::::::::::!!!!!!!!*******oooooooeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&  
eooo*****!!!!!!!!!!!!!!!!!!!!!!********ooooooooeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&  
eeoooo******!!!!!!!!!!!!!!!**********ooooooooeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&  
eeeooooo**************************oooooooooeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&  
eeeeoooooo********************oooooooooooeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&  
 eeeeeoooooooooo********ooooooooooooooeeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&   
 &eeeeeeoooooooooooooooooooooooooooeeeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&&&   
  &eeeeeeeeeooooooooooooooooooeeeeeeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&&&&    
  &&eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&    
   &&&eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&     
    &&&&eeeeeeeeeeeeeeeeeeeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&      
     &&&&&&&eeeeeeeeeeeeeeeeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&       
       &&&&&&&&&&&eeeeeeeee&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&         
        &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&          
          &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&            
            &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&              
              &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&                
                 &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&                   
                    &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&                      
                        &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&                          
                               &&&&&&&&&&&&&&&&&                                 
                                                                                 
             :.....::::!!*               
         ..............:::!!**           
      ...................:::!!**o        
    ......................::!!!***o      
   .......................:::!!!***o     
  ........................:::!!!***oo    
 .........................:::!!!***ooo   
..........................:::!!!***oooo  
.........................:::!!!****oooo  
........................:::!!!*****oooo  
:.....................::::!!!*****ooooo  
::..................::::!!!!*****oooooo  
!:::.............:::::!!!!******ooooooo  
 !!::::::::::::::::!!!!!******oooooooo   
  *!!!!::::::::!!!!!!!*******oooooooo    
   **!!!!!!!!!!!!!********oooooooooo     
    o*******************ooooooooooo      
      oo***********oooooooooooooo        
         ooooooooooooooooooooo           
             ooooooooooooo               
                                         
Running main.c in emirp_primes/
 13 17 31 37 71 73 79 97 107 113 149 157 167 179 199 311 337 347 359 389
Running main.c in euler_method/
    Time:        0      10      20      30      40      50      60      70      80      90     100
Analytic:  100.000  59.727  39.728  29.797  24.865  22.416  21.200  20.596  20.296  20.147  20.073
 Step  2:  100.000  57.634  37.704  28.328  23.918  21.843  20.867  20.408  20.192  20.090  20.042
 Step  5:  100.000  53.800  34.280  26.034  22.549  21.077  20.455  20.192  20.081  20.034  20.014
 Step 10:  100.000  44.000  27.200  22.160  20.648  20.194  20.058  20.017  20.005  20.002  20.000
Running main.c in evaluate_binomial_coefficients/
10
131282408400
11923179284862717872
Running main.c in exponential/
529
576
625
676
784
841
900
961
1024
1089
Running main.c in extreme_floating_point_values/
positive infinity: inf
negative infinity: -inf
negative zero: -0.000000
not a number: nan
+inf + 2.0 = inf
+inf - 10.1 = inf
+inf + -inf = nan
0.0 * +inf = nan
1.0/-0.0 = -inf
NaN + 1.0 = nan
NaN + NaN = nan
NaN == NaN = false
0.0 == -0.0 = true
Running main.c in factors_of_a_mersenne_number/
Compilation failed in factors_of_a_mersenne_number/
Running main.c in fairshare_between_two_and_more/
Base  2:  0  1  1  0  1  0  0  1  1  0  0  1  0  1  1  0  1  0  0  1  0  1  1  0  0
Base  3:  0  1  2  1  2  0  2  0  1  1  2  0  2  0  1  0  1  2  2  0  1  0  1  2  1
Base  5:  0  1  2  3  4  1  2  3  4  0  2  3  4  0  1  3  4  0  1  2  4  0  1  2  3
Base 11:  0  1  2  3  4  5  6  7  8  9 10  1  2  3  4  5  6  7  8  9 10  0  2  3  4
How many times does each get a turn in 50000 iterations?
  With 191 people: 261 or 262
  With 1377 people: 36 or 37
  With 49999 people: 1 or 2
  With 50000 people: 1
  With 50001 people: Only 50000 have a turn
Running main.c in farey_sequence/
1: 0/1 1/1
2: 0/1 1/2 1/1
3: 0/1 1/3 1/2 2/3 1/1
4: 0/1 1/4 1/3 1/2 2/3 3/4 1/1
5: 0/1 1/5 1/4 1/3 2/5 1/2 3/5 2/3 3/4 4/5 1/1
6: 0/1 1/6 1/5 1/4 1/3 2/5 1/2 3/5 2/3 3/4 4/5 5/6 1/1
7: 0/1 1/7 1/6 1/5 1/4 2/7 1/3 2/5 3/7 1/2 4/7 3/5 2/3 5/7 3/4 4/5 5/6 6/7 1/1
8: 0/1 1/8 1/7 1/6 1/5 1/4 2/7 1/3 3/8 2/5 3/7 1/2 4/7 3/5 5/8 2/3 5/7 3/4 4/5 5/6 6/7 7/8 1/1
9: 0/1 1/9 1/8 1/7 1/6 1/5 2/9 1/4 2/7 1/3 3/8 2/5 3/7 4/9 1/2 5/9 4/7 3/5 5/8 2/3 5/7 3/4 7/9 4/5 5/6 6/7 7/8 8/9 1/1
10: 0/1 1/10 1/9 1/8 1/7 1/6 1/5 2/9 1/4 2/7 3/10 1/3 3/8 2/5 3/7 4/9 1/2 5/9 4/7 3/5 5/8 2/3 7/10 5/7 3/4 7/9 4/5 5/6 6/7 7/8 8/9 9/10 1/1
11: 0/1 1/11 1/10 1/9 1/8 1/7 1/6 2/11 1/5 2/9 1/4 3/11 2/7 3/10 1/3 4/11 3/8 2/5 3/7 4/9 5/11 1/2 6/11 5/9 4/7 3/5 5/8 7/11 2/3 7/10 5/7 8/11 3/4 7/9 4/5 9/11 5/6 6/7 7/8 8/9 9/10 10/11 1/1
100: 3045 items
200: 12233 items
300: 27399 items
400: 48679 items
500: 76117 items
600: 109501 items
700: 149019 items
800: 194751 items
900: 246327 items
1000: 304193 items

10000000: 30396356427243 items
Running main.c in fibonacci_n_step_number_sequences/

Fibonacci	Tribonacci	Tetranacci	Lucas

1		1		1		2
1		1		1		1
2		2		2		3
3		4		4		4
5		7		8		7
8		13		15		11
13		24		29		18
21		44		56		29
34		81		108		47
55		149		208		76Running main.c in fibonacci_word/
 N     Length Entropy              Word                                    
 1          1 0.000000000000000000 1                                       
 2          1 0.000000000000000000 0                                       
 3          2 1.000000000000000000 01                                      
 4          3 0.918295834054489557 010                                     
 5          5 0.970950594454668581 01001                                   
 6          8 0.954434002924965053 01001010                                
 7         13 0.961236604722875865 0100101001001                           
 8         21 0.958711882977131835 010010100100101001010                   
 9         34 0.959686893774217009 0100101001001010010100100101001001      
10         55 0.959316032054377765 ...                                     
11         89 0.959457915838669462 ...                                     
12        144 0.959403754221022975 ...                                     
13        233 0.959424446955986610 ...                                     
14        377 0.959416543740440830 ...                                     
15        610 0.959419562603144094 ...                                     
16        987 0.959418409515224280 ...                                     
17       1597 0.959418849957809794 ...                                     
18       2584 0.959418681724032107 ...                                     
19       4181 0.959418745983663723 ...                                     
20       6765 0.959418721438675459 ...                                     
21      10946 0.959418730814027731 ...                                     
22      17711 0.959418727232961843 ...                                     
23      28657 0.959418728600807347 ...                                     
24      46368 0.959418728078336946 ...                                     
25      75025 0.959418728277902866 ...                                     
26     121393 0.959418728201675397 ...                                     
27     196418 0.959418728230791773 ...                                     
28     317811 0.959418728219670225 ...                                     
29     514229 0.959418728223918382 ...                                     
30     832040 0.959418728222295791 ...                                     
31    1346269 0.959418728222915518 ...                                     
32    2178309 0.959418728222678929 ...                                     
33    3524578 0.959418728222769190 ...                                     
34    5702887 0.959418728222734662 ...                                     
35    9227465 0.959418728222747874 ...                                     
36   14930352 0.959418728222742767 ...                                     
37   24157817 0.959418728222744654 ...                                     
Running main.c in floyds_triangle/
 1
 2  3
 4  5  6
 7  8  9 10
11 12 13 14 15
 1
 2  3
 4  5  6
 7  8  9 10
11 12 13 14 15
16 17 18 19 20 21
22 23 24 25 26 27 28
29 30 31 32 33 34 35 36
37 38 39 40 41 42 43 44  45
46 47 48 49 50 51 52 53  54  55
56 57 58 59 60 61 62 63  64  65  66
67 68 69 70 71 72 73 74  75  76  77  78
79 80 81 82 83 84 85 86  87  88  89  90  91
92 93 94 95 96 97 98 99 100 101 102 103 104 105
Running main.c in formatted_numeric_output/
    -7.125
     7.125
 7.125    
 -0007.125
 00007.125
 7.125    
Running main.c in function_composition/
0.500000
Running main.c in fusc_sequence/
Index-------Value
    0           0
    1           1
    2           1
    3           2
    4           1
    5           3
    6           2
    7           3
    8           1
    9           4
   10           3
   11           5
   12           2
   13           5
   14           3
   15           4
   16           1
   17           5
   18           4
   19           7
   20           3
   21           8
   22           5
   23           7
   24           2
   25           7
   26           5
   27           8
   28           3
   29           7
   30           4
   31           5
   32           1
   33           6
   34           5
   35           9
   36           4
   37          11
   38           7
   39          10
   40           3
   41          11
   42           8
   43          13
   44           5
   45          12
   46           7
   47           9
   48           2
   49           9
   50           7
   51          12
   52           5
   53          13
   54           8
   55          11
   56           3
   57          10
   58           7
   59          11
   60           4Running main.c in gaussian_elimination/
-0.01
1.60279
-1.6132
1.24549
-0.49099
0.0657607
Running main.c in general_fizzbuzz/
1
2
Fizz
4
Buzz
Fizz
Baxx
8
Fizz
Buzz
11
Fizz
13
Baxx
FizzBuzz
16
17
Fizz
19
Running main.c in generate_random_chess_position/
 .  .  .  .  .  .  .  . 
 .  .  p  .  .  P  .  . 
 .  .  P  .  .  K  .  P 
 .  P  .  .  P  .  .  P 
 .  .  .  .  p  .  .  . 
 .  p  .  .  .  .  .  . 
 .  .  .  p  .  .  .  p 
 k  .  .  .  .  .  .  . 
8/2p2P2/2P2K1P/1P2P2P/4p3/1p6/3p3p/k7/ w - - 0 1
Running main.c in gray_code/
 0 : 00000 => 00000 => 00000 :  0
 1 : 00001 => 00001 => 00001 :  1
 2 : 00010 => 00011 => 00010 :  2
 3 : 00011 => 00010 => 00011 :  3
 4 : 00100 => 00110 => 00100 :  4
 5 : 00101 => 00111 => 00101 :  5
 6 : 00110 => 00101 => 00110 :  6
 7 : 00111 => 00100 => 00111 :  7
 8 : 01000 => 01100 => 01000 :  8
 9 : 01001 => 01101 => 01001 :  9
10 : 01010 => 01111 => 01010 : 10
11 : 01011 => 01110 => 01011 : 11
12 : 01100 => 01010 => 01100 : 12
13 : 01101 => 01011 => 01101 : 13
14 : 01110 => 01001 => 01110 : 14
15 : 01111 => 01000 => 01111 : 15
16 : 10000 => 11000 => 10000 : 16
17 : 10001 => 11001 => 10001 : 17
18 : 10010 => 11011 => 10010 : 18
19 : 10011 => 11010 => 10011 : 19
20 : 10100 => 11110 => 10100 : 20
21 : 10101 => 11111 => 10101 : 21
22 : 10110 => 11101 => 10110 : 22
23 : 10111 => 11100 => 10111 : 23
24 : 11000 => 10100 => 11000 : 24
25 : 11001 => 10101 => 11001 : 25
26 : 11010 => 10111 => 11010 : 26
27 : 11011 => 10110 => 11011 : 27
28 : 11100 => 10010 => 11100 : 28
29 : 11101 => 10011 => 11101 : 29
30 : 11110 => 10001 => 11110 : 30
31 : 11111 => 10000 => 11111 : 31
Running main.c in greatest_subsequential_sum/
Max sum = 15
3 5 6 -2 -1 4 
Running main.c in hailstone_sequence/
[ 27, 82, 41, 124, ...., 8, 4, 2, 1] len=112
Max 351 at j= 77031
Running main.c in hamming_numbers/
     1: 1
     2: 2
     3: 3
     4: 4
     5: 5
     6: 6
     7: 8
     8: 9
     9: 10
    10: 12
    11: 15
    12: 16
    13: 18
    14: 20
    15: 24
    16: 25
    17: 27
    18: 30
    19: 32
    20: 36
  1691: 2125764000
Running main.c in haversine_formula/
dist: 2886.4 km (1793.6 mi.)
Running main.c in hofstadter_q_sequence/
1 1 2 3 3 4 5 5 6 6
502
flips: 49798
Running main.c in horners_rule_for_polynomial_evaluation/
128.0
Running main.c in host_introspection/
word size = 64 bits
little endian
Running main.c in increment_a_numerical_string/
text: +0
  ->: +1
text: -1
  ->: 0
text: -41
  ->: -40
text: +41
  ->: +42
text: 999
  ->: 1000
text: +999
  ->: 1000
text: 109999999999999999999999999999999999999999
  ->: 110000000000000000000000000000000000000000
text: -100000000000000000000000000000000000000000000
  ->: -99999999999999999999999999999999999999999999
Running main.c in infinity/
inf
Running main.c in isbn13_check_digit/
978-1734314502: good
978-1734314509: bad
978-1788399081: good
978-1788399083: bad
Running main.c in iterated_digits_squaring/
1->10^1: 7
1->10^2: 80
1->10^3: 857
1->10^4: 8558
1->10^5: 85623
1->10^6: 856929
1->10^7: 8581146
1->10^8: 85744333
1->10^9: 854325192
1->10^10: 8507390852
1->10^11: 84908800643
1->10^12: 850878696414
1->10^13: 8556721999130
1->10^14: 86229146720315
1->10^15: 869339034137667
1->10^16: 8754780882739336
1->10^17: 87975303595231975
1->10^18: 881773944919974509
1->10^19: 8816770037940618762
counter overflow for 10^20
Running main.c in jacobi_symbol/
n\k|  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
-------------------------------------------------------------------
1  |  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
3  |  0  1 -1  0  1 -1  0  1 -1  0  1 -1  0  1 -1  0  1 -1  0  1 -1
5  |  0  1 -1 -1  1  0  1 -1 -1  1  0  1 -1 -1  1  0  1 -1 -1  1  0
7  |  0  1  1 -1  1 -1 -1  0  1  1 -1  1 -1 -1  0  1  1 -1  1 -1 -1
9  |  0  1  1  0  1  1  0  1  1  0  1  1  0  1  1  0  1  1  0  1  1
11 |  0  1 -1  1  1  1 -1 -1 -1  1 -1  0  1 -1  1  1  1 -1 -1 -1  1
13 |  0  1 -1  1  1 -1 -1 -1 -1  1  1 -1  1  0  1 -1  1  1 -1 -1 -1
15 |  0  1  1  0  1  0  0 -1  1  0  0 -1  0 -1 -1  0  1  1  0  1  0
17 |  0  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1  1 -1  1  1  0  1  1 -1
19 |  0  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  0  1
21 |  0  1 -1  0  1  1  0  0 -1  0 -1 -1  0 -1  0  0  1  1  0 -1  1
Running main.c in jortsort/
Did you forgot to turn on your brain?! This array is already sorted!
Running main.c in josephus_problem/
n = 41, k = 3, final survivor: 30
n = 9876543210987654321, k = 12031, three survivors: 6892710366467541051 1946357796579138992 3554846299321782413
Running main.c in knapsack_problem_0_1/
map                        9   150
compass                   13    35
water                    153   200
sandwich                  50   160
glucose                   15    60
banana                    27    60
suntan cream              11    70
waterproof trousers       42    70
waterproof overclothes    43    75
note-case                 22    80
sunglasses                 7    20
socks                      4    50
totals:                  396  1030
Running main.c in knapsack_problem_continuous/
take all salami
take all ham
take all brawn
take all greaves
take 3.5kg of 3.7 kg of welt
Running main.c in largest_int_from_concatenated_ints/
998764543431
6054854654
Running main.c in last_letter_first_letter/
Maximum path length: 23
Paths of that length: 1248
Example path of that length:
  machamp petilil landorus scrafty yamask kricketune emboar 
  registeel loudred darmanitan nosepass simisear relicanth heatmor 
  rufflet trapinch haxorus seaking girafarig gabite exeggcute 
  emolga audino 
Running main.c in leap_year/
1900 is not a leap year.
1994 is not a leap year.
1996 is a leap year.
1997 is not a leap year.
2000 is a leap year.
Running main.c in least_common_multiple/
lcm(35, 21) = 105
Running main.c in levenshtein_distance/
distance between `rosettacode' and `raisethysword': 8
Running main.c in loop_over_multiple_arrays_simultaneously/
aA1
bB2
cC3
Running main.c in lu_decomposition/
A = [        1         3         5
             2         4         7
             1         1         0 ]
L = [        1         0         0
           0.5         1         0
           0.5        -1         1 ]
U = [        2         4         7
             0         1       1.5
             0         0        -2 ]
P = [        0         1         0
             1         0         0
             0         0         1 ]

A = [       11         9        24         2
             1         5         2         6
             3        17        18         1
             2         5         7         1 ]
L = [        1         0         0         0
        0.2727         1         0         0
       0.09091    0.2875         1         0
        0.1818    0.2312  0.003597         1 ]
U = [       11         9        24         2
             0     14.55     11.45    0.4545
             0         0    -3.475     5.688
             0         0         0    0.5108 ]
P = [        1         0         0         0
             0         0         1         0
             0         1         0         0
             0         0         0         1 ]
Running main.c in luhn_test_of_credit_card_numbers/
     49927398716	ok
     49927398717	not ok
1234567812345678	not ok
1234567812345670	ok
Running main.c in machine_code/
Running main.c in magic_squares_of_doubly_even_order/
Usage : ./main <integer specifying rows in magic square>Running main.c in magic_squares_of_singly_even_order/
Usage : ./main <integer specifying rows in magic square>Running main.c in magnanimous_numbers/

First 45 magnanimous numbers:
  0   1   2   3   4   5   6   7   8   9  11  12  14  16  20 
 21  23  25  29  30  32  34  38  41  43  47  49  50  52  56 
 58  61  65  67  70  74  76  83  85  89  92  94  98 101 110 

241st through 250th magnanimous numbers:
17992 19972 20209 20261 20861 22061 22201 22801 22885 24407 

391st through 400th magnanimous numbers:
486685 488489 515116 533176 551558 559952 595592 595598 600881 602081 
Running main.c in map_range/
Mapping [0,10] to [-1,0] at intervals of 1:
f(0) = -1
f(1) = -0.9
f(2) = -0.8
f(3) = -0.7
f(4) = -0.6
f(5) = -0.5
f(6) = -0.4
f(7) = -0.3
f(8) = -0.2
f(9) = -0.1
f(10) = 0
Running main.c in matrix_chain_multiplication/
Dims  : [5, 6, 3, 1]
Order : (A(BC))
Cost  : 48

Dims  : [1, 5, 25, 30, 100, 70, 2, 1, 100, 250, 1, 1000, 2]
Order : ((((((((AB)C)D)E)F)G)(H(IJ)))(KL))
Cost  : 38120

Dims  : [1000, 1, 500, 12, 1, 700, 2500, 3, 2, 5, 14, 10]
Order : (A((((((BC)D)(((EF)G)H))I)J)K))
Cost  : 1773740

Running main.c in matrix_transposition/
0 5 1
1 6 0
2 7 0
3 8 0
4 9 42
Running main.c in mcnuggets_problem/
Maximum non-McNuggets number is 43
Running main.c in mean_angle/

Mean Angle for 1st set : -0.000000 degrees
Mean Angle for 2nd set : -90.000000 degrees
Mean Angle for 3rd set : 20.000000 degrees
Running main.c in middle_three_digits/
123: 123
12345: 234
1234567: 345
987654321: 654
10001: 000
-10001: 000
-123: 123
-100: 100
100: 100
-12345: 234
1: error
2: error
-1: error
-10: error
2002: error
-2002: error
0: error
1234567890: error
Running main.c in modular_inverse/
1969
Running main.c in monty_hall_problem/

After 3000000 games, I won 2001491 by switching.  That is 66.716367%. Running main.c in multiplication_tables/
  1   2   3   4   5   6   7   8   9  10  11  12
------------------------------------------------+
  1   2   3   4   5   6   7   8   9  10  11  12 | 1
      4   6   8  10  12  14  16  18  20  22  24 | 2
          9  12  15  18  21  24  27  30  33  36 | 3
             16  20  24  28  32  36  40  44  48 | 4
                 25  30  35  40  45  50  55  60 | 5
                     36  42  48  54  60  66  72 | 6
                         49  56  63  70  77  84 | 7
                             64  72  80  88  96 | 8
                                 81  90  99 108 | 9
                                    100 110 120 | 10
                                        121 132 | 11
                                            144 | 12
Running main.c in munchausen_numbers/
1
3435
Running main.c in mutual_recursion/
 1  1  2  2  3  3  4  5  5  6  6  7  8  8  9  9 10 11 11 12 
 0  0  1  2  2  3  4  4  5  6  6  7  7  8  9  9 10 11 11 12 
Running main.c in n_plus_one_half/
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
Running main.c in n_queens_problem/

No. 1
-----
Q . . . 
 . .Q. .
. . . .Q
 . . Q .
. Q . . 
 . . .Q.
.Q. . . 
 . Q . .

No. 2
-----
Q . . . 
 . . Q .
. . . .Q
 .Q. . .
. . . Q 
 . Q . .
.Q. . . 
 . .Q. .

No. 3
-----
Q . . . 
 . . .Q.
. .Q. . 
 . . Q .
. . . .Q
 Q . . .
. . Q . 
 .Q. . .

No. 4
-----
Q . . . 
 . . .Q.
. . Q . 
 . . . Q
.Q. . . 
 . Q . .
. . .Q. 
 .Q. . .

No. 5
-----
.Q. . . 
 . Q . .
. . .Q. 
 . . . Q
. Q . . 
Q. . . .
. . . Q 
 . .Q. .

No. 6
-----
.Q. . . 
 . .Q. .
. . . Q 
Q. . . .
. Q . . 
 . . . Q
. . .Q. 
 . Q . .

No. 7
-----
.Q. . . 
 . .Q. .
. . . Q 
 . Q . .
Q . . . 
 . . . Q
. . .Q. 
 .Q. . .

No. 8
-----
.Q. . . 
 . . Q .
Q . . . 
 . . .Q.
. .Q. . 
 . . . Q
. Q . . 
 . .Q. .

No. 9
-----
.Q. . . 
 . . Q .
. . . .Q
 .Q. . .
Q . . . 
 . Q . .
. . . Q 
 . .Q. .

No. 10
-----
.Q. . . 
 . . .Q.
. Q . . 
 . . Q .
. . . .Q
 . .Q. .
Q . . . 
 . Q . .

No. 11
-----
.Q. . . 
 . . .Q.
. . Q . 
 . . . Q
Q . . . 
 . Q . .
. . .Q. 
 .Q. . .

No. 12
-----
.Q. . . 
 . . . Q
. . .Q. 
Q. . . .
. Q . . 
 . .Q. .
. . . Q 
 . Q . .

No. 13
-----
. Q . . 
Q. . . .
. . . Q 
 . .Q. .
. . . .Q
 Q . . .
. .Q. . 
 . . Q .

No. 14
-----
. Q . . 
 . .Q. .
.Q. . . 
 . . . Q
Q . . . 
 . . .Q.
. .Q. . 
 . . Q .

No. 15
-----
. Q . . 
 . .Q. .
.Q. . . 
 . . . Q
. . .Q. 
 . Q . .
. . . Q 
Q. . . .

No. 16
-----
. Q . . 
 . .Q. .
. . . Q 
Q. . . .
. .Q. . 
 Q . . .
. . . .Q
 . . Q .

No. 17
-----
. Q . . 
 . .Q. .
. . . .Q
 . Q . .
Q . . . 
 . . .Q.
.Q. . . 
 . . Q .

No. 18
-----
. Q . . 
 . . Q .
.Q. . . 
 . .Q. .
. . . .Q
Q. . . .
. . . Q 
 . Q . .

No. 19
-----
. Q . . 
 . . Q .
.Q. . . 
 . . .Q.
Q . . . 
 . Q . .
. . . .Q
 . .Q. .

No. 20
-----
. Q . . 
 . . Q .
.Q. . . 
 . . .Q.
. . Q . 
Q. . . .
. . . .Q
 . Q . .

No. 21
-----
. Q . . 
 . . Q .
. .Q. . 
Q. . . .
. . . .Q
 . .Q. .
. . . Q 
 Q . . .

No. 22
-----
. Q . . 
 . . Q .
. .Q. . 
 Q . . .
. . . .Q
 . .Q. .
. . . Q 
Q. . . .

No. 23
-----
. Q . . 
 . . Q .
. . . .Q
Q. . . .
. .Q. . 
 . . .Q.
. . Q . 
 Q . . .

No. 24
-----
. Q . . 
 . . Q .
. . . .Q
Q. . . .
. . Q . 
 . . .Q.
.Q. . . 
 . Q . .

No. 25
-----
. Q . . 
 . . Q .
. . . .Q
 Q . . .
. .Q. . 
Q. . . .
. . . Q 
 . .Q. .

No. 26
-----
. Q . . 
 . . .Q.
.Q. . . 
 . . . Q
. . Q . 
Q. . . .
. .Q. . 
 . . Q .

No. 27
-----
. Q . . 
 . . .Q.
.Q. . . 
 . . . Q
. . .Q. 
 . Q . .
Q . . . 
 . .Q. .

No. 28
-----
. Q . . 
 . . . Q
. .Q. . 
 . . .Q.
Q . . . 
 . . Q .
.Q. . . 
 . .Q. .

No. 29
-----
. .Q. . 
Q. . . .
. . Q . 
 . . . Q
.Q. . . 
 . . .Q.
. Q . . 
 . . Q .

No. 30
-----
. .Q. . 
Q. . . .
. . Q . 
 . . . Q
. . .Q. 
 .Q. . .
. . . Q 
 Q . . .

No. 31
-----
. .Q. . 
 Q . . .
. . Q . 
 . . . Q
. . .Q. 
Q. . . .
. Q . . 
 . . .Q.

No. 32
-----
. .Q. . 
 Q . . .
. . . Q 
 .Q. . .
. . .Q. 
 . . . Q
Q . . . 
 . .Q. .

No. 33
-----
. .Q. . 
 Q . . .
. . . Q 
 .Q. . .
. . .Q. 
 . . . Q
. . Q . 
Q. . . .

No. 34
-----
. .Q. . 
 Q . . .
. . . Q 
 . .Q. .
Q . . . 
 . . . Q
. . .Q. 
 .Q. . .

No. 35
-----
. .Q. . 
 Q . . .
. . . .Q
 . .Q. .
. . . Q 
Q. . . .
. Q . . 
 . . Q .

No. 36
-----
. .Q. . 
 Q . . .
. . . .Q
 . . Q .
Q . . . 
 .Q. . .
. . Q . 
 . . .Q.

No. 37
-----
. .Q. . 
 . . Q .
Q . . . 
 . .Q. .
.Q. . . 
 . . . Q
. Q . . 
 . . .Q.

No. 38
-----
. .Q. . 
 . . Q .
. . . .Q
 Q . . .
. . . Q 
Q. . . .
. Q . . 
 . .Q. .

No. 39
-----
. .Q. . 
 . . Q .
. . . .Q
 .Q. . .
Q . . . 
 . . .Q.
. . Q . 
 Q . . .

No. 40
-----
. .Q. . 
 . . .Q.
Q . . . 
 . . . Q
. . Q . 
 Q . . .
. . .Q. 
 .Q. . .

No. 41
-----
. .Q. . 
 . . .Q.
. Q . . 
 . . . Q
.Q. . . 
 . .Q. .
Q . . . 
 . . Q .

No. 42
-----
. .Q. . 
 . . .Q.
. . Q . 
 Q . . .
. . .Q. 
Q. . . .
. Q . . 
 . . . Q

No. 43
-----
. .Q. . 
 . . .Q.
. . Q . 
 .Q. . .
Q . . . 
 . . Q .
. . . .Q
 Q . . .

No. 44
-----
. .Q. . 
 . . . Q
Q . . . 
 .Q. . .
. . .Q. 
 Q . . .
. . . Q 
 . .Q. .

No. 45
-----
. .Q. . 
 . . . Q
Q . . . 
 . .Q. .
. . . Q 
 Q . . .
. . .Q. 
 .Q. . .

No. 46
-----
. .Q. . 
 . . . Q
. . Q . 
 .Q. . .
Q . . . 
 . . .Q.
.Q. . . 
 . . Q .

No. 47
-----
. . Q . 
Q. . . .
. .Q. . 
 . . Q .
. . . .Q
 Q . . .
. . . Q 
 .Q. . .

No. 48
-----
. . Q . 
Q. . . .
. . . .Q
 . Q . .
.Q. . . 
 . . .Q.
. Q . . 
 . . Q .

No. 49
-----
. . Q . 
Q. . . .
. . . .Q
 . . Q .
. Q . . 
 . . .Q.
.Q. . . 
 . Q . .

No. 50
-----
. . Q . 
 Q . . .
. .Q. . 
 . . Q .
. . . .Q
 .Q. . .
Q . . . 
 . . .Q.

No. 51
-----
. . Q . 
 Q . . .
. .Q. . 
 . . .Q.
. Q . . 
 . . . Q
. . .Q. 
Q. . . .

No. 52
-----
. . Q . 
 Q . . .
. . .Q. 
Q. . . .
. . . Q 
 . Q . .
. . . .Q
 .Q. . .

No. 53
-----
. . Q . 
 Q . . .
. . . .Q
Q. . . .
. .Q. . 
 . . .Q.
. Q . . 
 . . Q .

No. 54
-----
. . Q . 
 .Q. . .
Q . . . 
 . . Q .
. . . .Q
 Q . . .
. .Q. . 
 . . .Q.

No. 55
-----
. . Q . 
 .Q. . .
Q . . . 
 . . .Q.
.Q. . . 
 . . . Q
. . .Q. 
 . Q . .

No. 56
-----
. . Q . 
 .Q. . .
. . . .Q
 . Q . .
. . . Q 
Q. . . .
. . .Q. 
 Q . . .

No. 57
-----
. . Q . 
 . . .Q.
Q . . . 
 .Q. . .
. . . .Q
 . . Q .
. .Q. . 
 Q . . .

No. 58
-----
. . Q . 
 . . .Q.
Q . . . 
 . Q . .
.Q. . . 
 . . . Q
. . .Q. 
 .Q. . .

No. 59
-----
. . Q . 
 . . .Q.
.Q. . . 
 . Q . .
. . . .Q
Q. . . .
. Q . . 
 . . Q .

No. 60
-----
. . Q . 
 . . .Q.
.Q. . . 
 . . Q .
. Q . . 
Q. . . .
. .Q. . 
 . . . Q

No. 61
-----
. . Q . 
 . . .Q.
.Q. . . 
 . . Q .
. Q . . 
Q. . . .
. . . .Q
 . Q . .

No. 62
-----
. . Q . 
 . . .Q.
. .Q. . 
Q. . . .
. Q . . 
 . . . Q
. . .Q. 
 Q . . .

No. 63
-----
. . Q . 
 . . . Q
. .Q. . 
Q. . . .
. Q . . 
 . . Q .
.Q. . . 
 . . .Q.

No. 64
-----
. . Q . 
 . . . Q
. .Q. . 
Q. . . .
. . . Q 
 Q . . .
. . .Q. 
 .Q. . .

No. 65
-----
. . .Q. 
Q. . . .
. . Q . 
 Q . . .
. . . .Q
 .Q. . .
. . . Q 
 . Q . .

No. 66
-----
. . .Q. 
 Q . . .
. . . Q 
Q. . . .
. Q . . 
 . .Q. .
. . . .Q
 . Q . .

No. 67
-----
. . .Q. 
 Q . . .
. . . Q 
Q. . . .
. .Q. . 
 . . . Q
. . Q . 
 .Q. . .

No. 68
-----
. . .Q. 
 .Q. . .
Q . . . 
 . . .Q.
. . Q . 
 . . . Q
.Q. . . 
 . Q . .

No. 69
-----
. . .Q. 
 .Q. . .
Q . . . 
 . . . Q
. .Q. . 
 Q . . .
. . . Q 
 . .Q. .

No. 70
-----
. . .Q. 
 .Q. . .
Q . . . 
 . . . Q
. . Q . 
 Q . . .
. .Q. . 
 . . .Q.

No. 71
-----
. . .Q. 
 .Q. . .
. . Q . 
 . . .Q.
Q . . . 
 . Q . .
.Q. . . 
 . . . Q

No. 72
-----
. . .Q. 
 .Q. . .
. . Q . 
 . . . Q
Q . . . 
 . Q . .
.Q. . . 
 . . .Q.

No. 73
-----
. . .Q. 
 .Q. . .
. . . Q 
 Q . . .
. .Q. . 
 . . . Q
Q . . . 
 . .Q. .

No. 74
-----
. . .Q. 
 .Q. . .
. . . Q 
 Q . . .
. . . .Q
 . .Q. .
Q . . . 
 . Q . .

No. 75
-----
. . .Q. 
 .Q. . .
. . . Q 
 . Q . .
Q . . . 
 . . . Q
.Q. . . 
 . .Q. .

No. 76
-----
. . .Q. 
 . Q . .
Q . . . 
 . .Q. .
. . . .Q
 Q . . .
. . . Q 
 .Q. . .

No. 77
-----
. . .Q. 
 . Q . .
.Q. . . 
 . . . Q
. . Q . 
 . . .Q.
Q . . . 
 .Q. . .

No. 78
-----
. . .Q. 
 . Q . .
. . . Q 
Q. . . .
. Q . . 
 . .Q. .
.Q. . . 
 . . . Q

No. 79
-----
. . .Q. 
 . Q . .
. . . Q 
Q. . . .
. . . .Q
 Q . . .
. . Q . 
 .Q. . .

No. 80
-----
. . .Q. 
 . . . Q
.Q. . . 
 . Q . .
Q . . . 
 . . .Q.
. . Q . 
 .Q. . .

No. 81
-----
. . . Q 
Q. . . .
. Q . . 
 . . . Q
. . .Q. 
 . Q . .
.Q. . . 
 . .Q. .

No. 82
-----
. . . Q 
 Q . . .
. .Q. . 
Q. . . .
. . . .Q
 . .Q. .
. Q . . 
 . . Q .

No. 83
-----
. . . Q 
 Q . . .
. . .Q. 
 .Q. . .
Q . . . 
 . Q . .
. . . .Q
 . .Q. .

No. 84
-----
. . . Q 
 .Q. . .
Q . . . 
 . . Q .
. . . .Q
 . .Q. .
.Q. . . 
 . Q . .

No. 85
-----
. . . Q 
 .Q. . .
. . . .Q
 Q . . .
. . Q . 
Q. . . .
. . .Q. 
 . Q . .

No. 86
-----
. . . Q 
 . Q . .
.Q. . . 
 . .Q. .
. . . .Q
Q. . . .
. Q . . 
 . . Q .

No. 87
-----
. . . Q 
 . Q . .
.Q. . . 
 . . . Q
. . .Q. 
Q. . . .
. Q . . 
 . .Q. .

No. 88
-----
. . . Q 
 . .Q. .
. Q . . 
Q. . . .
. . .Q. 
 . . . Q
.Q. . . 
 . Q . .

No. 89
-----
. . . .Q
 Q . . .
. .Q. . 
Q. . . .
. . . Q 
 . .Q. .
. Q . . 
 . . Q .

No. 90
-----
. . . .Q
 Q . . .
. . Q . 
 .Q. . .
Q . . . 
 . . .Q.
. .Q. . 
 . . Q .

No. 91
-----
. . . .Q
 .Q. . .
Q . . . 
 . . Q .
.Q. . . 
 . .Q. .
. . . Q 
 . Q . .

No. 92
-----
. . . .Q
 . Q . .
Q . . . 
 .Q. . .
. . .Q. 
 Q . . .
. . . Q 
 . .Q. .
Running main.c in negative_base_numbers/
          10 encoded in base  -2 =        11110
       11110 decoded in base  -2 =           10

         146 encoded in base  -3 =        21102
       21102 decoded in base  -3 =          146

          15 encoded in base -10 =          195
         195 decoded in base -10 =           15

          12 encoded in base -62 =            C
           C decoded in base -62 =           12

Running main.c in next_highest_int_from_digits/
0 -> 0
9 -> 0
12 -> 21
21 -> 0
12453 -> 12534
738440 -> 740348
45072010 -> 45072100
95322020 -> 95322200
9589776899767587796600 -> 9589776899767587900667
Running main.c in nimber_arithmetic/
 + |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
--- -------------------------------------------------
 0 |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
 1 |  1  0  3  2  5  4  7  6  9  8 11 10 13 12 15 14
 2 |  2  3  0  1  6  7  4  5 10 11  8  9 14 15 12 13
 3 |  3  2  1  0  7  6  5  4 11 10  9  8 15 14 13 12
 4 |  4  5  6  7  0  1  2  3 12 13 14 15  8  9 10 11
 5 |  5  4  7  6  1  0  3  2 13 12 15 14  9  8 11 10
 6 |  6  7  4  5  2  3  0  1 14 15 12 13 10 11  8  9
 7 |  7  6  5  4  3  2  1  0 15 14 13 12 11 10  9  8
 8 |  8  9 10 11 12 13 14 15  0  1  2  3  4  5  6  7
 9 |  9  8 11 10 13 12 15 14  1  0  3  2  5  4  7  6
10 | 10 11  8  9 14 15 12 13  2  3  0  1  6  7  4  5
11 | 11 10  9  8 15 14 13 12  3  2  1  0  7  6  5  4
12 | 12 13 14 15  8  9 10 11  4  5  6  7  0  1  2  3
13 | 13 12 15 14  9  8 11 10  5  4  7  6  1  0  3  2
14 | 14 15 12 13 10 11  8  9  6  7  4  5  2  3  0  1
15 | 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0

 * |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
--- -------------------------------------------------
 0 |  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 1 |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
 2 |  0  2  3  1  8 10 11  9 12 14 15 13  4  6  7  5
 3 |  0  3  1  2 12 15 13 14  4  7  5  6  8 11  9 10
 4 |  0  4  8 12  6  2 14 10 11 15  3  7 13  9  5  1
 5 |  0  5 10 15  2  7  8 13  3  6  9 12  1  4 11 14
 6 |  0  6 11 13 14  8  5  3  7  1 12 10  9 15  2  4
 7 |  0  7  9 14 10 13  3  4 15  8  6  1  5  2 12 11
 8 |  0  8 12  4 11  3  7 15 13  5  1  9  6 14 10  2
 9 |  0  9 14  7 15  6  1  8  5 12 11  2 10  3  4 13
10 |  0 10 15  5  3  9 12  6  1 11 14  4  2  8 13  7
11 |  0 11 13  6  7 12 10  1  9  2  4 15 14  5  3  8
12 |  0 12  4  8 13  1  9  5  6 10  2 14 11  7 15  3
13 |  0 13  6 11  9  4 15  2 14  3  8  5  7 10  1 12
14 |  0 14  7  9  5 11  2 12 10  4 13  3 15  1  8  6
15 |  0 15  5 10  1 14  4 11  2 13  7  8  3 12  6  9

21508 + 42689 = 62149
21508 * 42689 = 35202
Running main.c in nth/
Set [0,25]:
0th 1st 2nd 3rd 4th 5th 6th 7th 8th 9th 10th 11th 12th 13th 14th 15th 16th 17th 18th 19th 20th 21st 22nd 23rd 24th 25th 
Set [250,265]:
250th 251st 252nd 253rd 254th 255th 256th 257th 258th 259th 260th 261st 262nd 263rd 264th 265th 
Set [1000,1025]:
1000th 1001st 1002nd 1003rd 1004th 1005th 1006th 1007th 1008th 1009th 1010th 1011th 1012th 1013th 1014th 1015th 1016th 1017th 1018th 1019th 1020th 1021st 1022nd 1023rd 1024th 1025th 
Running main.c in null_object/
object is null
Running main.c in number_names/
minus forty-two
one thousand, nine hundred eighty-four
ten thousand, 
one thousand, and twenty-four
one trillion, one billion, one million, one thousand, and one
one hundred twenty-three million four hundred fifty-six thousand seven hundred eighty-nine trillion trillion trillion trillion, twelve billion three hundred forty-five million six hundred seventy-eight thousand nine hundredand one trillion trillion trillion, two hundred thirty-four billion five hundred sixty-seven million eight hundred ninety thousand one hundred twenty-three trillion trillion, four hundred fifty-six billion seven hundred eighty-nine million twelve thousand three hundred forty-five trillion, six hundred seventy-eight billion, nine hundred million, and one
Running main.c in numerical_integration/
  leftrect [ 0,1] num: +0.235322, an: 0.250000
 rightrect [ 0,1] num: +0.245025, an: 0.250000
   midrect [ 0,1] num: +0.240137, an: 0.250000
 trapezium [ 0,1] num: +0.250025, an: 0.250000
   simpson [ 0,1] num: +0.250000, an: 0.250000

  leftrect [ 0,1] num: +4.654000, an: 4.605170
 rightrect [ 0,1] num: +4.555991, an: 4.605170
   midrect [ 0,1] num: +4.603772, an: 4.605170
 trapezium [ 0,1] num: +4.605986, an: 4.605170
   simpson [ 0,1] num: +4.605170, an: 4.605170

  leftrect [ 0,1] num: +12499992.500730, an: 12500000.000000
 rightrect [ 0,1] num: +12499997.500729, an: 12500000.000000
   midrect [ 0,1] num: +12499995.000729, an: 12500000.000000
 trapezium [ 0,1] num: +12500000.000000, an: 12500000.000000
   simpson [ 0,1] num: +12500000.000000, an: 12500000.000000

  leftrect [ 0,1] num: +17999991.001392, an: 18000000.000000
 rightrect [ 0,1] num: +17999997.001390, an: 18000000.000000
   midrect [ 0,1] num: +17999994.001391, an: 18000000.000000
 trapezium [ 0,1] num: +18000000.000000, an: 18000000.000000
   simpson [ 0,1] num: +18000000.000000, an: 18000000.000000

Running main.c in one_dimensional_cellular_automata/
###_##_#_#_#_#__#__
#_#####_#_#_#______
_##___##_#_#_______
_##___###_#________
_##___#_##_________
_##____###_________
_##____#_#_________
_##_____#__________
_##________________
Running main.c in one_of_n_lines_in_a_file/
99836 100489 99896 99840 99967 100050 99499 100254 100198 99971
Running main.c in perfect_numbers/
6
28
Running main.c in phrase_reversals/
Original:       "rosetta code phrase reversal"
Reversed:       "lasrever esarhp edoc attesor"
Reversed words: "attesor edoc esarhp lasrever"
Reversed order: "reversal phrase code rosetta"
Running main.c in population_count/
1 2 2 4 3 6 6 5 6 8 9 13 10 11 14 15 11 14 14 17 17 20 19 22 16 18 24 30 25 25 
evil  : 0 3 5 6 9 10 12 15 17 18 20 23 24 27 29 30 33 34 36 39 40 43 45 46 48 51 53 54 57 58 
odious: 1 2 4 7 8 11 13 14 16 19 21 22 25 26 28 31 32 35 37 38 41 42 44 47 49 50 52 55 56 59 
Running main.c in price_fraction/
Compilation failed in price_fraction/
Running main.c in proper_divisors/
1: 
2: 1 
3: 1 
4: 1 2 
5: 1 
6: 1 2 3 
7: 1 
8: 1 2 4 
9: 1 3 
10: 1 2 5 
18480 with 79 divisors
Running main.c in pythagorean_quadruples/
1 2 4 5 8 10 16 20 32 40 64 80 128 160 256 320 512 640 1024 1280 2048 
Running main.c in pythagorean_triples/
Up to 10: 0 triples, 0 primitives.
Up to 100: 17 triples, 7 primitives.
Up to 1000: 325 triples, 70 primitives.
Up to 10000: 4858 triples, 703 primitives.
Up to 100000: 64741 triples, 7026 primitives.
Up to 1000000: 808950 triples, 70229 primitives.
Up to 10000000: 9706567 triples, 702309 primitives.
Up to 100000000: 113236940 triples, 7023027 primitives.
Running main.c in quickselect_algorithm/
0: 0
1: 1
2: 2
3: 3
4: 4
5: 5
6: 6
7: 7
8: 8
9: 9
Running main.c in range_expansion/
-3 -2 -1 3 4 5 7 8 9 10 11 17 18 19 20 
Ok
-6 -5 -4 -3 -2 -1 0 1 2 3 
Syntax error at --1,3-5,7-11,14,15,17-20
Running main.c in range_extraction/
0-2,4,6-8,11,12,14-25,27-33,35-39
Running main.c in rational/
6
28
496
8128
Running main.c in repeat/
Example
Example
Example
Example
Running main.c in repeat_a_string/
hahahahaha
Running main.c in roman_numerals_decode/
MCmxC	1990
MMVIII	2008
MDClXVI	1666
MCXLUJ	1146
Running main.c in root_mean_square/
6.204837
Running main.c in roots_of_unity/
1
1,  -1
1,  -0.5+0.87i,  -0.5-0.87i
1,  i,  -1,  -i
1,  0.31+0.95i,  -0.81+0.59i,  -0.81-0.59i,  0.31-0.95i
1,  0.5+0.87i,  -0.5+0.87i,  -1,  -0.5-0.87i,  0.5-0.87i
1,  0.62+0.78i,  -0.22+0.97i,  -0.9+0.43i,  -0.9-0.43i,  -0.22-0.97i,  0.62-0.78i
1,  0.71+0.71i,  i,  -0.71+0.71i,  -1,  -0.71-0.71i,  -i,  0.71-0.71i
1,  0.77+0.64i,  0.17+0.98i,  -0.5+0.87i,  -0.94+0.34i,  -0.94-0.34i,  -0.5-0.87i,  0.17-0.98i,  0.77-0.64i
Running main.c in runge_kutta_method/
x	y	rel. err.
------------
0	1	0
1	1.5625	-9.3262e-08
2	4	-2.2987e-07
3	10.5625	-2.75462e-07
4	25	-2.49396e-07
5	52.5625	-2.05844e-07
6	100	-1.65946e-07
7	175.562	-1.33956e-07
8	289	-1.09222e-07
9	451.562	-9.01828e-08
10	676	-7.54191e-08
Running main.c in set/
a is: 0 3 6 9
	0 in set a
	1 not in set a
	2 not in set a
	3 in set a
	4 not in set a
b is: 3 5 6 9 10
union(a, b) is: 0 3 5 6 9 10
c = common(a, b) is: 3 6 9
a - b is: 0
b - a is: 5 10
b is not a subset of a
c is a subset of a
union(a, b) - common(a, b) equals union(a - b, b - a)
Running main.c in sexy_primes/
Number of sexy prime pairs less than 1,000,035 = 16,386
The last 5 are:
  [[999371 999377 ]] [999431 999437 ]] [999721 999727 ]] [999763 999769 ]] [999953 999959 ]] ]

Number of sexy prime triplets less than 1,000,035 = 2,900
The last 5 are:
  [[997427 997433 997439 ]] [997541 997547 997553 ]] [998071 998077 998083 ]] [998617 998623 998629 ]] [998737 998743 998749 ]] ]

Number of sexy prime quadruplets less than 1,000,035 = 325
The last 5 are:
  [[977351 977357 977363 977369 ]] [983771 983777 983783 983789 ]] [986131 986137 986143 986149 ]] [990371 990377 990383 990389 ]] [997091 997097 997103 997109 ]] ]

Number of sexy prime quintuplets less than 1,000,035 = 1
The last 1 is:
  [[5 11 17 23 29 ]] ]

Number of unsexy primes less than 1,000,035 = 48,627
The last 10 are:
  [[999853 999863 999883 999907 999917 999931 999961 999979 999983 1000003 ]]
Running main.c in short_circuit_evaluation/
I am a
false && true = false

I am a
true || false = true

I am a
I am b
true && false = false

I am a
I am b
false || false = false

Script execution completed.
