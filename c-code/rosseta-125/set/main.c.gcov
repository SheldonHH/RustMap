        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2: 
        -:    3:typedef unsigned int set_t; /* probably 32 bits; change according to need */
        -:    4: 
       18:    5:void show_set(set_t x, const char *name)
        -:    6:{
        -:    7:	int i;
       18:    8:	printf("%s is:", name);
      180:    9:	for (i = 0; (1U << i) <= x; i++)
      225:   10:		if (x & (1U << i))
       63:   11:			printf(" %d", i);
       18:   12:	putchar('\n');
       18:   13:}
        -:   14: 
        3:   15:int main(void)
        -:   16:{
        -:   17:	int i;
        -:   18:	set_t a, b, c;
        -:   19: 
        3:   20:	a = 0; /* empty set */
       15:   21:	for (i = 0; i < 10; i += 3) /* add 0 3 6 9 to set a */
       12:   22:		a |= (1U << i);
        3:   23:	show_set(a, "a");
        -:   24: 
       18:   25:	for (i = 0; i < 5; i++)
       15:   26:		printf("\t%d%s in set a\n", i, (a & (1U << i)) ? "":" not");
        -:   27: 
        3:   28:	b = a;
        3:   29:	b |= (1U << 5); b |= (1U << 10); /* b is a plus 5, 10 */
        3:   30:	b &= ~(1U << 0);	/* sans 0 */
        3:   31:	show_set(b, "b");
        -:   32: 
        3:   33:	show_set(a | b, "union(a, b)");
        3:   34:	show_set(c = a & b, "c = common(a, b)");
        3:   35:	show_set(a & ~b, "a - b"); /* diff, not arithmetic minus */
        3:   36:	show_set(b & ~a, "b - a");
        3:   37:	printf("b is%s a subset of a\n", !(b & ~a) ? "" : " not");
        3:   38:	printf("c is%s a subset of a\n", !(c & ~a) ? "" : " not");
        -:   39: 
        3:   40:	printf("union(a, b) - common(a, b) %s union(a - b, b - a)\n",
        3:   41:		((a | b) & ~(a & b)) == ((a & ~b) | (b & ~a))
        -:   42:			? "equals" : "does not equal");
        -:   43: 
        3:   44:	return 0;
        -:   45:}
