{"type": "source_file", "children": [{"type": "line_comment", "children": [], "start_byte": 0, "end_byte": 51, "start_point": [0, 0], "end_point": [0, 51], "text": "// use crate::bzip2::scc_92_compressedStreamEOF::*;"}, {"type": "line_comment", "children": [], "start_byte": 52, "end_byte": 100, "start_point": [1, 0], "end_point": [1, 48], "text": "// use crate::global_vars::bzip2_c2::{progName};"}, {"type": "line_comment", "children": [], "start_byte": 102, "end_byte": 209, "start_point": [3, 0], "end_point": [3, 107], "text": "// \u6211\u4eec\u6682\u65f6\u4e0d\u5904\u7406\u4fe1\u53f7\u6355\u83b7\u3002\u771f\u6b63\u7684Rust\u4ee3\u7801\u53ef\u80fd\u4f1a\u4f7f\u7528`ctrlc`\u5e93\u8fdb\u884cControl-C\u6355\u83b7\u3002\n// \u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u53ea\u91cd\u70b9\u5728\u6a21\u62dfcleanUpAndFail\u548cmySignalCatcher\u3002\n\n// \u5047\u8bbeI"}, {"type": "line_comment", "children": [], "start_byte": 210, "end_byte": 287, "start_point": [4, 0], "end_point": [4, 77], "text": "tNative\u662fi32\u7684typedef\ntype IntNative = i32;\nuse crate::global_vars::bzip2_c2::*"}, {"type": "line_comment", "children": [], "start_byte": 289, "end_byte": 323, "start_point": [6, 0], "end_point": [6, 34], "text": "fn clean_up_and_fail(n: IntNative)"}, {"type": "type_item", "children": [{"type": "type", "children": [], "start_byte": 324, "end_byte": 328, "start_point": [7, 0], "end_point": [7, 4], "text": "{\n  "}, {"type": "type_identifier", "children": [], "start_byte": 329, "end_byte": 338, "start_point": [7, 5], "end_point": [7, 14], "text": " // \u5728\u8fd9\u91cc\uff0c\u6211"}, {"type": "=", "children": [], "start_byte": 339, "end_byte": 340, "start_point": [7, 15], "end_point": [7, 16], "text": "\u53ef"}, {"type": "primitive_type", "children": [], "start_byte": 341, "end_byte": 344, "start_point": [7, 17], "end_point": [7, 20], "text": "\u53ea\u8bb0\u5f55"}, {"type": ";", "children": [], "start_byte": 344, "end_byte": 345, "start_point": [7, 20], "end_point": [7, 21], "text": "\u8c03"}], "start_byte": 324, "end_byte": 345, "start_point": [7, 0], "end_point": [7, 21], "text": "{\n    // \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8bb0\u5f55\u8c03"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 346, "end_byte": 349, "start_point": [8, 0], "end_point": [8, 3], "text": "\uff0c\u4e0d\u6267"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 350, "end_byte": 355, "start_point": [8, 4], "end_point": [8, 9], "text": "\u4efb\u4f55\u64cd\u4f5c\n"}, {"type": "::", "children": [], "start_byte": 355, "end_byte": 357, "start_point": [8, 9], "end_point": [8, 11], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 357, "end_byte": 368, "start_point": [8, 11], "end_point": [8, 22], "text": "  // \u6216\u8005\u6267\u884c\u6240\u9700"}], "start_byte": 350, "end_byte": 368, "start_point": [8, 4], "end_point": [8, 22], "text": "\u4efb\u4f55\u64cd\u4f5c\n    // \u6216\u8005\u6267\u884c\u6240\u9700"}, {"type": "::", "children": [], "start_byte": 368, "end_byte": 370, "start_point": [8, 22], "end_point": [8, 24], "text": "\u7684\u6e05"}, {"type": "identifier", "children": [], "start_byte": 370, "end_byte": 378, "start_point": [8, 24], "end_point": [8, 32], "text": "\u7406/\u5931\u8d25\u884c\u4e3a\n}"}], "start_byte": 350, "end_byte": 378, "start_point": [8, 4], "end_point": [8, 32], "text": "\u4efb\u4f55\u64cd\u4f5c\n    // \u6216\u8005\u6267\u884c\u6240\u9700\u7684\u6e05\u7406/\u5931\u8d25\u884c\u4e3a\n}"}, {"type": "::", "children": [], "start_byte": 378, "end_byte": 380, "start_point": [8, 32], "end_point": [8, 34], "text": "\n\n"}, {"type": "*", "children": [], "start_byte": 380, "end_byte": 381, "start_point": [8, 34], "end_point": [8, 35], "text": "p"}], "start_byte": 350, "end_byte": 381, "start_point": [8, 4], "end_point": [8, 35], "text": "\u4efb\u4f55\u64cd\u4f5c\n    // \u6216\u8005\u6267\u884c\u6240\u9700\u7684\u6e05\u7406/\u5931\u8d25\u884c\u4e3a\n}\n\np"}, {"type": ";", "children": [], "start_byte": 381, "end_byte": 382, "start_point": [8, 35], "end_point": [8, 36], "text": "u"}], "start_byte": 346, "end_byte": 382, "start_point": [8, 0], "end_point": [8, 36], "text": "\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\n    // \u6216\u8005\u6267\u884c\u6240\u9700\u7684\u6e05\u7406/\u5931\u8d25\u884c\u4e3a\n}\n\npu"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 383, "end_byte": 385, "start_point": [9, 0], "end_point": [9, 2], "text": " f"}, {"type": "identifier", "children": [], "start_byte": 386, "end_byte": 403, "start_point": [9, 3], "end_point": [9, 20], "text": " my_signal_catche"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 403, "end_byte": 404, "start_point": [9, 20], "end_point": [9, 21], "text": "r"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 404, "end_byte": 405, "start_point": [9, 21], "end_point": [9, 22], "text": "("}, {"type": ":", "children": [], "start_byte": 405, "end_byte": 406, "start_point": [9, 22], "end_point": [9, 23], "text": "n"}, {"type": "type_identifier", "children": [], "start_byte": 407, "end_byte": 416, "start_point": [9, 24], "end_point": [9, 33], "text": " IntNativ"}], "start_byte": 404, "end_byte": 416, "start_point": [9, 21], "end_point": [9, 33], "text": "(n: IntNativ"}, {"type": ")", "children": [], "start_byte": 416, "end_byte": 417, "start_point": [9, 33], "end_point": [9, 34], "text": "e"}], "start_byte": 403, "end_byte": 417, "start_point": [9, 20], "end_point": [9, 34], "text": "r(n: IntNative"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 418, "end_byte": 419, "start_point": [9, 35], "end_point": [9, 36], "text": " "}, {"type": "line_comment", "children": [], "start_byte": 424, "end_byte": 490, "start_point": [10, 4], "end_point": [10, 70], "text": " // \u6253\u5370\u9519\u8bef\u6d88\u606f\u5230stderr\n    unsafe {\n        let prog_str = std::str::fr"}, {"type": "line_comment", "children": [], "start_byte": 495, "end_byte": 538, "start_point": [11, 4], "end_point": [11, 47], "text": "f8(&PROG_NAME)\n            .unwrap_or(\"Inva"}, {"type": "}", "children": [], "start_byte": 539, "end_byte": 540, "start_point": [12, 0], "end_point": [12, 1], "text": "i"}], "start_byte": 418, "end_byte": 540, "start_point": [9, 35], "end_point": [12, 1], "text": " {\n    // \u6253\u5370\u9519\u8bef\u6d88\u606f\u5230stderr\n    unsafe {\n        let prog_str = std::str::from_utf8(&PROG_NAME)\n            .unwrap_or(\"Invali"}], "start_byte": 383, "end_byte": 540, "start_point": [9, 0], "end_point": [12, 1], "text": " fn my_signal_catcher(n: IntNative) {\n    // \u6253\u5370\u9519\u8bef\u6d88\u606f\u5230stderr\n    unsafe {\n        let prog_str = std::str::from_utf8(&PROG_NAME)\n            .unwrap_or(\"Invali"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 542, "end_byte": 545, "start_point": [14, 0], "end_point": [14, 3], "text": "tr\""}], "start_byte": 542, "end_byte": 545, "start_point": [14, 0], "end_point": [14, 3], "text": "tr\""}, {"type": "fn", "children": [], "start_byte": 546, "end_byte": 548, "start_point": [14, 4], "end_point": [14, 6], "text": "\n "}, {"type": "identifier", "children": [], "start_byte": 549, "end_byte": 566, "start_point": [14, 7], "end_point": [14, 24], "text": "          .split("}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 566, "end_byte": 567, "start_point": [14, 24], "end_point": [14, 25], "text": "'"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 567, "end_byte": 568, "start_point": [14, 25], "end_point": [14, 26], "text": "\\"}, {"type": ":", "children": [], "start_byte": 568, "end_byte": 569, "start_point": [14, 26], "end_point": [14, 27], "text": "0"}, {"type": "type_identifier", "children": [], "start_byte": 570, "end_byte": 579, "start_point": [14, 28], "end_point": [14, 37], "text": ")\n       "}], "start_byte": 567, "end_byte": 579, "start_point": [14, 25], "end_point": [14, 37], "text": "\\0')\n       "}, {"type": ")", "children": [], "start_byte": 579, "end_byte": 580, "start_point": [14, 37], "end_point": [14, 38], "text": " "}], "start_byte": 566, "end_byte": 580, "start_point": [14, 24], "end_point": [14, 38], "text": "'\\0')\n        "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 581, "end_byte": 582, "start_point": [14, 39], "end_point": [14, 40], "text": " "}, {"type": "line_comment", "children": [], "start_byte": 587, "end_byte": 617, "start_point": [15, 4], "end_point": [15, 34], "text": "xt()\n            .unwrap_or(\"I"}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 622, "end_byte": 628, "start_point": [16, 4], "end_point": [16, 10], "text": "dStr\")"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 629, "end_byte": 630, "start_point": [16, 11], "end_point": [16, 12], "text": "\n"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 639, "end_byte": 642, "start_point": [17, 8], "end_point": [17, 11], "text": "pri"}, {"type": "identifier", "children": [], "start_byte": 643, "end_byte": 651, "start_point": [17, 12], "end_point": [17, 20], "text": "tln!(\"\\n"}, {"type": "=", "children": [], "start_byte": 652, "end_byte": 653, "start_point": [17, 21], "end_point": [17, 22], "text": "}"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 654, "end_byte": 657, "start_point": [17, 23], "end_point": [17, 26], "text": " Co"}, {"type": "::", "children": [], "start_byte": 657, "end_byte": 659, "start_point": [17, 26], "end_point": [17, 28], "text": "nt"}, {"type": "identifier", "children": [], "start_byte": 659, "end_byte": 662, "start_point": [17, 28], "end_point": [17, 31], "text": "rol"}], "start_byte": 654, "end_byte": 662, "start_point": [17, 23], "end_point": [17, 31], "text": " Control"}, {"type": "::", "children": [], "start_byte": 662, "end_byte": 664, "start_point": [17, 31], "end_point": [17, 33], "text": "-C"}, {"type": "identifier", "children": [], "start_byte": 664, "end_byte": 673, "start_point": [17, 33], "end_point": [17, 42], "text": " or simil"}], "start_byte": 654, "end_byte": 673, "start_point": [17, 23], "end_point": [17, 42], "text": " Control-C or simil"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 673, "end_byte": 674, "start_point": [17, 42], "end_point": [17, 43], "text": "a"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 674, "end_byte": 675, "start_point": [17, 43], "end_point": [17, 44], "text": "r"}, {"type": "identifier", "children": [], "start_byte": 675, "end_byte": 684, "start_point": [17, 44], "end_point": [17, 53], "text": " caught, "}], "start_byte": 674, "end_byte": 684, "start_point": [17, 43], "end_point": [17, 53], "text": "r caught, "}, {"type": ")", "children": [], "start_byte": 684, "end_byte": 685, "start_point": [17, 53], "end_point": [17, 54], "text": "q"}], "start_byte": 673, "end_byte": 685, "start_point": [17, 42], "end_point": [17, 54], "text": "ar caught, q"}], "start_byte": 654, "end_byte": 685, "start_point": [17, 23], "end_point": [17, 54], "text": " Control-C or similar caught, q"}, {"type": ".", "children": [], "start_byte": 698, "end_byte": 699, "start_point": [18, 12], "end_point": [18, 13], "text": "o"}, {"type": "field_identifier", "children": [], "start_byte": 699, "end_byte": 708, "start_point": [18, 13], "end_point": [18, 22], "text": "g_str);\n "}], "start_byte": 654, "end_byte": 708, "start_point": [17, 23], "end_point": [18, 22], "text": " Control-C or similar caught, quitting.\", prog_str);\n "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 708, "end_byte": 709, "start_point": [18, 22], "end_point": [18, 23], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 709, "end_byte": 710, "start_point": [18, 23], "end_point": [18, 24], "text": " "}, {"type": "\"", "children": [], "start_byte": 720, "end_byte": 721, "start_point": [18, 34], "end_point": [18, 35], "text": " "}], "start_byte": 709, "end_byte": 721, "start_point": [18, 23], "end_point": [18, 35], "text": "  }\n\n    // "}, {"type": ")", "children": [], "start_byte": 721, "end_byte": 722, "start_point": [18, 35], "end_point": [18, 36], "text": "\u8c03"}], "start_byte": 708, "end_byte": 722, "start_point": [18, 22], "end_point": [18, 36], "text": "   }\n\n    // \u8c03"}], "start_byte": 654, "end_byte": 722, "start_point": [17, 23], "end_point": [18, 36], "text": " Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03"}, {"type": ".", "children": [], "start_byte": 735, "end_byte": 736, "start_point": [19, 12], "end_point": [19, 13], "text": "i"}, {"type": "field_identifier", "children": [], "start_byte": 736, "end_byte": 741, "start_point": [19, 13], "end_point": [19, 18], "text": "l\u51fd\u6570\u8fdb\u884c"}], "start_byte": 654, "end_byte": 741, "start_point": [17, 23], "end_point": [19, 18], "text": " Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 741, "end_byte": 742, "start_point": [19, 18], "end_point": [19, 19], "text": "\u6e05"}, {"type": "char_literal", "children": [], "start_byte": 742, "end_byte": 746, "start_point": [19, 19], "end_point": [19, 23], "text": "\u7406\u5e76\u9000\u51fa"}, {"type": ")", "children": [], "start_byte": 746, "end_byte": 747, "start_point": [19, 23], "end_point": [19, 24], "text": "\u7a0b"}], "start_byte": 741, "end_byte": 747, "start_point": [19, 18], "end_point": [19, 24], "text": "\u6e05\u7406\u5e76\u9000\u51fa\u7a0b"}], "start_byte": 654, "end_byte": 747, "start_point": [17, 23], "end_point": [19, 24], "text": " Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b"}, {"type": ".", "children": [], "start_byte": 760, "end_byte": 761, "start_point": [20, 12], "end_point": [20, 13], "text": "p"}, {"type": "field_identifier", "children": [], "start_byte": 761, "end_byte": 765, "start_point": [20, 13], "end_point": [20, 17], "text": "_and"}], "start_byte": 654, "end_byte": 765, "start_point": [17, 23], "end_point": [20, 17], "text": " Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 765, "end_byte": 766, "start_point": [20, 17], "end_point": [20, 18], "text": "_"}, {"type": ")", "children": [], "start_byte": 766, "end_byte": 767, "start_point": [20, 18], "end_point": [20, 19], "text": "f"}], "start_byte": 765, "end_byte": 767, "start_point": [20, 17], "end_point": [20, 19], "text": "_f"}], "start_byte": 654, "end_byte": 767, "start_point": [17, 23], "end_point": [20, 19], "text": " Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_f"}, {"type": ".", "children": [], "start_byte": 780, "end_byte": 781, "start_point": [21, 12], "end_point": [21, 13], "text": "f"}, {"type": "field_identifier", "children": [], "start_byte": 781, "end_byte": 790, "start_point": [21, 13], "end_point": [21, 22], "text": "g(test)]\n"}], "start_byte": 654, "end_byte": 790, "start_point": [17, 23], "end_point": [21, 22], "text": " Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\n"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 790, "end_byte": 791, "start_point": [21, 22], "end_point": [21, 23], "text": "m"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 791, "end_byte": 792, "start_point": [21, 23], "end_point": [21, 24], "text": "o"}, {"type": "\"", "children": [], "start_byte": 802, "end_byte": 803, "start_point": [21, 34], "end_point": [21, 35], "text": " "}], "start_byte": 791, "end_byte": 803, "start_point": [21, 23], "end_point": [21, 35], "text": "od tests {\n "}, {"type": ")", "children": [], "start_byte": 803, "end_byte": 804, "start_point": [21, 35], "end_point": [21, 36], "text": " "}], "start_byte": 790, "end_byte": 804, "start_point": [21, 22], "end_point": [21, 36], "text": "mod tests {\n  "}], "start_byte": 654, "end_byte": 804, "start_point": [17, 23], "end_point": [21, 36], "text": " Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n  "}, {"type": ";", "children": [], "start_byte": 804, "end_byte": 805, "start_point": [21, 36], "end_point": [21, 37], "text": " "}], "start_byte": 639, "end_byte": 805, "start_point": [17, 8], "end_point": [21, 37], "text": "println!(\"\\n{}: Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n   "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 814, "end_byte": 822, "start_point": [22, 8], "end_point": [22, 16], "text": "r::*;\n\n "}, {"type": "!", "children": [], "start_byte": 822, "end_byte": 823, "start_point": [22, 16], "end_point": [22, 17], "text": " "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 823, "end_byte": 824, "start_point": [22, 17], "end_point": [22, 18], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 824, "end_byte": 825, "start_point": [22, 18], "end_point": [22, 19], "text": " "}, {"type": "escape_sequence", "children": [], "start_byte": 825, "end_byte": 827, "start_point": [22, 19], "end_point": [22, 21], "text": "#["}, {"type": "\"", "children": [], "start_byte": 869, "end_byte": 870, "start_point": [22, 63], "end_point": [22, 64], "text": " "}], "start_byte": 824, "end_byte": 870, "start_point": [22, 18], "end_point": [22, 64], "text": " #[test]\n    fn test_my_signal_catcher() {\n   "}, {"type": "identifier", "children": [], "start_byte": 872, "end_byte": 880, "start_point": [22, 66], "end_point": [22, 74], "text": "   // \u53d1\u9001"}, {"type": ")", "children": [], "start_byte": 880, "end_byte": 881, "start_point": [22, 74], "end_point": [22, 75], "text": "\u4fe1"}], "start_byte": 823, "end_byte": 881, "start_point": [22, 17], "end_point": [22, 75], "text": "  #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1"}], "start_byte": 814, "end_byte": 881, "start_point": [22, 8], "end_point": [22, 75], "text": "r::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1"}, {"type": ";", "children": [], "start_byte": 881, "end_byte": 882, "start_point": [22, 75], "end_point": [22, 76], "text": "\u53f7"}], "start_byte": 814, "end_byte": 882, "start_point": [22, 8], "end_point": [22, 76], "text": "r::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1\u53f7"}, {"type": "}", "children": [], "start_byte": 887, "end_byte": 888, "start_point": [23, 4], "end_point": [23, 5], "text": "S"}], "start_byte": 629, "end_byte": 888, "start_point": [16, 11], "end_point": [23, 5], "text": "\n        eprintln!(\"\\n{}: Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1\u53f7\u4ee5\u89e6\u53d1myS"}], "start_byte": 622, "end_byte": 888, "start_point": [16, 4], "end_point": [23, 5], "text": "dStr\");\n        eprintln!(\"\\n{}: Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1\u53f7\u4ee5\u89e6\u53d1myS"}], "start_byte": 622, "end_byte": 888, "start_point": [16, 4], "end_point": [23, 5], "text": "dStr\");\n        eprintln!(\"\\n{}: Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1\u53f7\u4ee5\u89e6\u53d1myS"}, {"type": "line_comment", "children": [], "start_byte": 894, "end_byte": 950, "start_point": [25, 4], "end_point": [25, 60], "text": "atcher\n        // \u6ce8\u610f\uff1a\u6b64\u6d4b\u8bd5\u4e0d\u4f1a\u771f\u6b63\u6d4b\u8bd5\u5728\u771f\u5b9e\u73af\u5883\u4e2d\u63a5\u6536\u5230Control-C\u4fe1\u53f7\u65f6\u7684\u884c\u4e3a\uff0c\n"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 955, "end_byte": 972, "start_point": [26, 4], "end_point": [26, 21], "text": "   // \u800c\u53ea\u662f\u6a21\u62df\u8c03\u7528\u4fe1\u53f7\u5904\u7406"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 972, "end_byte": 973, "start_point": [26, 21], "end_point": [26, 22], "text": "\u51fd"}, {"type": "integer_literal", "children": [], "start_byte": 973, "end_byte": 974, "start_point": [26, 22], "end_point": [26, 23], "text": "\u6570"}, {"type": ")", "children": [], "start_byte": 974, "end_byte": 975, "start_point": [26, 23], "end_point": [26, 24], "text": "\u3002"}], "start_byte": 972, "end_byte": 975, "start_point": [26, 21], "end_point": [26, 24], "text": "\u51fd\u6570\u3002"}], "start_byte": 955, "end_byte": 975, "start_point": [26, 4], "end_point": [26, 24], "text": "   // \u800c\u53ea\u662f\u6a21\u62df\u8c03\u7528\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002"}, {"type": ";", "children": [], "start_byte": 975, "end_byte": 976, "start_point": [26, 24], "end_point": [26, 25], "text": "\n"}], "start_byte": 955, "end_byte": 976, "start_point": [26, 4], "end_point": [26, 25], "text": "   // \u800c\u53ea\u662f\u6a21\u62df\u8c03\u7528\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\n"}, {"type": "}", "children": [], "start_byte": 977, "end_byte": 978, "start_point": [27, 0], "end_point": [27, 1], "text": " "}], "start_byte": 581, "end_byte": 978, "start_point": [14, 39], "end_point": [27, 1], "text": "   .next()\n            .unwrap_or(\"InvalidStr\");\n        eprintln!(\"\\n{}: Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1\u53f7\u4ee5\u89e6\u53d1mySignalCatcher\n        // \u6ce8\u610f\uff1a\u6b64\u6d4b\u8bd5\u4e0d\u4f1a\u771f\u6b63\u6d4b\u8bd5\u5728\u771f\u5b9e\u73af\u5883\u4e2d\u63a5\u6536\u5230Control-C\u4fe1\u53f7\u65f6\u7684\u884c\u4e3a\uff0c\n        // \u800c\u53ea\u662f\u6a21\u62df\u8c03\u7528\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\n  "}], "start_byte": 542, "end_byte": 978, "start_point": [14, 0], "end_point": [27, 1], "text": "tr\")\n            .split('\\0')\n            .next()\n            .unwrap_or(\"InvalidStr\");\n        eprintln!(\"\\n{}: Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1\u53f7\u4ee5\u89e6\u53d1mySignalCatcher\n        // \u6ce8\u610f\uff1a\u6b64\u6d4b\u8bd5\u4e0d\u4f1a\u771f\u6b63\u6d4b\u8bd5\u5728\u771f\u5b9e\u73af\u5883\u4e2d\u63a5\u6536\u5230Control-C\u4fe1\u53f7\u65f6\u7684\u884c\u4e3a\uff0c\n        // \u800c\u53ea\u662f\u6a21\u62df\u8c03\u7528\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\n  "}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 979, "end_byte": 980, "start_point": [28, 0], "end_point": [28, 1], "text": " "}, {"type": "[", "children": [], "start_byte": 980, "end_byte": 981, "start_point": [28, 1], "end_point": [28, 2], "text": " "}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 981, "end_byte": 984, "start_point": [28, 2], "end_point": [28, 5], "text": "   "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 984, "end_byte": 985, "start_point": [28, 5], "end_point": [28, 6], "text": "m"}, {"type": "identifier", "children": [], "start_byte": 985, "end_byte": 989, "start_point": [28, 6], "end_point": [28, 10], "text": "y_si"}, {"type": ")", "children": [], "start_byte": 989, "end_byte": 990, "start_point": [28, 10], "end_point": [28, 11], "text": "g"}], "start_byte": 984, "end_byte": 990, "start_point": [28, 5], "end_point": [28, 11], "text": "my_sig"}], "start_byte": 981, "end_byte": 990, "start_point": [28, 2], "end_point": [28, 11], "text": "   my_sig"}, {"type": "]", "children": [], "start_byte": 990, "end_byte": 991, "start_point": [28, 11], "end_point": [28, 12], "text": "n"}], "start_byte": 979, "end_byte": 991, "start_point": [28, 0], "end_point": [28, 12], "text": "     my_sign"}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 992, "end_byte": 995, "start_point": [29, 0], "end_point": [29, 3], "text": "l_c"}, {"type": "identifier", "children": [], "start_byte": 996, "end_byte": 1001, "start_point": [29, 4], "end_point": [29, 9], "text": "tcher"}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 1002, "end_byte": 1003, "start_point": [29, 10], "end_point": [29, 11], "text": "0"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 1008, "end_byte": 1011, "start_point": [30, 4], "end_point": [30, 7], "text": "   "}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 1012, "end_byte": 1017, "start_point": [30, 8], "end_point": [30, 13], "text": "   //"}, {"type": "::", "children": [], "start_byte": 1017, "end_byte": 1019, "start_point": [30, 13], "end_point": [30, 15], "text": " \u9a8c"}, {"type": "*", "children": [], "start_byte": 1019, "end_byte": 1020, "start_point": [30, 15], "end_point": [30, 16], "text": "\u8bc1"}], "start_byte": 1012, "end_byte": 1020, "start_point": [30, 8], "end_point": [30, 16], "text": "   // \u9a8c\u8bc1"}, {"type": ";", "children": [], "start_byte": 1020, "end_byte": 1021, "start_point": [30, 16], "end_point": [30, 17], "text": "\u662f"}], "start_byte": 1008, "end_byte": 1021, "start_point": [30, 4], "end_point": [30, 17], "text": "       // \u9a8c\u8bc1\u662f"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 1027, "end_byte": 1028, "start_point": [32, 4], "end_point": [32, 5], "text": "\u7684"}, {"type": "[", "children": [], "start_byte": 1028, "end_byte": 1029, "start_point": [32, 5], "end_point": [32, 6], "text": "\u884c"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 1029, "end_byte": 1033, "start_point": [32, 6], "end_point": [32, 10], "text": "\u4e3a\uff0c\u4f8b\u5982"}], "start_byte": 1029, "end_byte": 1033, "start_point": [32, 6], "end_point": [32, 10], "text": "\u4e3a\uff0c\u4f8b\u5982"}, {"type": "]", "children": [], "start_byte": 1033, "end_byte": 1034, "start_point": [32, 10], "end_point": [32, 11], "text": "\u9a8c"}], "start_byte": 1027, "end_byte": 1034, "start_point": [32, 4], "end_point": [32, 11], "text": "\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\u9a8c"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 1039, "end_byte": 1041, "start_point": [33, 4], "end_point": [33, 6], "text": "nU"}, {"type": "identifier", "children": [], "start_byte": 1042, "end_byte": 1064, "start_point": [33, 7], "end_point": [33, 29], "text": "AndFail\u662f\u5426\u88ab\u8c03\u7528\n        /"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 1064, "end_byte": 1065, "start_point": [33, 29], "end_point": [33, 30], "text": "/"}, {"type": ")", "children": [], "start_byte": 1065, "end_byte": 1066, "start_point": [33, 30], "end_point": [33, 31], "text": " "}], "start_byte": 1064, "end_byte": 1066, "start_point": [33, 29], "end_point": [33, 31], "text": "/ "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1067, "end_byte": 1068, "start_point": [33, 32], "end_point": [33, 33], "text": "\u8fd9"}, {"type": "line_comment", "children": [], "start_byte": 1077, "end_byte": 1116, "start_point": [34, 8], "end_point": [34, 47], "text": "pAndFail\u7684mock\u5b9e\u73b0\uff09\n    }\n}\n"}, {"type": "line_comment", "children": [], "start_byte": 1125, "end_byte": 1221, "start_point": [35, 8], "end_point": [35, 104], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 1230, "end_byte": 1275, "start_point": [36, 8], "end_point": [36, 53], "text": ""}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1284, "end_byte": 1301, "start_point": [37, 8], "end_point": [37, 25], "text": ""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1301, "end_byte": 1302, "start_point": [37, 25], "end_point": [37, 26], "text": ""}, {"type": "integer_literal", "children": [], "start_byte": 1302, "end_byte": 1303, "start_point": [37, 26], "end_point": [37, 27], "text": ""}, {"type": ")", "children": [], "start_byte": 1303, "end_byte": 1304, "start_point": [37, 27], "end_point": [37, 28], "text": ""}], "start_byte": 1301, "end_byte": 1304, "start_point": [37, 25], "end_point": [37, 28], "text": ""}], "start_byte": 1284, "end_byte": 1304, "start_point": [37, 8], "end_point": [37, 28], "text": ""}, {"type": ";", "children": [], "start_byte": 1304, "end_byte": 1305, "start_point": [37, 28], "end_point": [37, 29], "text": ""}], "start_byte": 1284, "end_byte": 1305, "start_point": [37, 8], "end_point": [37, 29], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 1315, "end_byte": 1398, "start_point": [39, 8], "end_point": [39, 91], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 1407, "end_byte": 1455, "start_point": [40, 8], "end_point": [40, 56], "text": ""}, {"type": "}", "children": [], "start_byte": 1460, "end_byte": 1461, "start_point": [41, 4], "end_point": [41, 5], "text": ""}], "start_byte": 1067, "end_byte": 1461, "start_point": [33, 32], "end_point": [41, 5], "text": "\u8fd9\u53d6\u51b3\u4e8ecleanUpAndFail\u7684mock\u5b9e\u73b0\uff09\n    }\n}\n"}], "start_byte": 1039, "end_byte": 1461, "start_point": [33, 4], "end_point": [41, 5], "text": "nUpAndFail\u662f\u5426\u88ab\u8c03\u7528\n        // \uff08\u8fd9\u53d6\u51b3\u4e8ecleanUpAndFail\u7684mock\u5b9e\u73b0\uff09\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1462, "end_byte": 1463, "start_point": [42, 0], "end_point": [42, 1], "text": ""}], "start_byte": 1002, "end_byte": 1463, "start_point": [29, 10], "end_point": [42, 1], "text": "0);\n\n        // \u9a8c\u8bc1\u662f\u5426\u6267\u884c\u4e86\u671f\u671b\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\u9a8c\u8bc1cleanUpAndFail\u662f\u5426\u88ab\u8c03\u7528\n        // \uff08\u8fd9\u53d6\u51b3\u4e8ecleanUpAndFail\u7684mock\u5b9e\u73b0\uff09\n    }\n}\n"}], "start_byte": 992, "end_byte": 1463, "start_point": [29, 0], "end_point": [42, 1], "text": "l_catcher(0);\n\n        // \u9a8c\u8bc1\u662f\u5426\u6267\u884c\u4e86\u671f\u671b\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\u9a8c\u8bc1cleanUpAndFail\u662f\u5426\u88ab\u8c03\u7528\n        // \uff08\u8fd9\u53d6\u51b3\u4e8ecleanUpAndFail\u7684mock\u5b9e\u73b0\uff09\n    }\n}\n"}], "start_byte": 0, "end_byte": 1464, "start_point": [0, 0], "end_point": [43, 0], "text": "// use crate::bzip2::scc_92_compressedStreamEOF::*;\n// use crate::global_vars::bzip2_c2::{progName};\n\n// \u6211\u4eec\u6682\u65f6\u4e0d\u5904\u7406\u4fe1\u53f7\u6355\u83b7\u3002\u771f\u6b63\u7684Rust\u4ee3\u7801\u53ef\u80fd\u4f1a\u4f7f\u7528`ctrlc`\u5e93\u8fdb\u884cControl-C\u6355\u83b7\u3002\n// \u4e3a\u4e86\u7b80\u5316\uff0c\u6211\u4eec\u53ea\u91cd\u70b9\u5728\u6a21\u62dfcleanUpAndFail\u548cmySignalCatcher\u3002\n\n// \u5047\u8bbeIntNative\u662fi32\u7684typedef\ntype IntNative = i32;\nuse crate::global_vars::bzip2_c2::*;\nfn clean_up_and_fail(n: IntNative) {\n    // \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u8bb0\u5f55\u8c03\u7528\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\n    // \u6216\u8005\u6267\u884c\u6240\u9700\u7684\u6e05\u7406/\u5931\u8d25\u884c\u4e3a\n}\n\npub fn my_signal_catcher(n: IntNative) {\n    // \u6253\u5370\u9519\u8bef\u6d88\u606f\u5230stderr\n    unsafe {\n        let prog_str = std::str::from_utf8(&PROG_NAME)\n            .unwrap_or(\"InvalidStr\")\n            .split('\\0')\n            .next()\n            .unwrap_or(\"InvalidStr\");\n        eprintln!(\"\\n{}: Control-C or similar caught, quitting.\", prog_str);\n    }\n\n    // \u8c03\u7528cleanUpAndFail\u51fd\u6570\u8fdb\u884c\u6e05\u7406\u5e76\u9000\u51fa\u7a0b\u5e8f\n    clean_up_and_fail(1);\n}\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_my_signal_catcher() {\n        // \u53d1\u9001\u4fe1\u53f7\u4ee5\u89e6\u53d1mySignalCatcher\n        // \u6ce8\u610f\uff1a\u6b64\u6d4b\u8bd5\u4e0d\u4f1a\u771f\u6b63\u6d4b\u8bd5\u5728\u771f\u5b9e\u73af\u5883\u4e2d\u63a5\u6536\u5230Control-C\u4fe1\u53f7\u65f6\u7684\u884c\u4e3a\uff0c\n        // \u800c\u53ea\u662f\u6a21\u62df\u8c03\u7528\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\n        my_signal_catcher(0);\n\n        // \u9a8c\u8bc1\u662f\u5426\u6267\u884c\u4e86\u671f\u671b\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\u9a8c\u8bc1cleanUpAndFail\u662f\u5426\u88ab\u8c03\u7528\n        // \uff08\u8fd9\u53d6\u51b3\u4e8ecleanUpAndFail\u7684mock\u5b9e\u73b0\uff09\n    }\n}\n"}