{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 4, "end_byte": 9, "start_point": [0, 4], "end_point": [0, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 11, "end_byte": 16, "start_point": [0, 11], "end_point": [0, 16], "text": "bzlib"}], "start_byte": 4, "end_byte": 16, "start_point": [0, 4], "end_point": [0, 16], "text": "crate::bzlib"}, {"type": "::", "children": [], "start_byte": 16, "end_byte": 18, "start_point": [0, 16], "end_point": [0, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 18, "end_byte": 59, "start_point": [0, 18], "end_point": [0, 59], "text": "scc_47_BZ2_bzDecompressInit_48_bzReadOpen"}], "start_byte": 4, "end_byte": 59, "start_point": [0, 4], "end_point": [0, 59], "text": "crate::bzlib::scc_47_BZ2_bzDecompressInit_48_bzReadOpen"}, {"type": "::", "children": [], "start_byte": 59, "end_byte": 61, "start_point": [0, 59], "end_point": [0, 61], "text": "::"}, {"type": "*", "children": [], "start_byte": 61, "end_byte": 62, "start_point": [0, 61], "end_point": [0, 62], "text": "*"}], "start_byte": 4, "end_byte": 62, "start_point": [0, 4], "end_point": [0, 62], "text": "crate::bzlib::scc_47_BZ2_bzDecompressInit_48_bzReadOpen::*"}, {"type": ";", "children": [], "start_byte": 62, "end_byte": 63, "start_point": [0, 62], "end_point": [0, 63], "text": ";"}], "start_byte": 0, "end_byte": 63, "start_point": [0, 0], "end_point": [0, 63], "text": "use crate::bzlib::scc_47_BZ2_bzDecompressInit_48_bzReadOpen::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 64, "end_byte": 67, "start_point": [1, 0], "end_point": [1, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 68, "end_byte": 73, "start_point": [1, 4], "end_point": [1, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 73, "end_byte": 75, "start_point": [1, 9], "end_point": [1, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 75, "end_byte": 80, "start_point": [1, 11], "end_point": [1, 16], "text": "bzlib"}], "start_byte": 68, "end_byte": 80, "start_point": [1, 4], "end_point": [1, 16], "text": "crate::bzlib"}, {"type": "::", "children": [], "start_byte": 80, "end_byte": 82, "start_point": [1, 16], "end_point": [1, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 82, "end_byte": 119, "start_point": [1, 18], "end_point": [1, 55], "text": "scc_64_BZ2_bzDecompress_65_BZ2_bzRead"}], "start_byte": 68, "end_byte": 119, "start_point": [1, 4], "end_point": [1, 55], "text": "crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead"}, {"type": "::", "children": [], "start_byte": 119, "end_byte": 121, "start_point": [1, 55], "end_point": [1, 57], "text": "::"}, {"type": "*", "children": [], "start_byte": 121, "end_byte": 122, "start_point": [1, 57], "end_point": [1, 58], "text": "*"}], "start_byte": 68, "end_byte": 122, "start_point": [1, 4], "end_point": [1, 58], "text": "crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*"}, {"type": ";", "children": [], "start_byte": 122, "end_byte": 123, "start_point": [1, 58], "end_point": [1, 59], "text": ";"}], "start_byte": 64, "end_byte": 123, "start_point": [1, 0], "end_point": [1, 59], "text": "use crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 124, "end_byte": 127, "start_point": [2, 0], "end_point": [2, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 128, "end_byte": 133, "start_point": [2, 4], "end_point": [2, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 133, "end_byte": 135, "start_point": [2, 9], "end_point": [2, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 135, "end_byte": 140, "start_point": [2, 11], "end_point": [2, 16], "text": "bzlib"}], "start_byte": 128, "end_byte": 140, "start_point": [2, 4], "end_point": [2, 16], "text": "crate::bzlib"}, {"type": "::", "children": [], "start_byte": 140, "end_byte": 142, "start_point": [2, 16], "end_point": [2, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 142, "end_byte": 176, "start_point": [2, 18], "end_point": [2, 52], "text": "scc_17_root_10_BZ2_bzReadGetUnused"}], "start_byte": 128, "end_byte": 176, "start_point": [2, 4], "end_point": [2, 52], "text": "crate::bzlib::scc_17_root_10_BZ2_bzReadGetUnused"}, {"type": "::", "children": [], "start_byte": 176, "end_byte": 178, "start_point": [2, 52], "end_point": [2, 54], "text": "::"}, {"type": "*", "children": [], "start_byte": 178, "end_byte": 179, "start_point": [2, 54], "end_point": [2, 55], "text": "*"}], "start_byte": 128, "end_byte": 179, "start_point": [2, 4], "end_point": [2, 55], "text": "crate::bzlib::scc_17_root_10_BZ2_bzReadGetUnused::*"}, {"type": ";", "children": [], "start_byte": 179, "end_byte": 180, "start_point": [2, 55], "end_point": [2, 56], "text": ";"}], "start_byte": 124, "end_byte": 180, "start_point": [2, 0], "end_point": [2, 56], "text": "use crate::bzlib::scc_17_root_10_BZ2_bzReadGetUnused::*;"}, {"type": "line_comment", "children": [], "start_byte": 181, "end_byte": 236, "start_point": [3, 0], "end_point": [3, 55], "text": "// use crate::huffman::scc_66_BZ2_hbMakeCodeLengths::*;"}, {"type": "line_comment", "children": [], "start_byte": 237, "end_byte": 282, "start_point": [4, 0], "end_point": [4, 45], "text": "// use crate::bzip2::scc_18_root_11_utime::*;"}, {"type": "line_comment", "children": [], "start_byte": 283, "end_byte": 342, "start_point": [5, 0], "end_point": [5, 59], "text": "// use crate::bzlib::scc_17_root_10_BZ2_bzReadGetUnused::*;"}, {"type": "line_comment", "children": [], "start_byte": 343, "end_byte": 390, "start_point": [6, 0], "end_point": [6, 47], "text": "// use crate::bzlib::scc_50_BZ2_bzWriteOpen::*;"}, {"type": "line_comment", "children": [], "start_byte": 391, "end_byte": 434, "start_point": [7, 0], "end_point": [7, 43], "text": "// use crate::bzip2::scc_108_testStream::*;"}, {"type": "line_comment", "children": [], "start_byte": 435, "end_byte": 476, "start_point": [8, 0], "end_point": [8, 41], "text": "// use crate::bzip2::scc_100_myMalloc::*;"}, {"type": "line_comment", "children": [], "start_byte": 477, "end_byte": 520, "start_point": [9, 0], "end_point": [9, 43], "text": "// use crate::bzip2::scc_99_outOfMemory::*;"}, {"type": "line_comment", "children": [], "start_byte": 521, "end_byte": 583, "start_point": [10, 0], "end_point": [10, 62], "text": "// use crate::bzip2::scc_95_applySavedTimeInfoToOutputFile::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 584, "end_byte": 587, "start_point": [11, 0], "end_point": [11, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 588, "end_byte": 593, "start_point": [11, 4], "end_point": [11, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 593, "end_byte": 595, "start_point": [11, 9], "end_point": [11, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 595, "end_byte": 606, "start_point": [11, 11], "end_point": [11, 22], "text": "global_vars"}], "start_byte": 588, "end_byte": 606, "start_point": [11, 4], "end_point": [11, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 606, "end_byte": 608, "start_point": [11, 22], "end_point": [11, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 608, "end_byte": 616, "start_point": [11, 24], "end_point": [11, 32], "text": "bzip2_c5"}], "start_byte": 588, "end_byte": 616, "start_point": [11, 4], "end_point": [11, 32], "text": "crate::global_vars::bzip2_c5"}, {"type": "::", "children": [], "start_byte": 616, "end_byte": 618, "start_point": [11, 32], "end_point": [11, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 618, "end_byte": 619, "start_point": [11, 34], "end_point": [11, 35], "text": "*"}], "start_byte": 588, "end_byte": 619, "start_point": [11, 4], "end_point": [11, 35], "text": "crate::global_vars::bzip2_c5::*"}, {"type": ";", "children": [], "start_byte": 619, "end_byte": 620, "start_point": [11, 35], "end_point": [11, 36], "text": ";"}], "start_byte": 584, "end_byte": 620, "start_point": [11, 0], "end_point": [11, 36], "text": "use crate::global_vars::bzip2_c5::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 621, "end_byte": 624, "start_point": [12, 0], "end_point": [12, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 625, "end_byte": 630, "start_point": [12, 4], "end_point": [12, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 630, "end_byte": 632, "start_point": [12, 9], "end_point": [12, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 632, "end_byte": 643, "start_point": [12, 11], "end_point": [12, 22], "text": "global_vars"}], "start_byte": 625, "end_byte": 643, "start_point": [12, 4], "end_point": [12, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 643, "end_byte": 645, "start_point": [12, 22], "end_point": [12, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 645, "end_byte": 653, "start_point": [12, 24], "end_point": [12, 32], "text": "bzip2_c2"}], "start_byte": 625, "end_byte": 653, "start_point": [12, 4], "end_point": [12, 32], "text": "crate::global_vars::bzip2_c2"}, {"type": "::", "children": [], "start_byte": 653, "end_byte": 655, "start_point": [12, 32], "end_point": [12, 34], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 655, "end_byte": 656, "start_point": [12, 34], "end_point": [12, 35], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 656, "end_byte": 665, "start_point": [12, 35], "end_point": [12, 44], "text": "PROG_NAME"}, {"type": "}", "children": [], "start_byte": 665, "end_byte": 666, "start_point": [12, 44], "end_point": [12, 45], "text": "}"}], "start_byte": 655, "end_byte": 666, "start_point": [12, 34], "end_point": [12, 45], "text": "{PROG_NAME}"}], "start_byte": 625, "end_byte": 666, "start_point": [12, 4], "end_point": [12, 45], "text": "crate::global_vars::bzip2_c2::{PROG_NAME}"}, {"type": ";", "children": [], "start_byte": 666, "end_byte": 667, "start_point": [12, 45], "end_point": [12, 46], "text": ";"}], "start_byte": 621, "end_byte": 667, "start_point": [12, 0], "end_point": [12, 46], "text": "use crate::global_vars::bzip2_c2::{PROG_NAME};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 668, "end_byte": 671, "start_point": [13, 0], "end_point": [13, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 672, "end_byte": 677, "start_point": [13, 4], "end_point": [13, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 677, "end_byte": 679, "start_point": [13, 9], "end_point": [13, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 679, "end_byte": 690, "start_point": [13, 11], "end_point": [13, 22], "text": "global_vars"}], "start_byte": 672, "end_byte": 690, "start_point": [13, 4], "end_point": [13, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 690, "end_byte": 692, "start_point": [13, 22], "end_point": [13, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 692, "end_byte": 700, "start_point": [13, 24], "end_point": [13, 32], "text": "bzip2_c1"}], "start_byte": 672, "end_byte": 700, "start_point": [13, 4], "end_point": [13, 32], "text": "crate::global_vars::bzip2_c1"}, {"type": "::", "children": [], "start_byte": 700, "end_byte": 702, "start_point": [13, 32], "end_point": [13, 34], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 702, "end_byte": 703, "start_point": [13, 34], "end_point": [13, 35], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 703, "end_byte": 712, "start_point": [13, 35], "end_point": [13, 44], "text": "verbosity"}, {"type": ",", "children": [], "start_byte": 712, "end_byte": 713, "start_point": [13, 44], "end_point": [13, 45], "text": ","}, {"type": "identifier", "children": [], "start_byte": 713, "end_byte": 719, "start_point": [13, 45], "end_point": [13, 51], "text": "bzFile"}, {"type": "}", "children": [], "start_byte": 719, "end_byte": 720, "start_point": [13, 51], "end_point": [13, 52], "text": "}"}], "start_byte": 702, "end_byte": 720, "start_point": [13, 34], "end_point": [13, 52], "text": "{verbosity,bzFile}"}], "start_byte": 672, "end_byte": 720, "start_point": [13, 4], "end_point": [13, 52], "text": "crate::global_vars::bzip2_c1::{verbosity,bzFile}"}, {"type": ";", "children": [], "start_byte": 720, "end_byte": 721, "start_point": [13, 52], "end_point": [13, 53], "text": ";"}], "start_byte": 668, "end_byte": 721, "start_point": [13, 0], "end_point": [13, 53], "text": "use crate::global_vars::bzip2_c1::{verbosity,bzFile};"}, {"type": "line_comment", "children": [], "start_byte": 724, "end_byte": 755, "start_point": [16, 0], "end_point": [16, 31], "text": "// testStream ( FILE *zStream )"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 756, "end_byte": 759, "start_point": [17, 0], "end_point": [17, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 760, "end_byte": 763, "start_point": [17, 4], "end_point": [17, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 763, "end_byte": 765, "start_point": [17, 7], "end_point": [17, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 765, "end_byte": 767, "start_point": [17, 9], "end_point": [17, 11], "text": "fs"}], "start_byte": 760, "end_byte": 767, "start_point": [17, 4], "end_point": [17, 11], "text": "std::fs"}, {"type": "::", "children": [], "start_byte": 767, "end_byte": 769, "start_point": [17, 11], "end_point": [17, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 769, "end_byte": 773, "start_point": [17, 13], "end_point": [17, 17], "text": "File"}], "start_byte": 760, "end_byte": 773, "start_point": [17, 4], "end_point": [17, 17], "text": "std::fs::File"}, {"type": ";", "children": [], "start_byte": 773, "end_byte": 774, "start_point": [17, 17], "end_point": [17, 18], "text": ";"}], "start_byte": 756, "end_byte": 774, "start_point": [17, 0], "end_point": [17, 18], "text": "use std::fs::File;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 775, "end_byte": 778, "start_point": [18, 0], "end_point": [18, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 779, "end_byte": 782, "start_point": [18, 4], "end_point": [18, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 782, "end_byte": 784, "start_point": [18, 7], "end_point": [18, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 784, "end_byte": 786, "start_point": [18, 9], "end_point": [18, 11], "text": "io"}], "start_byte": 779, "end_byte": 786, "start_point": [18, 4], "end_point": [18, 11], "text": "std::io"}, {"type": "::", "children": [], "start_byte": 786, "end_byte": 788, "start_point": [18, 11], "end_point": [18, 13], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 788, "end_byte": 789, "start_point": [18, 13], "end_point": [18, 14], "text": "{"}, {"type": "self", "children": [], "start_byte": 789, "end_byte": 793, "start_point": [18, 14], "end_point": [18, 18], "text": "self"}, {"type": ",", "children": [], "start_byte": 793, "end_byte": 794, "start_point": [18, 18], "end_point": [18, 19], "text": ","}, {"type": "identifier", "children": [], "start_byte": 795, "end_byte": 804, "start_point": [18, 20], "end_point": [18, 29], "text": "ErrorKind"}, {"type": "}", "children": [], "start_byte": 804, "end_byte": 805, "start_point": [18, 29], "end_point": [18, 30], "text": "}"}], "start_byte": 788, "end_byte": 805, "start_point": [18, 13], "end_point": [18, 30], "text": "{self, ErrorKind}"}], "start_byte": 779, "end_byte": 805, "start_point": [18, 4], "end_point": [18, 30], "text": "std::io::{self, ErrorKind}"}, {"type": ";", "children": [], "start_byte": 805, "end_byte": 806, "start_point": [18, 30], "end_point": [18, 31], "text": ";"}], "start_byte": 775, "end_byte": 806, "start_point": [18, 0], "end_point": [18, 31], "text": "use std::io::{self, ErrorKind};"}, {"type": "line_comment", "children": [], "start_byte": 808, "end_byte": 874, "start_point": [20, 0], "end_point": [20, 66], "text": "// Assuming bzFile and other required types are defined elsewhere."}, {"type": "line_comment", "children": [], "start_byte": 875, "end_byte": 961, "start_point": [21, 0], "end_point": [21, 86], "text": "// Please provide the definitions if they are different from standard implementations."}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 963, "end_byte": 966, "start_point": [23, 0], "end_point": [23, 3], "text": "pub"}], "start_byte": 963, "end_byte": 966, "start_point": [23, 0], "end_point": [23, 3], "text": "pub"}, {"type": "fn", "children": [], "start_byte": 967, "end_byte": 969, "start_point": [23, 4], "end_point": [23, 6], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 970, "end_byte": 981, "start_point": [23, 7], "end_point": [23, 18], "text": "test_stream"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 981, "end_byte": 982, "start_point": [23, 18], "end_point": [23, 19], "text": "("}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 982, "end_byte": 990, "start_point": [23, 19], "end_point": [23, 27], "text": "z_stream"}, {"type": ":", "children": [], "start_byte": 990, "end_byte": 991, "start_point": [23, 27], "end_point": [23, 28], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 992, "end_byte": 993, "start_point": [23, 29], "end_point": [23, 30], "text": "&"}, {"type": "mutable_specifier", "children": [], "start_byte": 993, "end_byte": 996, "start_point": [23, 30], "end_point": [23, 33], "text": "mut"}, {"type": "type_identifier", "children": [], "start_byte": 997, "end_byte": 1001, "start_point": [23, 34], "end_point": [23, 38], "text": "File"}], "start_byte": 992, "end_byte": 1001, "start_point": [23, 29], "end_point": [23, 38], "text": "&mut File"}], "start_byte": 982, "end_byte": 1001, "start_point": [23, 19], "end_point": [23, 38], "text": "z_stream: &mut File"}, {"type": ")", "children": [], "start_byte": 1001, "end_byte": 1002, "start_point": [23, 38], "end_point": [23, 39], "text": ")"}], "start_byte": 981, "end_byte": 1002, "start_point": [23, 18], "end_point": [23, 39], "text": "(z_stream: &mut File)"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1003, "end_byte": 1004, "start_point": [23, 40], "end_point": [23, 41], "text": "{"}, {"type": "line_comment", "children": [], "start_byte": 1005, "end_byte": 1052, "start_point": [24, 0], "end_point": [24, 47], "text": "//     let mut bzf: Option<Box<bzFile>> = None;"}, {"type": "line_comment", "children": [], "start_byte": 1053, "end_byte": 1078, "start_point": [25, 0], "end_point": [25, 25], "text": "//     let mut bzerr = 0;"}, {"type": "line_comment", "children": [], "start_byte": 1079, "end_byte": 1107, "start_point": [26, 0], "end_point": [26, 28], "text": "//     let mut n_unused = 0;"}, {"type": "line_comment", "children": [], "start_byte": 1108, "end_byte": 1137, "start_point": [27, 0], "end_point": [27, 29], "text": "//     let mut stream_no = 0;"}, {"type": "line_comment", "children": [], "start_byte": 1138, "end_byte": 1172, "start_point": [28, 0], "end_point": [28, 34], "text": "//     let mut obuf = [0u8; 5000];"}, {"type": "line_comment", "children": [], "start_byte": 1173, "end_byte": 1209, "start_point": [29, 0], "end_point": [29, 36], "text": "//     let mut unused = [0u8; 5000];"}, {"type": "line_comment", "children": [], "start_byte": 1211, "end_byte": 1254, "start_point": [31, 0], "end_point": [31, 43], "text": "//     if z_stream.metadata()?.len() == 0 {"}, {"type": "line_comment", "children": [], "start_byte": 1255, "end_byte": 1327, "start_point": [32, 0], "end_point": [32, 72], "text": "//         return Err(io::Error::new(ErrorKind::Other, \"Stream error\"));"}, {"type": "line_comment", "children": [], "start_byte": 1328, "end_byte": 1336, "start_point": [33, 0], "end_point": [33, 8], "text": "//     }"}, {"type": "line_comment", "children": [], "start_byte": 1338, "end_byte": 1351, "start_point": [35, 0], "end_point": [35, 13], "text": "//     loop {"}, {"type": "line_comment", "children": [], "start_byte": 1352, "end_byte": 1465, "start_point": [36, 0], "end_point": [36, 113], "text": "//         bzf = bz2_bzread_open(&mut bzerr, z_stream, unsafe { verbosity }, unsafe { SMALL_MODE } as i32, None);"}, {"type": "line_comment", "children": [], "start_byte": 1467, "end_byte": 1510, "start_point": [38, 0], "end_point": [38, 43], "text": "//         if bzf.is_none() || bzerr != 0 {"}, {"type": "line_comment", "children": [], "start_byte": 1511, "end_byte": 1585, "start_point": [39, 0], "end_point": [39, 74], "text": "//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));"}, {"type": "line_comment", "children": [], "start_byte": 1586, "end_byte": 1598, "start_point": [40, 0], "end_point": [40, 12], "text": "//         }"}, {"type": "line_comment", "children": [], "start_byte": 1600, "end_byte": 1626, "start_point": [42, 0], "end_point": [42, 26], "text": "//         stream_no += 1;"}, {"type": "line_comment", "children": [], "start_byte": 1628, "end_byte": 1657, "start_point": [44, 0], "end_point": [44, 29], "text": "//         while bzerr == 0 {"}, {"type": "line_comment", "children": [], "start_byte": 1658, "end_byte": 1738, "start_point": [45, 0], "end_point": [45, 80], "text": "//             let _ = BZ2_bzRead(&mut bzerr, bzf.as_mut().unwrap(), &mut obuf);"}, {"type": "line_comment", "children": [], "start_byte": 1739, "end_byte": 1770, "start_point": [46, 0], "end_point": [46, 31], "text": "//             if bzerr == -5 {"}, {"type": "line_comment", "children": [], "start_byte": 1771, "end_byte": 1849, "start_point": [47, 0], "end_point": [47, 78], "text": "//                 return Err(io::Error::new(ErrorKind::Other, \"Read error\"));"}, {"type": "line_comment", "children": [], "start_byte": 1850, "end_byte": 1866, "start_point": [48, 0], "end_point": [48, 16], "text": "//             }"}, {"type": "line_comment", "children": [], "start_byte": 1867, "end_byte": 1879, "start_point": [49, 0], "end_point": [49, 12], "text": "//         }"}, {"type": "line_comment", "children": [], "start_byte": 1881, "end_byte": 1907, "start_point": [51, 0], "end_point": [51, 26], "text": "//         if bzerr != 4 {"}, {"type": "line_comment", "children": [], "start_byte": 1908, "end_byte": 1982, "start_point": [52, 0], "end_point": [52, 74], "text": "//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));"}, {"type": "line_comment", "children": [], "start_byte": 1983, "end_byte": 1995, "start_point": [53, 0], "end_point": [53, 12], "text": "//         }"}, {"type": "line_comment", "children": [], "start_byte": 1997, "end_byte": 2051, "start_point": [55, 0], "end_point": [55, 54], "text": "//         let mut unused_tmp: Option<*mut i8> = None;"}, {"type": "line_comment", "children": [], "start_byte": 2052, "end_byte": 2165, "start_point": [56, 0], "end_point": [56, 113], "text": "//         bz2_bz_read_get_unused(&mut Some(bzerr), bzf.as_mut().unwrap(), &mut unused_tmp, &mut Some(n_unused));"}, {"type": "line_comment", "children": [], "start_byte": 2167, "end_byte": 2193, "start_point": [58, 0], "end_point": [58, 26], "text": "//         if bzerr != 0 {"}, {"type": "line_comment", "children": [], "start_byte": 2194, "end_byte": 2240, "start_point": [59, 0], "end_point": [59, 46], "text": "//             panic!(\"test:bzReadGetUnused\");"}, {"type": "line_comment", "children": [], "start_byte": 2241, "end_byte": 2253, "start_point": [60, 0], "end_point": [60, 12], "text": "//         }"}, {"type": "line_comment", "children": [], "start_byte": 2255, "end_byte": 2297, "start_point": [62, 0], "end_point": [62, 42], "text": "//         if let Some(ptr) = unused_tmp {"}, {"type": "line_comment", "children": [], "start_byte": 2298, "end_byte": 2411, "start_point": [63, 0], "end_point": [63, 113], "text": "//             let unused_tmp_slice = unsafe { std::slice::from_raw_parts(ptr as *const u8, n_unused as usize) };"}, {"type": "line_comment", "children": [], "start_byte": 2412, "end_byte": 2489, "start_point": [64, 0], "end_point": [64, 77], "text": "//             unused[..n_unused as usize].copy_from_slice(unused_tmp_slice);"}, {"type": "line_comment", "children": [], "start_byte": 2490, "end_byte": 2502, "start_point": [65, 0], "end_point": [65, 12], "text": "//         }"}, {"type": "line_comment", "children": [], "start_byte": 2504, "end_byte": 2570, "start_point": [67, 0], "end_point": [67, 66], "text": "//         BZ2_bzReadClose(&mut Some(bzerr), bzf.take().unwrap());"}, {"type": "line_comment", "children": [], "start_byte": 2572, "end_byte": 2598, "start_point": [69, 0], "end_point": [69, 26], "text": "//         if bzerr != 0 {"}, {"type": "line_comment", "children": [], "start_byte": 2599, "end_byte": 2647, "start_point": [70, 0], "end_point": [70, 48], "text": "//             panic!(\"test:bzReadClose error\");"}, {"type": "line_comment", "children": [], "start_byte": 2648, "end_byte": 2660, "start_point": [71, 0], "end_point": [71, 12], "text": "//         }"}, {"type": "line_comment", "children": [], "start_byte": 2662, "end_byte": 2726, "start_point": [73, 0], "end_point": [73, 64], "text": "//         if n_unused == 0 && z_stream.metadata()?.len() == 0 {"}, {"type": "line_comment", "children": [], "start_byte": 2727, "end_byte": 2748, "start_point": [74, 0], "end_point": [74, 21], "text": "//             break;"}, {"type": "line_comment", "children": [], "start_byte": 2749, "end_byte": 2761, "start_point": [75, 0], "end_point": [75, 12], "text": "//         }"}, {"type": "line_comment", "children": [], "start_byte": 2762, "end_byte": 2770, "start_point": [76, 0], "end_point": [76, 8], "text": "//     }"}, {"type": "line_comment", "children": [], "start_byte": 2772, "end_byte": 2815, "start_point": [78, 0], "end_point": [78, 43], "text": "//     if z_stream.metadata()?.len() == 0 {"}, {"type": "line_comment", "children": [], "start_byte": 2816, "end_byte": 2884, "start_point": [79, 0], "end_point": [79, 68], "text": "//         return Err(io::Error::new(ErrorKind::Other, \"IO error\"));"}, {"type": "line_comment", "children": [], "start_byte": 2885, "end_byte": 2893, "start_point": [80, 0], "end_point": [80, 8], "text": "//     }"}, {"type": "line_comment", "children": [], "start_byte": 2895, "end_byte": 2923, "start_point": [82, 0], "end_point": [82, 28], "text": "//     z_stream.sync_all()?;"}, {"type": "line_comment", "children": [], "start_byte": 2925, "end_byte": 2962, "start_point": [84, 0], "end_point": [84, 37], "text": "//     if unsafe { verbosity } >= 2 {"}, {"type": "line_comment", "children": [], "start_byte": 2963, "end_byte": 2994, "start_point": [85, 0], "end_point": [85, 31], "text": "//         eprintln!(\"\\n    \");"}, {"type": "line_comment", "children": [], "start_byte": 2995, "end_byte": 3003, "start_point": [86, 0], "end_point": [86, 8], "text": "//     }"}, {"type": "line_comment", "children": [], "start_byte": 3005, "end_byte": 3020, "start_point": [88, 0], "end_point": [88, 15], "text": "//     Ok(true)"}, {"type": "line_comment", "children": [], "start_byte": 3021, "end_byte": 3067, "start_point": [89, 0], "end_point": [89, 46], "text": "// Ok(true) // Normal execution path ends here"}, {"type": "line_comment", "children": [], "start_byte": 3069, "end_byte": 3089, "start_point": [91, 0], "end_point": [91, 20], "text": "// // Error handling"}, {"type": "line_comment", "children": [], "start_byte": 3090, "end_byte": 3106, "start_point": [92, 0], "end_point": [92, 16], "text": "// errhandler: {"}, {"type": "line_comment", "children": [], "start_byte": 3107, "end_byte": 3175, "start_point": [93, 0], "end_point": [93, 68], "text": "//     BZ2_bzReadClose(&mut Some(bzerr_dummy), bzf.take().unwrap());"}, {"type": "line_comment", "children": [], "start_byte": 3176, "end_byte": 3213, "start_point": [94, 0], "end_point": [94, 37], "text": "//     if unsafe { verbosity } == 0 {"}, {"type": "line_comment", "children": [], "start_byte": 3214, "end_byte": 3267, "start_point": [95, 0], "end_point": [95, 53], "text": "//         eprintln!(\"{}: {}: \", prog_name, in_name);"}, {"type": "line_comment", "children": [], "start_byte": 3268, "end_byte": 3276, "start_point": [96, 0], "end_point": [96, 8], "text": "//     }"}, {"type": "line_comment", "children": [], "start_byte": 3277, "end_byte": 3297, "start_point": [97, 0], "end_point": [97, 20], "text": "//     match bzerr {"}, {"type": "line_comment", "children": [], "start_byte": 3298, "end_byte": 3330, "start_point": [98, 0], "end_point": [98, 32], "text": "//         -9 => config_error(),"}, {"type": "line_comment", "children": [], "start_byte": 3331, "end_byte": 3349, "start_point": [99, 0], "end_point": [99, 18], "text": "//         -6 => {"}, {"type": "line_comment", "children": [], "start_byte": 3350, "end_byte": 3376, "start_point": [100, 0], "end_point": [100, 26], "text": "//             io_error();"}, {"type": "line_comment", "children": [], "start_byte": 3377, "end_byte": 3441, "start_point": [101, 0], "end_point": [101, 64], "text": "//             Err(io::Error::new(ErrorKind::Other, \"IO Error\"))"}, {"type": "line_comment", "children": [], "start_byte": 3442, "end_byte": 3455, "start_point": [102, 0], "end_point": [102, 13], "text": "//         },"}, {"type": "line_comment", "children": [], "start_byte": 3456, "end_byte": 3474, "start_point": [103, 0], "end_point": [103, 18], "text": "//         -4 => {"}, {"type": "line_comment", "children": [], "start_byte": 3475, "end_byte": 3540, "start_point": [104, 0], "end_point": [104, 65], "text": "//             eprintln!(\"data integrity (CRC) error in data\\n\");"}, {"type": "line_comment", "children": [], "start_byte": 3541, "end_byte": 3617, "start_point": [105, 0], "end_point": [105, 76], "text": "//             Err(io::Error::new(ErrorKind::Other, \"Data integrity error\"))"}, {"type": "line_comment", "children": [], "start_byte": 3618, "end_byte": 3631, "start_point": [106, 0], "end_point": [106, 13], "text": "//         },"}, {"type": "line_comment", "children": [], "start_byte": 3632, "end_byte": 3665, "start_point": [107, 0], "end_point": [107, 33], "text": "//         -3 => out_of_memory(),"}, {"type": "line_comment", "children": [], "start_byte": 3666, "end_byte": 3684, "start_point": [108, 0], "end_point": [108, 18], "text": "//         -7 => {"}, {"type": "line_comment", "children": [], "start_byte": 3685, "end_byte": 3738, "start_point": [109, 0], "end_point": [109, 53], "text": "//             eprintln!(\"file ends unexpectedly\\n\");"}, {"type": "line_comment", "children": [], "start_byte": 3739, "end_byte": 3817, "start_point": [110, 0], "end_point": [110, 78], "text": "//             Err(io::Error::new(ErrorKind::Other, \"Unexpected end of file\"))"}, {"type": "line_comment", "children": [], "start_byte": 3818, "end_byte": 3831, "start_point": [111, 0], "end_point": [111, 13], "text": "//         },"}, {"type": "line_comment", "children": [], "start_byte": 3832, "end_byte": 3850, "start_point": [112, 0], "end_point": [112, 18], "text": "//         -5 => {"}, {"type": "line_comment", "children": [], "start_byte": 3851, "end_byte": 3899, "start_point": [113, 0], "end_point": [113, 48], "text": "//             if z_stream != std::io::stdin() {"}, {"type": "line_comment", "children": [], "start_byte": 3900, "end_byte": 3940, "start_point": [114, 0], "end_point": [114, 40], "text": "//                 z_stream.sync_all()?;"}, {"type": "line_comment", "children": [], "start_byte": 3941, "end_byte": 3957, "start_point": [115, 0], "end_point": [115, 16], "text": "//             }"}, {"type": "line_comment", "children": [], "start_byte": 3958, "end_byte": 3992, "start_point": [116, 0], "end_point": [116, 34], "text": "//             if stream_no == 1 {"}, {"type": "line_comment", "children": [], "start_byte": 3993, "end_byte": 4072, "start_point": [117, 0], "end_point": [117, 79], "text": "//                 eprintln!(\"bad magic number (file not created by bzip2)\\n\");"}, {"type": "line_comment", "children": [], "start_byte": 4073, "end_byte": 4149, "start_point": [118, 0], "end_point": [118, 76], "text": "//                 Err(io::Error::new(ErrorKind::Other, \"Bad magic number\"))"}, {"type": "line_comment", "children": [], "start_byte": 4150, "end_byte": 4173, "start_point": [119, 0], "end_point": [119, 23], "text": "//             } else {"}, {"type": "line_comment", "children": [], "start_byte": 4174, "end_byte": 4214, "start_point": [120, 0], "end_point": [120, 40], "text": "//                 if unsafe { noisy } {"}, {"type": "line_comment", "children": [], "start_byte": 4215, "end_byte": 4288, "start_point": [121, 0], "end_point": [121, 73], "text": "//                     eprintln!(\"trailing garbage after EOF ignored\\n\");"}, {"type": "line_comment", "children": [], "start_byte": 4289, "end_byte": 4309, "start_point": [122, 0], "end_point": [122, 20], "text": "//                 }"}, {"type": "line_comment", "children": [], "start_byte": 4310, "end_byte": 4337, "start_point": [123, 0], "end_point": [123, 27], "text": "//                 Ok(true)"}, {"type": "line_comment", "children": [], "start_byte": 4338, "end_byte": 4354, "start_point": [124, 0], "end_point": [124, 16], "text": "//             }"}, {"type": "line_comment", "children": [], "start_byte": 4355, "end_byte": 4368, "start_point": [125, 0], "end_point": [125, 13], "text": "//         },"}, {"type": "line_comment", "children": [], "start_byte": 4369, "end_byte": 4417, "start_point": [126, 0], "end_point": [126, 48], "text": "//         _ => panic!(\"test:unexpected error\"),"}, {"type": "line_comment", "children": [], "start_byte": 4418, "end_byte": 4426, "start_point": [127, 0], "end_point": [127, 8], "text": "//     }"}, {"type": "line_comment", "children": [], "start_byte": 4427, "end_byte": 4431, "start_point": [128, 0], "end_point": [128, 4], "text": "// }"}, {"type": "line_comment", "children": [], "start_byte": 4433, "end_byte": 4454, "start_point": [130, 0], "end_point": [130, 21], "text": "// panic!(\"test:end\")"}, {"type": "}", "children": [], "start_byte": 4455, "end_byte": 4456, "start_point": [131, 0], "end_point": [131, 1], "text": "}"}], "start_byte": 1003, "end_byte": 4456, "start_point": [23, 40], "end_point": [131, 1], "text": "{\n//     let mut bzf: Option<Box<bzFile>> = None;\n//     let mut bzerr = 0;\n//     let mut n_unused = 0;\n//     let mut stream_no = 0;\n//     let mut obuf = [0u8; 5000];\n//     let mut unused = [0u8; 5000];\n\n//     if z_stream.metadata()?.len() == 0 {\n//         return Err(io::Error::new(ErrorKind::Other, \"Stream error\"));\n//     }\n\n//     loop {\n//         bzf = bz2_bzread_open(&mut bzerr, z_stream, unsafe { verbosity }, unsafe { SMALL_MODE } as i32, None);\n\n//         if bzf.is_none() || bzerr != 0 {\n//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//         }\n\n//         stream_no += 1;\n\n//         while bzerr == 0 {\n//             let _ = BZ2_bzRead(&mut bzerr, bzf.as_mut().unwrap(), &mut obuf);\n//             if bzerr == -5 {\n//                 return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//             }\n//         }\n\n//         if bzerr != 4 {\n//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//         }\n\n//         let mut unused_tmp: Option<*mut i8> = None;\n//         bz2_bz_read_get_unused(&mut Some(bzerr), bzf.as_mut().unwrap(), &mut unused_tmp, &mut Some(n_unused));\n\n//         if bzerr != 0 {\n//             panic!(\"test:bzReadGetUnused\");\n//         }\n\n//         if let Some(ptr) = unused_tmp {\n//             let unused_tmp_slice = unsafe { std::slice::from_raw_parts(ptr as *const u8, n_unused as usize) };\n//             unused[..n_unused as usize].copy_from_slice(unused_tmp_slice);\n//         }\n\n//         BZ2_bzReadClose(&mut Some(bzerr), bzf.take().unwrap());\n\n//         if bzerr != 0 {\n//             panic!(\"test:bzReadClose error\");\n//         }\n\n//         if n_unused == 0 && z_stream.metadata()?.len() == 0 {\n//             break;\n//         }\n//     }\n\n//     if z_stream.metadata()?.len() == 0 {\n//         return Err(io::Error::new(ErrorKind::Other, \"IO error\"));\n//     }\n\n//     z_stream.sync_all()?;\n\n//     if unsafe { verbosity } >= 2 {\n//         eprintln!(\"\\n    \");\n//     }\n\n//     Ok(true)\n// Ok(true) // Normal execution path ends here\n\n// // Error handling\n// errhandler: {\n//     BZ2_bzReadClose(&mut Some(bzerr_dummy), bzf.take().unwrap());\n//     if unsafe { verbosity } == 0 {\n//         eprintln!(\"{}: {}: \", prog_name, in_name);\n//     }\n//     match bzerr {\n//         -9 => config_error(),\n//         -6 => {\n//             io_error();\n//             Err(io::Error::new(ErrorKind::Other, \"IO Error\"))\n//         },\n//         -4 => {\n//             eprintln!(\"data integrity (CRC) error in data\\n\");\n//             Err(io::Error::new(ErrorKind::Other, \"Data integrity error\"))\n//         },\n//         -3 => out_of_memory(),\n//         -7 => {\n//             eprintln!(\"file ends unexpectedly\\n\");\n//             Err(io::Error::new(ErrorKind::Other, \"Unexpected end of file\"))\n//         },\n//         -5 => {\n//             if z_stream != std::io::stdin() {\n//                 z_stream.sync_all()?;\n//             }\n//             if stream_no == 1 {\n//                 eprintln!(\"bad magic number (file not created by bzip2)\\n\");\n//                 Err(io::Error::new(ErrorKind::Other, \"Bad magic number\"))\n//             } else {\n//                 if unsafe { noisy } {\n//                     eprintln!(\"trailing garbage after EOF ignored\\n\");\n//                 }\n//                 Ok(true)\n//             }\n//         },\n//         _ => panic!(\"test:unexpected error\"),\n//     }\n// }\n\n// panic!(\"test:end\")\n}"}], "start_byte": 963, "end_byte": 4456, "start_point": [23, 0], "end_point": [131, 1], "text": "pub fn test_stream(z_stream: &mut File) {\n//     let mut bzf: Option<Box<bzFile>> = None;\n//     let mut bzerr = 0;\n//     let mut n_unused = 0;\n//     let mut stream_no = 0;\n//     let mut obuf = [0u8; 5000];\n//     let mut unused = [0u8; 5000];\n\n//     if z_stream.metadata()?.len() == 0 {\n//         return Err(io::Error::new(ErrorKind::Other, \"Stream error\"));\n//     }\n\n//     loop {\n//         bzf = bz2_bzread_open(&mut bzerr, z_stream, unsafe { verbosity }, unsafe { SMALL_MODE } as i32, None);\n\n//         if bzf.is_none() || bzerr != 0 {\n//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//         }\n\n//         stream_no += 1;\n\n//         while bzerr == 0 {\n//             let _ = BZ2_bzRead(&mut bzerr, bzf.as_mut().unwrap(), &mut obuf);\n//             if bzerr == -5 {\n//                 return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//             }\n//         }\n\n//         if bzerr != 4 {\n//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//         }\n\n//         let mut unused_tmp: Option<*mut i8> = None;\n//         bz2_bz_read_get_unused(&mut Some(bzerr), bzf.as_mut().unwrap(), &mut unused_tmp, &mut Some(n_unused));\n\n//         if bzerr != 0 {\n//             panic!(\"test:bzReadGetUnused\");\n//         }\n\n//         if let Some(ptr) = unused_tmp {\n//             let unused_tmp_slice = unsafe { std::slice::from_raw_parts(ptr as *const u8, n_unused as usize) };\n//             unused[..n_unused as usize].copy_from_slice(unused_tmp_slice);\n//         }\n\n//         BZ2_bzReadClose(&mut Some(bzerr), bzf.take().unwrap());\n\n//         if bzerr != 0 {\n//             panic!(\"test:bzReadClose error\");\n//         }\n\n//         if n_unused == 0 && z_stream.metadata()?.len() == 0 {\n//             break;\n//         }\n//     }\n\n//     if z_stream.metadata()?.len() == 0 {\n//         return Err(io::Error::new(ErrorKind::Other, \"IO error\"));\n//     }\n\n//     z_stream.sync_all()?;\n\n//     if unsafe { verbosity } >= 2 {\n//         eprintln!(\"\\n    \");\n//     }\n\n//     Ok(true)\n// Ok(true) // Normal execution path ends here\n\n// // Error handling\n// errhandler: {\n//     BZ2_bzReadClose(&mut Some(bzerr_dummy), bzf.take().unwrap());\n//     if unsafe { verbosity } == 0 {\n//         eprintln!(\"{}: {}: \", prog_name, in_name);\n//     }\n//     match bzerr {\n//         -9 => config_error(),\n//         -6 => {\n//             io_error();\n//             Err(io::Error::new(ErrorKind::Other, \"IO Error\"))\n//         },\n//         -4 => {\n//             eprintln!(\"data integrity (CRC) error in data\\n\");\n//             Err(io::Error::new(ErrorKind::Other, \"Data integrity error\"))\n//         },\n//         -3 => out_of_memory(),\n//         -7 => {\n//             eprintln!(\"file ends unexpectedly\\n\");\n//             Err(io::Error::new(ErrorKind::Other, \"Unexpected end of file\"))\n//         },\n//         -5 => {\n//             if z_stream != std::io::stdin() {\n//                 z_stream.sync_all()?;\n//             }\n//             if stream_no == 1 {\n//                 eprintln!(\"bad magic number (file not created by bzip2)\\n\");\n//                 Err(io::Error::new(ErrorKind::Other, \"Bad magic number\"))\n//             } else {\n//                 if unsafe { noisy } {\n//                     eprintln!(\"trailing garbage after EOF ignored\\n\");\n//                 }\n//                 Ok(true)\n//             }\n//         },\n//         _ => panic!(\"test:unexpected error\"),\n//     }\n// }\n\n// panic!(\"test:end\")\n}"}], "start_byte": 0, "end_byte": 4456, "start_point": [0, 0], "end_point": [131, 1], "text": "use crate::bzlib::scc_47_BZ2_bzDecompressInit_48_bzReadOpen::*;\nuse crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*;\nuse crate::bzlib::scc_17_root_10_BZ2_bzReadGetUnused::*;\n// use crate::huffman::scc_66_BZ2_hbMakeCodeLengths::*;\n// use crate::bzip2::scc_18_root_11_utime::*;\n// use crate::bzlib::scc_17_root_10_BZ2_bzReadGetUnused::*;\n// use crate::bzlib::scc_50_BZ2_bzWriteOpen::*;\n// use crate::bzip2::scc_108_testStream::*;\n// use crate::bzip2::scc_100_myMalloc::*;\n// use crate::bzip2::scc_99_outOfMemory::*;\n// use crate::bzip2::scc_95_applySavedTimeInfoToOutputFile::*;\nuse crate::global_vars::bzip2_c5::*;\nuse crate::global_vars::bzip2_c2::{PROG_NAME};\nuse crate::global_vars::bzip2_c1::{verbosity,bzFile};\n\n\n// testStream ( FILE *zStream )\nuse std::fs::File;\nuse std::io::{self, ErrorKind};\n\n// Assuming bzFile and other required types are defined elsewhere.\n// Please provide the definitions if they are different from standard implementations.\n\npub fn test_stream(z_stream: &mut File) {\n//     let mut bzf: Option<Box<bzFile>> = None;\n//     let mut bzerr = 0;\n//     let mut n_unused = 0;\n//     let mut stream_no = 0;\n//     let mut obuf = [0u8; 5000];\n//     let mut unused = [0u8; 5000];\n\n//     if z_stream.metadata()?.len() == 0 {\n//         return Err(io::Error::new(ErrorKind::Other, \"Stream error\"));\n//     }\n\n//     loop {\n//         bzf = bz2_bzread_open(&mut bzerr, z_stream, unsafe { verbosity }, unsafe { SMALL_MODE } as i32, None);\n\n//         if bzf.is_none() || bzerr != 0 {\n//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//         }\n\n//         stream_no += 1;\n\n//         while bzerr == 0 {\n//             let _ = BZ2_bzRead(&mut bzerr, bzf.as_mut().unwrap(), &mut obuf);\n//             if bzerr == -5 {\n//                 return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//             }\n//         }\n\n//         if bzerr != 4 {\n//             return Err(io::Error::new(ErrorKind::Other, \"Read error\"));\n//         }\n\n//         let mut unused_tmp: Option<*mut i8> = None;\n//         bz2_bz_read_get_unused(&mut Some(bzerr), bzf.as_mut().unwrap(), &mut unused_tmp, &mut Some(n_unused));\n\n//         if bzerr != 0 {\n//             panic!(\"test:bzReadGetUnused\");\n//         }\n\n//         if let Some(ptr) = unused_tmp {\n//             let unused_tmp_slice = unsafe { std::slice::from_raw_parts(ptr as *const u8, n_unused as usize) };\n//             unused[..n_unused as usize].copy_from_slice(unused_tmp_slice);\n//         }\n\n//         BZ2_bzReadClose(&mut Some(bzerr), bzf.take().unwrap());\n\n//         if bzerr != 0 {\n//             panic!(\"test:bzReadClose error\");\n//         }\n\n//         if n_unused == 0 && z_stream.metadata()?.len() == 0 {\n//             break;\n//         }\n//     }\n\n//     if z_stream.metadata()?.len() == 0 {\n//         return Err(io::Error::new(ErrorKind::Other, \"IO error\"));\n//     }\n\n//     z_stream.sync_all()?;\n\n//     if unsafe { verbosity } >= 2 {\n//         eprintln!(\"\\n    \");\n//     }\n\n//     Ok(true)\n// Ok(true) // Normal execution path ends here\n\n// // Error handling\n// errhandler: {\n//     BZ2_bzReadClose(&mut Some(bzerr_dummy), bzf.take().unwrap());\n//     if unsafe { verbosity } == 0 {\n//         eprintln!(\"{}: {}: \", prog_name, in_name);\n//     }\n//     match bzerr {\n//         -9 => config_error(),\n//         -6 => {\n//             io_error();\n//             Err(io::Error::new(ErrorKind::Other, \"IO Error\"))\n//         },\n//         -4 => {\n//             eprintln!(\"data integrity (CRC) error in data\\n\");\n//             Err(io::Error::new(ErrorKind::Other, \"Data integrity error\"))\n//         },\n//         -3 => out_of_memory(),\n//         -7 => {\n//             eprintln!(\"file ends unexpectedly\\n\");\n//             Err(io::Error::new(ErrorKind::Other, \"Unexpected end of file\"))\n//         },\n//         -5 => {\n//             if z_stream != std::io::stdin() {\n//                 z_stream.sync_all()?;\n//             }\n//             if stream_no == 1 {\n//                 eprintln!(\"bad magic number (file not created by bzip2)\\n\");\n//                 Err(io::Error::new(ErrorKind::Other, \"Bad magic number\"))\n//             } else {\n//                 if unsafe { noisy } {\n//                     eprintln!(\"trailing garbage after EOF ignored\\n\");\n//                 }\n//                 Ok(true)\n//             }\n//         },\n//         _ => panic!(\"test:unexpected error\"),\n//     }\n// }\n\n// panic!(\"test:end\")\n}"}