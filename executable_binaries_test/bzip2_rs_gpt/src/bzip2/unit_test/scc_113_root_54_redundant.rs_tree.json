{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 4, "end_byte": 9, "start_point": [0, 4], "end_point": [0, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 11, "end_byte": 22, "start_point": [0, 11], "end_point": [0, 22], "text": "global_vars"}], "start_byte": 4, "end_byte": 22, "start_point": [0, 4], "end_point": [0, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 22, "end_byte": 24, "start_point": [0, 22], "end_point": [0, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 24, "end_byte": 32, "start_point": [0, 24], "end_point": [0, 32], "text": "bzip2_c2"}], "start_byte": 4, "end_byte": 32, "start_point": [0, 4], "end_point": [0, 32], "text": "crate::global_vars::bzip2_c2"}, {"type": "::", "children": [], "start_byte": 32, "end_byte": 34, "start_point": [0, 32], "end_point": [0, 34], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 34, "end_byte": 35, "start_point": [0, 34], "end_point": [0, 35], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 35, "end_byte": 44, "start_point": [0, 35], "end_point": [0, 44], "text": "PROG_NAME"}, {"type": ",", "children": [], "start_byte": 44, "end_byte": 45, "start_point": [0, 44], "end_point": [0, 45], "text": ","}, {"type": "identifier", "children": [], "start_byte": 46, "end_byte": 50, "start_point": [0, 46], "end_point": [0, 50], "text": "Char"}, {"type": "}", "children": [], "start_byte": 50, "end_byte": 51, "start_point": [0, 50], "end_point": [0, 51], "text": "}"}], "start_byte": 34, "end_byte": 51, "start_point": [0, 34], "end_point": [0, 51], "text": "{PROG_NAME, Char}"}], "start_byte": 4, "end_byte": 51, "start_point": [0, 4], "end_point": [0, 51], "text": "crate::global_vars::bzip2_c2::{PROG_NAME, Char}"}, {"type": ";", "children": [], "start_byte": 51, "end_byte": 52, "start_point": [0, 51], "end_point": [0, 52], "text": ";"}], "start_byte": 0, "end_byte": 52, "start_point": [0, 0], "end_point": [0, 52], "text": "use crate::global_vars::bzip2_c2::{PROG_NAME, Char};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 53, "end_byte": 56, "start_point": [1, 0], "end_point": [1, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 57, "end_byte": 60, "start_point": [1, 4], "end_point": [1, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 60, "end_byte": 62, "start_point": [1, 7], "end_point": [1, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 62, "end_byte": 66, "start_point": [1, 9], "end_point": [1, 13], "text": "sync"}], "start_byte": 57, "end_byte": 66, "start_point": [1, 4], "end_point": [1, 13], "text": "std::sync"}, {"type": "::", "children": [], "start_byte": 66, "end_byte": 68, "start_point": [1, 13], "end_point": [1, 15], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 68, "end_byte": 73, "start_point": [1, 15], "end_point": [1, 20], "text": "Mutex"}], "start_byte": 57, "end_byte": 73, "start_point": [1, 4], "end_point": [1, 20], "text": "std::sync::Mutex"}, {"type": ";", "children": [], "start_byte": 73, "end_byte": 74, "start_point": [1, 20], "end_point": [1, 21], "text": ";"}], "start_byte": 53, "end_byte": 74, "start_point": [1, 0], "end_point": [1, 21], "text": "use std::sync::Mutex;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 75, "end_byte": 78, "start_point": [2, 0], "end_point": [2, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 79, "end_byte": 90, "start_point": [2, 4], "end_point": [2, 15], "text": "lazy_static"}, {"type": "::", "children": [], "start_byte": 90, "end_byte": 92, "start_point": [2, 15], "end_point": [2, 17], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 92, "end_byte": 103, "start_point": [2, 17], "end_point": [2, 28], "text": "lazy_static"}], "start_byte": 79, "end_byte": 103, "start_point": [2, 4], "end_point": [2, 28], "text": "lazy_static::lazy_static"}, {"type": ";", "children": [], "start_byte": 103, "end_byte": 104, "start_point": [2, 28], "end_point": [2, 29], "text": ";"}], "start_byte": 75, "end_byte": 104, "start_point": [2, 0], "end_point": [2, 29], "text": "use lazy_static::lazy_static;"}, {"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 106, "end_byte": 117, "start_point": [4, 0], "end_point": [4, 11], "text": "lazy_static"}, {"type": "!", "children": [], "start_byte": 117, "end_byte": 118, "start_point": [4, 11], "end_point": [4, 12], "text": "!"}, {"type": "token_tree", "children": [{"type": "{", "children": [], "start_byte": 119, "end_byte": 120, "start_point": [4, 13], "end_point": [4, 14], "text": "{"}, {"type": "static", "children": [], "start_byte": 125, "end_byte": 131, "start_point": [5, 4], "end_point": [5, 10], "text": "static"}, {"type": "identifier", "children": [], "start_byte": 132, "end_byte": 135, "start_point": [5, 11], "end_point": [5, 14], "text": "ref"}, {"type": "identifier", "children": [], "start_byte": 136, "end_byte": 155, "start_point": [5, 15], "end_point": [5, 34], "text": "MOCK_FPRINTF_CALLED"}, {"type": "identifier", "children": [], "start_byte": 157, "end_byte": 162, "start_point": [5, 36], "end_point": [5, 41], "text": "Mutex"}, {"type": "primitive_type", "children": [], "start_byte": 163, "end_byte": 167, "start_point": [5, 42], "end_point": [5, 46], "text": "bool"}, {"type": "identifier", "children": [], "start_byte": 171, "end_byte": 176, "start_point": [5, 50], "end_point": [5, 55], "text": "Mutex"}, {"type": "identifier", "children": [], "start_byte": 178, "end_byte": 181, "start_point": [5, 57], "end_point": [5, 60], "text": "new"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 181, "end_byte": 182, "start_point": [5, 60], "end_point": [5, 61], "text": "("}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 182, "end_byte": 187, "start_point": [5, 61], "end_point": [5, 66], "text": "false"}], "start_byte": 182, "end_byte": 187, "start_point": [5, 61], "end_point": [5, 66], "text": "false"}, {"type": ")", "children": [], "start_byte": 187, "end_byte": 188, "start_point": [5, 66], "end_point": [5, 67], "text": ")"}], "start_byte": 181, "end_byte": 188, "start_point": [5, 60], "end_point": [5, 67], "text": "(false)"}, {"type": "static", "children": [], "start_byte": 194, "end_byte": 200, "start_point": [6, 4], "end_point": [6, 10], "text": "static"}, {"type": "identifier", "children": [], "start_byte": 201, "end_byte": 204, "start_point": [6, 11], "end_point": [6, 14], "text": "ref"}, {"type": "identifier", "children": [], "start_byte": 205, "end_byte": 217, "start_point": [6, 15], "end_point": [6, 27], "text": "CAPTURED_MSG"}, {"type": "identifier", "children": [], "start_byte": 219, "end_byte": 224, "start_point": [6, 29], "end_point": [6, 34], "text": "Mutex"}, {"type": "identifier", "children": [], "start_byte": 225, "end_byte": 231, "start_point": [6, 35], "end_point": [6, 41], "text": "String"}, {"type": "identifier", "children": [], "start_byte": 235, "end_byte": 240, "start_point": [6, 45], "end_point": [6, 50], "text": "Mutex"}, {"type": "identifier", "children": [], "start_byte": 242, "end_byte": 245, "start_point": [6, 52], "end_point": [6, 55], "text": "new"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 245, "end_byte": 246, "start_point": [6, 55], "end_point": [6, 56], "text": "("}, {"type": "identifier", "children": [], "start_byte": 246, "end_byte": 252, "start_point": [6, 56], "end_point": [6, 62], "text": "String"}, {"type": "identifier", "children": [], "start_byte": 254, "end_byte": 257, "start_point": [6, 64], "end_point": [6, 67], "text": "new"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 257, "end_byte": 258, "start_point": [6, 67], "end_point": [6, 68], "text": "("}, {"type": ")", "children": [], "start_byte": 258, "end_byte": 259, "start_point": [6, 68], "end_point": [6, 69], "text": ")"}], "start_byte": 257, "end_byte": 259, "start_point": [6, 67], "end_point": [6, 69], "text": "()"}, {"type": ")", "children": [], "start_byte": 259, "end_byte": 260, "start_point": [6, 69], "end_point": [6, 70], "text": ")"}], "start_byte": 245, "end_byte": 260, "start_point": [6, 55], "end_point": [6, 70], "text": "(String::new())"}, {"type": "}", "children": [], "start_byte": 262, "end_byte": 263, "start_point": [7, 0], "end_point": [7, 1], "text": "}"}], "start_byte": 119, "end_byte": 263, "start_point": [4, 13], "end_point": [7, 1], "text": "{\n    static ref MOCK_FPRINTF_CALLED: Mutex<bool> = Mutex::new(false);\n    static ref CAPTURED_MSG: Mutex<String> = Mutex::new(String::new());\n}"}], "start_byte": 106, "end_byte": 263, "start_point": [4, 0], "end_point": [7, 1], "text": "lazy_static! {\n    static ref MOCK_FPRINTF_CALLED: Mutex<bool> = Mutex::new(false);\n    static ref CAPTURED_MSG: Mutex<String> = Mutex::new(String::new());\n}"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 265, "end_byte": 267, "start_point": [9, 0], "end_point": [9, 2], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 268, "end_byte": 280, "start_point": [9, 3], "end_point": [9, 15], "text": "mock_fprintf"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 280, "end_byte": 281, "start_point": [9, 15], "end_point": [9, 16], "text": "("}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 281, "end_byte": 287, "start_point": [9, 16], "end_point": [9, 22], "text": "format"}, {"type": ":", "children": [], "start_byte": 287, "end_byte": 288, "start_point": [9, 22], "end_point": [9, 23], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 289, "end_byte": 290, "start_point": [9, 24], "end_point": [9, 25], "text": "&"}, {"type": "primitive_type", "children": [], "start_byte": 290, "end_byte": 293, "start_point": [9, 25], "end_point": [9, 28], "text": "str"}], "start_byte": 289, "end_byte": 293, "start_point": [9, 24], "end_point": [9, 28], "text": "&str"}], "start_byte": 281, "end_byte": 293, "start_point": [9, 16], "end_point": [9, 28], "text": "format: &str"}, {"type": ",", "children": [], "start_byte": 293, "end_byte": 294, "start_point": [9, 28], "end_point": [9, 29], "text": ","}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 295, "end_byte": 299, "start_point": [9, 30], "end_point": [9, 34], "text": "args"}, {"type": ":", "children": [], "start_byte": 299, "end_byte": 300, "start_point": [9, 34], "end_point": [9, 35], "text": ":"}, {"type": "scoped_type_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 301, "end_byte": 304, "start_point": [9, 36], "end_point": [9, 39], "text": "std"}, {"type": "::", "children": [], "start_byte": 304, "end_byte": 306, "start_point": [9, 39], "end_point": [9, 41], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 306, "end_byte": 309, "start_point": [9, 41], "end_point": [9, 44], "text": "fmt"}], "start_byte": 301, "end_byte": 309, "start_point": [9, 36], "end_point": [9, 44], "text": "std::fmt"}, {"type": "::", "children": [], "start_byte": 309, "end_byte": 311, "start_point": [9, 44], "end_point": [9, 46], "text": "::"}, {"type": "type_identifier", "children": [], "start_byte": 311, "end_byte": 320, "start_point": [9, 46], "end_point": [9, 55], "text": "Arguments"}], "start_byte": 301, "end_byte": 320, "start_point": [9, 36], "end_point": [9, 55], "text": "std::fmt::Arguments"}], "start_byte": 295, "end_byte": 320, "start_point": [9, 30], "end_point": [9, 55], "text": "args: std::fmt::Arguments"}, {"type": ")", "children": [], "start_byte": 320, "end_byte": 321, "start_point": [9, 55], "end_point": [9, 56], "text": ")"}], "start_byte": 280, "end_byte": 321, "start_point": [9, 15], "end_point": [9, 56], "text": "(format: &str, args: std::fmt::Arguments)"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 322, "end_byte": 323, "start_point": [9, 57], "end_point": [9, 58], "text": "{"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "unary_expression", "children": [{"type": "*", "children": [], "start_byte": 328, "end_byte": 329, "start_point": [10, 4], "end_point": [10, 5], "text": "*"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 329, "end_byte": 348, "start_point": [10, 5], "end_point": [10, 24], "text": "MOCK_FPRINTF_CALLED"}, {"type": ".", "children": [], "start_byte": 348, "end_byte": 349, "start_point": [10, 24], "end_point": [10, 25], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 349, "end_byte": 353, "start_point": [10, 25], "end_point": [10, 29], "text": "lock"}], "start_byte": 329, "end_byte": 353, "start_point": [10, 5], "end_point": [10, 29], "text": "MOCK_FPRINTF_CALLED.lock"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 353, "end_byte": 354, "start_point": [10, 29], "end_point": [10, 30], "text": "("}, {"type": ")", "children": [], "start_byte": 354, "end_byte": 355, "start_point": [10, 30], "end_point": [10, 31], "text": ")"}], "start_byte": 353, "end_byte": 355, "start_point": [10, 29], "end_point": [10, 31], "text": "()"}], "start_byte": 329, "end_byte": 355, "start_point": [10, 5], "end_point": [10, 31], "text": "MOCK_FPRINTF_CALLED.lock()"}, {"type": ".", "children": [], "start_byte": 355, "end_byte": 356, "start_point": [10, 31], "end_point": [10, 32], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 356, "end_byte": 362, "start_point": [10, 32], "end_point": [10, 38], "text": "unwrap"}], "start_byte": 329, "end_byte": 362, "start_point": [10, 5], "end_point": [10, 38], "text": "MOCK_FPRINTF_CALLED.lock().unwrap"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 362, "end_byte": 363, "start_point": [10, 38], "end_point": [10, 39], "text": "("}, {"type": ")", "children": [], "start_byte": 363, "end_byte": 364, "start_point": [10, 39], "end_point": [10, 40], "text": ")"}], "start_byte": 362, "end_byte": 364, "start_point": [10, 38], "end_point": [10, 40], "text": "()"}], "start_byte": 329, "end_byte": 364, "start_point": [10, 5], "end_point": [10, 40], "text": "MOCK_FPRINTF_CALLED.lock().unwrap()"}], "start_byte": 328, "end_byte": 364, "start_point": [10, 4], "end_point": [10, 40], "text": "*MOCK_FPRINTF_CALLED.lock().unwrap()"}, {"type": "=", "children": [], "start_byte": 365, "end_byte": 366, "start_point": [10, 41], "end_point": [10, 42], "text": "="}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 367, "end_byte": 371, "start_point": [10, 43], "end_point": [10, 47], "text": "true"}], "start_byte": 367, "end_byte": 371, "start_point": [10, 43], "end_point": [10, 47], "text": "true"}], "start_byte": 328, "end_byte": 371, "start_point": [10, 4], "end_point": [10, 47], "text": "*MOCK_FPRINTF_CALLED.lock().unwrap() = true"}, {"type": ";", "children": [], "start_byte": 371, "end_byte": 372, "start_point": [10, 47], "end_point": [10, 48], "text": ";"}], "start_byte": 328, "end_byte": 372, "start_point": [10, 4], "end_point": [10, 48], "text": "*MOCK_FPRINTF_CALLED.lock().unwrap() = true;"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "unary_expression", "children": [{"type": "*", "children": [], "start_byte": 377, "end_byte": 378, "start_point": [11, 4], "end_point": [11, 5], "text": "*"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 378, "end_byte": 390, "start_point": [11, 5], "end_point": [11, 17], "text": "CAPTURED_MSG"}, {"type": ".", "children": [], "start_byte": 390, "end_byte": 391, "start_point": [11, 17], "end_point": [11, 18], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 391, "end_byte": 395, "start_point": [11, 18], "end_point": [11, 22], "text": "lock"}], "start_byte": 378, "end_byte": 395, "start_point": [11, 5], "end_point": [11, 22], "text": "CAPTURED_MSG.lock"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 395, "end_byte": 396, "start_point": [11, 22], "end_point": [11, 23], "text": "("}, {"type": ")", "children": [], "start_byte": 396, "end_byte": 397, "start_point": [11, 23], "end_point": [11, 24], "text": ")"}], "start_byte": 395, "end_byte": 397, "start_point": [11, 22], "end_point": [11, 24], "text": "()"}], "start_byte": 378, "end_byte": 397, "start_point": [11, 5], "end_point": [11, 24], "text": "CAPTURED_MSG.lock()"}, {"type": ".", "children": [], "start_byte": 397, "end_byte": 398, "start_point": [11, 24], "end_point": [11, 25], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 398, "end_byte": 404, "start_point": [11, 25], "end_point": [11, 31], "text": "unwrap"}], "start_byte": 378, "end_byte": 404, "start_point": [11, 5], "end_point": [11, 31], "text": "CAPTURED_MSG.lock().unwrap"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 404, "end_byte": 405, "start_point": [11, 31], "end_point": [11, 32], "text": "("}, {"type": ")", "children": [], "start_byte": 405, "end_byte": 406, "start_point": [11, 32], "end_point": [11, 33], "text": ")"}], "start_byte": 404, "end_byte": 406, "start_point": [11, 31], "end_point": [11, 33], "text": "()"}], "start_byte": 378, "end_byte": 406, "start_point": [11, 5], "end_point": [11, 33], "text": "CAPTURED_MSG.lock().unwrap()"}], "start_byte": 377, "end_byte": 406, "start_point": [11, 4], "end_point": [11, 33], "text": "*CAPTURED_MSG.lock().unwrap()"}, {"type": "=", "children": [], "start_byte": 407, "end_byte": 408, "start_point": [11, 34], "end_point": [11, 35], "text": "="}, {"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 409, "end_byte": 415, "start_point": [11, 36], "end_point": [11, 42], "text": "format"}, {"type": "!", "children": [], "start_byte": 415, "end_byte": 416, "start_point": [11, 42], "end_point": [11, 43], "text": "!"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 416, "end_byte": 417, "start_point": [11, 43], "end_point": [11, 44], "text": "("}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 417, "end_byte": 418, "start_point": [11, 44], "end_point": [11, 45], "text": "\""}, {"type": "escape_sequence", "children": [], "start_byte": 420, "end_byte": 422, "start_point": [11, 47], "end_point": [11, 49], "text": "\\n"}, {"type": "\"", "children": [], "start_byte": 422, "end_byte": 423, "start_point": [11, 49], "end_point": [11, 50], "text": "\""}], "start_byte": 417, "end_byte": 423, "start_point": [11, 44], "end_point": [11, 50], "text": "\"{}\\n\""}, {"type": "identifier", "children": [], "start_byte": 425, "end_byte": 431, "start_point": [11, 52], "end_point": [11, 58], "text": "format"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 432, "end_byte": 433, "start_point": [11, 59], "end_point": [11, 60], "text": "("}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 433, "end_byte": 434, "start_point": [11, 60], "end_point": [11, 61], "text": "\""}, {"type": "\"", "children": [], "start_byte": 436, "end_byte": 437, "start_point": [11, 63], "end_point": [11, 64], "text": "\""}], "start_byte": 433, "end_byte": 437, "start_point": [11, 60], "end_point": [11, 64], "text": "\"{}\""}, {"type": "identifier", "children": [], "start_byte": 439, "end_byte": 443, "start_point": [11, 66], "end_point": [11, 70], "text": "args"}, {"type": ")", "children": [], "start_byte": 443, "end_byte": 444, "start_point": [11, 70], "end_point": [11, 71], "text": ")"}], "start_byte": 432, "end_byte": 444, "start_point": [11, 59], "end_point": [11, 71], "text": "(\"{}\", args)"}, {"type": ")", "children": [], "start_byte": 444, "end_byte": 445, "start_point": [11, 71], "end_point": [11, 72], "text": ")"}], "start_byte": 416, "end_byte": 445, "start_point": [11, 43], "end_point": [11, 72], "text": "(\"{}\\n\", format!(\"{}\", args))"}], "start_byte": 409, "end_byte": 445, "start_point": [11, 36], "end_point": [11, 72], "text": "format!(\"{}\\n\", format!(\"{}\", args))"}], "start_byte": 377, "end_byte": 445, "start_point": [11, 4], "end_point": [11, 72], "text": "*CAPTURED_MSG.lock().unwrap() = format!(\"{}\\n\", format!(\"{}\", args))"}, {"type": ";", "children": [], "start_byte": 445, "end_byte": 446, "start_point": [11, 72], "end_point": [11, 73], "text": ";"}], "start_byte": 377, "end_byte": 446, "start_point": [11, 4], "end_point": [11, 73], "text": "*CAPTURED_MSG.lock().unwrap() = format!(\"{}\\n\", format!(\"{}\", args));"}, {"type": "line_comment", "children": [], "start_byte": 448, "end_byte": 469, "start_point": [11, 75], "end_point": [11, 96], "text": "// \u6dfb\u52a0\u4e86\u6362\u884c\u7b26\n}\n\npub fn r"}, {"type": "}", "children": [], "start_byte": 470, "end_byte": 471, "start_point": [12, 0], "end_point": [12, 1], "text": "d"}], "start_byte": 322, "end_byte": 471, "start_point": [9, 57], "end_point": [12, 1], "text": "{\n    *MOCK_FPRINTF_CALLED.lock().unwrap() = true;\n    *CAPTURED_MSG.lock().unwrap() = format!(\"{}\\n\", format!(\"{}\", args));  // \u6dfb\u52a0\u4e86\u6362\u884c\u7b26\n}\n\npub fn red"}], "start_byte": 265, "end_byte": 471, "start_point": [9, 0], "end_point": [12, 1], "text": "fn mock_fprintf(format: &str, args: std::fmt::Arguments) {\n    *MOCK_FPRINTF_CALLED.lock().unwrap() = true;\n    *CAPTURED_MSG.lock().unwrap() = format!(\"{}\\n\", format!(\"{}\", args));  // \u6dfb\u52a0\u4e86\u6362\u884c\u7b26\n}\n\npub fn red"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 473, "end_byte": 476, "start_point": [14, 0], "end_point": [14, 3], "text": "dan"}], "start_byte": 473, "end_byte": 476, "start_point": [14, 0], "end_point": [14, 3], "text": "dan"}, {"type": "fn", "children": [], "start_byte": 477, "end_byte": 479, "start_point": [14, 4], "end_point": [14, 6], "text": "(f"}, {"type": "identifier", "children": [], "start_byte": 480, "end_byte": 489, "start_point": [14, 7], "end_point": [14, 16], "text": "ag: &[Cha"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 489, "end_byte": 490, "start_point": [14, 16], "end_point": [14, 17], "text": "r"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 490, "end_byte": 494, "start_point": [14, 17], "end_point": [14, 21], "text": "]) {"}, {"type": ":", "children": [], "start_byte": 494, "end_byte": 495, "start_point": [14, 21], "end_point": [14, 22], "text": "\n"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 496, "end_byte": 497, "start_point": [14, 23], "end_point": [14, 24], "text": " "}, {"type": "array_type", "children": [{"type": "[", "children": [], "start_byte": 497, "end_byte": 498, "start_point": [14, 24], "end_point": [14, 25], "text": " "}, {"type": "type_identifier", "children": [], "start_byte": 498, "end_byte": 502, "start_point": [14, 25], "end_point": [14, 29], "text": " let"}, {"type": "]", "children": [], "start_byte": 502, "end_byte": 503, "start_point": [14, 29], "end_point": [14, 30], "text": " "}], "start_byte": 497, "end_byte": 503, "start_point": [14, 24], "end_point": [14, 30], "text": "  let "}], "start_byte": 496, "end_byte": 503, "start_point": [14, 23], "end_point": [14, 30], "text": "   let "}], "start_byte": 490, "end_byte": 503, "start_point": [14, 17], "end_point": [14, 30], "text": "]) {\n    let "}, {"type": ")", "children": [], "start_byte": 503, "end_byte": 504, "start_point": [14, 30], "end_point": [14, 31], "text": "p"}], "start_byte": 489, "end_byte": 504, "start_point": [14, 16], "end_point": [14, 31], "text": "r]) {\n    let p"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 505, "end_byte": 506, "start_point": [14, 32], "end_point": [14, 33], "text": "o"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 511, "end_byte": 514, "start_point": [15, 4], "end_point": [15, 7], "text": "e ="}, {"type": "identifier", "children": [], "start_byte": 515, "end_byte": 524, "start_point": [15, 8], "end_point": [15, 17], "text": "unsafe {\n"}, {"type": "=", "children": [], "start_byte": 525, "end_byte": 526, "start_point": [15, 18], "end_point": [15, 19], "text": " "}, {"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 527, "end_byte": 533, "start_point": [15, 20], "end_point": [15, 26], "text": "     l"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 534, "end_byte": 535, "start_point": [15, 27], "end_point": [15, 28], "text": "t"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 544, "end_byte": 547, "start_point": [16, 8], "end_point": [16, 11], "text": "OG_"}, {"type": "identifier", "children": [], "start_byte": 548, "end_byte": 551, "start_point": [16, 12], "end_point": [16, 15], "text": "AME"}, {"type": "=", "children": [], "start_byte": 552, "end_byte": 553, "start_point": [16, 16], "end_point": [16, 17], "text": "i"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 554, "end_byte": 563, "start_point": [16, 18], "end_point": [16, 27], "text": "er().posi"}, {"type": ".", "children": [], "start_byte": 563, "end_byte": 564, "start_point": [16, 27], "end_point": [16, 28], "text": "t"}, {"type": "field_identifier", "children": [], "start_byte": 564, "end_byte": 568, "start_point": [16, 28], "end_point": [16, 32], "text": "ion("}], "start_byte": 554, "end_byte": 568, "start_point": [16, 18], "end_point": [16, 32], "text": "er().position("}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 568, "end_byte": 569, "start_point": [16, 32], "end_point": [16, 33], "text": "|"}, {"type": ")", "children": [], "start_byte": 569, "end_byte": 570, "start_point": [16, 33], "end_point": [16, 34], "text": "&"}], "start_byte": 568, "end_byte": 570, "start_point": [16, 32], "end_point": [16, 34], "text": "|&"}], "start_byte": 554, "end_byte": 570, "start_point": [16, 18], "end_point": [16, 34], "text": "er().position(|&"}, {"type": ".", "children": [], "start_byte": 570, "end_byte": 571, "start_point": [16, 34], "end_point": [16, 35], "text": "x"}, {"type": "field_identifier", "children": [], "start_byte": 571, "end_byte": 579, "start_point": [16, 35], "end_point": [16, 43], "text": "| x == 0"}], "start_byte": 554, "end_byte": 579, "start_point": [16, 18], "end_point": [16, 43], "text": "er().position(|&x| x == 0"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 579, "end_byte": 580, "start_point": [16, 43], "end_point": [16, 44], "text": ")"}, {"type": "closure_expression", "children": [{"type": "closure_parameters", "children": [{"type": "|", "children": [], "start_byte": 580, "end_byte": 581, "start_point": [16, 44], "end_point": [16, 45], "text": "."}, {"type": "reference_pattern", "children": [{"type": "&", "children": [], "start_byte": 581, "end_byte": 582, "start_point": [16, 45], "end_point": [16, 46], "text": "u"}, {"type": "identifier", "children": [], "start_byte": 582, "end_byte": 583, "start_point": [16, 46], "end_point": [16, 47], "text": "n"}], "start_byte": 581, "end_byte": 583, "start_point": [16, 45], "end_point": [16, 47], "text": "un"}, {"type": "|", "children": [], "start_byte": 583, "end_byte": 584, "start_point": [16, 47], "end_point": [16, 48], "text": "w"}], "start_byte": 580, "end_byte": 584, "start_point": [16, 44], "end_point": [16, 48], "text": ".unw"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 585, "end_byte": 586, "start_point": [16, 49], "end_point": [16, 50], "text": "a"}, {"type": "==", "children": [], "start_byte": 587, "end_byte": 589, "start_point": [16, 51], "end_point": [16, 53], "text": "_o"}, {"type": "integer_literal", "children": [], "start_byte": 590, "end_byte": 591, "start_point": [16, 54], "end_point": [16, 55], "text": "("}], "start_byte": 585, "end_byte": 591, "start_point": [16, 49], "end_point": [16, 55], "text": "ap_or("}], "start_byte": 580, "end_byte": 591, "start_point": [16, 44], "end_point": [16, 55], "text": ".unwrap_or("}, {"type": ")", "children": [], "start_byte": 591, "end_byte": 592, "start_point": [16, 55], "end_point": [16, 56], "text": "P"}], "start_byte": 579, "end_byte": 592, "start_point": [16, 43], "end_point": [16, 56], "text": ").unwrap_or(P"}], "start_byte": 554, "end_byte": 592, "start_point": [16, 18], "end_point": [16, 56], "text": "er().position(|&x| x == 0).unwrap_or(P"}, {"type": ".", "children": [], "start_byte": 592, "end_byte": 593, "start_point": [16, 56], "end_point": [16, 57], "text": "R"}, {"type": "field_identifier", "children": [], "start_byte": 593, "end_byte": 602, "start_point": [16, 57], "end_point": [16, 66], "text": "OG_NAME.l"}], "start_byte": 554, "end_byte": 602, "start_point": [16, 18], "end_point": [16, 66], "text": "er().position(|&x| x == 0).unwrap_or(PROG_NAME.l"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 602, "end_byte": 603, "start_point": [16, 66], "end_point": [16, 67], "text": "e"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 603, "end_byte": 612, "start_point": [16, 67], "end_point": [16, 76], "text": "n());\n   "}, {"type": ".", "children": [], "start_byte": 612, "end_byte": 613, "start_point": [16, 76], "end_point": [16, 77], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 613, "end_byte": 616, "start_point": [16, 77], "end_point": [16, 80], "text": "   "}], "start_byte": 603, "end_byte": 616, "start_point": [16, 67], "end_point": [16, 80], "text": "n());\n       "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 616, "end_byte": 617, "start_point": [16, 80], "end_point": [16, 81], "text": " "}, {"type": ")", "children": [], "start_byte": 617, "end_byte": 618, "start_point": [16, 81], "end_point": [16, 82], "text": "s"}], "start_byte": 616, "end_byte": 618, "start_point": [16, 80], "end_point": [16, 82], "text": " s"}], "start_byte": 603, "end_byte": 618, "start_point": [16, 67], "end_point": [16, 82], "text": "n());\n        s"}, {"type": ")", "children": [], "start_byte": 618, "end_byte": 619, "start_point": [16, 82], "end_point": [16, 83], "text": "t"}], "start_byte": 602, "end_byte": 619, "start_point": [16, 66], "end_point": [16, 83], "text": "en());\n        st"}], "start_byte": 554, "end_byte": 619, "start_point": [16, 18], "end_point": [16, 83], "text": "er().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        st"}, {"type": ";", "children": [], "start_byte": 619, "end_byte": 620, "start_point": [16, 83], "end_point": [16, 84], "text": "d"}], "start_byte": 544, "end_byte": 620, "start_point": [16, 8], "end_point": [16, 84], "text": "OG_NAME.iter().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        std"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 629, "end_byte": 632, "start_point": [17, 8], "end_point": [17, 11], "text": "om_"}, {"type": "::", "children": [], "start_byte": 632, "end_byte": 634, "start_point": [17, 11], "end_point": [17, 13], "text": "ut"}, {"type": "identifier", "children": [], "start_byte": 634, "end_byte": 637, "start_point": [17, 13], "end_point": [17, 16], "text": "f8("}], "start_byte": 629, "end_byte": 637, "start_point": [17, 8], "end_point": [17, 16], "text": "om_utf8("}, {"type": "::", "children": [], "start_byte": 637, "end_byte": 639, "start_point": [17, 16], "end_point": [17, 18], "text": "&P"}, {"type": "identifier", "children": [], "start_byte": 639, "end_byte": 648, "start_point": [17, 18], "end_point": [17, 27], "text": "ROG_NAME["}], "start_byte": 629, "end_byte": 648, "start_point": [17, 8], "end_point": [17, 27], "text": "om_utf8(&PROG_NAME["}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 648, "end_byte": 649, "start_point": [17, 27], "end_point": [17, 28], "text": "."}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 649, "end_byte": 650, "start_point": [17, 28], "end_point": [17, 29], "text": "."}, {"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 650, "end_byte": 659, "start_point": [17, 29], "end_point": [17, 38], "text": "pos]).unw"}, {"type": "[", "children": [], "start_byte": 659, "end_byte": 660, "start_point": [17, 38], "end_point": [17, 39], "text": "r"}, {"type": "range_expression", "children": [{"type": "..", "children": [], "start_byte": 660, "end_byte": 662, "start_point": [17, 39], "end_point": [17, 41], "text": "ap"}, {"type": "identifier", "children": [], "start_byte": 662, "end_byte": 665, "start_point": [17, 41], "end_point": [17, 44], "text": "()\n"}], "start_byte": 660, "end_byte": 665, "start_point": [17, 39], "end_point": [17, 44], "text": "ap()\n"}, {"type": "]", "children": [], "start_byte": 665, "end_byte": 666, "start_point": [17, 44], "end_point": [17, 45], "text": " "}], "start_byte": 650, "end_byte": 666, "start_point": [17, 29], "end_point": [17, 45], "text": "pos]).unwrap()\n "}], "start_byte": 649, "end_byte": 666, "start_point": [17, 28], "end_point": [17, 45], "text": ".pos]).unwrap()\n "}, {"type": ")", "children": [], "start_byte": 666, "end_byte": 667, "start_point": [17, 45], "end_point": [17, 46], "text": " "}], "start_byte": 648, "end_byte": 667, "start_point": [17, 27], "end_point": [17, 46], "text": "..pos]).unwrap()\n  "}], "start_byte": 629, "end_byte": 667, "start_point": [17, 8], "end_point": [17, 46], "text": "om_utf8(&PROG_NAME[..pos]).unwrap()\n  "}, {"type": ".", "children": [], "start_byte": 667, "end_byte": 668, "start_point": [17, 46], "end_point": [17, 47], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 668, "end_byte": 674, "start_point": [17, 47], "end_point": [17, 53], "text": " };\n  "}], "start_byte": 629, "end_byte": 674, "start_point": [17, 8], "end_point": [17, 53], "text": "om_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n  "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 674, "end_byte": 675, "start_point": [17, 53], "end_point": [17, 54], "text": " "}, {"type": ")", "children": [], "start_byte": 675, "end_byte": 676, "start_point": [17, 54], "end_point": [17, 55], "text": " "}], "start_byte": 674, "end_byte": 676, "start_point": [17, 53], "end_point": [17, 55], "text": "  "}], "start_byte": 629, "end_byte": 676, "start_point": [17, 8], "end_point": [17, 55], "text": "om_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n    "}, {"type": "}", "children": [], "start_byte": 681, "end_byte": 682, "start_point": [18, 4], "end_point": [18, 5], "text": "m"}], "start_byte": 534, "end_byte": 682, "start_point": [15, 27], "end_point": [18, 5], "text": "t pos = PROG_NAME.iter().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        std::str::from_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n    \n    m"}], "start_byte": 527, "end_byte": 682, "start_point": [15, 20], "end_point": [18, 5], "text": "     let pos = PROG_NAME.iter().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        std::str::from_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n    \n    m"}, {"type": ";", "children": [], "start_byte": 682, "end_byte": 683, "start_point": [18, 5], "end_point": [18, 6], "text": "o"}], "start_byte": 511, "end_byte": 683, "start_point": [15, 4], "end_point": [18, 6], "text": "e = unsafe {\n        let pos = PROG_NAME.iter().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        std::str::from_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n    \n    mo"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 693, "end_byte": 705, "start_point": [20, 4], "end_point": [20, 16], "text": "(\n        \"%"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 705, "end_byte": 706, "start_point": [20, 16], "end_point": [20, 17], "text": "s"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 715, "end_byte": 716, "start_point": [21, 8], "end_point": [21, 9], "text": "e"}, {"type": "escape_sequence", "children": [], "start_byte": 763, "end_byte": 765, "start_point": [21, 56], "end_point": [21, 58], "text": " f"}, {"type": "\"", "children": [], "start_byte": 765, "end_byte": 766, "start_point": [21, 58], "end_point": [21, 59], "text": "o"}], "start_byte": 715, "end_byte": 766, "start_point": [21, 8], "end_point": [21, 59], "text": "edundant in versions 0.9.5 and above\\n\",\n        fo"}, {"type": ",", "children": [], "start_byte": 766, "end_byte": 767, "start_point": [21, 59], "end_point": [21, 60], "text": "r"}, {"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 776, "end_byte": 787, "start_point": [22, 8], "end_point": [22, 19], "text": "(\"{}: {} is"}, {"type": "!", "children": [], "start_byte": 787, "end_byte": 788, "start_point": [22, 19], "end_point": [22, 20], "text": " "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 788, "end_byte": 789, "start_point": [22, 20], "end_point": [22, 21], "text": "r"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 789, "end_byte": 790, "start_point": [22, 21], "end_point": [22, 22], "text": "e"}, {"type": "\"", "children": [], "start_byte": 837, "end_byte": 838, "start_point": [22, 69], "end_point": [22, 70], "text": ","}], "start_byte": 789, "end_byte": 838, "start_point": [22, 21], "end_point": [22, 70], "text": "edundant in versions 0.9.5 and above\", prog_name,"}, {"type": "identifier", "children": [], "start_byte": 840, "end_byte": 849, "start_point": [22, 72], "end_point": [22, 81], "text": "td::str::"}, {"type": "identifier", "children": [], "start_byte": 851, "end_byte": 854, "start_point": [22, 83], "end_point": [22, 86], "text": "om_"}, {"type": "primitive_type", "children": [], "start_byte": 856, "end_byte": 859, "start_point": [22, 88], "end_point": [22, 91], "text": "f8("}, {"type": "identifier", "children": [], "start_byte": 861, "end_byte": 870, "start_point": [22, 93], "end_point": [22, 102], "text": "ag).unwra"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 870, "end_byte": 871, "start_point": [22, 102], "end_point": [22, 103], "text": "p"}, {"type": "identifier", "children": [], "start_byte": 871, "end_byte": 875, "start_point": [22, 103], "end_point": [22, 107], "text": "())\n"}, {"type": ")", "children": [], "start_byte": 875, "end_byte": 876, "start_point": [22, 107], "end_point": [22, 108], "text": " "}], "start_byte": 870, "end_byte": 876, "start_point": [22, 102], "end_point": [22, 108], "text": "p())\n "}, {"type": "identifier", "children": [], "start_byte": 877, "end_byte": 883, "start_point": [22, 109], "end_point": [22, 115], "text": "  );\n}"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 883, "end_byte": 884, "start_point": [22, 115], "end_point": [22, 116], "text": "\n"}, {"type": ")", "children": [], "start_byte": 884, "end_byte": 885, "start_point": [22, 116], "end_point": [22, 117], "text": "\n"}], "start_byte": 883, "end_byte": 885, "start_point": [22, 115], "end_point": [22, 117], "text": "\n\n"}, {"type": ")", "children": [], "start_byte": 885, "end_byte": 886, "start_point": [22, 117], "end_point": [22, 118], "text": "#"}], "start_byte": 788, "end_byte": 886, "start_point": [22, 20], "end_point": [22, 118], "text": "redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#"}], "start_byte": 776, "end_byte": 886, "start_point": [22, 8], "end_point": [22, 118], "text": "(\"{}: {} is redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#"}, {"type": ")", "children": [], "start_byte": 891, "end_byte": 892, "start_point": [23, 4], "end_point": [23, 5], "text": "t"}], "start_byte": 705, "end_byte": 892, "start_point": [20, 16], "end_point": [23, 5], "text": "s: %s is redundant in versions 0.9.5 and above\\n\",\n        format_args!(\"{}: {} is redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#[cfg(t"}], "start_byte": 693, "end_byte": 892, "start_point": [20, 4], "end_point": [23, 5], "text": "(\n        \"%s: %s is redundant in versions 0.9.5 and above\\n\",\n        format_args!(\"{}: {} is redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#[cfg(t"}, {"type": ";", "children": [], "start_byte": 892, "end_byte": 893, "start_point": [23, 5], "end_point": [23, 6], "text": "e"}], "start_byte": 693, "end_byte": 893, "start_point": [20, 4], "end_point": [23, 6], "text": "(\n        \"%s: %s is redundant in versions 0.9.5 and above\\n\",\n        format_args!(\"{}: {} is redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#[cfg(te"}, {"type": "}", "children": [], "start_byte": 894, "end_byte": 895, "start_point": [24, 0], "end_point": [24, 1], "text": "t"}], "start_byte": 505, "end_byte": 895, "start_point": [14, 32], "end_point": [24, 1], "text": "og_name = unsafe {\n        let pos = PROG_NAME.iter().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        std::str::from_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n    \n    mock_fprintf(\n        \"%s: %s is redundant in versions 0.9.5 and above\\n\",\n        format_args!(\"{}: {} is redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#[cfg(test"}], "start_byte": 473, "end_byte": 895, "start_point": [14, 0], "end_point": [24, 1], "text": "dant(flag: &[Char]) {\n    let prog_name = unsafe {\n        let pos = PROG_NAME.iter().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        std::str::from_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n    \n    mock_fprintf(\n        \"%s: %s is redundant in versions 0.9.5 and above\\n\",\n        format_args!(\"{}: {} is redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#[cfg(test"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 897, "end_byte": 898, "start_point": [26, 0], "end_point": [26, 1], "text": "\n"}, {"type": "[", "children": [], "start_byte": 898, "end_byte": 899, "start_point": [26, 1], "end_point": [26, 2], "text": "m"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 899, "end_byte": 902, "start_point": [26, 2], "end_point": [26, 5], "text": "od "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 902, "end_byte": 903, "start_point": [26, 5], "end_point": [26, 6], "text": "t"}, {"type": "identifier", "children": [], "start_byte": 903, "end_byte": 907, "start_point": [26, 6], "end_point": [26, 10], "text": "ests"}, {"type": ")", "children": [], "start_byte": 907, "end_byte": 908, "start_point": [26, 10], "end_point": [26, 11], "text": " "}], "start_byte": 902, "end_byte": 908, "start_point": [26, 5], "end_point": [26, 11], "text": "tests "}], "start_byte": 899, "end_byte": 908, "start_point": [26, 2], "end_point": [26, 11], "text": "od tests "}, {"type": "]", "children": [], "start_byte": 908, "end_byte": 909, "start_point": [26, 11], "end_point": [26, 12], "text": "{"}], "start_byte": 897, "end_byte": 909, "start_point": [26, 0], "end_point": [26, 12], "text": "\nmod tests {"}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 910, "end_byte": 913, "start_point": [27, 0], "end_point": [27, 3], "text": "   "}, {"type": "identifier", "children": [], "start_byte": 914, "end_byte": 919, "start_point": [27, 4], "end_point": [27, 9], "text": "use s"}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 920, "end_byte": 921, "start_point": [27, 10], "end_point": [27, 11], "text": "p"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 926, "end_byte": 929, "start_point": [28, 4], "end_point": [28, 7], "text": ";\n\n"}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 930, "end_byte": 935, "start_point": [28, 8], "end_point": [28, 13], "text": "   #["}, {"type": "::", "children": [], "start_byte": 935, "end_byte": 937, "start_point": [28, 13], "end_point": [28, 15], "text": "te"}, {"type": "*", "children": [], "start_byte": 937, "end_byte": 938, "start_point": [28, 15], "end_point": [28, 16], "text": "s"}], "start_byte": 930, "end_byte": 938, "start_point": [28, 8], "end_point": [28, 16], "text": "   #[tes"}, {"type": ";", "children": [], "start_byte": 938, "end_byte": 939, "start_point": [28, 16], "end_point": [28, 17], "text": "t"}], "start_byte": 926, "end_byte": 939, "start_point": [28, 4], "end_point": [28, 17], "text": ";\n\n    #[test"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 945, "end_byte": 946, "start_point": [30, 4], "end_point": [30, 5], "text": "f"}, {"type": "[", "children": [], "start_byte": 946, "end_byte": 947, "start_point": [30, 5], "end_point": [30, 6], "text": "n"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 947, "end_byte": 951, "start_point": [30, 6], "end_point": [30, 10], "text": " tes"}], "start_byte": 947, "end_byte": 951, "start_point": [30, 6], "end_point": [30, 10], "text": " tes"}, {"type": "]", "children": [], "start_byte": 951, "end_byte": 952, "start_point": [30, 10], "end_point": [30, 11], "text": "t"}], "start_byte": 945, "end_byte": 952, "start_point": [30, 4], "end_point": [30, 11], "text": "fn test"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 957, "end_byte": 959, "start_point": [31, 4], "end_point": [31, 6], "text": "nd"}, {"type": "identifier", "children": [], "start_byte": 960, "end_byte": 974, "start_point": [31, 7], "end_point": [31, 21], "text": "nt() {\n       "}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 974, "end_byte": 975, "start_point": [31, 21], "end_point": [31, 22], "text": " "}, {"type": ")", "children": [], "start_byte": 975, "end_byte": 976, "start_point": [31, 22], "end_point": [31, 23], "text": "u"}], "start_byte": 974, "end_byte": 976, "start_point": [31, 21], "end_point": [31, 23], "text": " u"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 977, "end_byte": 978, "start_point": [31, 24], "end_point": [31, 25], "text": "s"}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 987, "end_byte": 993, "start_point": [32, 8], "end_point": [32, 14], "text": "      "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 994, "end_byte": 995, "start_point": [32, 15], "end_point": [32, 16], "text": " "}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1008, "end_byte": 1017, "start_point": [33, 12], "end_point": [33, 21], "text": "8].clone_"}, {"type": "[", "children": [], "start_byte": 1017, "end_byte": 1018, "start_point": [33, 21], "end_point": [33, 22], "text": "f"}, {"type": "range_expression", "children": [{"type": "..", "children": [], "start_byte": 1018, "end_byte": 1020, "start_point": [33, 22], "end_point": [33, 24], "text": "ro"}, {"type": "integer_literal", "children": [], "start_byte": 1020, "end_byte": 1021, "start_point": [33, 24], "end_point": [33, 25], "text": "m"}], "start_byte": 1018, "end_byte": 1021, "start_point": [33, 22], "end_point": [33, 25], "text": "rom"}, {"type": "]", "children": [], "start_byte": 1021, "end_byte": 1022, "start_point": [33, 25], "end_point": [33, 26], "text": "_"}], "start_byte": 1008, "end_byte": 1022, "start_point": [33, 12], "end_point": [33, 26], "text": "8].clone_from_"}, {"type": ".", "children": [], "start_byte": 1022, "end_byte": 1023, "start_point": [33, 26], "end_point": [33, 27], "text": "s"}, {"type": "field_identifier", "children": [], "start_byte": 1023, "end_byte": 1039, "start_point": [33, 27], "end_point": [33, 43], "text": "lice(b\"testProg\""}], "start_byte": 1008, "end_byte": 1039, "start_point": [33, 12], "end_point": [33, 43], "text": "8].clone_from_slice(b\"testProg\""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1039, "end_byte": 1040, "start_point": [33, 43], "end_point": [33, 44], "text": ")"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1040, "end_byte": 1042, "start_point": [33, 44], "end_point": [33, 46], "text": ";\n"}, {"type": "\"", "children": [], "start_byte": 1050, "end_byte": 1051, "start_point": [33, 54], "end_point": [33, 55], "text": "}"}], "start_byte": 1040, "end_byte": 1051, "start_point": [33, 44], "end_point": [33, 55], "text": ";\n        }"}, {"type": ")", "children": [], "start_byte": 1051, "end_byte": 1052, "start_point": [33, 55], "end_point": [33, 56], "text": "\n"}], "start_byte": 1039, "end_byte": 1052, "start_point": [33, 43], "end_point": [33, 56], "text": ");\n        }\n"}], "start_byte": 1008, "end_byte": 1052, "start_point": [33, 12], "end_point": [33, 56], "text": "8].clone_from_slice(b\"testProg\");\n        }\n"}, {"type": ";", "children": [], "start_byte": 1052, "end_byte": 1053, "start_point": [33, 56], "end_point": [33, 57], "text": " "}], "start_byte": 1008, "end_byte": 1053, "start_point": [33, 12], "end_point": [33, 57], "text": "8].clone_from_slice(b\"testProg\");\n        }\n "}, {"type": "}", "children": [], "start_byte": 1062, "end_byte": 1063, "start_point": [34, 8], "end_point": [34, 9], "text": " "}], "start_byte": 994, "end_byte": 1063, "start_point": [32, 15], "end_point": [34, 9], "text": "  PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n      "}], "start_byte": 987, "end_byte": 1063, "start_point": [32, 8], "end_point": [34, 9], "text": "         PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n      "}], "start_byte": 987, "end_byte": 1063, "start_point": [32, 8], "end_point": [34, 9], "text": "         PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n      "}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1077, "end_byte": 1086, "start_point": [36, 8], "end_point": [36, 17], "text": "testFlag\""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1086, "end_byte": 1087, "start_point": [36, 17], "end_point": [36, 18], "text": ")"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1087, "end_byte": 1089, "start_point": [36, 18], "end_point": [36, 20], "text": ";\n"}, {"type": "\"", "children": [], "start_byte": 1097, "end_byte": 1098, "start_point": [36, 28], "end_point": [36, 29], "text": " "}], "start_byte": 1087, "end_byte": 1098, "start_point": [36, 18], "end_point": [36, 29], "text": ";\n    \n    "}, {"type": ")", "children": [], "start_byte": 1098, "end_byte": 1099, "start_point": [36, 29], "end_point": [36, 30], "text": " "}], "start_byte": 1086, "end_byte": 1099, "start_point": [36, 17], "end_point": [36, 30], "text": ");\n    \n     "}], "start_byte": 1077, "end_byte": 1099, "start_point": [36, 8], "end_point": [36, 30], "text": "testFlag\");\n    \n     "}, {"type": ";", "children": [], "start_byte": 1099, "end_byte": 1100, "start_point": [36, 30], "end_point": [36, 31], "text": " "}], "start_byte": 1077, "end_byte": 1100, "start_point": [36, 8], "end_point": [36, 31], "text": "testFlag\");\n    \n      "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1114, "end_byte": 1123, "start_point": [38, 8], "end_point": [38, 17], "text": "super::MO"}, {"type": "!", "children": [], "start_byte": 1123, "end_byte": 1124, "start_point": [38, 17], "end_point": [38, 18], "text": "C"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1124, "end_byte": 1125, "start_point": [38, 18], "end_point": [38, 19], "text": "K"}, {"type": "super", "children": [], "start_byte": 1126, "end_byte": 1131, "start_point": [38, 20], "end_point": [38, 25], "text": "FPRIN"}, {"type": "identifier", "children": [], "start_byte": 1133, "end_byte": 1152, "start_point": [38, 27], "end_point": [38, 46], "text": "_CALLED.lock().unwr"}, {"type": "identifier", "children": [], "start_byte": 1153, "end_byte": 1157, "start_point": [38, 47], "end_point": [38, 51], "text": "p(),"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1157, "end_byte": 1158, "start_point": [38, 51], "end_point": [38, 52], "text": " "}, {"type": ")", "children": [], "start_byte": 1158, "end_byte": 1159, "start_point": [38, 52], "end_point": [38, 53], "text": "t"}], "start_byte": 1157, "end_byte": 1159, "start_point": [38, 51], "end_point": [38, 53], "text": " t"}, {"type": "identifier", "children": [], "start_byte": 1160, "end_byte": 1166, "start_point": [38, 54], "end_point": [38, 60], "text": "ue);\n "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1166, "end_byte": 1167, "start_point": [38, 60], "end_point": [38, 61], "text": " "}, {"type": ")", "children": [], "start_byte": 1167, "end_byte": 1168, "start_point": [38, 61], "end_point": [38, 62], "text": " "}], "start_byte": 1166, "end_byte": 1168, "start_point": [38, 60], "end_point": [38, 62], "text": "  "}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 1170, "end_byte": 1174, "start_point": [38, 64], "end_point": [38, 68], "text": "   l"}], "start_byte": 1170, "end_byte": 1174, "start_point": [38, 64], "end_point": [38, 68], "text": "   l"}, {"type": ")", "children": [], "start_byte": 1174, "end_byte": 1175, "start_point": [38, 68], "end_point": [38, 69], "text": "e"}], "start_byte": 1124, "end_byte": 1175, "start_point": [38, 18], "end_point": [38, 69], "text": "K_FPRINTF_CALLED.lock().unwrap(), true);\n        le"}], "start_byte": 1114, "end_byte": 1175, "start_point": [38, 8], "end_point": [38, 69], "text": "super::MOCK_FPRINTF_CALLED.lock().unwrap(), true);\n        le"}, {"type": ";", "children": [], "start_byte": 1175, "end_byte": 1176, "start_point": [38, 69], "end_point": [38, 70], "text": "t"}], "start_byte": 1114, "end_byte": 1176, "start_point": [38, 8], "end_point": [38, 70], "text": "super::MOCK_FPRINTF_CALLED.lock().unwrap(), true);\n        let"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1185, "end_byte": 1188, "start_point": [39, 8], "end_point": [39, 11], "text": "_ms"}, {"type": "identifier", "children": [], "start_byte": 1189, "end_byte": 1201, "start_point": [39, 12], "end_point": [39, 24], "text": " = \"testProg"}, {"type": "=", "children": [], "start_byte": 1202, "end_byte": 1203, "start_point": [39, 25], "end_point": [39, 26], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1204, "end_byte": 1205, "start_point": [39, 27], "end_point": [39, 28], "text": "e"}, {"type": "escape_sequence", "children": [], "start_byte": 1264, "end_byte": 1266, "start_point": [39, 87], "end_point": [39, 89], "text": " a"}, {"type": "\"", "children": [], "start_byte": 1266, "end_byte": 1267, "start_point": [39, 89], "end_point": [39, 90], "text": "s"}], "start_byte": 1204, "end_byte": 1267, "start_point": [39, 27], "end_point": [39, 90], "text": "estFlag is redundant in versions 0.9.5 and above\\n\";\n        as"}, {"type": ";", "children": [], "start_byte": 1267, "end_byte": 1268, "start_point": [39, 90], "end_point": [39, 91], "text": "s"}], "start_byte": 1185, "end_byte": 1268, "start_point": [39, 8], "end_point": [39, 91], "text": "_msg = \"testProg: testFlag is redundant in versions 0.9.5 and above\\n\";\n        ass"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1277, "end_byte": 1286, "start_point": [40, 8], "end_point": [40, 17], "text": "uper::CAP"}, {"type": "!", "children": [], "start_byte": 1286, "end_byte": 1287, "start_point": [40, 17], "end_point": [40, 18], "text": "T"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1287, "end_byte": 1288, "start_point": [40, 18], "end_point": [40, 19], "text": "U"}, {"type": "super", "children": [], "start_byte": 1288, "end_byte": 1293, "start_point": [40, 19], "end_point": [40, 24], "text": "RED_M"}, {"type": "identifier", "children": [], "start_byte": 1295, "end_byte": 1307, "start_point": [40, 26], "end_point": [40, 38], "text": ".lock().unwr"}, {"type": "identifier", "children": [], "start_byte": 1308, "end_byte": 1312, "start_point": [40, 39], "end_point": [40, 43], "text": "p()."}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1312, "end_byte": 1313, "start_point": [40, 43], "end_point": [40, 44], "text": "a"}, {"type": ")", "children": [], "start_byte": 1313, "end_byte": 1314, "start_point": [40, 44], "end_point": [40, 45], "text": "s"}], "start_byte": 1312, "end_byte": 1314, "start_point": [40, 43], "end_point": [40, 45], "text": "as"}, {"type": "identifier", "children": [], "start_byte": 1315, "end_byte": 1321, "start_point": [40, 46], "end_point": [40, 52], "text": "str(),"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1321, "end_byte": 1322, "start_point": [40, 52], "end_point": [40, 53], "text": " "}, {"type": ")", "children": [], "start_byte": 1322, "end_byte": 1323, "start_point": [40, 53], "end_point": [40, 54], "text": "e"}], "start_byte": 1321, "end_byte": 1323, "start_point": [40, 52], "end_point": [40, 54], "text": " e"}, {"type": "identifier", "children": [], "start_byte": 1324, "end_byte": 1330, "start_point": [40, 55], "end_point": [40, 61], "text": "pected"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1330, "end_byte": 1331, "start_point": [40, 61], "end_point": [40, 62], "text": "_"}, {"type": ")", "children": [], "start_byte": 1331, "end_byte": 1332, "start_point": [40, 62], "end_point": [40, 63], "text": "m"}], "start_byte": 1330, "end_byte": 1332, "start_point": [40, 61], "end_point": [40, 63], "text": "_m"}, {"type": "identifier", "children": [], "start_byte": 1334, "end_byte": 1346, "start_point": [40, 65], "end_point": [40, 77], "text": ");\n    }\n}\n"}, {"type": ")", "children": [], "start_byte": 1346, "end_byte": 1347, "start_point": [40, 77], "end_point": [40, 78], "text": ""}], "start_byte": 1287, "end_byte": 1347, "start_point": [40, 18], "end_point": [40, 78], "text": "URED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}], "start_byte": 1277, "end_byte": 1347, "start_point": [40, 8], "end_point": [40, 78], "text": "uper::CAPTURED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}, {"type": ";", "children": [], "start_byte": 1347, "end_byte": 1348, "start_point": [40, 78], "end_point": [40, 79], "text": ""}], "start_byte": 1277, "end_byte": 1348, "start_point": [40, 8], "end_point": [40, 79], "text": "uper::CAPTURED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1353, "end_byte": 1354, "start_point": [41, 4], "end_point": [41, 5], "text": ""}], "start_byte": 977, "end_byte": 1354, "start_point": [31, 24], "end_point": [41, 5], "text": "safe {\n            PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n        redundant(b\"testFlag\");\n    \n        assert_eq!(*super::MOCK_FPRINTF_CALLED.lock().unwrap(), true);\n        let expected_msg = \"testProg: testFlag is redundant in versions 0.9.5 and above\\n\";\n        assert_eq!(super::CAPTURED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}], "start_byte": 957, "end_byte": 1354, "start_point": [31, 4], "end_point": [41, 5], "text": "ndant() {\n        unsafe {\n            PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n        redundant(b\"testFlag\");\n    \n        assert_eq!(*super::MOCK_FPRINTF_CALLED.lock().unwrap(), true);\n        let expected_msg = \"testProg: testFlag is redundant in versions 0.9.5 and above\\n\";\n        assert_eq!(super::CAPTURED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1355, "end_byte": 1356, "start_point": [42, 0], "end_point": [42, 1], "text": ""}], "start_byte": 920, "end_byte": 1356, "start_point": [27, 10], "end_point": [42, 1], "text": "per::*;\n\n    #[test]\n    fn test_redundant() {\n        unsafe {\n            PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n        redundant(b\"testFlag\");\n    \n        assert_eq!(*super::MOCK_FPRINTF_CALLED.lock().unwrap(), true);\n        let expected_msg = \"testProg: testFlag is redundant in versions 0.9.5 and above\\n\";\n        assert_eq!(super::CAPTURED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}], "start_byte": 910, "end_byte": 1356, "start_point": [27, 0], "end_point": [42, 1], "text": "    use super::*;\n\n    #[test]\n    fn test_redundant() {\n        unsafe {\n            PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n        redundant(b\"testFlag\");\n    \n        assert_eq!(*super::MOCK_FPRINTF_CALLED.lock().unwrap(), true);\n        let expected_msg = \"testProg: testFlag is redundant in versions 0.9.5 and above\\n\";\n        assert_eq!(super::CAPTURED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}], "start_byte": 0, "end_byte": 1357, "start_point": [0, 0], "end_point": [43, 0], "text": "use crate::global_vars::bzip2_c2::{PROG_NAME, Char};\nuse std::sync::Mutex;\nuse lazy_static::lazy_static;\n\nlazy_static! {\n    static ref MOCK_FPRINTF_CALLED: Mutex<bool> = Mutex::new(false);\n    static ref CAPTURED_MSG: Mutex<String> = Mutex::new(String::new());\n}\n\nfn mock_fprintf(format: &str, args: std::fmt::Arguments) {\n    *MOCK_FPRINTF_CALLED.lock().unwrap() = true;\n    *CAPTURED_MSG.lock().unwrap() = format!(\"{}\\n\", format!(\"{}\", args));  // \u6dfb\u52a0\u4e86\u6362\u884c\u7b26\n}\n\npub fn redundant(flag: &[Char]) {\n    let prog_name = unsafe {\n        let pos = PROG_NAME.iter().position(|&x| x == 0).unwrap_or(PROG_NAME.len());\n        std::str::from_utf8(&PROG_NAME[..pos]).unwrap()\n    };\n    \n    mock_fprintf(\n        \"%s: %s is redundant in versions 0.9.5 and above\\n\",\n        format_args!(\"{}: {} is redundant in versions 0.9.5 and above\", prog_name, std::str::from_utf8(flag).unwrap())\n    );\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_redundant() {\n        unsafe {\n            PROG_NAME[..8].clone_from_slice(b\"testProg\");\n        }\n    \n        redundant(b\"testFlag\");\n    \n        assert_eq!(*super::MOCK_FPRINTF_CALLED.lock().unwrap(), true);\n        let expected_msg = \"testProg: testFlag is redundant in versions 0.9.5 and above\\n\";\n        assert_eq!(super::CAPTURED_MSG.lock().unwrap().as_str(), expected_msg);\n    }\n}\n"}