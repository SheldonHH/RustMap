{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4, "end_byte": 7, "start_point": [0, 4], "end_point": [0, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 7, "end_byte": 9, "start_point": [0, 7], "end_point": [0, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "fs"}], "start_byte": 4, "end_byte": 11, "start_point": [0, 4], "end_point": [0, 11], "text": "std::fs"}, {"type": "::", "children": [], "start_byte": 11, "end_byte": 13, "start_point": [0, 11], "end_point": [0, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 13, "end_byte": 17, "start_point": [0, 13], "end_point": [0, 17], "text": "File"}], "start_byte": 4, "end_byte": 17, "start_point": [0, 4], "end_point": [0, 17], "text": "std::fs::File"}, {"type": ";", "children": [], "start_byte": 17, "end_byte": 18, "start_point": [0, 17], "end_point": [0, 18], "text": ";"}], "start_byte": 0, "end_byte": 18, "start_point": [0, 0], "end_point": [0, 18], "text": "use std::fs::File;"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 20, "end_byte": 23, "start_point": [2, 0], "end_point": [2, 3], "text": "pub"}], "start_byte": 20, "end_byte": 23, "start_point": [2, 0], "end_point": [2, 3], "text": "pub"}, {"type": "fn", "children": [], "start_byte": 24, "end_byte": 26, "start_point": [2, 4], "end_point": [2, 6], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 27, "end_byte": 38, "start_point": [2, 7], "end_point": [2, 18], "text": "file_exists"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 38, "end_byte": 39, "start_point": [2, 18], "end_point": [2, 19], "text": "("}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 39, "end_byte": 43, "start_point": [2, 19], "end_point": [2, 23], "text": "name"}, {"type": ":", "children": [], "start_byte": 43, "end_byte": 44, "start_point": [2, 23], "end_point": [2, 24], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 45, "end_byte": 46, "start_point": [2, 25], "end_point": [2, 26], "text": "&"}, {"type": "primitive_type", "children": [], "start_byte": 46, "end_byte": 49, "start_point": [2, 26], "end_point": [2, 29], "text": "str"}], "start_byte": 45, "end_byte": 49, "start_point": [2, 25], "end_point": [2, 29], "text": "&str"}], "start_byte": 39, "end_byte": 49, "start_point": [2, 19], "end_point": [2, 29], "text": "name: &str"}, {"type": ")", "children": [], "start_byte": 49, "end_byte": 50, "start_point": [2, 29], "end_point": [2, 30], "text": ")"}], "start_byte": 38, "end_byte": 50, "start_point": [2, 18], "end_point": [2, 30], "text": "(name: &str)"}, {"type": "->", "children": [], "start_byte": 51, "end_byte": 53, "start_point": [2, 31], "end_point": [2, 33], "text": "->"}, {"type": "primitive_type", "children": [], "start_byte": 54, "end_byte": 58, "start_point": [2, 34], "end_point": [2, 38], "text": "bool"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 59, "end_byte": 60, "start_point": [2, 39], "end_point": [2, 40], "text": "{"}, {"type": "expression_statement", "children": [{"type": "match_expression", "children": [{"type": "match", "children": [], "start_byte": 65, "end_byte": 70, "start_point": [3, 4], "end_point": [3, 9], "text": "match"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 71, "end_byte": 75, "start_point": [3, 10], "end_point": [3, 14], "text": "File"}, {"type": "::", "children": [], "start_byte": 75, "end_byte": 77, "start_point": [3, 14], "end_point": [3, 16], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 77, "end_byte": 81, "start_point": [3, 16], "end_point": [3, 20], "text": "open"}], "start_byte": 71, "end_byte": 81, "start_point": [3, 10], "end_point": [3, 20], "text": "File::open"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 81, "end_byte": 82, "start_point": [3, 20], "end_point": [3, 21], "text": "("}, {"type": "identifier", "children": [], "start_byte": 82, "end_byte": 86, "start_point": [3, 21], "end_point": [3, 25], "text": "name"}, {"type": ")", "children": [], "start_byte": 86, "end_byte": 87, "start_point": [3, 25], "end_point": [3, 26], "text": ")"}], "start_byte": 81, "end_byte": 87, "start_point": [3, 20], "end_point": [3, 26], "text": "(name)"}], "start_byte": 71, "end_byte": 87, "start_point": [3, 10], "end_point": [3, 26], "text": "File::open(name)"}, {"type": "match_block", "children": [{"type": "{", "children": [], "start_byte": 88, "end_byte": 89, "start_point": [3, 27], "end_point": [3, 28], "text": "{"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 98, "end_byte": 100, "start_point": [4, 8], "end_point": [4, 10], "text": "Ok"}, {"type": "(", "children": [], "start_byte": 100, "end_byte": 101, "start_point": [4, 10], "end_point": [4, 11], "text": "("}, {"type": "_", "children": [], "start_byte": 101, "end_byte": 102, "start_point": [4, 11], "end_point": [4, 12], "text": "_"}, {"type": ")", "children": [], "start_byte": 102, "end_byte": 103, "start_point": [4, 12], "end_point": [4, 13], "text": ")"}], "start_byte": 98, "end_byte": 103, "start_point": [4, 8], "end_point": [4, 13], "text": "Ok(_)"}], "start_byte": 98, "end_byte": 103, "start_point": [4, 8], "end_point": [4, 13], "text": "Ok(_)"}, {"type": "=>", "children": [], "start_byte": 104, "end_byte": 106, "start_point": [4, 14], "end_point": [4, 16], "text": "=>"}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 107, "end_byte": 111, "start_point": [4, 17], "end_point": [4, 21], "text": "true"}], "start_byte": 107, "end_byte": 111, "start_point": [4, 17], "end_point": [4, 21], "text": "true"}, {"type": ",", "children": [], "start_byte": 111, "end_byte": 112, "start_point": [4, 21], "end_point": [4, 22], "text": ","}], "start_byte": 98, "end_byte": 112, "start_point": [4, 8], "end_point": [4, 22], "text": "Ok(_) => true,"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 121, "end_byte": 124, "start_point": [5, 8], "end_point": [5, 11], "text": "Err"}, {"type": "(", "children": [], "start_byte": 124, "end_byte": 125, "start_point": [5, 11], "end_point": [5, 12], "text": "("}, {"type": "_", "children": [], "start_byte": 125, "end_byte": 126, "start_point": [5, 12], "end_point": [5, 13], "text": "_"}, {"type": ")", "children": [], "start_byte": 126, "end_byte": 127, "start_point": [5, 13], "end_point": [5, 14], "text": ")"}], "start_byte": 121, "end_byte": 127, "start_point": [5, 8], "end_point": [5, 14], "text": "Err(_)"}], "start_byte": 121, "end_byte": 127, "start_point": [5, 8], "end_point": [5, 14], "text": "Err(_)"}, {"type": "=>", "children": [], "start_byte": 128, "end_byte": 130, "start_point": [5, 15], "end_point": [5, 17], "text": "=>"}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 131, "end_byte": 136, "start_point": [5, 18], "end_point": [5, 23], "text": "false"}], "start_byte": 131, "end_byte": 136, "start_point": [5, 18], "end_point": [5, 23], "text": "false"}, {"type": ",", "children": [], "start_byte": 136, "end_byte": 137, "start_point": [5, 23], "end_point": [5, 24], "text": ","}], "start_byte": 121, "end_byte": 137, "start_point": [5, 8], "end_point": [5, 24], "text": "Err(_) => false,"}, {"type": "}", "children": [], "start_byte": 142, "end_byte": 143, "start_point": [6, 4], "end_point": [6, 5], "text": "}"}], "start_byte": 88, "end_byte": 143, "start_point": [3, 27], "end_point": [6, 5], "text": "{\n        Ok(_) => true,\n        Err(_) => false,\n    }"}], "start_byte": 65, "end_byte": 143, "start_point": [3, 4], "end_point": [6, 5], "text": "match File::open(name) {\n        Ok(_) => true,\n        Err(_) => false,\n    }"}], "start_byte": 65, "end_byte": 143, "start_point": [3, 4], "end_point": [6, 5], "text": "match File::open(name) {\n        Ok(_) => true,\n        Err(_) => false,\n    }"}, {"type": "}", "children": [], "start_byte": 144, "end_byte": 145, "start_point": [7, 0], "end_point": [7, 1], "text": "}"}], "start_byte": 59, "end_byte": 145, "start_point": [2, 39], "end_point": [7, 1], "text": "{\n    match File::open(name) {\n        Ok(_) => true,\n        Err(_) => false,\n    }\n}"}], "start_byte": 20, "end_byte": 145, "start_point": [2, 0], "end_point": [7, 1], "text": "pub fn file_exists(name: &str) -> bool {\n    match File::open(name) {\n        Ok(_) => true,\n        Err(_) => false,\n    }\n}"}], "start_byte": 0, "end_byte": 146, "start_point": [0, 0], "end_point": [8, 0], "text": "use std::fs::File;\n\npub fn file_exists(name: &str) -> bool {\n    match File::open(name) {\n        Ok(_) => true,\n        Err(_) => false,\n    }\n}\n"}