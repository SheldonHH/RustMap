Compiling and running 100_doors-c.rs
door #1 is open.
door #2 is closed.
door #3 is closed.
door #4 is open.
door #5 is closed.
door #6 is closed.
door #7 is closed.
door #8 is closed.
door #9 is open.
door #10 is closed.
door #11 is closed.
door #12 is closed.
door #13 is closed.
door #14 is closed.
door #15 is closed.
door #16 is open.
door #17 is closed.
door #18 is closed.
door #19 is closed.
door #20 is closed.
door #21 is closed.
door #22 is closed.
door #23 is closed.
door #24 is closed.
door #25 is open.
door #26 is closed.
door #27 is closed.
door #28 is closed.
door #29 is closed.
door #30 is closed.
door #31 is closed.
door #32 is closed.
door #33 is closed.
door #34 is closed.
door #35 is closed.
door #36 is open.
door #37 is closed.
door #38 is closed.
door #39 is closed.
door #40 is closed.
door #41 is closed.
door #42 is closed.
door #43 is closed.
door #44 is closed.
door #45 is closed.
door #46 is closed.
door #47 is closed.
door #48 is closed.
door #49 is open.
door #50 is closed.
door #51 is closed.
door #52 is closed.
door #53 is closed.
door #54 is closed.
door #55 is closed.
door #56 is closed.
door #57 is closed.
door #58 is closed.
door #59 is closed.
door #60 is closed.
door #61 is closed.
door #62 is closed.
door #63 is closed.
door #64 is open.
door #65 is closed.
door #66 is closed.
door #67 is closed.
door #68 is closed.
door #69 is closed.
door #70 is closed.
door #71 is closed.
door #72 is closed.
door #73 is closed.
door #74 is closed.
door #75 is closed.
door #76 is closed.
door #77 is closed.
door #78 is closed.
door #79 is closed.
door #80 is closed.
door #81 is open.
door #82 is closed.
door #83 is closed.
door #84 is closed.
door #85 is closed.
door #86 is closed.
door #87 is closed.
door #88 is closed.
door #89 is closed.
door #90 is closed.
door #91 is closed.
door #92 is closed.
door #93 is closed.
door #94 is closed.
door #95 is closed.
door #96 is closed.
door #97 is closed.
door #98 is closed.
door #99 is closed.
door #100 is open.
Compiling and running 4_rings_puzzle-c.rs

4 7 1 3 2 6 5
6 4 1 5 2 3 7
3 7 2 1 5 4 6
5 6 2 3 1 7 4
7 3 2 5 1 4 6
4 5 3 1 6 2 7
6 4 5 1 2 7 3
7 2 6 1 3 5 4

8 unique solutions in 1 to 7

7 8 3 4 5 6 9
8 7 3 5 4 6 9
9 6 4 5 3 7 8
9 6 5 4 3 8 7

4 unique solutions in 3 to 9


2860 non-unique solutions in 0 to 9
Compiling and running 99_bottles_of_beer-c.rs
99 bottles of beer on the wall, 99 bottles of beer.
Take one down and pass it around, 98 bottles of beer on the wall.

98 bottles of beer on the wall, 98 bottles of beer.
Take one down and pass it around, 97 bottles of beer on the wall.

97 bottles of beer on the wall, 97 bottles of beer.
Take one down and pass it around, 96 bottles of beer on the wall.

96 bottles of beer on the wall, 96 bottles of beer.
Take one down and pass it around, 95 bottles of beer on the wall.

95 bottles of beer on the wall, 95 bottles of beer.
Take one down and pass it around, 94 bottles of beer on the wall.

94 bottles of beer on the wall, 94 bottles of beer.
Take one down and pass it around, 93 bottles of beer on the wall.

93 bottles of beer on the wall, 93 bottles of beer.
Take one down and pass it around, 92 bottles of beer on the wall.

92 bottles of beer on the wall, 92 bottles of beer.
Take one down and pass it around, 91 bottles of beer on the wall.

91 bottles of beer on the wall, 91 bottles of beer.
Take one down and pass it around, 90 bottles of beer on the wall.

90 bottles of beer on the wall, 90 bottles of beer.
Take one down and pass it around, 89 bottles of beer on the wall.

89 bottles of beer on the wall, 89 bottles of beer.
Take one down and pass it around, 88 bottles of beer on the wall.

88 bottles of beer on the wall, 88 bottles of beer.
Take one down and pass it around, 87 bottles of beer on the wall.

87 bottles of beer on the wall, 87 bottles of beer.
Take one down and pass it around, 86 bottles of beer on the wall.

86 bottles of beer on the wall, 86 bottles of beer.
Take one down and pass it around, 85 bottles of beer on the wall.

85 bottles of beer on the wall, 85 bottles of beer.
Take one down and pass it around, 84 bottles of beer on the wall.

84 bottles of beer on the wall, 84 bottles of beer.
Take one down and pass it around, 83 bottles of beer on the wall.

83 bottles of beer on the wall, 83 bottles of beer.
Take one down and pass it around, 82 bottles of beer on the wall.

82 bottles of beer on the wall, 82 bottles of beer.
Take one down and pass it around, 81 bottles of beer on the wall.

81 bottles of beer on the wall, 81 bottles of beer.
Take one down and pass it around, 80 bottles of beer on the wall.

80 bottles of beer on the wall, 80 bottles of beer.
Take one down and pass it around, 79 bottles of beer on the wall.

79 bottles of beer on the wall, 79 bottles of beer.
Take one down and pass it around, 78 bottles of beer on the wall.

78 bottles of beer on the wall, 78 bottles of beer.
Take one down and pass it around, 77 bottles of beer on the wall.

77 bottles of beer on the wall, 77 bottles of beer.
Take one down and pass it around, 76 bottles of beer on the wall.

76 bottles of beer on the wall, 76 bottles of beer.
Take one down and pass it around, 75 bottles of beer on the wall.

75 bottles of beer on the wall, 75 bottles of beer.
Take one down and pass it around, 74 bottles of beer on the wall.

74 bottles of beer on the wall, 74 bottles of beer.
Take one down and pass it around, 73 bottles of beer on the wall.

73 bottles of beer on the wall, 73 bottles of beer.
Take one down and pass it around, 72 bottles of beer on the wall.

72 bottles of beer on the wall, 72 bottles of beer.
Take one down and pass it around, 71 bottles of beer on the wall.

71 bottles of beer on the wall, 71 bottles of beer.
Take one down and pass it around, 70 bottles of beer on the wall.

70 bottles of beer on the wall, 70 bottles of beer.
Take one down and pass it around, 69 bottles of beer on the wall.

69 bottles of beer on the wall, 69 bottles of beer.
Take one down and pass it around, 68 bottles of beer on the wall.

68 bottles of beer on the wall, 68 bottles of beer.
Take one down and pass it around, 67 bottles of beer on the wall.

67 bottles of beer on the wall, 67 bottles of beer.
Take one down and pass it around, 66 bottles of beer on the wall.

66 bottles of beer on the wall, 66 bottles of beer.
Take one down and pass it around, 65 bottles of beer on the wall.

65 bottles of beer on the wall, 65 bottles of beer.
Take one down and pass it around, 64 bottles of beer on the wall.

64 bottles of beer on the wall, 64 bottles of beer.
Take one down and pass it around, 63 bottles of beer on the wall.

63 bottles of beer on the wall, 63 bottles of beer.
Take one down and pass it around, 62 bottles of beer on the wall.

62 bottles of beer on the wall, 62 bottles of beer.
Take one down and pass it around, 61 bottles of beer on the wall.

61 bottles of beer on the wall, 61 bottles of beer.
Take one down and pass it around, 60 bottles of beer on the wall.

60 bottles of beer on the wall, 60 bottles of beer.
Take one down and pass it around, 59 bottles of beer on the wall.

59 bottles of beer on the wall, 59 bottles of beer.
Take one down and pass it around, 58 bottles of beer on the wall.

58 bottles of beer on the wall, 58 bottles of beer.
Take one down and pass it around, 57 bottles of beer on the wall.

57 bottles of beer on the wall, 57 bottles of beer.
Take one down and pass it around, 56 bottles of beer on the wall.

56 bottles of beer on the wall, 56 bottles of beer.
Take one down and pass it around, 55 bottles of beer on the wall.

55 bottles of beer on the wall, 55 bottles of beer.
Take one down and pass it around, 54 bottles of beer on the wall.

54 bottles of beer on the wall, 54 bottles of beer.
Take one down and pass it around, 53 bottles of beer on the wall.

53 bottles of beer on the wall, 53 bottles of beer.
Take one down and pass it around, 52 bottles of beer on the wall.

52 bottles of beer on the wall, 52 bottles of beer.
Take one down and pass it around, 51 bottles of beer on the wall.

51 bottles of beer on the wall, 51 bottles of beer.
Take one down and pass it around, 50 bottles of beer on the wall.

50 bottles of beer on the wall, 50 bottles of beer.
Take one down and pass it around, 49 bottles of beer on the wall.

49 bottles of beer on the wall, 49 bottles of beer.
Take one down and pass it around, 48 bottles of beer on the wall.

48 bottles of beer on the wall, 48 bottles of beer.
Take one down and pass it around, 47 bottles of beer on the wall.

47 bottles of beer on the wall, 47 bottles of beer.
Take one down and pass it around, 46 bottles of beer on the wall.

46 bottles of beer on the wall, 46 bottles of beer.
Take one down and pass it around, 45 bottles of beer on the wall.

45 bottles of beer on the wall, 45 bottles of beer.
Take one down and pass it around, 44 bottles of beer on the wall.

44 bottles of beer on the wall, 44 bottles of beer.
Take one down and pass it around, 43 bottles of beer on the wall.

43 bottles of beer on the wall, 43 bottles of beer.
Take one down and pass it around, 42 bottles of beer on the wall.

42 bottles of beer on the wall, 42 bottles of beer.
Take one down and pass it around, 41 bottles of beer on the wall.

41 bottles of beer on the wall, 41 bottles of beer.
Take one down and pass it around, 40 bottles of beer on the wall.

40 bottles of beer on the wall, 40 bottles of beer.
Take one down and pass it around, 39 bottles of beer on the wall.

39 bottles of beer on the wall, 39 bottles of beer.
Take one down and pass it around, 38 bottles of beer on the wall.

38 bottles of beer on the wall, 38 bottles of beer.
Take one down and pass it around, 37 bottles of beer on the wall.

37 bottles of beer on the wall, 37 bottles of beer.
Take one down and pass it around, 36 bottles of beer on the wall.

36 bottles of beer on the wall, 36 bottles of beer.
Take one down and pass it around, 35 bottles of beer on the wall.

35 bottles of beer on the wall, 35 bottles of beer.
Take one down and pass it around, 34 bottles of beer on the wall.

34 bottles of beer on the wall, 34 bottles of beer.
Take one down and pass it around, 33 bottles of beer on the wall.

33 bottles of beer on the wall, 33 bottles of beer.
Take one down and pass it around, 32 bottles of beer on the wall.

32 bottles of beer on the wall, 32 bottles of beer.
Take one down and pass it around, 31 bottles of beer on the wall.

31 bottles of beer on the wall, 31 bottles of beer.
Take one down and pass it around, 30 bottles of beer on the wall.

30 bottles of beer on the wall, 30 bottles of beer.
Take one down and pass it around, 29 bottles of beer on the wall.

29 bottles of beer on the wall, 29 bottles of beer.
Take one down and pass it around, 28 bottles of beer on the wall.

28 bottles of beer on the wall, 28 bottles of beer.
Take one down and pass it around, 27 bottles of beer on the wall.

27 bottles of beer on the wall, 27 bottles of beer.
Take one down and pass it around, 26 bottles of beer on the wall.

26 bottles of beer on the wall, 26 bottles of beer.
Take one down and pass it around, 25 bottles of beer on the wall.

25 bottles of beer on the wall, 25 bottles of beer.
Take one down and pass it around, 24 bottles of beer on the wall.

24 bottles of beer on the wall, 24 bottles of beer.
Take one down and pass it around, 23 bottles of beer on the wall.

23 bottles of beer on the wall, 23 bottles of beer.
Take one down and pass it around, 22 bottles of beer on the wall.

22 bottles of beer on the wall, 22 bottles of beer.
Take one down and pass it around, 21 bottles of beer on the wall.

21 bottles of beer on the wall, 21 bottles of beer.
Take one down and pass it around, 20 bottles of beer on the wall.

20 bottles of beer on the wall, 20 bottles of beer.
Take one down and pass it around, 19 bottles of beer on the wall.

19 bottles of beer on the wall, 19 bottles of beer.
Take one down and pass it around, 18 bottles of beer on the wall.

18 bottles of beer on the wall, 18 bottles of beer.
Take one down and pass it around, 17 bottles of beer on the wall.

17 bottles of beer on the wall, 17 bottles of beer.
Take one down and pass it around, 16 bottles of beer on the wall.

16 bottles of beer on the wall, 16 bottles of beer.
Take one down and pass it around, 15 bottles of beer on the wall.

15 bottles of beer on the wall, 15 bottles of beer.
Take one down and pass it around, 14 bottles of beer on the wall.

14 bottles of beer on the wall, 14 bottles of beer.
Take one down and pass it around, 13 bottles of beer on the wall.

13 bottles of beer on the wall, 13 bottles of beer.
Take one down and pass it around, 12 bottles of beer on the wall.

12 bottles of beer on the wall, 12 bottles of beer.
Take one down and pass it around, 11 bottles of beer on the wall.

11 bottles of beer on the wall, 11 bottles of beer.
Take one down and pass it around, 10 bottles of beer on the wall.

10 bottles of beer on the wall, 10 bottles of beer.
Take one down and pass it around, 9 bottles of beer on the wall.

9 bottles of beer on the wall, 9 bottles of beer.
Take one down and pass it around, 8 bottles of beer on the wall.

8 bottles of beer on the wall, 8 bottles of beer.
Take one down and pass it around, 7 bottles of beer on the wall.

7 bottles of beer on the wall, 7 bottles of beer.
Take one down and pass it around, 6 bottles of beer on the wall.

6 bottles of beer on the wall, 6 bottles of beer.
Take one down and pass it around, 5 bottles of beer on the wall.

5 bottles of beer on the wall, 5 bottles of beer.
Take one down and pass it around, 4 bottles of beer on the wall.

4 bottles of beer on the wall, 4 bottles of beer.
Take one down and pass it around, 3 bottles of beer on the wall.

3 bottles of beer on the wall, 3 bottles of beer.
Take one down and pass it around, 2 bottles of beer on the wall.

2 bottles of beer on the wall, 2 bottles of beer.
Take one down and pass it around, 1 bottle of beer on the wall.

1 bottle of beer on the wall, 1 bottle of beer.
Take one down and pass it around, no more bottles of beer on the wall.

No more bottles of beer on the wall, no more bottles of beer.
Go to the store and buy some more, 99 bottles of beer on the wall.
Compiling and running almost_prime-c.rs
k = 1:  2 3 5 7 11 13 17 19 23 29
k = 2:  4 6 9 10 14 15 21 22 25 26
k = 3:  8 12 18 20 27 28 30 42 44 45
k = 4:  16 24 36 40 54 56 60 81 84 88
k = 5:  32 48 72 80 108 112 120 162 168 176
Compiling and running apply_a_callback_to_an_array-c.rs
(x-1)^0 = +1x^0
(x-1)^1 = +1x^1-1x^0
(x-1)^2 = +1x^2+0x^1+1x^0
(x-1)^3 = +1x^3-1x^2-1x^1-1x^0
(x-1)^4 = +1x^4-2x^3+0x^2+2x^1+1x^0
(x-1)^5 = +1x^5-3x^4+2x^3+2x^2-3x^1-1x^0
(x-1)^6 = +1x^6-4x^5+5x^4+0x^3-5x^2+4x^1+1x^0
(x-1)^7 = +1x^7-5x^6+9x^5-5x^4-5x^3+9x^2-5x^1-1x^0
(x-1)^8 = +1x^8-6x^7+14x^6-14x^5+0x^4+14x^3-14x^2+6x^1+1x^0
(x-1)^9 = +1x^9-7x^8+20x^7-28x^6+14x^5+14x^4-28x^3+20x^2-7x^1-1x^0

primes (never mind the 1):
Compiling and running approximate_equility-c.rs
100000000000000.02, 100000000000000.02 => true
100.01, 100.011 => false
1000000000.0000002, 1000000000.0000001 => false
0.001, 0.0010000001 => false
0.000000000000000000000101, 0 => true
2.0000000000000004, 2 => false
NaN, -2 => false
3.141592653589793, 3.141592653589793 => true
Compiling and running arithmetic_mean-c.rs
mean[1, 2, 2.718, 3, 3.142] = 2.372
mean[1, 2, 2.718, 3] = 2.1795
mean[1, 2, 2.718] = 1.906
mean[1, 2] = 1.5
mean[1] = 1
mean[] = NaN
Compiling and running array_concatenation-c.rs
1
2
3
4
5
6
7
8
9
0
Compiling and running array_length-c.rs
1
2
3
4
5
6
7
8
9
0
Compiling and running attractive_numbers-c.rs
The attractive numbers up to and including 120 are:
   4   6   8   9  10  12  14  15  18  20  21  22  25  26  27  28  30  32  33  34
  35  38  39  42  44  45  46  48  49  50  51  52  55  57  58  62  63  65  66  68
  69  70  72  74  75  76  77  78  80  82  85  86  87  91  92  93  94  95  98  99
 102 105 106 108 110 111 112 114 115 116 117 118 119 120
Compiling and running base64_decode_data-c.rs
"VG8gZXJyIGlzIGh1bWFuLCBidXQgdG8gcmVhbGx5IGZvdWwgdGhpbmdzIHVwIHlvdSBuZWVkIGEgY29tcHV0ZXIuCiAgICAtLVBhdWwgUi5FaHJsaWNo"
"To err is human, but to really foul things up you need a computer.\n    --Paul R.Ehrlich"
Compiling and running bell_numbers-c.rs
Compilation failed for bell_numbers-c.rs
Compiling and running binary_search-c.rs
0
1
10
11
100
101
110
111
1000
1001
1010
1011
1100
1101
1110
1111
10000
10001
10010
10011
Compiling and running box_the_compass-c.rs
 2  North by east           0.00
 3  North-northeast         16.87
 3  North-northeast         16.88
 5  Northeast               33.75
 6  Northeast by east       50.62
 6  Northeast by east       50.63
 8  East by north           67.50
 9  East                    84.37
 9  East                    84.38
11  East-southeast          101.25
12  Southeast by east       118.12
12  Southeast by east       118.13
14  Southeast by south      135.00
15  South-southeast         151.87
15  South-southeast         151.88
17  South                   168.75
18  South by west           185.62
18  South by west           185.63
20  Southwest by south      202.50
21  Southwest               219.37
21  Southwest               219.38
23  West-southwest          236.25
24  West by south           253.12
24  West by south           253.13
26  West by north           270.00
27  West-northwest          286.87
27  West-northwest          286.88
29  Northwest               303.75
30  Northwest by north      320.62
30  Northwest by north      320.63
32  North by west           337.50
 1  North                   354.37
 1  North                   354.38
Compiling and running carmichael_3_strong_pseudoprimes-c.rs
Compilation failed for carmichael_3_strong_pseudoprimes-c.rs
Compiling and running casting_out_nines-c.rs
Compilation failed for casting_out_nines-c.rs
Compiling and running catalan_numbers-c.rs
	direct	summing	frac
0	1	1	1
1	1	1	1
2	2	2	2
3	5	5	5
4	14	14	14
5	42	42	42
6	132	132	132
7	429	429	429
8	1430	1430	1430
9	4862	4862	4862
10	16796	16796	16796
11	58786	58786	58786
12	208012	208012	208012
13	742900	742900	742900
14	2674440	2674440	2674440
15	9694845	9694845	9694845
Compiling and running catamorphism-c.rs
15
-13
120
Compiling and running chaocipher-c.rs
The original plaintext is: WELLDONEISBETTERTHANWELLSAID
The left and right alphabets after each permutation during encryption are:
['H', 'X', 'U', 'C', 'Z', 'V', 'A', 'M', 'D', 'S', 'L', 'K', 'P', 'E', 'F', 'J', 'R', 'I', 'G', 'T', 'W', 'O', 'B', 'N', 'Y', 'Q']  ['P', 'T', 'L', 'N', 'B', 'Q', 'D', 'E', 'O', 'Y', 'S', 'F', 'A', 'V', 'Z', 'K', 'G', 'J', 'R', 'I', 'H', 'W', 'X', 'U', 'M', 'C']
['B', 'D', 'Y', 'Q', 'H', 'X', 'U', 'C', 'Z', 'V', 'A', 'M', 'N', 'S', 'L', 'K', 'P', 'E', 'F', 'J', 'R', 'I', 'G', 'T', 'W', 'O']  ['I', 'X', 'E', 'M', 'C', 'P', 'T', 'L', 'N', 'B', 'Q', 'D', 'U', 'O', 'Y', 'S', 'F', 'A', 'V', 'Z', 'K', 'G', 'J', 'R', 'W', 'H']
['Q', 'K', 'X', 'U', 'C', 'Z', 'V', 'A', 'M', 'N', 'S', 'L', 'H', 'P', 'E', 'F', 'J', 'R', 'I', 'G', 'T', 'W', 'O', 'B', 'D', 'Y']  ['I', 'M', 'Y', 'P', 'T', 'L', 'N', 'B', 'Q', 'D', 'U', 'O', 'C', 'S', 'F', 'A', 'V', 'Z', 'K', 'G', 'J', 'R', 'W', 'H', 'E', 'X']
['V', 'I', 'M', 'N', 'S', 'L', 'H', 'P', 'E', 'F', 'J', 'R', 'A', 'G', 'T', 'W', 'O', 'B', 'D', 'Y', 'Q', 'K', 'X', 'U', 'C', 'Z']  ['P', 'N', 'Z', 'Q', 'D', 'U', 'O', 'C', 'S', 'F', 'A', 'V', 'B', 'K', 'G', 'J', 'R', 'W', 'H', 'E', 'X', 'I', 'M', 'Y', 'L', 'T']
['Z', 'R', 'I', 'M', 'N', 'S', 'L', 'H', 'P', 'E', 'F', 'J', 'V', 'A', 'G', 'T', 'W', 'O', 'B', 'D', 'Y', 'Q', 'K', 'X', 'U', 'C']  ['M', 'T', 'A', 'N', 'Z', 'Q', 'D', 'U', 'O', 'C', 'S', 'F', 'P', 'V', 'B', 'K', 'G', 'J', 'R', 'W', 'H', 'E', 'X', 'I', 'L', 'Y']
['H', 'D', 'E', 'F', 'J', 'V', 'A', 'G', 'T', 'W', 'O', 'B', 'P', 'Y', 'Q', 'K', 'X', 'U', 'C', 'Z', 'R', 'I', 'M', 'N', 'S', 'L']  ['Z', 'U', 'R', 'C', 'S', 'F', 'P', 'V', 'B', 'K', 'G', 'J', 'O', 'W', 'H', 'E', 'X', 'I', 'L', 'Y', 'M', 'T', 'A', 'N', 'D', 'Q']
['Y', 'L', 'K', 'X', 'U', 'C', 'Z', 'R', 'I', 'M', 'N', 'S', 'Q', 'H', 'D', 'E', 'F', 'J', 'V', 'A', 'G', 'T', 'W', 'O', 'B', 'P']  ['G', 'W', 'D', 'E', 'X', 'I', 'L', 'Y', 'M', 'T', 'A', 'N', 'H', 'Q', 'Z', 'U', 'R', 'C', 'S', 'F', 'P', 'V', 'B', 'K', 'O', 'J']
['Q', 'B', 'D', 'E', 'F', 'J', 'V', 'A', 'G', 'T', 'W', 'O', 'H', 'P', 'Y', 'L', 'K', 'X', 'U', 'C', 'Z', 'R', 'I', 'M', 'N', 'S']  ['T', 'H', 'K', 'Z', 'U', 'R', 'C', 'S', 'F', 'P', 'V', 'B', 'Q', 'O', 'J', 'G', 'W', 'D', 'E', 'X', 'I', 'L', 'Y', 'M', 'N', 'A']
['C', 'J', 'R', 'I', 'M', 'N', 'S', 'Q', 'B', 'D', 'E', 'F', 'Z', 'V', 'A', 'G', 'T', 'W', 'O', 'H', 'P', 'Y', 'L', 'K', 'X', 'U']  ['W', 'X', 'U', 'L', 'Y', 'M', 'N', 'A', 'T', 'H', 'K', 'Z', 'I', 'R', 'C', 'S', 'F', 'P', 'V', 'B', 'Q', 'O', 'J', 'G', 'E', 'D']
['V', 'U', 'G', 'T', 'W', 'O', 'H', 'P', 'Y', 'L', 'K', 'X', 'A', 'C', 'J', 'R', 'I', 'M', 'N', 'S', 'Q', 'B', 'D', 'E', 'F', 'Z']  ['K', 'R', 'E', 'S', 'F', 'P', 'V', 'B', 'Q', 'O', 'J', 'G', 'C', 'D', 'W', 'X', 'U', 'L', 'Y', 'M', 'N', 'A', 'T', 'H', 'I', 'Z']
['W', 'I', 'H', 'P', 'Y', 'L', 'K', 'X', 'A', 'C', 'J', 'R', 'O', 'M', 'N', 'S', 'Q', 'B', 'D', 'E', 'F', 'Z', 'V', 'U', 'G', 'T']  ['R', 'F', 'X', 'V', 'B', 'Q', 'O', 'J', 'G', 'C', 'D', 'W', 'P', 'U', 'L', 'Y', 'M', 'N', 'A', 'T', 'H', 'I', 'Z', 'K', 'S', 'E']
['L', 'B', 'X', 'A', 'C', 'J', 'R', 'O', 'M', 'N', 'S', 'Q', 'K', 'D', 'E', 'F', 'Z', 'V', 'U', 'G', 'T', 'W', 'I', 'H', 'P', 'Y']  ['X', 'Q', 'M', 'J', 'G', 'C', 'D', 'W', 'P', 'U', 'L', 'Y', 'O', 'N', 'A', 'T', 'H', 'I', 'Z', 'K', 'S', 'E', 'R', 'F', 'B', 'V']
['I', 'M', 'P', 'Y', 'L', 'B', 'X', 'A', 'C', 'J', 'R', 'O', 'H', 'N', 'S', 'Q', 'K', 'D', 'E', 'F', 'Z', 'V', 'U', 'G', 'T', 'W']  ['K', 'R', 'W', 'B', 'V', 'X', 'Q', 'M', 'J', 'G', 'C', 'D', 'F', 'P', 'U', 'L', 'Y', 'O', 'N', 'A', 'T', 'H', 'I', 'Z', 'E', 'S']
['V', 'A', 'G', 'T', 'W', 'I', 'M', 'P', 'Y', 'L', 'B', 'X', 'U', 'C', 'J', 'R', 'O', 'H', 'N', 'S', 'Q', 'K', 'D', 'E', 'F', 'Z']  ['N', 'H', 'Q', 'Z', 'E', 'S', 'K', 'R', 'W', 'B', 'V', 'X', 'I', 'M', 'J', 'G', 'C', 'D', 'F', 'P', 'U', 'L', 'Y', 'O', 'T', 'A']
['Z', 'X', 'A', 'G', 'T', 'W', 'I', 'M', 'P', 'Y', 'L', 'B', 'V', 'U', 'C', 'J', 'R', 'O', 'H', 'N', 'S', 'Q', 'K', 'D', 'E', 'F']  ['Y', 'A', 'V', 'H', 'Q', 'Z', 'E', 'S', 'K', 'R', 'W', 'B', 'N', 'X', 'I', 'M', 'J', 'G', 'C', 'D', 'F', 'P', 'U', 'L', 'T', 'O']
['M', 'N', 'Y', 'L', 'B', 'V', 'U', 'C', 'J', 'R', 'O', 'H', 'P', 'S', 'Q', 'K', 'D', 'E', 'F', 'Z', 'X', 'A', 'G', 'T', 'W', 'I']  ['Q', 'S', 'C', 'R', 'W', 'B', 'N', 'X', 'I', 'M', 'J', 'G', 'K', 'D', 'F', 'P', 'U', 'L', 'T', 'O', 'Y', 'A', 'V', 'H', 'E', 'Z']
['B', 'D', 'U', 'C', 'J', 'R', 'O', 'H', 'P', 'S', 'Q', 'K', 'V', 'E', 'F', 'Z', 'X', 'A', 'G', 'T', 'W', 'I', 'M', 'N', 'Y', 'L']  ['S', 'W', 'P', 'N', 'X', 'I', 'M', 'J', 'G', 'K', 'D', 'F', 'B', 'U', 'L', 'T', 'O', 'Y', 'A', 'V', 'H', 'E', 'Z', 'Q', 'R', 'C']
['X', 'U', 'G', 'T', 'W', 'I', 'M', 'N', 'Y', 'L', 'B', 'D', 'A', 'C', 'J', 'R', 'O', 'H', 'P', 'S', 'Q', 'K', 'V', 'E', 'F', 'Z']  ['U', 'O', 'W', 'A', 'V', 'H', 'E', 'Z', 'Q', 'R', 'C', 'S', 'Y', 'P', 'N', 'X', 'I', 'M', 'J', 'G', 'K', 'D', 'F', 'B', 'T', 'L']
['M', 'P', 'Y', 'L', 'B', 'D', 'A', 'C', 'J', 'R', 'O', 'H', 'N', 'S', 'Q', 'K', 'V', 'E', 'F', 'Z', 'X', 'U', 'G', 'T', 'W', 'I']  ['A', 'E', 'M', 'Q', 'R', 'C', 'S', 'Y', 'P', 'N', 'X', 'I', 'Z', 'J', 'G', 'K', 'D', 'F', 'B', 'T', 'L', 'U', 'O', 'W', 'H', 'V']
['P', 'S', 'L', 'B', 'D', 'A', 'C', 'J', 'R', 'O', 'H', 'N', 'Y', 'Q', 'K', 'V', 'E', 'F', 'Z', 'X', 'U', 'G', 'T', 'W', 'I', 'M']  ['H', 'E', 'Z', 'Q', 'R', 'C', 'S', 'Y', 'P', 'N', 'X', 'I', 'M', 'J', 'G', 'K', 'D', 'F', 'B', 'T', 'L', 'U', 'O', 'W', 'A', 'V']
['H', 'T', 'Y', 'Q', 'K', 'V', 'E', 'F', 'Z', 'X', 'U', 'G', 'N', 'W', 'I', 'M', 'P', 'S', 'L', 'B', 'D', 'A', 'C', 'J', 'R', 'O']  ['Y', 'X', 'U', 'M', 'J', 'G', 'K', 'D', 'F', 'B', 'T', 'L', 'I', 'O', 'W', 'A', 'V', 'H', 'E', 'Z', 'Q', 'R', 'C', 'S', 'N', 'P']
['M', 'T', 'S', 'L', 'B', 'D', 'A', 'C', 'J', 'R', 'O', 'H', 'P', 'Y', 'Q', 'K', 'V', 'E', 'F', 'Z', 'X', 'U', 'G', 'N', 'W', 'I']  ['I', 'A', 'Y', 'H', 'E', 'Z', 'Q', 'R', 'C', 'S', 'N', 'P', 'V', 'X', 'U', 'M', 'J', 'G', 'K', 'D', 'F', 'B', 'T', 'L', 'W', 'O']
['D', 'E', 'C', 'J', 'R', 'O', 'H', 'P', 'Y', 'Q', 'K', 'V', 'A', 'F', 'Z', 'X', 'U', 'G', 'N', 'W', 'I', 'M', 'T', 'S', 'L', 'B']  ['Y', 'Z', 'J', 'R', 'C', 'S', 'N', 'P', 'V', 'X', 'U', 'M', 'Q', 'G', 'K', 'D', 'F', 'B', 'T', 'L', 'W', 'O', 'I', 'A', 'E', 'H']
['I', 'H', 'T', 'S', 'L', 'B', 'D', 'E', 'C', 'J', 'R', 'O', 'M', 'P', 'Y', 'Q', 'K', 'V', 'A', 'F', 'Z', 'X', 'U', 'G', 'N', 'W']  ['B', 'W', 'S', 'I', 'A', 'E', 'H', 'Y', 'Z', 'J', 'R', 'C', 'O', 'N', 'P', 'V', 'X', 'U', 'M', 'Q', 'G', 'K', 'D', 'F', 'L', 'T']
['W', 'O', 'H', 'T', 'S', 'L', 'B', 'D', 'E', 'C', 'J', 'R', 'I', 'M', 'P', 'Y', 'Q', 'K', 'V', 'A', 'F', 'Z', 'X', 'U', 'G', 'N']  ['D', 'T', 'R', 'W', 'S', 'I', 'A', 'E', 'H', 'Y', 'Z', 'J', 'B', 'C', 'O', 'N', 'P', 'V', 'X', 'U', 'M', 'Q', 'G', 'K', 'L', 'F']
['L', 'K', 'D', 'E', 'C', 'J', 'R', 'I', 'M', 'P', 'Y', 'Q', 'B', 'V', 'A', 'F', 'Z', 'X', 'U', 'G', 'N', 'W', 'O', 'H', 'T', 'S']  ['R', 'I', 'P', 'E', 'H', 'Y', 'Z', 'J', 'B', 'C', 'O', 'N', 'A', 'V', 'X', 'U', 'M', 'Q', 'G', 'K', 'L', 'F', 'D', 'T', 'S', 'W']
['V', 'S', 'F', 'Z', 'X', 'U', 'G', 'N', 'W', 'O', 'H', 'T', 'A', 'L', 'K', 'D', 'E', 'C', 'J', 'R', 'I', 'M', 'P', 'Y', 'Q', 'B']  ['O', 'V', 'S', 'U', 'M', 'Q', 'G', 'K', 'L', 'F', 'D', 'T', 'X', 'W', 'R', 'I', 'P', 'E', 'H', 'Y', 'Z', 'J', 'B', 'C', 'A', 'N']
['E', 'F', 'J', 'R', 'I', 'M', 'P', 'Y', 'Q', 'B', 'V', 'S', 'C', 'Z', 'X', 'U', 'G', 'N', 'W', 'O', 'H', 'T', 'A', 'L', 'K', 'D']  ['W', 'P', 'V', 'H', 'Y', 'Z', 'J', 'B', 'C', 'A', 'N', 'O', 'E', 'S', 'U', 'M', 'Q', 'G', 'K', 'L', 'F', 'D', 'T', 'X', 'I', 'R']

The ciphertext is: OYZCLPSUZTYWZFILZIMOIBWNSBDT

The recovered plaintext is: WELLDONEISBETTERTHANWELLSAID
Compiling and running character_codes-c.rs
97
a
Compiling and running chinese_remainder_theorem-c.rs
Compilation failed for chinese_remainder_theorem-c.rs
Compiling and running chinese_zodiac-c.rs
1935 is the year of the Wood Pig (yin).
1938 is the year of the Earth Tiger (yang).
1968 is the year of the Earth Monkey (yang).
1972 is the year of the Water Rat (yang).
1976 is the year of the Fire Dragon (yang).
2017 is the year of the Fire Rooster (yin).
Compiling and running cholesky_decomposition-c.rs
5.00000 0.00000 0.00000 
3.00000 3.00000 0.00000 
-1.00000 1.00000 3.00000 

4.24264 0.00000 0.00000 0.00000 
5.18545 6.56591 0.00000 0.00000 
12.72792 3.04604 1.64974 0.00000 
9.89949 1.62455 1.84971 1.39262 
Compiling and running circles_of_given_radius_through_two_points-c.rs

Case 1)

Two circles are possible.
Circle C1 with center (1.8631, 1.9742), radius 2.0000 and Circle C2 with center (-0.8632, -0.7521), radius 2.0000

Case 2)

Given points are opposite ends of a diameter of the circle with center (0.0000, 1.0000) and radius 1.0000

Case 3)

Infinitely many circles can be drawn through (0.1234, 0.9876)

Case 4)

Given points are farther away from each other than a diameter of a circle with radius 0.5000

Case 5)

No circles can be drawn through (0.1234, 0.9876)
Compiling and running combinations-c.rs
0 1 2 
0 1 3 
0 1 4 
0 2 3 
0 2 4 
0 3 4 
1 2 3 
1 2 4 
1 3 4 
2 3 4 
Compiling and running comma_quibbling-c.rs
{}
{ABC}
{ABC and DEF}
{ABC, DEF and G}
{ABC, DEF, G and H}
Compiling and running command_line_arguments-c.rs
This program is named ./command_line_arguments-c.
Compiling and running compile_time_calculation-c.rs
10! = 3628800
Compiling and running count_in_factors-c.rs
1 = 1
2 = 2
3 = 3
4 = 2 x 2
5 = 5
6 = 2 x 3
7 = 7
8 = 2 x 2 x 2
9 = 3 x 3
10 = 2 x 5
11 = 11
12 = 2 x 2 x 3
13 = 13
14 = 2 x 7
15 = 3 x 5
16 = 2 x 2 x 2 x 2
17 = 17
18 = 2 x 3 x 3
19 = 19
20 = 2 x 2 x 5
21 = 3 x 7
22 = 2 x 11
23 = 23
24 = 2 x 2 x 2 x 3
25 = 5 x 5
26 = 2 x 13
27 = 3 x 3 x 3
28 = 2 x 2 x 7
29 = 29
30 = 2 x 3 x 5
31 = 31
32 = 2 x 2 x 2 x 2 x 2
33 = 3 x 11
34 = 2 x 17
35 = 5 x 7
36 = 2 x 2 x 3 x 3
37 = 37
38 = 2 x 19
39 = 3 x 13
40 = 2 x 2 x 2 x 5
41 = 41
42 = 2 x 3 x 7
43 = 43
44 = 2 x 2 x 11
45 = 3 x 3 x 5
46 = 2 x 23
47 = 47
48 = 2 x 2 x 2 x 2 x 3
49 = 7 x 7
50 = 2 x 5 x 5
51 = 3 x 17
52 = 2 x 2 x 13
53 = 53
54 = 2 x 3 x 3 x 3
55 = 5 x 11
56 = 2 x 2 x 2 x 7
57 = 3 x 19
58 = 2 x 29
59 = 59
60 = 2 x 2 x 3 x 5
61 = 61
62 = 2 x 31
63 = 3 x 3 x 7
64 = 2 x 2 x 2 x 2 x 2 x 2
65 = 5 x 13
66 = 2 x 3 x 11
67 = 67
68 = 2 x 2 x 17
69 = 3 x 23
70 = 2 x 5 x 7
71 = 71
72 = 2 x 2 x 2 x 3 x 3
73 = 73
74 = 2 x 37
75 = 3 x 5 x 5
76 = 2 x 2 x 19
77 = 7 x 11
78 = 2 x 3 x 13
79 = 79
80 = 2 x 2 x 2 x 2 x 5
81 = 3 x 3 x 3 x 3
82 = 2 x 41
83 = 83
84 = 2 x 2 x 3 x 7
85 = 5 x 17
86 = 2 x 43
87 = 3 x 29
88 = 2 x 2 x 2 x 11
89 = 89
90 = 2 x 3 x 3 x 5
91 = 7 x 13
92 = 2 x 2 x 23
93 = 3 x 31
94 = 2 x 47
95 = 5 x 19
96 = 2 x 2 x 2 x 2 x 2 x 3
97 = 97
98 = 2 x 7 x 7
99 = 3 x 3 x 11
100 = 2 x 2 x 5 x 5
101 = 101
102 = 2 x 3 x 17
103 = 103
104 = 2 x 2 x 2 x 13
105 = 3 x 5 x 7
106 = 2 x 53
107 = 107
108 = 2 x 2 x 3 x 3 x 3
109 = 109
110 = 2 x 5 x 11
111 = 3 x 37
112 = 2 x 2 x 2 x 2 x 7
113 = 113
114 = 2 x 3 x 19
115 = 5 x 23
116 = 2 x 2 x 29
117 = 3 x 3 x 13
118 = 2 x 59
119 = 7 x 17
120 = 2 x 2 x 2 x 3 x 5
121 = 11 x 11
122 = 2 x 61
123 = 3 x 41
124 = 2 x 2 x 31
125 = 5 x 5 x 5
126 = 2 x 3 x 3 x 7
127 = 127
128 = 2 x 2 x 2 x 2 x 2 x 2 x 2
129 = 3 x 43
130 = 2 x 5 x 13
131 = 131
132 = 2 x 2 x 3 x 11
133 = 7 x 19
134 = 2 x 67
135 = 3 x 3 x 3 x 5
136 = 2 x 2 x 2 x 17
137 = 137
138 = 2 x 3 x 23
139 = 139
140 = 2 x 2 x 5 x 7
141 = 3 x 47
142 = 2 x 71
143 = 11 x 13
144 = 2 x 2 x 2 x 2 x 3 x 3
145 = 5 x 29
146 = 2 x 73
147 = 3 x 7 x 7
148 = 2 x 2 x 37
149 = 149
150 = 2 x 3 x 5 x 5
151 = 151
152 = 2 x 2 x 2 x 19
153 = 3 x 3 x 17
154 = 2 x 7 x 11
155 = 5 x 31
156 = 2 x 2 x 3 x 13
157 = 157
158 = 2 x 79
159 = 3 x 53
160 = 2 x 2 x 2 x 2 x 2 x 5
161 = 7 x 23
162 = 2 x 3 x 3 x 3 x 3
163 = 163
164 = 2 x 2 x 41
165 = 3 x 5 x 11
166 = 2 x 83
167 = 167
168 = 2 x 2 x 2 x 3 x 7
169 = 13 x 13
170 = 2 x 5 x 17
171 = 3 x 3 x 19
172 = 2 x 2 x 43
173 = 173
174 = 2 x 3 x 29
175 = 5 x 5 x 7
176 = 2 x 2 x 2 x 2 x 11
177 = 3 x 59
178 = 2 x 89
179 = 179
180 = 2 x 2 x 3 x 3 x 5
181 = 181
182 = 2 x 7 x 13
183 = 3 x 61
184 = 2 x 2 x 2 x 23
185 = 5 x 37
186 = 2 x 3 x 31
187 = 11 x 17
188 = 2 x 2 x 47
189 = 3 x 3 x 3 x 7
190 = 2 x 5 x 19
191 = 191
192 = 2 x 2 x 2 x 2 x 2 x 2 x 3
193 = 193
194 = 2 x 97
195 = 3 x 5 x 13
196 = 2 x 2 x 7 x 7
197 = 197
198 = 2 x 3 x 3 x 11
199 = 199
200 = 2 x 2 x 2 x 5 x 5
201 = 3 x 67
202 = 2 x 101
203 = 7 x 29
204 = 2 x 2 x 3 x 17
205 = 5 x 41
206 = 2 x 103
207 = 3 x 3 x 23
208 = 2 x 2 x 2 x 2 x 13
209 = 11 x 19
210 = 2 x 3 x 5 x 7
211 = 211
212 = 2 x 2 x 53
213 = 3 x 71
214 = 2 x 107
215 = 5 x 43
216 = 2 x 2 x 2 x 3 x 3 x 3
217 = 7 x 31
218 = 2 x 109
219 = 3 x 73
220 = 2 x 2 x 5 x 11
221 = 13 x 17
222 = 2 x 3 x 37
223 = 223
224 = 2 x 2 x 2 x 2 x 2 x 7
225 = 3 x 3 x 5 x 5
226 = 2 x 113
227 = 227
228 = 2 x 2 x 3 x 19
229 = 229
230 = 2 x 5 x 23
231 = 3 x 7 x 11
232 = 2 x 2 x 2 x 29
233 = 233
234 = 2 x 3 x 3 x 13
235 = 5 x 47
236 = 2 x 2 x 59
237 = 3 x 79
238 = 2 x 7 x 17
239 = 239
240 = 2 x 2 x 2 x 2 x 3 x 5
241 = 241
242 = 2 x 11 x 11
243 = 3 x 3 x 3 x 3 x 3
244 = 2 x 2 x 61
245 = 5 x 7 x 7
246 = 2 x 3 x 41
247 = 13 x 19
248 = 2 x 2 x 2 x 31
249 = 3 x 83
250 = 2 x 5 x 5 x 5
251 = 251
252 = 2 x 2 x 3 x 3 x 7
253 = 11 x 23
254 = 2 x 127
255 = 3 x 5 x 17
256 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2
257 = 257
258 = 2 x 3 x 43
259 = 7 x 37
260 = 2 x 2 x 5 x 13
261 = 3 x 3 x 29
262 = 2 x 131
263 = 263
264 = 2 x 2 x 2 x 3 x 11
265 = 5 x 53
266 = 2 x 7 x 19
267 = 3 x 89
268 = 2 x 2 x 67
269 = 269
270 = 2 x 3 x 3 x 3 x 5
271 = 271
272 = 2 x 2 x 2 x 2 x 17
273 = 3 x 7 x 13
274 = 2 x 137
275 = 5 x 5 x 11
276 = 2 x 2 x 3 x 23
277 = 277
278 = 2 x 139
279 = 3 x 3 x 31
280 = 2 x 2 x 2 x 5 x 7
281 = 281
282 = 2 x 3 x 47
283 = 283
284 = 2 x 2 x 71
285 = 3 x 5 x 19
286 = 2 x 11 x 13
287 = 7 x 41
288 = 2 x 2 x 2 x 2 x 2 x 3 x 3
289 = 17 x 17
290 = 2 x 5 x 29
291 = 3 x 97
292 = 2 x 2 x 73
293 = 293
294 = 2 x 3 x 7 x 7
295 = 5 x 59
296 = 2 x 2 x 2 x 37
297 = 3 x 3 x 3 x 11
298 = 2 x 149
299 = 13 x 23
300 = 2 x 2 x 3 x 5 x 5
301 = 7 x 43
302 = 2 x 151
303 = 3 x 101
304 = 2 x 2 x 2 x 2 x 19
305 = 5 x 61
306 = 2 x 3 x 3 x 17
307 = 307
308 = 2 x 2 x 7 x 11
309 = 3 x 103
310 = 2 x 5 x 31
311 = 311
312 = 2 x 2 x 2 x 3 x 13
313 = 313
314 = 2 x 157
315 = 3 x 3 x 5 x 7
316 = 2 x 2 x 79
317 = 317
318 = 2 x 3 x 53
319 = 11 x 29
320 = 2 x 2 x 2 x 2 x 2 x 2 x 5
321 = 3 x 107
322 = 2 x 7 x 23
323 = 17 x 19
324 = 2 x 2 x 3 x 3 x 3 x 3
325 = 5 x 5 x 13
326 = 2 x 163
327 = 3 x 109
328 = 2 x 2 x 2 x 41
329 = 7 x 47
330 = 2 x 3 x 5 x 11
331 = 331
332 = 2 x 2 x 83
333 = 3 x 3 x 37
334 = 2 x 167
335 = 5 x 67
336 = 2 x 2 x 2 x 2 x 3 x 7
337 = 337
338 = 2 x 13 x 13
339 = 3 x 113
340 = 2 x 2 x 5 x 17
341 = 11 x 31
342 = 2 x 3 x 3 x 19
343 = 7 x 7 x 7
344 = 2 x 2 x 2 x 43
345 = 3 x 5 x 23
346 = 2 x 173
347 = 347
348 = 2 x 2 x 3 x 29
349 = 349
350 = 2 x 5 x 5 x 7
351 = 3 x 3 x 3 x 13
352 = 2 x 2 x 2 x 2 x 2 x 11
353 = 353
354 = 2 x 3 x 59
355 = 5 x 71
356 = 2 x 2 x 89
357 = 3 x 7 x 17
358 = 2 x 179
359 = 359
360 = 2 x 2 x 2 x 3 x 3 x 5
361 = 19 x 19
362 = 2 x 181
363 = 3 x 11 x 11
364 = 2 x 2 x 7 x 13
365 = 5 x 73
366 = 2 x 3 x 61
367 = 367
368 = 2 x 2 x 2 x 2 x 23
369 = 3 x 3 x 41
370 = 2 x 5 x 37
371 = 7 x 53
372 = 2 x 2 x 3 x 31
373 = 373
374 = 2 x 11 x 17
375 = 3 x 5 x 5 x 5
376 = 2 x 2 x 2 x 47
377 = 13 x 29
378 = 2 x 3 x 3 x 3 x 7
379 = 379
380 = 2 x 2 x 5 x 19
381 = 3 x 127
382 = 2 x 191
383 = 383
384 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 3
385 = 5 x 7 x 11
386 = 2 x 193
387 = 3 x 3 x 43
388 = 2 x 2 x 97
389 = 389
390 = 2 x 3 x 5 x 13
391 = 17 x 23
392 = 2 x 2 x 2 x 7 x 7
393 = 3 x 131
394 = 2 x 197
395 = 5 x 79
396 = 2 x 2 x 3 x 3 x 11
397 = 397
398 = 2 x 199
399 = 3 x 7 x 19
400 = 2 x 2 x 2 x 2 x 5 x 5
401 = 401
402 = 2 x 3 x 67
403 = 13 x 31
404 = 2 x 2 x 101
405 = 3 x 3 x 3 x 3 x 5
406 = 2 x 7 x 29
407 = 11 x 37
408 = 2 x 2 x 2 x 3 x 17
409 = 409
410 = 2 x 5 x 41
411 = 3 x 137
412 = 2 x 2 x 103
413 = 7 x 59
414 = 2 x 3 x 3 x 23
415 = 5 x 83
416 = 2 x 2 x 2 x 2 x 2 x 13
417 = 3 x 139
418 = 2 x 11 x 19
419 = 419
420 = 2 x 2 x 3 x 5 x 7
421 = 421
422 = 2 x 211
423 = 3 x 3 x 47
424 = 2 x 2 x 2 x 53
425 = 5 x 5 x 17
426 = 2 x 3 x 71
427 = 7 x 61
428 = 2 x 2 x 107
429 = 3 x 11 x 13
430 = 2 x 5 x 43
431 = 431
432 = 2 x 2 x 2 x 2 x 3 x 3 x 3
433 = 433
434 = 2 x 7 x 31
435 = 3 x 5 x 29
436 = 2 x 2 x 109
437 = 19 x 23
438 = 2 x 3 x 73
439 = 439
440 = 2 x 2 x 2 x 5 x 11
441 = 3 x 3 x 7 x 7
442 = 2 x 13 x 17
443 = 443
444 = 2 x 2 x 3 x 37
445 = 5 x 89
446 = 2 x 223
447 = 3 x 149
448 = 2 x 2 x 2 x 2 x 2 x 2 x 7
449 = 449
450 = 2 x 3 x 3 x 5 x 5
451 = 11 x 41
452 = 2 x 2 x 113
453 = 3 x 151
454 = 2 x 227
455 = 5 x 7 x 13
456 = 2 x 2 x 2 x 3 x 19
457 = 457
458 = 2 x 229
459 = 3 x 3 x 3 x 17
460 = 2 x 2 x 5 x 23
461 = 461
462 = 2 x 3 x 7 x 11
463 = 463
464 = 2 x 2 x 2 x 2 x 29
465 = 3 x 5 x 31
466 = 2 x 233
467 = 467
468 = 2 x 2 x 3 x 3 x 13
469 = 7 x 67
470 = 2 x 5 x 47
471 = 3 x 157
472 = 2 x 2 x 2 x 59
473 = 11 x 43
474 = 2 x 3 x 79
475 = 5 x 5 x 19
476 = 2 x 2 x 7 x 17
477 = 3 x 3 x 53
478 = 2 x 239
479 = 479
480 = 2 x 2 x 2 x 2 x 2 x 3 x 5
481 = 13 x 37
482 = 2 x 241
483 = 3 x 7 x 23
484 = 2 x 2 x 11 x 11
485 = 5 x 97
486 = 2 x 3 x 3 x 3 x 3 x 3
487 = 487
488 = 2 x 2 x 2 x 61
489 = 3 x 163
490 = 2 x 5 x 7 x 7
491 = 491
492 = 2 x 2 x 3 x 41
493 = 17 x 29
494 = 2 x 13 x 19
495 = 3 x 3 x 5 x 11
496 = 2 x 2 x 2 x 2 x 31
497 = 7 x 71
498 = 2 x 3 x 83
499 = 499
500 = 2 x 2 x 5 x 5 x 5
501 = 3 x 167
502 = 2 x 251
503 = 503
504 = 2 x 2 x 2 x 3 x 3 x 7
505 = 5 x 101
506 = 2 x 11 x 23
507 = 3 x 13 x 13
508 = 2 x 2 x 127
509 = 509
510 = 2 x 3 x 5 x 17
511 = 7 x 73
512 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2
513 = 3 x 3 x 3 x 19
514 = 2 x 257
515 = 5 x 103
516 = 2 x 2 x 3 x 43
517 = 11 x 47
518 = 2 x 7 x 37
519 = 3 x 173
520 = 2 x 2 x 2 x 5 x 13
521 = 521
522 = 2 x 3 x 3 x 29
523 = 523
524 = 2 x 2 x 131
525 = 3 x 5 x 5 x 7
526 = 2 x 263
527 = 17 x 31
528 = 2 x 2 x 2 x 2 x 3 x 11
529 = 23 x 23
530 = 2 x 5 x 53
531 = 3 x 3 x 59
532 = 2 x 2 x 7 x 19
533 = 13 x 41
534 = 2 x 3 x 89
535 = 5 x 107
536 = 2 x 2 x 2 x 67
537 = 3 x 179
538 = 2 x 269
539 = 7 x 7 x 11
540 = 2 x 2 x 3 x 3 x 3 x 5
541 = 541
542 = 2 x 271
543 = 3 x 181
544 = 2 x 2 x 2 x 2 x 2 x 17
545 = 5 x 109
546 = 2 x 3 x 7 x 13
547 = 547
548 = 2 x 2 x 137
549 = 3 x 3 x 61
550 = 2 x 5 x 5 x 11
551 = 19 x 29
552 = 2 x 2 x 2 x 3 x 23
553 = 7 x 79
554 = 2 x 277
555 = 3 x 5 x 37
556 = 2 x 2 x 139
557 = 557
558 = 2 x 3 x 3 x 31
559 = 13 x 43
560 = 2 x 2 x 2 x 2 x 5 x 7
561 = 3 x 11 x 17
562 = 2 x 281
563 = 563
564 = 2 x 2 x 3 x 47
565 = 5 x 113
566 = 2 x 283
567 = 3 x 3 x 3 x 3 x 7
568 = 2 x 2 x 2 x 71
569 = 569
570 = 2 x 3 x 5 x 19
571 = 571
572 = 2 x 2 x 11 x 13
573 = 3 x 191
574 = 2 x 7 x 41
575 = 5 x 5 x 23
576 = 2 x 2 x 2 x 2 x 2 x 2 x 3 x 3
577 = 577
578 = 2 x 17 x 17
579 = 3 x 193
580 = 2 x 2 x 5 x 29
581 = 7 x 83
582 = 2 x 3 x 97
583 = 11 x 53
584 = 2 x 2 x 2 x 73
585 = 3 x 3 x 5 x 13
586 = 2 x 293
587 = 587
588 = 2 x 2 x 3 x 7 x 7
589 = 19 x 31
590 = 2 x 5 x 59
591 = 3 x 197
592 = 2 x 2 x 2 x 2 x 37
593 = 593
594 = 2 x 3 x 3 x 3 x 11
595 = 5 x 7 x 17
596 = 2 x 2 x 149
597 = 3 x 199
598 = 2 x 13 x 23
599 = 599
600 = 2 x 2 x 2 x 3 x 5 x 5
601 = 601
602 = 2 x 7 x 43
603 = 3 x 3 x 67
604 = 2 x 2 x 151
605 = 5 x 11 x 11
606 = 2 x 3 x 101
607 = 607
608 = 2 x 2 x 2 x 2 x 2 x 19
609 = 3 x 7 x 29
610 = 2 x 5 x 61
611 = 13 x 47
612 = 2 x 2 x 3 x 3 x 17
613 = 613
614 = 2 x 307
615 = 3 x 5 x 41
616 = 2 x 2 x 2 x 7 x 11
617 = 617
618 = 2 x 3 x 103
619 = 619
620 = 2 x 2 x 5 x 31
621 = 3 x 3 x 3 x 23
622 = 2 x 311
623 = 7 x 89
624 = 2 x 2 x 2 x 2 x 3 x 13
625 = 5 x 5 x 5 x 5
626 = 2 x 313
627 = 3 x 11 x 19
628 = 2 x 2 x 157
629 = 17 x 37
630 = 2 x 3 x 3 x 5 x 7
631 = 631
632 = 2 x 2 x 2 x 79
633 = 3 x 211
634 = 2 x 317
635 = 5 x 127
636 = 2 x 2 x 3 x 53
637 = 7 x 7 x 13
638 = 2 x 11 x 29
639 = 3 x 3 x 71
640 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 5
641 = 641
642 = 2 x 3 x 107
643 = 643
644 = 2 x 2 x 7 x 23
645 = 3 x 5 x 43
646 = 2 x 17 x 19
647 = 647
648 = 2 x 2 x 2 x 3 x 3 x 3 x 3
649 = 11 x 59
650 = 2 x 5 x 5 x 13
651 = 3 x 7 x 31
652 = 2 x 2 x 163
653 = 653
654 = 2 x 3 x 109
655 = 5 x 131
656 = 2 x 2 x 2 x 2 x 41
657 = 3 x 3 x 73
658 = 2 x 7 x 47
659 = 659
660 = 2 x 2 x 3 x 5 x 11
661 = 661
662 = 2 x 331
663 = 3 x 13 x 17
664 = 2 x 2 x 2 x 83
665 = 5 x 7 x 19
666 = 2 x 3 x 3 x 37
667 = 23 x 29
668 = 2 x 2 x 167
669 = 3 x 223
670 = 2 x 5 x 67
671 = 11 x 61
672 = 2 x 2 x 2 x 2 x 2 x 3 x 7
673 = 673
674 = 2 x 337
675 = 3 x 3 x 3 x 5 x 5
676 = 2 x 2 x 13 x 13
677 = 677
678 = 2 x 3 x 113
679 = 7 x 97
680 = 2 x 2 x 2 x 5 x 17
681 = 3 x 227
682 = 2 x 11 x 31
683 = 683
684 = 2 x 2 x 3 x 3 x 19
685 = 5 x 137
686 = 2 x 7 x 7 x 7
687 = 3 x 229
688 = 2 x 2 x 2 x 2 x 43
689 = 13 x 53
690 = 2 x 3 x 5 x 23
691 = 691
692 = 2 x 2 x 173
693 = 3 x 3 x 7 x 11
694 = 2 x 347
695 = 5 x 139
696 = 2 x 2 x 2 x 3 x 29
697 = 17 x 41
698 = 2 x 349
699 = 3 x 233
700 = 2 x 2 x 5 x 5 x 7
701 = 701
702 = 2 x 3 x 3 x 3 x 13
703 = 19 x 37
704 = 2 x 2 x 2 x 2 x 2 x 2 x 11
705 = 3 x 5 x 47
706 = 2 x 353
707 = 7 x 101
708 = 2 x 2 x 3 x 59
709 = 709
710 = 2 x 5 x 71
711 = 3 x 3 x 79
712 = 2 x 2 x 2 x 89
713 = 23 x 31
714 = 2 x 3 x 7 x 17
715 = 5 x 11 x 13
716 = 2 x 2 x 179
717 = 3 x 239
718 = 2 x 359
719 = 719
720 = 2 x 2 x 2 x 2 x 3 x 3 x 5
721 = 7 x 103
722 = 2 x 19 x 19
723 = 3 x 241
724 = 2 x 2 x 181
725 = 5 x 5 x 29
726 = 2 x 3 x 11 x 11
727 = 727
728 = 2 x 2 x 2 x 7 x 13
729 = 3 x 3 x 3 x 3 x 3 x 3
730 = 2 x 5 x 73
731 = 17 x 43
732 = 2 x 2 x 3 x 61
733 = 733
734 = 2 x 367
735 = 3 x 5 x 7 x 7
736 = 2 x 2 x 2 x 2 x 2 x 23
737 = 11 x 67
738 = 2 x 3 x 3 x 41
739 = 739
740 = 2 x 2 x 5 x 37
741 = 3 x 13 x 19
742 = 2 x 7 x 53
743 = 743
744 = 2 x 2 x 2 x 3 x 31
745 = 5 x 149
746 = 2 x 373
747 = 3 x 3 x 83
748 = 2 x 2 x 11 x 17
749 = 7 x 107
750 = 2 x 3 x 5 x 5 x 5
751 = 751
752 = 2 x 2 x 2 x 2 x 47
753 = 3 x 251
754 = 2 x 13 x 29
755 = 5 x 151
756 = 2 x 2 x 3 x 3 x 3 x 7
757 = 757
758 = 2 x 379
759 = 3 x 11 x 23
760 = 2 x 2 x 2 x 5 x 19
761 = 761
762 = 2 x 3 x 127
763 = 7 x 109
764 = 2 x 2 x 191
765 = 3 x 3 x 5 x 17
766 = 2 x 383
767 = 13 x 59
768 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 2 x 3
769 = 769
770 = 2 x 5 x 7 x 11
771 = 3 x 257
772 = 2 x 2 x 193
773 = 773
774 = 2 x 3 x 3 x 43
775 = 5 x 5 x 31
776 = 2 x 2 x 2 x 97
777 = 3 x 7 x 37
778 = 2 x 389
779 = 19 x 41
780 = 2 x 2 x 3 x 5 x 13
781 = 11 x 71
782 = 2 x 17 x 23
783 = 3 x 3 x 3 x 29
784 = 2 x 2 x 2 x 2 x 7 x 7
785 = 5 x 157
786 = 2 x 3 x 131
787 = 787
788 = 2 x 2 x 197
789 = 3 x 263
790 = 2 x 5 x 79
791 = 7 x 113
792 = 2 x 2 x 2 x 3 x 3 x 11
793 = 13 x 61
794 = 2 x 397
795 = 3 x 5 x 53
796 = 2 x 2 x 199
797 = 797
798 = 2 x 3 x 7 x 19
799 = 17 x 47
800 = 2 x 2 x 2 x 2 x 2 x 5 x 5
801 = 3 x 3 x 89
802 = 2 x 401
803 = 11 x 73
804 = 2 x 2 x 3 x 67
805 = 5 x 7 x 23
806 = 2 x 13 x 31
807 = 3 x 269
808 = 2 x 2 x 2 x 101
809 = 809
810 = 2 x 3 x 3 x 3 x 3 x 5
811 = 811
812 = 2 x 2 x 7 x 29
813 = 3 x 271
814 = 2 x 11 x 37
815 = 5 x 163
816 = 2 x 2 x 2 x 2 x 3 x 17
817 = 19 x 43
818 = 2 x 409
819 = 3 x 3 x 7 x 13
820 = 2 x 2 x 5 x 41
821 = 821
822 = 2 x 3 x 137
823 = 823
824 = 2 x 2 x 2 x 103
825 = 3 x 5 x 5 x 11
826 = 2 x 7 x 59
827 = 827
828 = 2 x 2 x 3 x 3 x 23
829 = 829
830 = 2 x 5 x 83
831 = 3 x 277
832 = 2 x 2 x 2 x 2 x 2 x 2 x 13
833 = 7 x 7 x 17
834 = 2 x 3 x 139
835 = 5 x 167
836 = 2 x 2 x 11 x 19
837 = 3 x 3 x 3 x 31
838 = 2 x 419
839 = 839
840 = 2 x 2 x 2 x 3 x 5 x 7
841 = 29 x 29
842 = 2 x 421
843 = 3 x 281
844 = 2 x 2 x 211
845 = 5 x 13 x 13
846 = 2 x 3 x 3 x 47
847 = 7 x 11 x 11
848 = 2 x 2 x 2 x 2 x 53
849 = 3 x 283
850 = 2 x 5 x 5 x 17
851 = 23 x 37
852 = 2 x 2 x 3 x 71
853 = 853
854 = 2 x 7 x 61
855 = 3 x 3 x 5 x 19
856 = 2 x 2 x 2 x 107
857 = 857
858 = 2 x 3 x 11 x 13
859 = 859
860 = 2 x 2 x 5 x 43
861 = 3 x 7 x 41
862 = 2 x 431
863 = 863
864 = 2 x 2 x 2 x 2 x 2 x 3 x 3 x 3
865 = 5 x 173
866 = 2 x 433
867 = 3 x 17 x 17
868 = 2 x 2 x 7 x 31
869 = 11 x 79
870 = 2 x 3 x 5 x 29
871 = 13 x 67
872 = 2 x 2 x 2 x 109
873 = 3 x 3 x 97
874 = 2 x 19 x 23
875 = 5 x 5 x 5 x 7
876 = 2 x 2 x 3 x 73
877 = 877
878 = 2 x 439
879 = 3 x 293
880 = 2 x 2 x 2 x 2 x 5 x 11
881 = 881
882 = 2 x 3 x 3 x 7 x 7
883 = 883
884 = 2 x 2 x 13 x 17
885 = 3 x 5 x 59
886 = 2 x 443
887 = 887
888 = 2 x 2 x 2 x 3 x 37
889 = 7 x 127
890 = 2 x 5 x 89
891 = 3 x 3 x 3 x 3 x 11
892 = 2 x 2 x 223
893 = 19 x 47
894 = 2 x 3 x 149
895 = 5 x 179
896 = 2 x 2 x 2 x 2 x 2 x 2 x 2 x 7
897 = 3 x 13 x 23
898 = 2 x 449
899 = 29 x 31
900 = 2 x 2 x 3 x 3 x 5 x 5
901 = 17 x 53
902 = 2 x 11 x 41
903 = 3 x 7 x 43
904 = 2 x 2 x 2 x 113
905 = 5 x 181
906 = 2 x 3 x 151
907 = 907
908 = 2 x 2 x 227
909 = 3 x 3 x 101
910 = 2 x 5 x 7 x 13
911 = 911
912 = 2 x 2 x 2 x 2 x 3 x 19
913 = 11 x 83
914 = 2 x 457
915 = 3 x 5 x 61
916 = 2 x 2 x 229
917 = 7 x 131
918 = 2 x 3 x 3 x 3 x 17
919 = 919
920 = 2 x 2 x 2 x 5 x 23
921 = 3 x 307
922 = 2 x 461
923 = 13 x 71
924 = 2 x 2 x 3 x 7 x 11
925 = 5 x 5 x 37
926 = 2 x 463
927 = 3 x 3 x 103
928 = 2 x 2 x 2 x 2 x 2 x 29
929 = 929
930 = 2 x 3 x 5 x 31
931 = 7 x 7 x 19
932 = 2 x 2 x 233
933 = 3 x 311
934 = 2 x 467
935 = 5 x 11 x 17
936 = 2 x 2 x 2 x 3 x 3 x 13
937 = 937
938 = 2 x 7 x 67
939 = 3 x 313
940 = 2 x 2 x 5 x 47
941 = 941
942 = 2 x 3 x 157
943 = 23 x 41
944 = 2 x 2 x 2 x 2 x 59
945 = 3 x 3 x 3 x 5 x 7
946 = 2 x 11 x 43
947 = 947
948 = 2 x 2 x 3 x 79
949 = 13 x 73
950 = 2 x 5 x 5 x 19
951 = 3 x 317
952 = 2 x 2 x 2 x 7 x 17
953 = 953
954 = 2 x 3 x 3 x 53
955 = 5 x 191
956 = 2 x 2 x 239
957 = 3 x 11 x 29
958 = 2 x 479
959 = 7 x 137
960 = 2 x 2 x 2 x 2 x 2 x 2 x 3 x 5
961 = 31 x 31
962 = 2 x 13 x 37
963 = 3 x 3 x 107
964 = 2 x 2 x 241
965 = 5 x 193
966 = 2 x 3 x 7 x 23
967 = 967
968 = 2 x 2 x 2 x 11 x 11
969 = 3 x 17 x 19
970 = 2 x 5 x 97
971 = 971
972 = 2 x 2 x 3 x 3 x 3 x 3 x 3
973 = 7 x 139
974 = 2 x 487
975 = 3 x 5 x 5 x 13
976 = 2 x 2 x 2 x 2 x 61
977 = 977
978 = 2 x 3 x 163
979 = 11 x 89
980 = 2 x 2 x 5 x 7 x 7
981 = 3 x 3 x 109
982 = 2 x 491
983 = 983
984 = 2 x 2 x 2 x 3 x 41
985 = 5 x 197
986 = 2 x 17 x 29
987 = 3 x 7 x 47
988 = 2 x 2 x 13 x 19
989 = 23 x 43
990 = 2 x 3 x 3 x 5 x 11
991 = 991
992 = 2 x 2 x 2 x 2 x 2 x 31
993 = 3 x 331
994 = 2 x 7 x 71
995 = 5 x 199
996 = 2 x 2 x 3 x 83
997 = 997
998 = 2 x 499
999 = 3 x 3 x 3 x 37
Compiling and running cramers_rule-c.rs
  2.000
-12.000
 -4.000
  1.000
Compiling and running crc32-c.rs
Compilation failed for crc32-c.rs
Compiling and running damm_algorithm-c.rs
Checksum correct
Compiling and running department_number-c.rs
Police	Sanitation	Fire
----------------------------
2		3		7
2		4		6
2		6		4
2		7		3
4		1		7
4		2		6
4		3		5
4		5		3
4		6		2
4		7		1
6		1		5
6		2		4
6		4		2
6		5		1
Compiling and running dice_game_probabilities-c.rs
Compilation failed for dice_game_probabilities-c.rs
Compiling and running dot_product-c.rs
3
Compiling and running draw_a_sphere-c.rs
Compilation failed for draw_a_sphere-c.rs
Compiling and running emirp_primes-c.rs
Compilation failed for emirp_primes-c.rs
Compiling and running euler_method-c.rs
    Time:        0      10      20      30      40      50      60      70      80      90     100
Analytic: 
 100.000  59.727  39.728  29.797  24.865  22.416  21.200  20.596  20.296  20.147  20.073
 Step  2:  100.000  57.634  37.704  28.328  23.918  21.843  20.867  20.408  20.192  20.090  20.042
 Step  5:  100.000  53.800  34.280  26.034  22.549  21.077  20.455  20.192  20.081  20.034  20.014
 Step 10:  100.000  44.000  27.200  22.160  20.648  20.194  20.058  20.017  20.005  20.002  20.000
Compiling and running evaluate_binomial_coefficients-c.rs
Compilation failed for evaluate_binomial_coefficients-c.rs
Compiling and running exponential-c.rs
Compilation failed for exponential-c.rs
Compiling and running extreme_floating_point_values-c.rs
positive infinity: inf
negative infinity: -inf
negative zero: -0
not a number: NaN
+inf + 2.0 = inf
+inf - 10.1 = inf
+inf + -inf = NaN
0.0 * +inf = NaN
1.0/-0.0 = -inf
NaN + 1.0 = NaN
NaN + NaN = NaN
NaN == NaN = false
0.0 == -0.0 = true
Compiling and running factors_of_a_mersenne_number-c.rs
2^929 - 1 = 0 (mod 13007)
Compiling and running fairshare_between_two_and_more-c.rs
Base  2:  0  1  1  0  1  0  0  1  1  0  0  1  0  1  1  0  1  0  0  1  0  1  1  0  0
Base  3:  0  1  2  1  2  0  2  0  1  1  2  0  2  0  1  0  1  2  2  0  1  0  1  2  1
Base  5:  0  1  2  3  4  1  2  3  4  0  2  3  4  0  1  3  4  0  1  2  4  0  1  2  3
Base 11:  0  1  2  3  4  5  6  7  8  9 10  1  2  3  4  5  6  7  8  9 10  0  2  3  4
How many times does each get a turn in 50000 iterations?
  With 191 people: 261 or 262
  With 1377 people: 36 or 37
  With 49999 people: 1 or 2
  With 50000 people: 1
  With 50001 people: Only 50000 have a turn
Compiling and running farey_sequence-c.rs
1: 0/1 1/1
2: 0/1 1/2 1/1
3: 0/1 1/3 1/2 2/3 1/1
4: 0/1 1/4 1/3 1/2 2/3 3/4 1/1
5: 0/1 1/5 1/4 1/3 2/5 1/2 3/5 2/3 3/4 4/5 1/1
6: 0/1 1/6 1/5 1/4 1/3 2/5 1/2 3/5 2/3 3/4 4/5 5/6 1/1
7: 0/1 1/7 1/6 1/5 1/4 2/7 1/3 2/5 3/7 1/2 4/7 3/5 2/3 5/7 3/4 4/5 5/6 6/7 1/1
8: 0/1 1/8 1/7 1/6 1/5 1/4 2/7 1/3 3/8 2/5 3/7 1/2 4/7 3/5 5/8 2/3 5/7 3/4 4/5 5/6 6/7 7/8 1/1
9: 0/1 1/9 1/8 1/7 1/6 1/5 2/9 1/4 2/7 1/3 3/8 2/5 3/7 4/9 1/2 5/9 4/7 3/5 5/8 2/3 5/7 3/4 7/9 4/5 5/6 6/7 7/8 8/9 1/1
10: 0/1 1/10 1/9 1/8 1/7 1/6 1/5 2/9 1/4 2/7 3/10 1/3 3/8 2/5 3/7 4/9 1/2 5/9 4/7 3/5 5/8 2/3 7/10 5/7 3/4 7/9 4/5 5/6 6/7 7/8 8/9 9/10 1/1
11: 0/1 1/11 1/10 1/9 1/8 1/7 1/6 2/11 1/5 2/9 1/4 3/11 2/7 3/10 1/3 4/11 3/8 2/5 3/7 4/9 5/11 1/2 6/11 5/9 4/7 3/5 5/8 7/11 2/3 7/10 5/7 8/11 3/4 7/9 4/5 9/11 5/6 6/7 7/8 8/9 9/10 10/11 1/1
100: 3045 items
200: 12233 items
300: 27399 items
400: 48679 items
500: 76117 items
600: 109501 items
700: 149019 items
800: 194751 items
900: 246327 items
1000: 304193 items

10000000: 30396356427243 items
Compiling and running fibonacci_n_step_number_sequences-c.rs

Fibonacci	Tribonacci	Tetranacci	Lucas

1		1		1		2

1		1		1		1

2		2		2		3

3		4		4		4

5		7		8		7

8		13		15		11

13		24		29		18

21		44		56		29

34		81		108		47

55		149		208		76
Compiling and running fibonacci_word-c.rs
N  Length     Entropy              Word                                    
1  1          0.000000000000000000 1                                       
2  1          0.000000000000000000 0                                       
3  2          1.000000000000000000 01                                      
4  3          0.918295834054489557 010                                     
5  5          0.970950594454668581 01001                                   
6  8          0.954434002924965053 01001010                                
7  13         0.961236604722875865 0100101001001                           
8  21         0.958711882977131835 010010100100101001010                   
9  34         0.959686893774216898 0100101001001010010100100101001001      
10 55         0.959316032054377654 ...
11 89         0.959457915838669573 ...
12 144        0.959403754221022975 ...
13 233        0.959424446955986610 ...
14 377        0.959416543740440830 ...
15 610        0.959419562603144094 ...
16 987        0.959418409515224280 ...
17 1597       0.959418849957809794 ...
18 2584       0.959418681724032107 ...
19 4181       0.959418745983663834 ...
20 6765       0.959418721438675459 ...
21 10946      0.959418730814027731 ...
22 17711      0.959418727232961954 ...
23 28657      0.959418728600807347 ...
24 46368      0.959418728078336835 ...
25 75025      0.959418728277902866 ...
26 121393     0.959418728201675397 ...
27 196418     0.959418728230791773 ...
28 317811     0.959418728219670225 ...
29 514229     0.959418728223918382 ...
30 832040     0.959418728222295791 ...
31 1346269    0.959418728222915518 ...
32 2178309    0.959418728222678929 ...
33 3524578    0.959418728222769079 ...
34 5702887    0.959418728222734662 ...
35 9227465    0.959418728222747874 ...
36 14930352   0.959418728222742767 ...
37 24157817   0.959418728222744654 ...
Compiling and running floyds_triangle-c.rs
11
12 13
14 15 16
17 18 19 20
21 22 23 24 25
92
93 94
95 96 97
98 99 100 101
102 103 104 105 106
107 108 109 110 111 112
113 114 115 116 117 118 119
120 121 122 123 124 125 126 127
128 129 130 131 132 133 134 135 136
137 138 139 140 141 142 143 144 145 146
147 148 149 150 151 152 153 154 155 156 157
158 159 160 161 162 163 164 165 166 167 168 169
170 171 172 173 174 175 176 177 178 179 180 181 182
183 184 185 186 187 188 189 190 191 192 193 194 195 196
Compiling and running formatted_numeric_output-c.rs
   -7.125
    7.125
7.125    
000-7.125
00007.125
7.1250000
Compiling and running function_composition-c.rs
0.49999999999999994
Compiling and running fusc_sequence-c.rs
Index-------Value
    0            0
    1            1
    2            1
    3            2
    4            1
    5            3
    6            2
    7            3
    8            1
    9            4
   10            3
   11            5
   12            2
   13            5
   14            3
   15            4
   16            1
   17            5
   18            4
   19            7
   20            3
   21            8
   22            5
   23            7
   24            2
   25            7
   26            5
   27            8
   28            3
   29            7
   30            4
   31            5
   32            1
   33            6
   34            5
   35            9
   36            4
   37           11
   38            7
   39           10
   40            3
   41           11
   42            8
   43           13
   44            5
   45           12
   46            7
   47            9
   48            2
   49            9
   50            7
   51           12
   52            5
   53           13
   54            8
   55           11
   56            3
   57           10
   58            7
   59           11
   60            4
Compiling and running gaussian_elimination-c.rs
-0.01
1.6027903945020885
-1.6132030599054827
1.2454941213713593
-0.4909897195846276
0.06576069617522803
Compiling and running general_fizzbuzz-c.rs
1
2
Fizz
4
Buzz
Fizz
Baxx
8
Fizz
Buzz
11
Fizz
13
Baxx
FizzBuzz
16
17
Fizz
19
Compiling and running generate_random_chess_position-c.rs
Max sum = 15
3 5 6 -2 -1 4 
Compiling and running gray_code-c.rs
Compilation failed for gray_code-c.rs
Compiling and running greatest_subsequential_sum-c.rs
Max sum = 15
3 5 6 -2 -1 4 
Compiling and running hailstone_sequence-c.rs
Compiling and running hamming_numbers-c.rs
     1: 1
     2: 2
     3: 3
     4: 4
     5: 5
     6: 6
     7: 8
     8: 9
     9: 10
    10: 12
    11: 15
    12: 16
    13: 18
    14: 20
    15: 24
    16: 25
    17: 27
    18: 30
    19: 32
    20: 36
  1691: 2125764000
Compiling and running haversine_formula-c.rs
Compilation failed for haversine_formula-c.rs
Compiling and running hofstadter_q_sequence-c.rs
1 1 2 3 3 4 5 5 6 6
502
flips: 49798
Compiling and running horners_rule_for_polynomial_evaluation-c.rs
128.0
Compiling and running host_introspection-c.rs
word size = 64 bits
little endian
Compiling and running increment_a_numerical_string-c.rs
Compilation failed for increment_a_numerical_string-c.rs
Compiling and running infinity-c.rs
inf
Compiling and running isbn13_check_digit-c.rs
978-1734314502: bad
978-1734314509: bad
978-1788399081: bad
978-1788399083: bad
Compiling and running iterated_digits_squaring-c.rs
1->10^1: 2536415057799
Compiling and running jacobi_symbol-c.rs
n\k|  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
-------------------------------------------------------------------
1  |  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
3  |  0  1 -1  0  1 -1  0  1 -1  0  1 -1  0  1 -1  0  1 -1  0  1 -1
5  |  0  1 -1 -1  1  0  1 -1 -1  1  0  1 -1 -1  1  0  1 -1 -1  1  0
7  |  0  1  1 -1  1 -1 -1  0  1  1 -1  1 -1 -1  0  1  1 -1  1 -1 -1
9  |  0  1  1  0  1  1  0  1  1  0  1  1  0  1  1  0  1  1  0  1  1
11 |  0  1 -1  1  1  1 -1 -1 -1  1 -1  0  1 -1  1  1  1 -1 -1 -1  1
13 |  0  1 -1  1  1 -1 -1 -1 -1  1  1 -1  1  0  1 -1  1  1 -1 -1 -1
15 |  0  1  1  0  1  0  0 -1  1  0  0 -1  0 -1 -1  0  1  1  0  1  0
17 |  0  1  1 -1  1 -1 -1 -1  1  1 -1 -1 -1  1 -1  1  1  0  1  1 -1
19 |  0  1 -1 -1  1  1  1  1 -1  1 -1  1 -1 -1 -1 -1  1  1 -1  0  1
21 |  0  1 -1  0  1  1  0  0 -1  0 -1 -1  0 -1  0  0  1  1  0 -1  1
Compiling and running jortsort-c.rs
Compilation failed for jortsort-c.rs
Compiling and running josephus_problem-c.rs
Compilation failed for josephus_problem-c.rs
Compiling and running knapsack_problem_0_1-c.rs
map                        9   150
totals:                    9   150
Compiling and running knapsack_problem_continuous-c.rs
take all beef
Compiling and running largest_int_from_concatenated_ints-c.rs
998764543431
6054854654
Compiling and running last_letter_first_letter-c.rs
Compilation failed for last_letter_first_letter-c.rs
Compiling and running leap_year-c.rs
1900 is not a leap year.
1994 is not a leap year.
1996 is a leap year.
1997 is not a leap year.
2000 is a leap year.
Compiling and running least_common_multiple-c.rs
lcm(35, 21) = 105
Compiling and running levenshtein_distance-c.rs
distance between `rosettacode` and `raisethysword`: 8
Compiling and running loop_over_multiple_arrays_simultaneously-c.rs
aA1
bB2
cC3
Compiling and running lu_decomposition-c.rs
49927398716     	ok
49927398717     	not ok
1234567812345678	not ok
1234567812345670	ok
Compiling and running luhn_test_of_credit_card_numbers-c.rs
49927398716     	ok
49927398717     	not ok
1234567812345678	not ok
1234567812345670	ok
Compiling and running machine_code-c.rs
19
Compiling and running magic_squares_of_doubly_even_order-c.rs
Usage : ./magic_squares_of_doubly_even_order-c <integer specifying rows in magic square>
Compiling and running magic_squares_of_singly_even_order-c.rs
Compilation failed for magic_squares_of_singly_even_order-c.rs
Compiling and running magnanimous_numbers-c.rs

First 45 magnanimous numbers:
  0   1   2   3   4   5   6   7   8   9  11  12  14  16  20 
 21  23  25  29  30  32  34  38  41  43  47  49  50  52  56 
 58  61  65  67  70  74  76  83  85  89  92  94  98 101 110 

241st through 250th magnanimous numbers:
17992 19972 20209 20261 20861 22061 22201 22801 22885 24407 

391st through 400th magnanimous numbers:
486685 488489 515116 533176 551558 559952 595592 595598 600881 602081 
Compiling and running map_range-c.rs
Mapping [0,10] to [-1,0] at intervals of 1:
f(0) = -1
f(1) = -0.9
f(2) = -0.8
f(3) = -0.7
f(4) = -0.6
f(5) = -0.5
f(6) = -0.4
f(7) = -0.30000000000000004
f(8) = -0.19999999999999996
f(9) = -0.09999999999999998
f(10) = 0
Compiling and running matrix_chain_multiplication-c.rs
Dims  : [[5, 6, 3, 1]]
Compiling and running matrix_transposition-c.rs
0 5 1
1 6 0
2 7 0
3 8 0
4 9 42
Compiling and running mcnuggets_problem-c.rs
Maximum non-McNuggets number is 43
Compiling and running mean_angle-c.rs

Mean Angle for 1st set: -0.00000000000002745176884498468 degrees
Mean Angle for 2nd set: -90 degrees
Mean Angle for 3rd set: 19.999999999999996 degrees

Compiling and running middle_three_digits-c.rs
123: 123
12345: 234
1234567: 345
987654321: 654
10001: 000
-10001: 000
-123: 123
-100: 100
100: 100
-12345: 234
1: error
2: error
-1: error
-10: error
2002: error
-2002: error
0: error
1234567890: error
Compiling and running modular_inverse-c.rs
Compilation failed for modular_inverse-c.rs
Compiling and running monty_hall_problem-c.rs
broood: [0, 0, 0, 0, 0, 0]
Incorrect :(
bananaaa: [0, 0, 0, 0, 0, 0, 0, 0]
Incorrect :(
hiphophiphop: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Incorrect :(
Compiling and running multiplication_tables-c.rs
Compilation failed for multiplication_tables-c.rs
Compiling and running munchausen_numbers-c.rs
1
3435
Compiling and running mutual_recursion-c.rs
 1  1  2  2  3  3  4  5  5  6  6  7  8  8  9  9 10 11 11 12 
 0  0  1  2  2  3  4  4  5  6  6  7  7  8  9  9 10 11 11 12 
Compiling and running n_plus_one_half-c.rs
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
Compiling and running n_queens_problem-c.rs
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
Compiling and running negative_base_numbers-c.rs
          10 encoded in base  -2 = 11110       
11110        decoded in base  -2 =           10
         146 encoded in base  -3 = 21102       
21102        decoded in base  -3 =          146
          15 encoded in base -10 = 195         
195          decoded in base -10 =           15
          12 encoded in base -62 = C           
C            decoded in base -62 =           12
Compiling and running next_highest_int_from_digits-c.rs
0 -> None
9 -> None
12 -> 21
21 -> None
12453 -> 12534
738440 -> 740348
45072010 -> 45072100
95322020 -> 95322200
9589776899767587796600 -> 9589776899767587900667
Compiling and running nimber_arithmetic-c.rs
 + |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
----------------------------------------------------
 0 |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
 1 |  1  0  3  2  5  4  7  6  9  8 11 10 13 12 15 14
 2 |  2  3  0  1  6  7  4  5 10 11  8  9 14 15 12 13
 3 |  3  2  1  0  7  6  5  4 11 10  9  8 15 14 13 12
 4 |  4  5  6  7  0  1  2  3 12 13 14 15  8  9 10 11
 5 |  5  4  7  6  1  0  3  2 13 12 15 14  9  8 11 10
 6 |  6  7  4  5  2  3  0  1 14 15 12 13 10 11  8  9
 7 |  7  6  5  4  3  2  1  0 15 14 13 12 11 10  9  8
 8 |  8  9 10 11 12 13 14 15  0  1  2  3  4  5  6  7
 9 |  9  8 11 10 13 12 15 14  1  0  3  2  5  4  7  6
10 | 10 11  8  9 14 15 12 13  2  3  0  1  6  7  4  5
11 | 11 10  9  8 15 14 13 12  3  2  1  0  7  6  5  4
12 | 12 13 14 15  8  9 10 11  4  5  6  7  0  1  2  3
13 | 13 12 15 14  9  8 11 10  5  4  7  6  1  0  3  2
14 | 14 15 12 13 10 11  8  9  6  7  4  5  2  3  0  1
15 | 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0

 * |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
----------------------------------------------------
 0 |  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
 1 |  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
 2 |  0  2  3  1  8 10 11  9 12 14 15 13  4  6  7  5
 3 |  0  3  1  2 12 15 13 14  4  7  5  6  8 11  9 10
 4 |  0  4  8 12  6  2 14 10 11 15  3  7 13  9  5  1
 5 |  0  5 10 15  2  7  8 13  3  6  9 12  1  4 11 14
 6 |  0  6 11 13 14  8  5  3  7  1 12 10  9 15  2  4
 7 |  0  7  9 14 10 13  3  4 15  8  6  1  5  2 12 11
 8 |  0  8 12  4 11  3  7 15 13  5  1  9  6 14 10  2
 9 |  0  9 14  7 15  6  1  8  5 12 11  2 10  3  4 13
10 |  0 10 15  5  3  9 12  6  1 11 14  4  2  8 13  7
11 |  0 11 13  6  7 12 10  1  9  2  4 15 14  5  3  8
12 |  0 12  4  8 13  1  9  5  6 10  2 14 11  7 15  3
13 |  0 13  6 11  9  4 15  2 14  3  8  5  7 10  1 12
14 |  0 14  7  9  5 11  2 12 10  4 13  3 15  1  8  6
15 |  0 15  5 10  1 14  4 11  2 13  7  8  3 12  6  9

21508 + 42689 = 62149
21508 * 42689 = 35202
Compiling and running nth-c.rs
Compilation failed for nth-c.rs
Compiling and running null_object-c.rs
object is null
Compiling and running number_names-c.rs
three hundred and twenty-one
Compiling and running numerical_integration-c.rs
leftrect [0, 1] num: 0.4985010000000003, an: 1
rightrect [0, 1] num: 0.49950000000000033, an: 1
midrect [0, 1] num: 0.4990005000000004, an: 1
trapezium [0, 1] num: 0.5000000000000001, an: 1
simpson [0, 1] num: 0.5, an: 1

leftrect [0, 1] num: inf, an: -inf
rightrect [0, 1] num: 7.48447086055035, an: -inf
midrect [0, 1] num: 8.870264846420083, an: -inf
trapezium [0, 1] num: inf, an: -inf
simpson [0, 1] num: inf, an: -inf

leftrect [0, 1] num: 0.24850324700100054, an: 1
rightrect [0, 1] num: 0.24950025000000053, an: 1
midrect [0, 1] num: 0.2490013742501257, an: 1
trapezium [0, 1] num: 0.25000025000000003, an: 1
simpson [0, 1] num: 0.25000000000000017, an: 1

Compiling and running one_dimensional_cellular_automata-c.rs
Compilation failed for one_dimensional_cellular_automata-c.rs
Compiling and running one_of_n_lines_in_a_file-c.rs
There was an old lady who swallowed a fly
I don't know why she swallowed that fly.
Perhaps she'll die
There was an old lady who swallowed a spider
That wiggled and jiggled and tickled inside her
She swallowed the spider to catch the fly
I don't know why she swallowed that fly.
Perhaps she'll die
There was an old lady who swallowed a bird
How absurd, to swallow a bird
She swallowed the bird to catch the spider
She swallowed the spider to catch the fly
I don't know why she swallowed that fly.
Perhaps she'll die
There was an old lady who swallowed a cat
Imagine that. She swallowed a cat
She swallowed the cat to catch the bird
She swallowed the bird to catch the spider
She swallowed the spider to catch the fly
I don't know why she swallowed that fly.
Perhaps she'll die
There was an old lady who swallowed a dog
What a hog to swallow a dog
She swallowed the dog to catch the cat
She swallowed the cat to catch the bird
She swallowed the bird to catch the spider
She swallowed the spider to catch the fly
I don't know why she swallowed that fly.
Perhaps she'll die
There was an old lady who swallowed a goat
She just opened her throat and swallowed that goat
She swallowed the goat to catch the dog
She swallowed the dog to catch the cat
She swallowed the cat to catch the bird
She swallowed the bird to catch the spider
She swallowed the spider to catch the fly
I don't know why she swallowed that fly.
Perhaps she'll die
There was an old lady who swallowed a cow
I don't know how she swallowed that cow
She swallowed the cow to catch the goat
She swallowed the goat to catch the dog
She swallowed the dog to catch the cat
She swallowed the cat to catch the bird
She swallowed the bird to catch the spider
She swallowed the spider to catch the fly
I don't know why she swallowed that fly.
Perhaps she'll die
There was an old lady who swallowed a horse
She's dead of course
Compiling and running perfect_numbers-c.rs
Enter an argument. Example 1234 or dcba:
Compiling and running phrase_reversals-c.rs
Original:       "rosetta code phrase reversal"
Reversed:       "lasrever esarhp edoc attesor"
Reversed words: "attesor edoc esarhp lasrever"
Reversed order: "reversal phrase code rosetta"
Compiling and running population_count-c.rs
Compilation failed for population_count-c.rs
Compiling and running price_fraction-c.rs
Compilation failed for price_fraction-c.rs
Compiling and running proper_divisors-c.rs
1: 
2: 1 
3: 1 
4: 1 2 
5: 1 
6: 1 2 3 
7: 1 
8: 1 2 4 
9: 1 3 
10: 1 2 5 
18480 with 79 divisors
Compiling and running pythagorean_quadruples-c.rs
Compilation failed for pythagorean_quadruples-c.rs
Compiling and running pythagorean_triples-c.rs
Compilation failed for pythagorean_triples-c.rs
Compiling and running quickselect_algorithm-c.rs
Compilation failed for quickselect_algorithm-c.rs
Compiling and running range_expansion-c.rs
Compilation failed for range_expansion-c.rs
Compiling and running range_extraction-c.rs
Compilation failed for range_extraction-c.rs
Compiling and running rational-c.rs
