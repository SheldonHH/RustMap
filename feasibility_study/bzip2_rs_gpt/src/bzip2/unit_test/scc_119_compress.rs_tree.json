{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 4, "end_byte": 9, "start_point": [0, 4], "end_point": [0, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 11, "end_byte": 22, "start_point": [0, 11], "end_point": [0, 22], "text": "global_vars"}], "start_byte": 4, "end_byte": 22, "start_point": [0, 4], "end_point": [0, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 22, "end_byte": 24, "start_point": [0, 22], "end_point": [0, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 24, "end_byte": 32, "start_point": [0, 24], "end_point": [0, 32], "text": "bzip2_c2"}], "start_byte": 4, "end_byte": 32, "start_point": [0, 4], "end_point": [0, 32], "text": "crate::global_vars::bzip2_c2"}, {"type": "::", "children": [], "start_byte": 32, "end_byte": 34, "start_point": [0, 32], "end_point": [0, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 34, "end_byte": 35, "start_point": [0, 34], "end_point": [0, 35], "text": "*"}], "start_byte": 4, "end_byte": 35, "start_point": [0, 4], "end_point": [0, 35], "text": "crate::global_vars::bzip2_c2::*"}, {"type": ";", "children": [], "start_byte": 35, "end_byte": 36, "start_point": [0, 35], "end_point": [0, 36], "text": ";"}], "start_byte": 0, "end_byte": 36, "start_point": [0, 0], "end_point": [0, 36], "text": "use crate::global_vars::bzip2_c2::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 37, "end_byte": 40, "start_point": [1, 0], "end_point": [1, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 41, "end_byte": 46, "start_point": [1, 4], "end_point": [1, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 46, "end_byte": 48, "start_point": [1, 9], "end_point": [1, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 48, "end_byte": 59, "start_point": [1, 11], "end_point": [1, 22], "text": "global_vars"}], "start_byte": 41, "end_byte": 59, "start_point": [1, 4], "end_point": [1, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 59, "end_byte": 61, "start_point": [1, 22], "end_point": [1, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 61, "end_byte": 69, "start_point": [1, 24], "end_point": [1, 32], "text": "bzip2_c5"}], "start_byte": 41, "end_byte": 69, "start_point": [1, 4], "end_point": [1, 32], "text": "crate::global_vars::bzip2_c5"}, {"type": "::", "children": [], "start_byte": 69, "end_byte": 71, "start_point": [1, 32], "end_point": [1, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 71, "end_byte": 72, "start_point": [1, 34], "end_point": [1, 35], "text": "*"}], "start_byte": 41, "end_byte": 72, "start_point": [1, 4], "end_point": [1, 35], "text": "crate::global_vars::bzip2_c5::*"}, {"type": ";", "children": [], "start_byte": 72, "end_byte": 73, "start_point": [1, 35], "end_point": [1, 36], "text": ";"}], "start_byte": 37, "end_byte": 73, "start_point": [1, 0], "end_point": [1, 36], "text": "use crate::global_vars::bzip2_c5::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 74, "end_byte": 77, "start_point": [2, 0], "end_point": [2, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 78, "end_byte": 83, "start_point": [2, 4], "end_point": [2, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 83, "end_byte": 85, "start_point": [2, 9], "end_point": [2, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 85, "end_byte": 96, "start_point": [2, 11], "end_point": [2, 22], "text": "global_vars"}], "start_byte": 78, "end_byte": 96, "start_point": [2, 4], "end_point": [2, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 96, "end_byte": 98, "start_point": [2, 22], "end_point": [2, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 98, "end_byte": 106, "start_point": [2, 24], "end_point": [2, 32], "text": "bzip2_c1"}], "start_byte": 78, "end_byte": 106, "start_point": [2, 4], "end_point": [2, 32], "text": "crate::global_vars::bzip2_c1"}, {"type": "::", "children": [], "start_byte": 106, "end_byte": 108, "start_point": [2, 32], "end_point": [2, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 108, "end_byte": 109, "start_point": [2, 34], "end_point": [2, 35], "text": "*"}], "start_byte": 78, "end_byte": 109, "start_point": [2, 4], "end_point": [2, 35], "text": "crate::global_vars::bzip2_c1::*"}, {"type": ";", "children": [], "start_byte": 109, "end_byte": 110, "start_point": [2, 35], "end_point": [2, 36], "text": ";"}], "start_byte": 74, "end_byte": 110, "start_point": [2, 0], "end_point": [2, 36], "text": "use crate::global_vars::bzip2_c1::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 111, "end_byte": 114, "start_point": [3, 0], "end_point": [3, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 115, "end_byte": 120, "start_point": [3, 4], "end_point": [3, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 120, "end_byte": 122, "start_point": [3, 9], "end_point": [3, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 122, "end_byte": 133, "start_point": [3, 11], "end_point": [3, 22], "text": "global_vars"}], "start_byte": 115, "end_byte": 133, "start_point": [3, 4], "end_point": [3, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 133, "end_byte": 135, "start_point": [3, 22], "end_point": [3, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 135, "end_byte": 145, "start_point": [3, 24], "end_point": [3, 34], "text": "conversion"}], "start_byte": 115, "end_byte": 145, "start_point": [3, 4], "end_point": [3, 34], "text": "crate::global_vars::conversion"}, {"type": "::", "children": [], "start_byte": 145, "end_byte": 147, "start_point": [3, 34], "end_point": [3, 36], "text": "::"}, {"type": "*", "children": [], "start_byte": 147, "end_byte": 148, "start_point": [3, 36], "end_point": [3, 37], "text": "*"}], "start_byte": 115, "end_byte": 148, "start_point": [3, 4], "end_point": [3, 37], "text": "crate::global_vars::conversion::*"}, {"type": ";", "children": [], "start_byte": 148, "end_byte": 149, "start_point": [3, 37], "end_point": [3, 38], "text": ";"}], "start_byte": 111, "end_byte": 149, "start_point": [3, 0], "end_point": [3, 38], "text": "use crate::global_vars::conversion::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 150, "end_byte": 153, "start_point": [4, 0], "end_point": [4, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 154, "end_byte": 159, "start_point": [4, 4], "end_point": [4, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 159, "end_byte": 161, "start_point": [4, 9], "end_point": [4, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 161, "end_byte": 166, "start_point": [4, 11], "end_point": [4, 16], "text": "bzip2"}], "start_byte": 154, "end_byte": 166, "start_point": [4, 4], "end_point": [4, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 166, "end_byte": 168, "start_point": [4, 16], "end_point": [4, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 168, "end_byte": 264, "start_point": [4, 18], "end_point": [4, 114], "text": "scc_95_applySavedTimeInfoToOutputFile_96_applySavedFileAttrToOutputFile_97_saveInputFileMetaInfo"}], "start_byte": 154, "end_byte": 264, "start_point": [4, 4], "end_point": [4, 114], "text": "crate::bzip2::scc_95_applySavedTimeInfoToOutputFile_96_applySavedFileAttrToOutputFile_97_saveInputFileMetaInfo"}, {"type": "::", "children": [], "start_byte": 264, "end_byte": 266, "start_point": [4, 114], "end_point": [4, 116], "text": "::"}, {"type": "*", "children": [], "start_byte": 266, "end_byte": 267, "start_point": [4, 116], "end_point": [4, 117], "text": "*"}], "start_byte": 154, "end_byte": 267, "start_point": [4, 4], "end_point": [4, 117], "text": "crate::bzip2::scc_95_applySavedTimeInfoToOutputFile_96_applySavedFileAttrToOutputFile_97_saveInputFileMetaInfo::*"}, {"type": ";", "children": [], "start_byte": 267, "end_byte": 268, "start_point": [4, 117], "end_point": [4, 118], "text": ";"}], "start_byte": 150, "end_byte": 268, "start_point": [4, 0], "end_point": [4, 118], "text": "use crate::bzip2::scc_95_applySavedTimeInfoToOutputFile_96_applySavedFileAttrToOutputFile_97_saveInputFileMetaInfo::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 269, "end_byte": 272, "start_point": [5, 0], "end_point": [5, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 273, "end_byte": 278, "start_point": [5, 4], "end_point": [5, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 278, "end_byte": 280, "start_point": [5, 9], "end_point": [5, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 280, "end_byte": 285, "start_point": [5, 11], "end_point": [5, 16], "text": "bzip2"}], "start_byte": 273, "end_byte": 285, "start_point": [5, 4], "end_point": [5, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 285, "end_byte": 287, "start_point": [5, 16], "end_point": [5, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 287, "end_byte": 310, "start_point": [5, 18], "end_point": [5, 41], "text": "scc_93_crcError_ioError"}], "start_byte": 273, "end_byte": 310, "start_point": [5, 4], "end_point": [5, 41], "text": "crate::bzip2::scc_93_crcError_ioError"}, {"type": "::", "children": [], "start_byte": 310, "end_byte": 312, "start_point": [5, 41], "end_point": [5, 43], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 312, "end_byte": 320, "start_point": [5, 43], "end_point": [5, 51], "text": "io_error"}], "start_byte": 273, "end_byte": 320, "start_point": [5, 4], "end_point": [5, 51], "text": "crate::bzip2::scc_93_crcError_ioError::io_error"}, {"type": ";", "children": [], "start_byte": 320, "end_byte": 321, "start_point": [5, 51], "end_point": [5, 52], "text": ";"}], "start_byte": 269, "end_byte": 321, "start_point": [5, 0], "end_point": [5, 52], "text": "use crate::bzip2::scc_93_crcError_ioError::io_error;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 322, "end_byte": 325, "start_point": [6, 0], "end_point": [6, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 326, "end_byte": 331, "start_point": [6, 4], "end_point": [6, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 331, "end_byte": 333, "start_point": [6, 9], "end_point": [6, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 333, "end_byte": 338, "start_point": [6, 11], "end_point": [6, 16], "text": "bzip2"}], "start_byte": 326, "end_byte": 338, "start_point": [6, 4], "end_point": [6, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 338, "end_byte": 340, "start_point": [6, 16], "end_point": [6, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 340, "end_byte": 362, "start_point": [6, 18], "end_point": [6, 40], "text": "scc_90_root_52_setExit"}], "start_byte": 326, "end_byte": 362, "start_point": [6, 4], "end_point": [6, 40], "text": "crate::bzip2::scc_90_root_52_setExit"}, {"type": "::", "children": [], "start_byte": 362, "end_byte": 364, "start_point": [6, 40], "end_point": [6, 42], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 364, "end_byte": 372, "start_point": [6, 42], "end_point": [6, 50], "text": "set_exit"}], "start_byte": 326, "end_byte": 372, "start_point": [6, 4], "end_point": [6, 50], "text": "crate::bzip2::scc_90_root_52_setExit::set_exit"}, {"type": ";", "children": [], "start_byte": 372, "end_byte": 373, "start_point": [6, 50], "end_point": [6, 51], "text": ";"}], "start_byte": 322, "end_byte": 373, "start_point": [6, 0], "end_point": [6, 51], "text": "use crate::bzip2::scc_90_root_52_setExit::set_exit;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 374, "end_byte": 377, "start_point": [7, 0], "end_point": [7, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 378, "end_byte": 383, "start_point": [7, 4], "end_point": [7, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 383, "end_byte": 385, "start_point": [7, 9], "end_point": [7, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 385, "end_byte": 390, "start_point": [7, 11], "end_point": [7, 16], "text": "bzip2"}], "start_byte": 378, "end_byte": 390, "start_point": [7, 4], "end_point": [7, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 390, "end_byte": 392, "start_point": [7, 16], "end_point": [7, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 392, "end_byte": 418, "start_point": [7, 18], "end_point": [7, 44], "text": "scc_56_fopen_output_safely"}], "start_byte": 378, "end_byte": 418, "start_point": [7, 4], "end_point": [7, 44], "text": "crate::bzip2::scc_56_fopen_output_safely"}, {"type": "::", "children": [], "start_byte": 418, "end_byte": 420, "start_point": [7, 44], "end_point": [7, 46], "text": "::"}, {"type": "*", "children": [], "start_byte": 420, "end_byte": 421, "start_point": [7, 46], "end_point": [7, 47], "text": "*"}], "start_byte": 378, "end_byte": 421, "start_point": [7, 4], "end_point": [7, 47], "text": "crate::bzip2::scc_56_fopen_output_safely::*"}, {"type": ";", "children": [], "start_byte": 421, "end_byte": 422, "start_point": [7, 47], "end_point": [7, 48], "text": ";"}], "start_byte": 374, "end_byte": 422, "start_point": [7, 0], "end_point": [7, 48], "text": "use crate::bzip2::scc_56_fopen_output_safely::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 423, "end_byte": 426, "start_point": [8, 0], "end_point": [8, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 427, "end_byte": 432, "start_point": [8, 4], "end_point": [8, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 432, "end_byte": 434, "start_point": [8, 9], "end_point": [8, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 434, "end_byte": 439, "start_point": [8, 11], "end_point": [8, 16], "text": "bzip2"}], "start_byte": 427, "end_byte": 439, "start_point": [8, 4], "end_point": [8, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 439, "end_byte": 441, "start_point": [8, 16], "end_point": [8, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 441, "end_byte": 458, "start_point": [8, 18], "end_point": [8, 35], "text": "scc_87_fileExists"}], "start_byte": 427, "end_byte": 458, "start_point": [8, 4], "end_point": [8, 35], "text": "crate::bzip2::scc_87_fileExists"}, {"type": "::", "children": [], "start_byte": 458, "end_byte": 460, "start_point": [8, 35], "end_point": [8, 37], "text": "::"}, {"type": "*", "children": [], "start_byte": 460, "end_byte": 461, "start_point": [8, 37], "end_point": [8, 38], "text": "*"}], "start_byte": 427, "end_byte": 461, "start_point": [8, 4], "end_point": [8, 38], "text": "crate::bzip2::scc_87_fileExists::*"}, {"type": ";", "children": [], "start_byte": 461, "end_byte": 462, "start_point": [8, 38], "end_point": [8, 39], "text": ";"}], "start_byte": 423, "end_byte": 462, "start_point": [8, 0], "end_point": [8, 39], "text": "use crate::bzip2::scc_87_fileExists::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 463, "end_byte": 466, "start_point": [9, 0], "end_point": [9, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 467, "end_byte": 472, "start_point": [9, 4], "end_point": [9, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 472, "end_byte": 474, "start_point": [9, 9], "end_point": [9, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 474, "end_byte": 479, "start_point": [9, 11], "end_point": [9, 16], "text": "bzip2"}], "start_byte": 467, "end_byte": 479, "start_point": [9, 4], "end_point": [9, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 479, "end_byte": 481, "start_point": [9, 16], "end_point": [9, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 481, "end_byte": 512, "start_point": [9, 18], "end_point": [9, 49], "text": "scc_116_hasSuffix_107_mapSuffix"}], "start_byte": 467, "end_byte": 512, "start_point": [9, 4], "end_point": [9, 49], "text": "crate::bzip2::scc_116_hasSuffix_107_mapSuffix"}, {"type": "::", "children": [], "start_byte": 512, "end_byte": 514, "start_point": [9, 49], "end_point": [9, 51], "text": "::"}, {"type": "*", "children": [], "start_byte": 514, "end_byte": 515, "start_point": [9, 51], "end_point": [9, 52], "text": "*"}], "start_byte": 467, "end_byte": 515, "start_point": [9, 4], "end_point": [9, 52], "text": "crate::bzip2::scc_116_hasSuffix_107_mapSuffix::*"}, {"type": ";", "children": [], "start_byte": 515, "end_byte": 516, "start_point": [9, 52], "end_point": [9, 53], "text": ";"}], "start_byte": 463, "end_byte": 516, "start_point": [9, 0], "end_point": [9, 53], "text": "use crate::bzip2::scc_116_hasSuffix_107_mapSuffix::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 517, "end_byte": 520, "start_point": [10, 0], "end_point": [10, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 521, "end_byte": 526, "start_point": [10, 4], "end_point": [10, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 526, "end_byte": 528, "start_point": [10, 9], "end_point": [10, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 528, "end_byte": 533, "start_point": [10, 11], "end_point": [10, 16], "text": "bzip2"}], "start_byte": 521, "end_byte": 533, "start_point": [10, 4], "end_point": [10, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 533, "end_byte": 535, "start_point": [10, 16], "end_point": [10, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 535, "end_byte": 555, "start_point": [10, 18], "end_point": [10, 38], "text": "scc_105_copyFileName"}], "start_byte": 521, "end_byte": 555, "start_point": [10, 4], "end_point": [10, 38], "text": "crate::bzip2::scc_105_copyFileName"}, {"type": "::", "children": [], "start_byte": 555, "end_byte": 557, "start_point": [10, 38], "end_point": [10, 40], "text": "::"}, {"type": "*", "children": [], "start_byte": 557, "end_byte": 558, "start_point": [10, 40], "end_point": [10, 41], "text": "*"}], "start_byte": 521, "end_byte": 558, "start_point": [10, 4], "end_point": [10, 41], "text": "crate::bzip2::scc_105_copyFileName::*"}, {"type": ";", "children": [], "start_byte": 558, "end_byte": 559, "start_point": [10, 41], "end_point": [10, 42], "text": ";"}], "start_byte": 517, "end_byte": 559, "start_point": [10, 0], "end_point": [10, 42], "text": "use crate::bzip2::scc_105_copyFileName::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 560, "end_byte": 563, "start_point": [11, 0], "end_point": [11, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 564, "end_byte": 569, "start_point": [11, 4], "end_point": [11, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 569, "end_byte": 571, "start_point": [11, 9], "end_point": [11, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 571, "end_byte": 576, "start_point": [11, 11], "end_point": [11, 16], "text": "bzip2"}], "start_byte": 564, "end_byte": 576, "start_point": [11, 4], "end_point": [11, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 576, "end_byte": 578, "start_point": [11, 16], "end_point": [11, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 578, "end_byte": 600, "start_point": [11, 18], "end_point": [11, 40], "text": "scc_110_compressStream"}], "start_byte": 564, "end_byte": 600, "start_point": [11, 4], "end_point": [11, 40], "text": "crate::bzip2::scc_110_compressStream"}, {"type": "::", "children": [], "start_byte": 600, "end_byte": 602, "start_point": [11, 40], "end_point": [11, 42], "text": "::"}, {"type": "*", "children": [], "start_byte": 602, "end_byte": 603, "start_point": [11, 42], "end_point": [11, 43], "text": "*"}], "start_byte": 564, "end_byte": 603, "start_point": [11, 4], "end_point": [11, 43], "text": "crate::bzip2::scc_110_compressStream::*"}, {"type": ";", "children": [], "start_byte": 603, "end_byte": 604, "start_point": [11, 43], "end_point": [11, 44], "text": ";"}], "start_byte": 560, "end_byte": 604, "start_point": [11, 0], "end_point": [11, 44], "text": "use crate::bzip2::scc_110_compressStream::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 605, "end_byte": 608, "start_point": [12, 0], "end_point": [12, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 609, "end_byte": 614, "start_point": [12, 4], "end_point": [12, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 614, "end_byte": 616, "start_point": [12, 9], "end_point": [12, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 616, "end_byte": 621, "start_point": [12, 11], "end_point": [12, 16], "text": "bzip2"}], "start_byte": 609, "end_byte": 621, "start_point": [12, 4], "end_point": [12, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 621, "end_byte": 623, "start_point": [12, 16], "end_point": [12, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 623, "end_byte": 658, "start_point": [12, 18], "end_point": [12, 53], "text": "scc_60_root_41_containsDubiousChars"}], "start_byte": 609, "end_byte": 658, "start_point": [12, 4], "end_point": [12, 53], "text": "crate::bzip2::scc_60_root_41_containsDubiousChars"}, {"type": "::", "children": [], "start_byte": 658, "end_byte": 660, "start_point": [12, 53], "end_point": [12, 55], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 660, "end_byte": 682, "start_point": [12, 55], "end_point": [12, 77], "text": "contains_dubious_chars"}], "start_byte": 609, "end_byte": 682, "start_point": [12, 4], "end_point": [12, 77], "text": "crate::bzip2::scc_60_root_41_containsDubiousChars::contains_dubious_chars"}, {"type": ";", "children": [], "start_byte": 682, "end_byte": 683, "start_point": [12, 77], "end_point": [12, 78], "text": ";"}], "start_byte": 605, "end_byte": 683, "start_point": [12, 0], "end_point": [12, 78], "text": "use crate::bzip2::scc_60_root_41_containsDubiousChars::contains_dubious_chars;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 684, "end_byte": 687, "start_point": [13, 0], "end_point": [13, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 688, "end_byte": 691, "start_point": [13, 4], "end_point": [13, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 691, "end_byte": 693, "start_point": [13, 7], "end_point": [13, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 693, "end_byte": 695, "start_point": [13, 9], "end_point": [13, 11], "text": "fs"}], "start_byte": 688, "end_byte": 695, "start_point": [13, 4], "end_point": [13, 11], "text": "std::fs"}, {"type": "::", "children": [], "start_byte": 695, "end_byte": 697, "start_point": [13, 11], "end_point": [13, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 697, "end_byte": 701, "start_point": [13, 13], "end_point": [13, 17], "text": "File"}], "start_byte": 688, "end_byte": 701, "start_point": [13, 4], "end_point": [13, 17], "text": "std::fs::File"}, {"type": ";", "children": [], "start_byte": 701, "end_byte": 702, "start_point": [13, 17], "end_point": [13, 18], "text": ";"}], "start_byte": 684, "end_byte": 702, "start_point": [13, 0], "end_point": [13, 18], "text": "use std::fs::File;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 703, "end_byte": 706, "start_point": [14, 0], "end_point": [14, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 707, "end_byte": 710, "start_point": [14, 4], "end_point": [14, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 710, "end_byte": 712, "start_point": [14, 7], "end_point": [14, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 712, "end_byte": 714, "start_point": [14, 9], "end_point": [14, 11], "text": "io"}], "start_byte": 707, "end_byte": 714, "start_point": [14, 4], "end_point": [14, 11], "text": "std::io"}, {"type": "::", "children": [], "start_byte": 714, "end_byte": 716, "start_point": [14, 11], "end_point": [14, 13], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 716, "end_byte": 717, "start_point": [14, 13], "end_point": [14, 14], "text": "{"}, {"type": "self", "children": [], "start_byte": 717, "end_byte": 721, "start_point": [14, 14], "end_point": [14, 18], "text": "self"}, {"type": ",", "children": [], "start_byte": 721, "end_byte": 722, "start_point": [14, 18], "end_point": [14, 19], "text": ","}, {"type": "identifier", "children": [], "start_byte": 723, "end_byte": 728, "start_point": [14, 20], "end_point": [14, 25], "text": "Write"}, {"type": "}", "children": [], "start_byte": 728, "end_byte": 729, "start_point": [14, 25], "end_point": [14, 26], "text": "}"}], "start_byte": 716, "end_byte": 729, "start_point": [14, 13], "end_point": [14, 26], "text": "{self, Write}"}], "start_byte": 707, "end_byte": 729, "start_point": [14, 4], "end_point": [14, 26], "text": "std::io::{self, Write}"}, {"type": ";", "children": [], "start_byte": 729, "end_byte": 730, "start_point": [14, 26], "end_point": [14, 27], "text": ";"}], "start_byte": 703, "end_byte": 730, "start_point": [14, 0], "end_point": [14, 27], "text": "use std::io::{self, Write};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 731, "end_byte": 734, "start_point": [15, 0], "end_point": [15, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 735, "end_byte": 738, "start_point": [15, 4], "end_point": [15, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 738, "end_byte": 740, "start_point": [15, 7], "end_point": [15, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 740, "end_byte": 744, "start_point": [15, 9], "end_point": [15, 13], "text": "path"}], "start_byte": 735, "end_byte": 744, "start_point": [15, 4], "end_point": [15, 13], "text": "std::path"}, {"type": "::", "children": [], "start_byte": 744, "end_byte": 746, "start_point": [15, 13], "end_point": [15, 15], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 746, "end_byte": 750, "start_point": [15, 15], "end_point": [15, 19], "text": "Path"}], "start_byte": 735, "end_byte": 750, "start_point": [15, 4], "end_point": [15, 19], "text": "std::path::Path"}, {"type": ";", "children": [], "start_byte": 750, "end_byte": 751, "start_point": [15, 19], "end_point": [15, 20], "text": ";"}], "start_byte": 731, "end_byte": 751, "start_point": [15, 0], "end_point": [15, 20], "text": "use std::path::Path;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 752, "end_byte": 755, "start_point": [16, 0], "end_point": [16, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 756, "end_byte": 759, "start_point": [16, 4], "end_point": [16, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 759, "end_byte": 761, "start_point": [16, 7], "end_point": [16, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 761, "end_byte": 768, "start_point": [16, 9], "end_point": [16, 16], "text": "process"}], "start_byte": 756, "end_byte": 768, "start_point": [16, 4], "end_point": [16, 16], "text": "std::process"}, {"type": ";", "children": [], "start_byte": 768, "end_byte": 769, "start_point": [16, 16], "end_point": [16, 17], "text": ";"}], "start_byte": 752, "end_byte": 769, "start_point": [16, 0], "end_point": [16, 17], "text": "use std::process;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 770, "end_byte": 773, "start_point": [17, 0], "end_point": [17, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "identifier", "children": [], "start_byte": 774, "end_byte": 778, "start_point": [17, 4], "end_point": [17, 8], "text": "libc"}, {"type": "::", "children": [], "start_byte": 778, "end_byte": 780, "start_point": [17, 8], "end_point": [17, 10], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 780, "end_byte": 781, "start_point": [17, 10], "end_point": [17, 11], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 781, "end_byte": 787, "start_point": [17, 11], "end_point": [17, 17], "text": "isatty"}, {"type": ",", "children": [], "start_byte": 787, "end_byte": 788, "start_point": [17, 17], "end_point": [17, 18], "text": ","}, {"type": "identifier", "children": [], "start_byte": 789, "end_byte": 795, "start_point": [17, 19], "end_point": [17, 25], "text": "fileno"}, {"type": "}", "children": [], "start_byte": 795, "end_byte": 796, "start_point": [17, 25], "end_point": [17, 26], "text": "}"}], "start_byte": 780, "end_byte": 796, "start_point": [17, 10], "end_point": [17, 26], "text": "{isatty, fileno}"}], "start_byte": 774, "end_byte": 796, "start_point": [17, 4], "end_point": [17, 26], "text": "libc::{isatty, fileno}"}, {"type": ";", "children": [], "start_byte": 796, "end_byte": 797, "start_point": [17, 26], "end_point": [17, 27], "text": ";"}], "start_byte": 770, "end_byte": 797, "start_point": [17, 0], "end_point": [17, 27], "text": "use libc::{isatty, fileno};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 798, "end_byte": 801, "start_point": [18, 0], "end_point": [18, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 802, "end_byte": 805, "start_point": [18, 4], "end_point": [18, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 805, "end_byte": 807, "start_point": [18, 7], "end_point": [18, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 807, "end_byte": 809, "start_point": [18, 9], "end_point": [18, 11], "text": "io"}], "start_byte": 802, "end_byte": 809, "start_point": [18, 4], "end_point": [18, 11], "text": "std::io"}, {"type": "::", "children": [], "start_byte": 809, "end_byte": 811, "start_point": [18, 11], "end_point": [18, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 811, "end_byte": 817, "start_point": [18, 13], "end_point": [18, 19], "text": "stdout"}], "start_byte": 802, "end_byte": 817, "start_point": [18, 4], "end_point": [18, 19], "text": "std::io::stdout"}, {"type": ";", "children": [], "start_byte": 817, "end_byte": 818, "start_point": [18, 19], "end_point": [18, 20], "text": ";"}], "start_byte": 798, "end_byte": 818, "start_point": [18, 0], "end_point": [18, 20], "text": "use std::io::stdout;"}, {"type": "line_comment", "children": [], "start_byte": 820, "end_byte": 836, "start_point": [18, 22], "end_point": [18, 38], "text": "// \u5bfc\u5165 stdout\nuse"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 837, "end_byte": 840, "start_point": [19, 0], "end_point": [19, 3], "text": "std"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 841, "end_byte": 844, "start_point": [19, 4], "end_point": [19, 7], "text": ":os"}, {"type": "::", "children": [], "start_byte": 844, "end_byte": 846, "start_point": [19, 7], "end_point": [19, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 846, "end_byte": 848, "start_point": [19, 9], "end_point": [19, 11], "text": "un"}], "start_byte": 841, "end_byte": 848, "start_point": [19, 4], "end_point": [19, 11], "text": ":os::un"}, {"type": "::", "children": [], "start_byte": 848, "end_byte": 850, "start_point": [19, 11], "end_point": [19, 13], "text": "ix"}, {"type": "identifier", "children": [], "start_byte": 850, "end_byte": 854, "start_point": [19, 13], "end_point": [19, 17], "text": "::io"}], "start_byte": 841, "end_byte": 854, "start_point": [19, 4], "end_point": [19, 17], "text": ":os::unix::io"}, {"type": "::", "children": [], "start_byte": 854, "end_byte": 856, "start_point": [19, 17], "end_point": [19, 19], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 856, "end_byte": 858, "start_point": [19, 19], "end_point": [19, 21], "text": "As"}], "start_byte": 841, "end_byte": 858, "start_point": [19, 4], "end_point": [19, 21], "text": ":os::unix::io::As"}, {"type": "::", "children": [], "start_byte": 858, "end_byte": 860, "start_point": [19, 21], "end_point": [19, 23], "text": "Ra"}, {"type": "identifier", "children": [], "start_byte": 860, "end_byte": 867, "start_point": [19, 23], "end_point": [19, 30], "text": "wFd;  /"}], "start_byte": 841, "end_byte": 867, "start_point": [19, 4], "end_point": [19, 30], "text": ":os::unix::io::AsRawFd;  /"}, {"type": ";", "children": [], "start_byte": 867, "end_byte": 868, "start_point": [19, 30], "end_point": [19, 31], "text": "/"}], "start_byte": 837, "end_byte": 868, "start_point": [19, 0], "end_point": [19, 31], "text": "std::os::unix::io::AsRawFd;  //"}, {"type": "line_comment", "children": [], "start_byte": 870, "end_byte": 909, "start_point": [19, 33], "end_point": [19, 72], "text": "\u5165 Unix-specific trait \u548c\u51fd\u6570\nuse std::os::"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 910, "end_byte": 913, "start_point": [20, 0], "end_point": [20, 3], "text": "d::"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 914, "end_byte": 917, "start_point": [20, 4], "end_point": [20, 7], "text": "rom"}, {"type": "::", "children": [], "start_byte": 917, "end_byte": 919, "start_point": [20, 7], "end_point": [20, 9], "text": "Ra"}, {"type": "identifier", "children": [], "start_byte": 919, "end_byte": 921, "start_point": [20, 9], "end_point": [20, 11], "text": "wF"}], "start_byte": 914, "end_byte": 921, "start_point": [20, 4], "end_point": [20, 11], "text": "romRawF"}, {"type": "::", "children": [], "start_byte": 921, "end_byte": 923, "start_point": [20, 11], "end_point": [20, 13], "text": "d;"}, {"type": "identifier", "children": [], "start_byte": 923, "end_byte": 925, "start_point": [20, 13], "end_point": [20, 15], "text": "\n "}], "start_byte": 914, "end_byte": 925, "start_point": [20, 4], "end_point": [20, 15], "text": "romRawFd;\n "}, {"type": "::", "children": [], "start_byte": 925, "end_byte": 927, "start_point": [20, 15], "end_point": [20, 17], "text": "\np"}, {"type": "identifier", "children": [], "start_byte": 927, "end_byte": 936, "start_point": [20, 17], "end_point": [20, 26], "text": "ub static"}], "start_byte": 914, "end_byte": 936, "start_point": [20, 4], "end_point": [20, 26], "text": "romRawFd;\n \npub static"}, {"type": ";", "children": [], "start_byte": 936, "end_byte": 937, "start_point": [20, 26], "end_point": [20, 27], "text": " "}], "start_byte": 910, "end_byte": 937, "start_point": [20, 0], "end_point": [20, 27], "text": "d::FromRawFd;\n \npub static "}, {"type": "static_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 940, "end_byte": 943, "start_point": [22, 0], "end_point": [22, 3], "text": " SR"}], "start_byte": 940, "end_byte": 943, "start_point": [22, 0], "end_point": [22, 3], "text": " SR"}, {"type": "static", "children": [], "start_byte": 944, "end_byte": 950, "start_point": [22, 4], "end_point": [22, 10], "text": "_MODE:"}, {"type": "mutable_specifier", "children": [], "start_byte": 951, "end_byte": 954, "start_point": [22, 11], "end_point": [22, 14], "text": "i32"}, {"type": "identifier", "children": [], "start_byte": 955, "end_byte": 963, "start_point": [22, 15], "end_point": [22, 23], "text": "= 1;\n\n\np"}, {"type": ":", "children": [], "start_byte": 963, "end_byte": 964, "start_point": [22, 23], "end_point": [22, 24], "text": "u"}, {"type": "primitive_type", "children": [], "start_byte": 965, "end_byte": 968, "start_point": [22, 25], "end_point": [22, 28], "text": " fn"}, {"type": "=", "children": [], "start_byte": 969, "end_byte": 970, "start_point": [22, 29], "end_point": [22, 30], "text": "c"}, {"type": "integer_literal", "children": [], "start_byte": 971, "end_byte": 972, "start_point": [22, 31], "end_point": [22, 32], "text": "m"}, {"type": ";", "children": [], "start_byte": 972, "end_byte": 973, "start_point": [22, 32], "end_point": [22, 33], "text": "p"}], "start_byte": 940, "end_byte": 973, "start_point": [22, 0], "end_point": [22, 33], "text": " SRC_MODE: i32 = 1;\n\n\npub fn comp"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 976, "end_byte": 979, "start_point": [25, 0], "end_point": [25, 3], "text": "s(n"}], "start_byte": 976, "end_byte": 979, "start_point": [25, 0], "end_point": [25, 3], "text": "s(n"}, {"type": "fn", "children": [], "start_byte": 980, "end_byte": 982, "start_point": [25, 4], "end_point": [25, 6], "text": "me"}, {"type": "identifier", "children": [], "start_byte": 983, "end_byte": 991, "start_point": [25, 7], "end_point": [25, 15], "text": " Option<"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 991, "end_byte": 992, "start_point": [25, 15], "end_point": [25, 16], "text": "&"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 992, "end_byte": 996, "start_point": [25, 16], "end_point": [25, 20], "text": "str>"}, {"type": ":", "children": [], "start_byte": 996, "end_byte": 997, "start_point": [25, 20], "end_point": [25, 21], "text": ")"}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 998, "end_byte": 1004, "start_point": [25, 22], "end_point": [25, 28], "text": "-> Res"}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 1004, "end_byte": 1005, "start_point": [25, 28], "end_point": [25, 29], "text": "u"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 1005, "end_byte": 1006, "start_point": [25, 29], "end_point": [25, 30], "text": "l"}, {"type": "primitive_type", "children": [], "start_byte": 1006, "end_byte": 1009, "start_point": [25, 30], "end_point": [25, 33], "text": "t<("}], "start_byte": 1005, "end_byte": 1009, "start_point": [25, 29], "end_point": [25, 33], "text": "lt<("}, {"type": ">", "children": [], "start_byte": 1009, "end_byte": 1010, "start_point": [25, 33], "end_point": [25, 34], "text": ")"}], "start_byte": 1004, "end_byte": 1010, "start_point": [25, 28], "end_point": [25, 34], "text": "ult<()"}], "start_byte": 998, "end_byte": 1010, "start_point": [25, 22], "end_point": [25, 34], "text": "-> Result<()"}], "start_byte": 992, "end_byte": 1010, "start_point": [25, 16], "end_point": [25, 34], "text": "str>) -> Result<()"}, {"type": ")", "children": [], "start_byte": 1010, "end_byte": 1011, "start_point": [25, 34], "end_point": [25, 35], "text": ","}], "start_byte": 991, "end_byte": 1011, "start_point": [25, 15], "end_point": [25, 35], "text": "&str>) -> Result<(),"}, {"type": "->", "children": [], "start_byte": 1012, "end_byte": 1014, "start_point": [25, 36], "end_point": [25, 38], "text": "io"}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 1015, "end_byte": 1021, "start_point": [25, 39], "end_point": [25, 45], "text": ":Error"}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 1021, "end_byte": 1022, "start_point": [25, 45], "end_point": [25, 46], "text": ">"}, {"type": "unit_type", "children": [{"type": "(", "children": [], "start_byte": 1022, "end_byte": 1023, "start_point": [25, 46], "end_point": [25, 47], "text": " "}, {"type": ")", "children": [], "start_byte": 1023, "end_byte": 1024, "start_point": [25, 47], "end_point": [25, 48], "text": "{"}], "start_byte": 1022, "end_byte": 1024, "start_point": [25, 46], "end_point": [25, 48], "text": " {"}, {"type": ",", "children": [], "start_byte": 1024, "end_byte": 1025, "start_point": [25, 48], "end_point": [25, 49], "text": "\n"}, {"type": "scoped_type_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1026, "end_byte": 1028, "start_point": [25, 50], "end_point": [25, 52], "text": "  "}, {"type": "::", "children": [], "start_byte": 1028, "end_byte": 1030, "start_point": [25, 52], "end_point": [25, 54], "text": " /"}, {"type": "type_identifier", "children": [], "start_byte": 1030, "end_byte": 1035, "start_point": [25, 54], "end_point": [25, 59], "text": "/ pri"}], "start_byte": 1026, "end_byte": 1035, "start_point": [25, 50], "end_point": [25, 59], "text": "   // pri"}, {"type": ">", "children": [], "start_byte": 1035, "end_byte": 1036, "start_point": [25, 59], "end_point": [25, 60], "text": "n"}], "start_byte": 1021, "end_byte": 1036, "start_point": [25, 45], "end_point": [25, 60], "text": "> {\n    // prin"}], "start_byte": 1015, "end_byte": 1036, "start_point": [25, 39], "end_point": [25, 60], "text": ":Error> {\n    // prin"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1037, "end_byte": 1038, "start_point": [25, 61], "end_point": [25, 62], "text": "l"}, {"type": "line_comment", "children": [], "start_byte": 1043, "end_byte": 1071, "start_point": [26, 4], "end_point": [26, 32], "text": "ompress\ud83d\udd25\");\n     if let Some"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 1077, "end_byte": 1079, "start_point": [27, 5], "end_point": [27, 7], "text": "na"}, {"type": "let_condition", "children": [{"type": "let", "children": [], "start_byte": 1080, "end_byte": 1083, "start_point": [27, 8], "end_point": [27, 11], "text": "e {"}, {"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 1084, "end_byte": 1088, "start_point": [27, 12], "end_point": [27, 16], "text": "    "}, {"type": "(", "children": [], "start_byte": 1088, "end_byte": 1089, "start_point": [27, 16], "end_point": [27, 17], "text": " "}, {"type": "identifier", "children": [], "start_byte": 1089, "end_byte": 1090, "start_point": [27, 17], "end_point": [27, 18], "text": " "}, {"type": ")", "children": [], "start_byte": 1090, "end_byte": 1091, "start_point": [27, 18], "end_point": [27, 19], "text": " "}], "start_byte": 1084, "end_byte": 1091, "start_point": [27, 12], "end_point": [27, 19], "text": "       "}, {"type": "=", "children": [], "start_byte": 1092, "end_byte": 1093, "start_point": [27, 20], "end_point": [27, 21], "text": "/"}, {"type": "identifier", "children": [], "start_byte": 1094, "end_byte": 1098, "start_point": [27, 22], "end_point": [27, 26], "text": " pri"}], "start_byte": 1080, "end_byte": 1098, "start_point": [27, 8], "end_point": [27, 26], "text": "e {\n        // pri"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1099, "end_byte": 1100, "start_point": [27, 27], "end_point": [27, 28], "text": "t"}, {"type": "line_comment", "children": [], "start_byte": 1109, "end_byte": 1148, "start_point": [28, 8], "end_point": [28, 47], "text": "ressing file: {}\", n);\n    } else {\n   "}, {"type": "}", "children": [], "start_byte": 1153, "end_byte": 1154, "start_point": [29, 4], "end_point": [29, 5], "text": "/"}], "start_byte": 1099, "end_byte": 1154, "start_point": [27, 27], "end_point": [29, 5], "text": "tln!(\"Compressing file: {}\", n);\n    } else {\n        /"}, {"type": "else_clause", "children": [{"type": "else", "children": [], "start_byte": 1155, "end_byte": 1159, "start_point": [29, 6], "end_point": [29, 10], "text": " pri"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1160, "end_byte": 1161, "start_point": [29, 11], "end_point": [29, 12], "text": "t"}, {"type": "line_comment", "children": [], "start_byte": 1170, "end_byte": 1207, "start_point": [30, 8], "end_point": [30, 45], "text": "ile name provided\");\n    }\n\n    unsaf"}, {"type": "}", "children": [], "start_byte": 1212, "end_byte": 1213, "start_point": [31, 4], "end_point": [31, 5], "text": " "}], "start_byte": 1160, "end_byte": 1213, "start_point": [29, 11], "end_point": [31, 5], "text": "tln!(\"No file name provided\");\n    }\n\n    unsafe {\n  "}], "start_byte": 1155, "end_byte": 1213, "start_point": [29, 6], "end_point": [31, 5], "text": " println!(\"No file name provided\");\n    }\n\n    unsafe {\n  "}], "start_byte": 1077, "end_byte": 1213, "start_point": [27, 5], "end_point": [31, 5], "text": "name {\n        // println!(\"Compressing file: {}\", n);\n    } else {\n        // println!(\"No file name provided\");\n    }\n\n    unsafe {\n  "}], "start_byte": 1077, "end_byte": 1213, "start_point": [27, 5], "end_point": [31, 5], "text": "name {\n        // println!(\"Compressing file: {}\", n);\n    } else {\n        // println!(\"No file name provided\");\n    }\n\n    unsafe {\n  "}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 1219, "end_byte": 1225, "start_point": [33, 4], "end_point": [33, 10], "text": "// pri"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1226, "end_byte": 1227, "start_point": [33, 11], "end_point": [33, 12], "text": "t"}, {"type": "line_comment", "children": [], "start_byte": 1236, "end_byte": 1261, "start_point": [34, 8], "end_point": [34, 33], "text": "e\ud83d\udcaa\");\n        DELETE_OUTP"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1270, "end_byte": 1296, "start_point": [35, 8], "end_point": [35, 34], "text": "ERRUPT = false;\n    \n     "}, {"type": "=", "children": [], "start_byte": 1297, "end_byte": 1298, "start_point": [35, 35], "end_point": [35, 36], "text": " "}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 1299, "end_byte": 1304, "start_point": [35, 37], "end_point": [35, 42], "text": "if na"}], "start_byte": 1299, "end_byte": 1304, "start_point": [35, 37], "end_point": [35, 42], "text": "if na"}], "start_byte": 1270, "end_byte": 1304, "start_point": [35, 8], "end_point": [35, 42], "text": "ERRUPT = false;\n    \n        if na"}, {"type": ";", "children": [], "start_byte": 1304, "end_byte": 1305, "start_point": [35, 42], "end_point": [35, 43], "text": "m"}], "start_byte": 1270, "end_byte": 1305, "start_point": [35, 8], "end_point": [35, 43], "text": "ERRUPT = false;\n    \n        if nam"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 1319, "end_byte": 1321, "start_point": [37, 8], "end_point": [37, 10], "text": " S"}, {"type": "binary_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1322, "end_byte": 1326, "start_point": [37, 11], "end_point": [37, 15], "text": "C_MO"}, {"type": ".", "children": [], "start_byte": 1326, "end_byte": 1327, "start_point": [37, 15], "end_point": [37, 16], "text": "D"}, {"type": "field_identifier", "children": [], "start_byte": 1327, "end_byte": 1334, "start_point": [37, 16], "end_point": [37, 23], "text": "E != 1 "}], "start_byte": 1322, "end_byte": 1334, "start_point": [37, 11], "end_point": [37, 23], "text": "C_MODE != 1 "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1334, "end_byte": 1335, "start_point": [37, 23], "end_point": [37, 24], "text": "{"}, {"type": ")", "children": [], "start_byte": 1335, "end_byte": 1336, "start_point": [37, 24], "end_point": [37, 25], "text": "\n"}], "start_byte": 1334, "end_byte": 1336, "start_point": [37, 23], "end_point": [37, 25], "text": "{\n"}], "start_byte": 1322, "end_byte": 1336, "start_point": [37, 11], "end_point": [37, 25], "text": "C_MODE != 1 {\n"}, {"type": "&&", "children": [], "start_byte": 1337, "end_byte": 1339, "start_point": [37, 26], "end_point": [37, 28], "text": "  "}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1340, "end_byte": 1348, "start_point": [37, 29], "end_point": [37, 37], "text": "        "}, {"type": "!=", "children": [], "start_byte": 1349, "end_byte": 1351, "start_point": [37, 38], "end_point": [37, 40], "text": "an"}, {"type": "integer_literal", "children": [], "start_byte": 1352, "end_byte": 1353, "start_point": [37, 41], "end_point": [37, 42], "text": "c"}], "start_byte": 1340, "end_byte": 1353, "start_point": [37, 29], "end_point": [37, 42], "text": "        panic"}], "start_byte": 1322, "end_byte": 1353, "start_point": [37, 11], "end_point": [37, 42], "text": "C_MODE != 1 {\n            panic"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1354, "end_byte": 1355, "start_point": [37, 43], "end_point": [37, 44], "text": "("}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1368, "end_byte": 1373, "start_point": [38, 12], "end_point": [38, 17], "text": "d mod"}, {"type": "!", "children": [], "start_byte": 1373, "end_byte": 1374, "start_point": [38, 17], "end_point": [38, 18], "text": "e"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1374, "end_byte": 1375, "start_point": [38, 18], "end_point": [38, 19], "text": "s"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1375, "end_byte": 1376, "start_point": [38, 19], "end_point": [38, 20], "text": "\\"}, {"type": "escape_sequence", "children": [], "start_byte": 1395, "end_byte": 1397, "start_point": [38, 39], "end_point": [38, 41], "text": "  "}, {"type": "\"", "children": [], "start_byte": 1397, "end_byte": 1398, "start_point": [38, 41], "end_point": [38, 42], "text": " "}], "start_byte": 1375, "end_byte": 1398, "start_point": [38, 19], "end_point": [38, 42], "text": "\\n\");\n        }\n\n      "}, {"type": ")", "children": [], "start_byte": 1398, "end_byte": 1399, "start_point": [38, 42], "end_point": [38, 43], "text": " "}], "start_byte": 1374, "end_byte": 1399, "start_point": [38, 18], "end_point": [38, 43], "text": "s\\n\");\n        }\n\n       "}], "start_byte": 1368, "end_byte": 1399, "start_point": [38, 12], "end_point": [38, 43], "text": "d modes\\n\");\n        }\n\n       "}, {"type": ";", "children": [], "start_byte": 1399, "end_byte": 1400, "start_point": [38, 43], "end_point": [38, 44], "text": " "}], "start_byte": 1368, "end_byte": 1400, "start_point": [38, 12], "end_point": [38, 44], "text": "d modes\\n\");\n        }\n\n        "}, {"type": "}", "children": [], "start_byte": 1409, "end_byte": 1410, "start_point": [39, 8], "end_point": [39, 9], "text": "_"}], "start_byte": 1354, "end_byte": 1410, "start_point": [37, 43], "end_point": [39, 9], "text": "(\"compress: bad modes\\n\");\n        }\n\n        match SRC_"}], "start_byte": 1319, "end_byte": 1410, "start_point": [37, 8], "end_point": [39, 9], "text": " SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_"}], "start_byte": 1319, "end_byte": 1410, "start_point": [37, 8], "end_point": [39, 9], "text": " SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_"}, {"type": "expression_statement", "children": [{"type": "match_expression", "children": [{"type": "match", "children": [], "start_byte": 1420, "end_byte": 1425, "start_point": [41, 8], "end_point": [41, 13], "text": "     "}, {"type": "identifier", "children": [], "start_byte": 1426, "end_byte": 1434, "start_point": [41, 14], "end_point": [41, 22], "text": "   1 => "}, {"type": "match_block", "children": [{"type": "{", "children": [], "start_byte": 1435, "end_byte": 1436, "start_point": [41, 23], "end_point": [41, 24], "text": "\n"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "integer_literal", "children": [], "start_byte": 1449, "end_byte": 1450, "start_point": [42, 12], "end_point": [42, 13], "text": " "}], "start_byte": 1449, "end_byte": 1450, "start_point": [42, 12], "end_point": [42, 13], "text": " "}, {"type": "=>", "children": [], "start_byte": 1451, "end_byte": 1453, "start_point": [42, 14], "end_point": [42, 16], "text": " I"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1454, "end_byte": 1455, "start_point": [42, 17], "end_point": [42, 18], "text": "_"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1472, "end_byte": 1479, "start_point": [43, 16], "end_point": [43, 23], "text": "u8_arra"}, {"type": "=", "children": [], "start_byte": 1480, "end_byte": 1481, "start_point": [43, 24], "end_point": [43, 25], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1482, "end_byte": 1505, "start_point": [43, 26], "end_point": [43, 49], "text": "034(\"(stdin)\".to_string"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1505, "end_byte": 1506, "start_point": [43, 49], "end_point": [43, 50], "text": "("}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1506, "end_byte": 1507, "start_point": [43, 50], "end_point": [43, 51], "text": ")"}, {"type": "\"", "children": [], "start_byte": 1514, "end_byte": 1515, "start_point": [43, 58], "end_point": [43, 59], "text": " "}], "start_byte": 1506, "end_byte": 1515, "start_point": [43, 50], "end_point": [43, 59], "text": "));\n     "}, {"type": ".", "children": [], "start_byte": 1515, "end_byte": 1516, "start_point": [43, 59], "end_point": [43, 60], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1516, "end_byte": 1525, "start_point": [43, 60], "end_point": [43, 69], "text": "         "}], "start_byte": 1506, "end_byte": 1525, "start_point": [43, 50], "end_point": [43, 69], "text": "));\n               "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1525, "end_byte": 1526, "start_point": [43, 69], "end_point": [43, 70], "text": " "}, {"type": ")", "children": [], "start_byte": 1526, "end_byte": 1527, "start_point": [43, 70], "end_point": [43, 71], "text": "O"}], "start_byte": 1525, "end_byte": 1527, "start_point": [43, 69], "end_point": [43, 71], "text": " O"}], "start_byte": 1506, "end_byte": 1527, "start_point": [43, 50], "end_point": [43, 71], "text": "));\n                O"}, {"type": ")", "children": [], "start_byte": 1527, "end_byte": 1528, "start_point": [43, 71], "end_point": [43, 72], "text": "U"}], "start_byte": 1505, "end_byte": 1528, "start_point": [43, 49], "end_point": [43, 72], "text": "());\n                OU"}], "start_byte": 1482, "end_byte": 1528, "start_point": [43, 26], "end_point": [43, 72], "text": "034(\"(stdin)\".to_string());\n                OU"}], "start_byte": 1472, "end_byte": 1528, "start_point": [43, 16], "end_point": [43, 72], "text": "u8_array_1034(\"(stdin)\".to_string());\n                OU"}, {"type": ";", "children": [], "start_byte": 1528, "end_byte": 1529, "start_point": [43, 72], "end_point": [43, 73], "text": "T"}], "start_byte": 1472, "end_byte": 1529, "start_point": [43, 16], "end_point": [43, 73], "text": "u8_array_1034(\"(stdin)\".to_string());\n                OUT"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1546, "end_byte": 1554, "start_point": [44, 16], "end_point": [44, 24], "text": "_u8_arra"}, {"type": "=", "children": [], "start_byte": 1555, "end_byte": 1556, "start_point": [44, 25], "end_point": [44, 26], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1557, "end_byte": 1580, "start_point": [44, 27], "end_point": [44, 50], "text": "034(\"(stdout)\".to_strin"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1580, "end_byte": 1581, "start_point": [44, 50], "end_point": [44, 51], "text": "g"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1581, "end_byte": 1582, "start_point": [44, 51], "end_point": [44, 52], "text": "("}, {"type": "\"", "children": [], "start_byte": 1590, "end_byte": 1591, "start_point": [44, 60], "end_point": [44, 61], "text": " "}], "start_byte": 1581, "end_byte": 1591, "start_point": [44, 51], "end_point": [44, 61], "text": "());\n     "}, {"type": ".", "children": [], "start_byte": 1591, "end_byte": 1592, "start_point": [44, 61], "end_point": [44, 62], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1592, "end_byte": 1601, "start_point": [44, 62], "end_point": [44, 71], "text": "         "}], "start_byte": 1581, "end_byte": 1601, "start_point": [44, 51], "end_point": [44, 71], "text": "());\n               "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1601, "end_byte": 1602, "start_point": [44, 71], "end_point": [44, 72], "text": " "}, {"type": ")", "children": [], "start_byte": 1602, "end_byte": 1603, "start_point": [44, 72], "end_point": [44, 73], "text": "/"}], "start_byte": 1601, "end_byte": 1603, "start_point": [44, 71], "end_point": [44, 73], "text": " /"}], "start_byte": 1581, "end_byte": 1603, "start_point": [44, 51], "end_point": [44, 73], "text": "());\n                /"}, {"type": ")", "children": [], "start_byte": 1603, "end_byte": 1604, "start_point": [44, 73], "end_point": [44, 74], "text": "/"}], "start_byte": 1580, "end_byte": 1604, "start_point": [44, 50], "end_point": [44, 74], "text": "g());\n                //"}], "start_byte": 1557, "end_byte": 1604, "start_point": [44, 27], "end_point": [44, 74], "text": "034(\"(stdout)\".to_string());\n                //"}], "start_byte": 1546, "end_byte": 1604, "start_point": [44, 16], "end_point": [44, 74], "text": "_u8_array_1034(\"(stdout)\".to_string());\n                //"}, {"type": ";", "children": [], "start_byte": 1604, "end_byte": 1605, "start_point": [44, 74], "end_point": [44, 75], "text": " "}], "start_byte": 1546, "end_byte": 1605, "start_point": [44, 16], "end_point": [44, 75], "text": "_u8_array_1034(\"(stdout)\".to_string());\n                // "}, {"type": "line_comment", "children": [], "start_byte": 1622, "end_byte": 1650, "start_point": [45, 16], "end_point": [45, 44], "text": "handling\n            }\n     "}, {"type": "}", "children": [], "start_byte": 1663, "end_byte": 1664, "start_point": [46, 12], "end_point": [46, 13], "text": "\n"}], "start_byte": 1454, "end_byte": 1664, "start_point": [42, 17], "end_point": [46, 13], "text": "_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n"}], "start_byte": 1449, "end_byte": 1664, "start_point": [42, 12], "end_point": [46, 13], "text": "   IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "integer_literal", "children": [], "start_byte": 1677, "end_byte": 1678, "start_point": [47, 12], "end_point": [47, 13], "text": " "}], "start_byte": 1677, "end_byte": 1678, "start_point": [47, 12], "end_point": [47, 13], "text": " "}, {"type": "=>", "children": [], "start_byte": 1679, "end_byte": 1681, "start_point": [47, 14], "end_point": [47, 16], "text": " I"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1682, "end_byte": 1683, "start_point": [47, 17], "end_point": [47, 18], "text": "_"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1700, "end_byte": 1707, "start_point": [48, 16], "end_point": [48, 23], "text": "u8_arra"}, {"type": "=", "children": [], "start_byte": 1708, "end_byte": 1709, "start_point": [48, 24], "end_point": [48, 25], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1710, "end_byte": 1733, "start_point": [48, 26], "end_point": [48, 49], "text": "034(name.clone().unwrap"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1733, "end_byte": 1734, "start_point": [48, 49], "end_point": [48, 50], "text": "_"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1734, "end_byte": 1738, "start_point": [48, 50], "end_point": [48, 54], "text": "or_d"}, {"type": ".", "children": [], "start_byte": 1738, "end_byte": 1739, "start_point": [48, 54], "end_point": [48, 55], "text": "e"}, {"type": "field_identifier", "children": [], "start_byte": 1739, "end_byte": 1744, "start_point": [48, 55], "end_point": [48, 60], "text": "fault"}], "start_byte": 1734, "end_byte": 1744, "start_point": [48, 50], "end_point": [48, 60], "text": "or_default"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1744, "end_byte": 1745, "start_point": [48, 60], "end_point": [48, 61], "text": "("}, {"type": ")", "children": [], "start_byte": 1745, "end_byte": 1746, "start_point": [48, 61], "end_point": [48, 62], "text": ")"}], "start_byte": 1744, "end_byte": 1746, "start_point": [48, 60], "end_point": [48, 62], "text": "()"}], "start_byte": 1734, "end_byte": 1746, "start_point": [48, 50], "end_point": [48, 62], "text": "or_default()"}, {"type": ".", "children": [], "start_byte": 1746, "end_byte": 1747, "start_point": [48, 62], "end_point": [48, 63], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 1747, "end_byte": 1764, "start_point": [48, 63], "end_point": [48, 80], "text": "to_string());\n   "}], "start_byte": 1734, "end_byte": 1764, "start_point": [48, 50], "end_point": [48, 80], "text": "or_default().to_string());\n   "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1764, "end_byte": 1765, "start_point": [48, 80], "end_point": [48, 81], "text": " "}, {"type": ")", "children": [], "start_byte": 1765, "end_byte": 1766, "start_point": [48, 81], "end_point": [48, 82], "text": " "}], "start_byte": 1764, "end_byte": 1766, "start_point": [48, 80], "end_point": [48, 82], "text": "  "}], "start_byte": 1734, "end_byte": 1766, "start_point": [48, 50], "end_point": [48, 82], "text": "or_default().to_string());\n     "}, {"type": ".", "children": [], "start_byte": 1766, "end_byte": 1767, "start_point": [48, 82], "end_point": [48, 83], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1767, "end_byte": 1776, "start_point": [48, 83], "end_point": [48, 92], "text": "         "}], "start_byte": 1734, "end_byte": 1776, "start_point": [48, 50], "end_point": [48, 92], "text": "or_default().to_string());\n               "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1776, "end_byte": 1777, "start_point": [48, 92], "end_point": [48, 93], "text": " "}, {"type": ")", "children": [], "start_byte": 1777, "end_byte": 1778, "start_point": [48, 93], "end_point": [48, 94], "text": "O"}], "start_byte": 1776, "end_byte": 1778, "start_point": [48, 92], "end_point": [48, 94], "text": " O"}], "start_byte": 1734, "end_byte": 1778, "start_point": [48, 50], "end_point": [48, 94], "text": "or_default().to_string());\n                O"}, {"type": ")", "children": [], "start_byte": 1778, "end_byte": 1779, "start_point": [48, 94], "end_point": [48, 95], "text": "U"}], "start_byte": 1733, "end_byte": 1779, "start_point": [48, 49], "end_point": [48, 95], "text": "_or_default().to_string());\n                OU"}], "start_byte": 1710, "end_byte": 1779, "start_point": [48, 26], "end_point": [48, 95], "text": "034(name.clone().unwrap_or_default().to_string());\n                OU"}], "start_byte": 1700, "end_byte": 1779, "start_point": [48, 16], "end_point": [48, 95], "text": "u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OU"}, {"type": ";", "children": [], "start_byte": 1779, "end_byte": 1780, "start_point": [48, 95], "end_point": [48, 96], "text": "T"}], "start_byte": 1700, "end_byte": 1780, "start_point": [48, 16], "end_point": [48, 96], "text": "u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1797, "end_byte": 1805, "start_point": [49, 16], "end_point": [49, 24], "text": "_u8_arra"}, {"type": "=", "children": [], "start_byte": 1806, "end_byte": 1807, "start_point": [49, 25], "end_point": [49, 26], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1808, "end_byte": 1831, "start_point": [49, 27], "end_point": [49, 50], "text": "034(format!(\"{}.bz2\", n"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1831, "end_byte": 1832, "start_point": [49, 50], "end_point": [49, 51], "text": "a"}, {"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1832, "end_byte": 1838, "start_point": [49, 51], "end_point": [49, 57], "text": "me.unw"}, {"type": "!", "children": [], "start_byte": 1838, "end_byte": 1839, "start_point": [49, 57], "end_point": [49, 58], "text": "r"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1839, "end_byte": 1840, "start_point": [49, 58], "end_point": [49, 59], "text": "a"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1840, "end_byte": 1841, "start_point": [49, 59], "end_point": [49, 60], "text": "p"}, {"type": "\"", "children": [], "start_byte": 1847, "end_byte": 1848, "start_point": [49, 66], "end_point": [49, 67], "text": "f"}], "start_byte": 1840, "end_byte": 1848, "start_point": [49, 59], "end_point": [49, 67], "text": "p_or_def"}, {"type": "identifier", "children": [], "start_byte": 1850, "end_byte": 1854, "start_point": [49, 69], "end_point": [49, 73], "text": "lt()"}, {"type": "identifier", "children": [], "start_byte": 1855, "end_byte": 1872, "start_point": [49, 74], "end_point": [49, 91], "text": ");\n              "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1872, "end_byte": 1873, "start_point": [49, 91], "end_point": [49, 92], "text": " "}, {"type": ")", "children": [], "start_byte": 1873, "end_byte": 1874, "start_point": [49, 92], "end_point": [49, 93], "text": " "}], "start_byte": 1872, "end_byte": 1874, "start_point": [49, 91], "end_point": [49, 93], "text": "  "}, {"type": ")", "children": [], "start_byte": 1874, "end_byte": 1875, "start_point": [49, 93], "end_point": [49, 94], "text": "/"}], "start_byte": 1839, "end_byte": 1875, "start_point": [49, 58], "end_point": [49, 94], "text": "ap_or_default()));\n                /"}], "start_byte": 1832, "end_byte": 1875, "start_point": [49, 51], "end_point": [49, 94], "text": "me.unwrap_or_default()));\n                /"}, {"type": ")", "children": [], "start_byte": 1875, "end_byte": 1876, "start_point": [49, 94], "end_point": [49, 95], "text": "/"}], "start_byte": 1831, "end_byte": 1876, "start_point": [49, 50], "end_point": [49, 95], "text": "ame.unwrap_or_default()));\n                //"}], "start_byte": 1808, "end_byte": 1876, "start_point": [49, 27], "end_point": [49, 95], "text": "034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                //"}], "start_byte": 1797, "end_byte": 1876, "start_point": [49, 16], "end_point": [49, 95], "text": "_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                //"}, {"type": ";", "children": [], "start_byte": 1876, "end_byte": 1877, "start_point": [49, 95], "end_point": [49, 96], "text": " "}], "start_byte": 1797, "end_byte": 1877, "start_point": [49, 16], "end_point": [49, 96], "text": "_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // "}, {"type": "line_comment", "children": [], "start_byte": 1894, "end_byte": 1917, "start_point": [50, 16], "end_point": [50, 39], "text": "ing\n            }\n     "}, {"type": "}", "children": [], "start_byte": 1930, "end_byte": 1931, "start_point": [51, 12], "end_point": [51, 13], "text": "\n"}], "start_byte": 1682, "end_byte": 1931, "start_point": [47, 17], "end_point": [51, 13], "text": "_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n"}], "start_byte": 1677, "end_byte": 1931, "start_point": [47, 12], "end_point": [51, 13], "text": "   IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "integer_literal", "children": [], "start_byte": 1944, "end_byte": 1945, "start_point": [52, 12], "end_point": [52, 13], "text": " "}], "start_byte": 1944, "end_byte": 1945, "start_point": [52, 12], "end_point": [52, 13], "text": " "}, {"type": "=>", "children": [], "start_byte": 1946, "end_byte": 1948, "start_point": [52, 14], "end_point": [52, 16], "text": " I"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1949, "end_byte": 1950, "start_point": [52, 17], "end_point": [52, 18], "text": "_"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1967, "end_byte": 1974, "start_point": [53, 16], "end_point": [53, 23], "text": "u8_arra"}, {"type": "=", "children": [], "start_byte": 1975, "end_byte": 1976, "start_point": [53, 24], "end_point": [53, 25], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1977, "end_byte": 2000, "start_point": [53, 26], "end_point": [53, 49], "text": "034(name.clone().unwrap"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2000, "end_byte": 2001, "start_point": [53, 49], "end_point": [53, 50], "text": "_"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2001, "end_byte": 2005, "start_point": [53, 50], "end_point": [53, 54], "text": "or_d"}, {"type": ".", "children": [], "start_byte": 2005, "end_byte": 2006, "start_point": [53, 54], "end_point": [53, 55], "text": "e"}, {"type": "field_identifier", "children": [], "start_byte": 2006, "end_byte": 2011, "start_point": [53, 55], "end_point": [53, 60], "text": "fault"}], "start_byte": 2001, "end_byte": 2011, "start_point": [53, 50], "end_point": [53, 60], "text": "or_default"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2011, "end_byte": 2012, "start_point": [53, 60], "end_point": [53, 61], "text": "("}, {"type": ")", "children": [], "start_byte": 2012, "end_byte": 2013, "start_point": [53, 61], "end_point": [53, 62], "text": ")"}], "start_byte": 2011, "end_byte": 2013, "start_point": [53, 60], "end_point": [53, 62], "text": "()"}], "start_byte": 2001, "end_byte": 2013, "start_point": [53, 50], "end_point": [53, 62], "text": "or_default()"}, {"type": ".", "children": [], "start_byte": 2013, "end_byte": 2014, "start_point": [53, 62], "end_point": [53, 63], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 2014, "end_byte": 2031, "start_point": [53, 63], "end_point": [53, 80], "text": "to_string());\n   "}], "start_byte": 2001, "end_byte": 2031, "start_point": [53, 50], "end_point": [53, 80], "text": "or_default().to_string());\n   "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2031, "end_byte": 2032, "start_point": [53, 80], "end_point": [53, 81], "text": " "}, {"type": ")", "children": [], "start_byte": 2032, "end_byte": 2033, "start_point": [53, 81], "end_point": [53, 82], "text": " "}], "start_byte": 2031, "end_byte": 2033, "start_point": [53, 80], "end_point": [53, 82], "text": "  "}], "start_byte": 2001, "end_byte": 2033, "start_point": [53, 50], "end_point": [53, 82], "text": "or_default().to_string());\n     "}, {"type": ".", "children": [], "start_byte": 2033, "end_byte": 2034, "start_point": [53, 82], "end_point": [53, 83], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 2034, "end_byte": 2043, "start_point": [53, 83], "end_point": [53, 92], "text": "         "}], "start_byte": 2001, "end_byte": 2043, "start_point": [53, 50], "end_point": [53, 92], "text": "or_default().to_string());\n               "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2043, "end_byte": 2044, "start_point": [53, 92], "end_point": [53, 93], "text": " "}, {"type": ")", "children": [], "start_byte": 2044, "end_byte": 2045, "start_point": [53, 93], "end_point": [53, 94], "text": "O"}], "start_byte": 2043, "end_byte": 2045, "start_point": [53, 92], "end_point": [53, 94], "text": " O"}], "start_byte": 2001, "end_byte": 2045, "start_point": [53, 50], "end_point": [53, 94], "text": "or_default().to_string());\n                O"}, {"type": ")", "children": [], "start_byte": 2045, "end_byte": 2046, "start_point": [53, 94], "end_point": [53, 95], "text": "U"}], "start_byte": 2000, "end_byte": 2046, "start_point": [53, 49], "end_point": [53, 95], "text": "_or_default().to_string());\n                OU"}], "start_byte": 1977, "end_byte": 2046, "start_point": [53, 26], "end_point": [53, 95], "text": "034(name.clone().unwrap_or_default().to_string());\n                OU"}], "start_byte": 1967, "end_byte": 2046, "start_point": [53, 16], "end_point": [53, 95], "text": "u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OU"}, {"type": ";", "children": [], "start_byte": 2046, "end_byte": 2047, "start_point": [53, 95], "end_point": [53, 96], "text": "T"}], "start_byte": 1967, "end_byte": 2047, "start_point": [53, 16], "end_point": [53, 96], "text": "u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2064, "end_byte": 2072, "start_point": [54, 16], "end_point": [54, 24], "text": "_u8_arra"}, {"type": "=", "children": [], "start_byte": 2073, "end_byte": 2074, "start_point": [54, 25], "end_point": [54, 26], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2075, "end_byte": 2098, "start_point": [54, 27], "end_point": [54, 50], "text": "034(\"(stdout)\".to_strin"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2098, "end_byte": 2099, "start_point": [54, 50], "end_point": [54, 51], "text": "g"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 2099, "end_byte": 2100, "start_point": [54, 51], "end_point": [54, 52], "text": "("}, {"type": "\"", "children": [], "start_byte": 2108, "end_byte": 2109, "start_point": [54, 60], "end_point": [54, 61], "text": " "}], "start_byte": 2099, "end_byte": 2109, "start_point": [54, 51], "end_point": [54, 61], "text": "());\n     "}, {"type": ".", "children": [], "start_byte": 2109, "end_byte": 2110, "start_point": [54, 61], "end_point": [54, 62], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 2110, "end_byte": 2119, "start_point": [54, 62], "end_point": [54, 71], "text": "         "}], "start_byte": 2099, "end_byte": 2119, "start_point": [54, 51], "end_point": [54, 71], "text": "());\n               "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2119, "end_byte": 2120, "start_point": [54, 71], "end_point": [54, 72], "text": " "}, {"type": ")", "children": [], "start_byte": 2120, "end_byte": 2121, "start_point": [54, 72], "end_point": [54, 73], "text": "/"}], "start_byte": 2119, "end_byte": 2121, "start_point": [54, 71], "end_point": [54, 73], "text": " /"}], "start_byte": 2099, "end_byte": 2121, "start_point": [54, 51], "end_point": [54, 73], "text": "());\n                /"}, {"type": ")", "children": [], "start_byte": 2121, "end_byte": 2122, "start_point": [54, 73], "end_point": [54, 74], "text": "/"}], "start_byte": 2098, "end_byte": 2122, "start_point": [54, 50], "end_point": [54, 74], "text": "g());\n                //"}], "start_byte": 2075, "end_byte": 2122, "start_point": [54, 27], "end_point": [54, 74], "text": "034(\"(stdout)\".to_string());\n                //"}], "start_byte": 2064, "end_byte": 2122, "start_point": [54, 16], "end_point": [54, 74], "text": "_u8_array_1034(\"(stdout)\".to_string());\n                //"}, {"type": ";", "children": [], "start_byte": 2122, "end_byte": 2123, "start_point": [54, 74], "end_point": [54, 75], "text": " "}], "start_byte": 2064, "end_byte": 2123, "start_point": [54, 16], "end_point": [54, 75], "text": "_u8_array_1034(\"(stdout)\".to_string());\n                // "}, {"type": "line_comment", "children": [], "start_byte": 2140, "end_byte": 2158, "start_point": [55, 16], "end_point": [55, 34], "text": "           }\n     "}, {"type": "}", "children": [], "start_byte": 2171, "end_byte": 2172, "start_point": [56, 12], "end_point": [56, 13], "text": "a"}], "start_byte": 1949, "end_byte": 2172, "start_point": [52, 17], "end_point": [56, 13], "text": "_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => pa"}], "start_byte": 1944, "end_byte": 2172, "start_point": [52, 12], "end_point": [56, 13], "text": "   IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => pa"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "_", "children": [], "start_byte": 2185, "end_byte": 2186, "start_point": [57, 12], "end_point": [57, 13], "text": "s"}], "start_byte": 2185, "end_byte": 2186, "start_point": [57, 12], "end_point": [57, 13], "text": "s"}, {"type": "=>", "children": [], "start_byte": 2187, "end_byte": 2189, "start_point": [57, 14], "end_point": [57, 16], "text": " b"}, {"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 2190, "end_byte": 2195, "start_point": [57, 17], "end_point": [57, 22], "text": "d src"}, {"type": "!", "children": [], "start_byte": 2195, "end_byte": 2196, "start_point": [57, 22], "end_point": [57, 23], "text": "M"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2196, "end_byte": 2197, "start_point": [57, 23], "end_point": [57, 24], "text": "o"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 2197, "end_byte": 2198, "start_point": [57, 24], "end_point": [57, 25], "text": "d"}, {"type": "\"", "children": [], "start_byte": 2219, "end_byte": 2220, "start_point": [57, 46], "end_point": [57, 47], "text": " "}], "start_byte": 2197, "end_byte": 2220, "start_point": [57, 24], "end_point": [57, 47], "text": "de\"),\n        }\n    \n  "}, {"type": ")", "children": [], "start_byte": 2220, "end_byte": 2221, "start_point": [57, 47], "end_point": [57, 48], "text": " "}], "start_byte": 2196, "end_byte": 2221, "start_point": [57, 23], "end_point": [57, 48], "text": "ode\"),\n        }\n    \n   "}], "start_byte": 2190, "end_byte": 2221, "start_point": [57, 17], "end_point": [57, 48], "text": "d srcMode\"),\n        }\n    \n   "}, {"type": ",", "children": [], "start_byte": 2221, "end_byte": 2222, "start_point": [57, 48], "end_point": [57, 49], "text": " "}], "start_byte": 2185, "end_byte": 2222, "start_point": [57, 12], "end_point": [57, 49], "text": "s: bad srcMode\"),\n        }\n    \n    "}, {"type": "}", "children": [], "start_byte": 2231, "end_byte": 2232, "start_point": [58, 8], "end_point": [58, 9], "text": "e"}], "start_byte": 1435, "end_byte": 2232, "start_point": [41, 23], "end_point": [58, 9], "text": "\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Che"}], "start_byte": 1420, "end_byte": 2232, "start_point": [41, 8], "end_point": [58, 9], "text": "         1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Che"}], "start_byte": 1420, "end_byte": 2232, "start_point": [41, 8], "end_point": [58, 9], "text": "         1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Che"}, {"type": "line_comment", "children": [], "start_byte": 2246, "end_byte": 2275, "start_point": [60, 8], "end_point": [60, 37], "text": "le exists\n        // \u901a\u8fc7\u8c03\u7528 as_"}, {"type": "line_comment", "children": [], "start_byte": 2284, "end_byte": 2356, "start_point": [61, 8], "end_point": [61, 80], "text": "\u8fd9\u4e2a String \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\n        if SRC_MODE != 1 && !Path::new(u8_array_to_st"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 2365, "end_byte": 2367, "start_point": [62, 8], "end_point": [62, 10], "text": "NA"}, {"type": "binary_expression", "children": [{"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2368, "end_byte": 2376, "start_point": [62, 11], "end_point": [62, 19], "text": "E).as_st"}, {"type": "!=", "children": [], "start_byte": 2377, "end_byte": 2379, "start_point": [62, 20], "end_point": [62, 22], "text": "()"}, {"type": "integer_literal", "children": [], "start_byte": 2380, "end_byte": 2381, "start_point": [62, 23], "end_point": [62, 24], "text": "."}], "start_byte": 2368, "end_byte": 2381, "start_point": [62, 11], "end_point": [62, 24], "text": "E).as_str())."}, {"type": "&&", "children": [], "start_byte": 2382, "end_byte": 2384, "start_point": [62, 25], "end_point": [62, 27], "text": "xi"}, {"type": "unary_expression", "children": [{"type": "!", "children": [], "start_byte": 2385, "end_byte": 2386, "start_point": [62, 28], "end_point": [62, 29], "text": "t"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 2386, "end_byte": 2390, "start_point": [62, 29], "end_point": [62, 33], "text": "s() "}, {"type": "::", "children": [], "start_byte": 2390, "end_byte": 2392, "start_point": [62, 33], "end_point": [62, 35], "text": "{\n"}, {"type": "identifier", "children": [], "start_byte": 2392, "end_byte": 2395, "start_point": [62, 35], "end_point": [62, 38], "text": "   "}], "start_byte": 2386, "end_byte": 2395, "start_point": [62, 29], "end_point": [62, 38], "text": "s() {\n   "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2395, "end_byte": 2396, "start_point": [62, 38], "end_point": [62, 39], "text": " "}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 2396, "end_byte": 2414, "start_point": [62, 39], "end_point": [62, 57], "text": "        eprintln!("}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2414, "end_byte": 2415, "start_point": [62, 57], "end_point": [62, 58], "text": "\""}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 2415, "end_byte": 2416, "start_point": [62, 58], "end_point": [62, 59], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 2416, "end_byte": 2423, "start_point": [62, 59], "end_point": [62, 66], "text": "}: Can'"}], "start_byte": 2415, "end_byte": 2423, "start_point": [62, 58], "end_point": [62, 66], "text": "{}: Can'"}, {"type": ")", "children": [], "start_byte": 2423, "end_byte": 2424, "start_point": [62, 66], "end_point": [62, 67], "text": "t"}], "start_byte": 2414, "end_byte": 2424, "start_point": [62, 57], "end_point": [62, 67], "text": "\"{}: Can't"}], "start_byte": 2396, "end_byte": 2424, "start_point": [62, 39], "end_point": [62, 67], "text": "        eprintln!(\"{}: Can't"}, {"type": ".", "children": [], "start_byte": 2424, "end_byte": 2425, "start_point": [62, 67], "end_point": [62, 68], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 2425, "end_byte": 2431, "start_point": [62, 68], "end_point": [62, 74], "text": "open i"}], "start_byte": 2396, "end_byte": 2431, "start_point": [62, 39], "end_point": [62, 74], "text": "        eprintln!(\"{}: Can't open i"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2431, "end_byte": 2432, "start_point": [62, 74], "end_point": [62, 75], "text": "n"}, {"type": ")", "children": [], "start_byte": 2432, "end_byte": 2433, "start_point": [62, 75], "end_point": [62, 76], "text": "p"}], "start_byte": 2431, "end_byte": 2433, "start_point": [62, 74], "end_point": [62, 76], "text": "np"}], "start_byte": 2396, "end_byte": 2433, "start_point": [62, 39], "end_point": [62, 76], "text": "        eprintln!(\"{}: Can't open inp"}, {"type": ")", "children": [], "start_byte": 2433, "end_byte": 2434, "start_point": [62, 76], "end_point": [62, 77], "text": "u"}], "start_byte": 2395, "end_byte": 2434, "start_point": [62, 38], "end_point": [62, 77], "text": "         eprintln!(\"{}: Can't open inpu"}], "start_byte": 2386, "end_byte": 2434, "start_point": [62, 29], "end_point": [62, 77], "text": "s() {\n            eprintln!(\"{}: Can't open inpu"}, {"type": ".", "children": [], "start_byte": 2434, "end_byte": 2435, "start_point": [62, 77], "end_point": [62, 78], "text": "t"}, {"type": "field_identifier", "children": [], "start_byte": 2435, "end_byte": 2441, "start_point": [62, 78], "end_point": [62, 84], "text": " file "}], "start_byte": 2386, "end_byte": 2441, "start_point": [62, 29], "end_point": [62, 84], "text": "s() {\n            eprintln!(\"{}: Can't open input file "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2441, "end_byte": 2442, "start_point": [62, 84], "end_point": [62, 85], "text": "{"}, {"type": ")", "children": [], "start_byte": 2442, "end_byte": 2443, "start_point": [62, 85], "end_point": [62, 86], "text": "}"}], "start_byte": 2441, "end_byte": 2443, "start_point": [62, 84], "end_point": [62, 86], "text": "{}"}], "start_byte": 2386, "end_byte": 2443, "start_point": [62, 29], "end_point": [62, 86], "text": "s() {\n            eprintln!(\"{}: Can't open input file {}"}], "start_byte": 2385, "end_byte": 2443, "start_point": [62, 28], "end_point": [62, 86], "text": "ts() {\n            eprintln!(\"{}: Can't open input file {}"}], "start_byte": 2368, "end_byte": 2443, "start_point": [62, 11], "end_point": [62, 86], "text": "E).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 2444, "end_byte": 2445, "start_point": [62, 87], "end_point": [62, 88], "text": " "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 2458, "end_byte": 2466, "start_point": [63, 12], "end_point": [63, 20], "text": "or direc"}, {"type": "!", "children": [], "start_byte": 2466, "end_byte": 2467, "start_point": [63, 20], "end_point": [63, 21], "text": "t"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2467, "end_byte": 2468, "start_point": [63, 21], "end_point": [63, 22], "text": "o"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 2468, "end_byte": 2469, "start_point": [63, 22], "end_point": [63, 23], "text": "r"}, {"type": "\"", "children": [], "start_byte": 2524, "end_byte": 2525, "start_point": [63, 78], "end_point": [63, 79], "text": "g"}], "start_byte": 2468, "end_byte": 2525, "start_point": [63, 22], "end_point": [63, 79], "text": "ry\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2527, "end_byte": 2528, "start_point": [63, 81], "end_point": [63, 82], "text": "I"}, {"type": "identifier", "children": [], "start_byte": 2528, "end_byte": 2546, "start_point": [63, 82], "end_point": [63, 100], "text": "N_NAME));\n        "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2546, "end_byte": 2547, "start_point": [63, 100], "end_point": [63, 101], "text": " "}, {"type": "identifier", "children": [], "start_byte": 2548, "end_byte": 2557, "start_point": [63, 102], "end_point": [63, 111], "text": "  process"}, {"type": ")", "children": [], "start_byte": 2557, "end_byte": 2558, "start_point": [63, 111], "end_point": [63, 112], "text": ":"}], "start_byte": 2546, "end_byte": 2558, "start_point": [63, 100], "end_point": [63, 112], "text": "    process:"}, {"type": ")", "children": [], "start_byte": 2558, "end_byte": 2559, "start_point": [63, 112], "end_point": [63, 113], "text": ":"}], "start_byte": 2527, "end_byte": 2559, "start_point": [63, 81], "end_point": [63, 113], "text": "IN_NAME));\n            process::"}, {"type": "identifier", "children": [], "start_byte": 2561, "end_byte": 2579, "start_point": [63, 115], "end_point": [63, 133], "text": "it(1);\n        }\n\n"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 2579, "end_byte": 2580, "start_point": [63, 133], "end_point": [63, 134], "text": " "}, {"type": "identifier", "children": [], "start_byte": 2581, "end_byte": 2588, "start_point": [63, 135], "end_point": [63, 142], "text": "      /"}, {"type": ")", "children": [], "start_byte": 2588, "end_byte": 2589, "start_point": [63, 142], "end_point": [63, 143], "text": "/"}], "start_byte": 2579, "end_byte": 2589, "start_point": [63, 133], "end_point": [63, 143], "text": "        //"}, {"type": ")", "children": [], "start_byte": 2589, "end_byte": 2590, "start_point": [63, 143], "end_point": [63, 144], "text": " "}], "start_byte": 2467, "end_byte": 2590, "start_point": [63, 21], "end_point": [63, 144], "text": "ory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // "}], "start_byte": 2458, "end_byte": 2590, "start_point": [63, 12], "end_point": [63, 144], "text": "or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // "}, {"type": ";", "children": [], "start_byte": 2590, "end_byte": 2591, "start_point": [63, 144], "end_point": [63, 145], "text": "O"}], "start_byte": 2458, "end_byte": 2591, "start_point": [63, 12], "end_point": [63, 145], "text": "or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // O"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 2604, "end_byte": 2611, "start_point": [64, 12], "end_point": [64, 19], "text": " output"}, {"type": "::", "children": [], "start_byte": 2611, "end_byte": 2613, "start_point": [64, 19], "end_point": [64, 21], "text": " f"}, {"type": "identifier", "children": [], "start_byte": 2613, "end_byte": 2617, "start_point": [64, 21], "end_point": [64, 25], "text": "iles"}], "start_byte": 2604, "end_byte": 2617, "start_point": [64, 12], "end_point": [64, 25], "text": " output files"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 2617, "end_byte": 2618, "start_point": [64, 25], "end_point": [64, 26], "text": "\n"}, {"type": "integer_literal", "children": [], "start_byte": 2618, "end_byte": 2619, "start_point": [64, 26], "end_point": [64, 27], "text": " "}, {"type": ")", "children": [], "start_byte": 2619, "end_byte": 2620, "start_point": [64, 27], "end_point": [64, 28], "text": " "}], "start_byte": 2617, "end_byte": 2620, "start_point": [64, 25], "end_point": [64, 28], "text": "\n  "}], "start_byte": 2604, "end_byte": 2620, "start_point": [64, 12], "end_point": [64, 28], "text": " output files\n  "}, {"type": ";", "children": [], "start_byte": 2620, "end_byte": 2621, "start_point": [64, 28], "end_point": [64, 29], "text": " "}], "start_byte": 2604, "end_byte": 2621, "start_point": [64, 12], "end_point": [64, 29], "text": " output files\n   "}, {"type": "}", "children": [], "start_byte": 2630, "end_byte": 2631, "start_point": [65, 8], "end_point": [65, 9], "text": "e"}], "start_byte": 2444, "end_byte": 2631, "start_point": [62, 87], "end_point": [65, 9], "text": " No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // le"}], "start_byte": 2365, "end_byte": 2631, "start_point": [62, 8], "end_point": [65, 9], "text": "NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // le"}], "start_byte": 2365, "end_byte": 2631, "start_point": [62, 8], "end_point": [65, 9], "text": "NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // le"}, {"type": "line_comment", "children": [], "start_byte": 2641, "end_byte": 2671, "start_point": [67, 8], "end_point": [67, 38], "text": "= match SRC_MODE {\n        // "}, {"type": "line_comment", "children": [], "start_byte": 2680, "end_byte": 2713, "start_point": [68, 8], "end_point": [68, 41], "text": "io::stdin(),\n        //     _ => "}, {"type": "line_comment", "children": [], "start_byte": 2722, "end_byte": 2746, "start_point": [69, 8], "end_point": [69, 32], "text": ":open(&IN_NAME)?,\n      "}, {"type": "line_comment", "children": [], "start_byte": 2755, "end_byte": 2793, "start_point": [70, 8], "end_point": [70, 46], "text": "       // let out_file = match SRC_MOD"}, {"type": "line_comment", "children": [], "start_byte": 2802, "end_byte": 2807, "start_point": [71, 8], "end_point": [71, 13], "text": "   //"}, {"type": "line_comment", "children": [], "start_byte": 2816, "end_byte": 2850, "start_point": [72, 8], "end_point": [72, 42], "text": "2 => io::stdout(),\n        //     "}, {"type": "line_comment", "children": [], "start_byte": 2859, "end_byte": 2888, "start_point": [73, 8], "end_point": [73, 37], "text": "File::create(&OUT_NAME)?,\n   "}, {"type": "line_comment", "children": [], "start_byte": 2897, "end_byte": 2938, "start_point": [74, 8], "end_point": [74, 49], "text": ";\n\n        let mut in_file: Option<File> "}, {"type": "line_comment", "children": [], "start_byte": 2947, "end_byte": 2952, "start_point": [75, 8], "end_point": [75, 13], "text": "     "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 2962, "end_byte": 2965, "start_point": [77, 8], "end_point": [77, 11], "text": "out"}, {"type": "mutable_specifier", "children": [], "start_byte": 2966, "end_byte": 2969, "start_point": [77, 12], "end_point": [77, 15], "text": "fil"}, {"type": "identifier", "children": [], "start_byte": 2970, "end_byte": 2977, "start_point": [77, 16], "end_point": [77, 23], "text": ": Optio"}, {"type": ":", "children": [], "start_byte": 2977, "end_byte": 2978, "start_point": [77, 23], "end_point": [77, 24], "text": "n"}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 2979, "end_byte": 2985, "start_point": [77, 25], "end_point": [77, 31], "text": "File> "}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 2985, "end_byte": 2986, "start_point": [77, 31], "end_point": [77, 32], "text": "="}, {"type": "type_identifier", "children": [], "start_byte": 2986, "end_byte": 2990, "start_point": [77, 32], "end_point": [77, 36], "text": " Non"}, {"type": ">", "children": [], "start_byte": 2990, "end_byte": 2991, "start_point": [77, 36], "end_point": [77, 37], "text": "e"}], "start_byte": 2985, "end_byte": 2991, "start_point": [77, 31], "end_point": [77, 37], "text": "= None"}], "start_byte": 2979, "end_byte": 2991, "start_point": [77, 25], "end_point": [77, 37], "text": "File> = None"}, {"type": "=", "children": [], "start_byte": 2992, "end_byte": 2993, "start_point": [77, 38], "end_point": [77, 39], "text": "\n"}, {"type": "identifier", "children": [], "start_byte": 2994, "end_byte": 2998, "start_point": [77, 40], "end_point": [77, 44], "text": "    "}, {"type": ";", "children": [], "start_byte": 2998, "end_byte": 2999, "start_point": [77, 44], "end_point": [77, 45], "text": " "}], "start_byte": 2962, "end_byte": 2999, "start_point": [77, 8], "end_point": [77, 45], "text": "out_file: Option<File> = None;\n      "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 3008, "end_byte": 3011, "start_point": [78, 8], "end_point": [78, 11], "text": "Som"}, {"type": "mutable_specifier", "children": [], "start_byte": 3012, "end_byte": 3015, "start_point": [78, 12], "end_point": [78, 15], "text": "(n)"}, {"type": "identifier", "children": [], "start_byte": 3016, "end_byte": 3024, "start_point": [78, 16], "end_point": [78, 24], "text": "= name {"}, {"type": ":", "children": [], "start_byte": 3024, "end_byte": 3025, "start_point": [78, 24], "end_point": [78, 25], "text": "\n"}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 3026, "end_byte": 3032, "start_point": [78, 26], "end_point": [78, 32], "text": "      "}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 3032, "end_byte": 3033, "start_point": [78, 32], "end_point": [78, 33], "text": " "}, {"type": "type_identifier", "children": [], "start_byte": 3033, "end_byte": 3037, "start_point": [78, 33], "end_point": [78, 37], "text": "    "}, {"type": ">", "children": [], "start_byte": 3037, "end_byte": 3038, "start_point": [78, 37], "end_point": [78, 38], "text": "/"}], "start_byte": 3032, "end_byte": 3038, "start_point": [78, 32], "end_point": [78, 38], "text": "     /"}], "start_byte": 3026, "end_byte": 3038, "start_point": [78, 26], "end_point": [78, 38], "text": "           /"}, {"type": "=", "children": [], "start_byte": 3039, "end_byte": 3040, "start_point": [78, 39], "end_point": [78, 40], "text": " "}, {"type": "identifier", "children": [], "start_byte": 3041, "end_byte": 3045, "start_point": [78, 41], "end_point": [78, 45], "text": "rint"}, {"type": ";", "children": [], "start_byte": 3045, "end_byte": 3046, "start_point": [78, 45], "end_point": [78, 46], "text": "l"}], "start_byte": 3008, "end_byte": 3046, "start_point": [78, 8], "end_point": [78, 46], "text": "Some(n) = name {\n            // printl"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 3055, "end_byte": 3057, "start_point": [79, 8], "end_point": [79, 10], "text": "es"}, {"type": "let_condition", "children": [{"type": "let", "children": [], "start_byte": 3058, "end_byte": 3061, "start_point": [79, 11], "end_point": [79, 14], "text": "ing"}, {"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 3062, "end_byte": 3066, "start_point": [79, 15], "end_point": [79, 19], "text": "file"}, {"type": "(", "children": [], "start_byte": 3066, "end_byte": 3067, "start_point": [79, 19], "end_point": [79, 20], "text": ":"}, {"type": "identifier", "children": [], "start_byte": 3067, "end_byte": 3068, "start_point": [79, 20], "end_point": [79, 21], "text": " "}, {"type": ")", "children": [], "start_byte": 3068, "end_byte": 3069, "start_point": [79, 21], "end_point": [79, 22], "text": "{"}], "start_byte": 3062, "end_byte": 3069, "start_point": [79, 15], "end_point": [79, 22], "text": "file: {"}, {"type": "=", "children": [], "start_byte": 3070, "end_byte": 3071, "start_point": [79, 23], "end_point": [79, 24], "text": "\""}, {"type": "identifier", "children": [], "start_byte": 3072, "end_byte": 3076, "start_point": [79, 25], "end_point": [79, 29], "text": " n);"}], "start_byte": 3058, "end_byte": 3076, "start_point": [79, 11], "end_point": [79, 29], "text": "ing file: {}\", n);"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 3077, "end_byte": 3078, "start_point": [79, 30], "end_point": [79, 31], "text": " "}, {"type": "line_comment", "children": [], "start_byte": 3091, "end_byte": 3130, "start_point": [80, 12], "end_point": [80, 51], "text": " \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_"}, {"type": "line_comment", "children": [], "start_byte": 3143, "end_byte": 3196, "start_point": [81, 12], "end_point": [81, 65], "text": "ile::open(n)?);\n        } else {\n            // print"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3209, "end_byte": 3216, "start_point": [82, 12], "end_point": [82, 19], "text": "name pr"}, {"type": "=", "children": [], "start_byte": 3217, "end_byte": 3218, "start_point": [82, 20], "end_point": [82, 21], "text": "v"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3219, "end_byte": 3223, "start_point": [82, 22], "end_point": [82, 26], "text": "ded\""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3223, "end_byte": 3224, "start_point": [82, 26], "end_point": [82, 27], "text": ")"}, {"type": "try_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 3224, "end_byte": 3228, "start_point": [82, 27], "end_point": [82, 31], "text": ";\n  "}, {"type": "::", "children": [], "start_byte": 3228, "end_byte": 3230, "start_point": [82, 31], "end_point": [82, 33], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 3230, "end_byte": 3234, "start_point": [82, 33], "end_point": [82, 37], "text": "    "}], "start_byte": 3224, "end_byte": 3234, "start_point": [82, 27], "end_point": [82, 37], "text": ";\n        "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3234, "end_byte": 3235, "start_point": [82, 37], "end_point": [82, 38], "text": "}"}, {"type": "identifier", "children": [], "start_byte": 3235, "end_byte": 3236, "start_point": [82, 38], "end_point": [82, 39], "text": "\n"}, {"type": ")", "children": [], "start_byte": 3236, "end_byte": 3237, "start_point": [82, 39], "end_point": [82, 40], "text": " "}], "start_byte": 3234, "end_byte": 3237, "start_point": [82, 37], "end_point": [82, 40], "text": "}\n "}], "start_byte": 3224, "end_byte": 3237, "start_point": [82, 27], "end_point": [82, 40], "text": ";\n        }\n "}, {"type": "?", "children": [], "start_byte": 3237, "end_byte": 3238, "start_point": [82, 40], "end_point": [82, 41], "text": " "}], "start_byte": 3224, "end_byte": 3238, "start_point": [82, 27], "end_point": [82, 41], "text": ";\n        }\n  "}, {"type": ")", "children": [], "start_byte": 3238, "end_byte": 3239, "start_point": [82, 41], "end_point": [82, 42], "text": " "}], "start_byte": 3223, "end_byte": 3239, "start_point": [82, 26], "end_point": [82, 42], "text": ");\n        }\n   "}], "start_byte": 3219, "end_byte": 3239, "start_point": [82, 22], "end_point": [82, 42], "text": "ded\");\n        }\n   "}], "start_byte": 3209, "end_byte": 3239, "start_point": [82, 12], "end_point": [82, 42], "text": "name provided\");\n        }\n   "}, {"type": ";", "children": [], "start_byte": 3239, "end_byte": 3240, "start_point": [82, 42], "end_point": [82, 43], "text": " "}], "start_byte": 3209, "end_byte": 3240, "start_point": [82, 12], "end_point": [82, 43], "text": "name provided\");\n        }\n    "}, {"type": "}", "children": [], "start_byte": 3249, "end_byte": 3250, "start_point": [83, 8], "end_point": [83, 9], "text": " "}], "start_byte": 3077, "end_byte": 3250, "start_point": [79, 30], "end_point": [83, 9], "text": "            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n      "}, {"type": "else_clause", "children": [{"type": "else", "children": [], "start_byte": 3251, "end_byte": 3255, "start_point": [83, 10], "end_point": [83, 14], "text": " if "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 3256, "end_byte": 3257, "start_point": [83, 15], "end_point": [83, 16], "text": "a"}, {"type": "line_comment", "children": [], "start_byte": 3270, "end_byte": 3307, "start_point": [84, 12], "end_point": [84, 49], "text": "&& SRC_MODE != 1 {\n            panic!"}, {"type": "}", "children": [], "start_byte": 3316, "end_byte": 3317, "start_point": [85, 8], "end_point": [85, 9], "text": "s"}], "start_byte": 3256, "end_byte": 3317, "start_point": [83, 15], "end_point": [85, 9], "text": "ame.is_none() && SRC_MODE != 1 {\n            panic!(\"compress"}], "start_byte": 3251, "end_byte": 3317, "start_point": [83, 10], "end_point": [85, 9], "text": " if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress"}], "start_byte": 3055, "end_byte": 3317, "start_point": [79, 8], "end_point": [85, 9], "text": "essing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress"}], "start_byte": 3055, "end_byte": 3317, "start_point": [79, 8], "end_point": [85, 9], "text": "essing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 3334, "end_byte": 3336, "start_point": [90, 8], "end_point": [90, 10], "text": "  "}, {"type": "binary_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3337, "end_byte": 3341, "start_point": [90, 11], "end_point": [90, 15], "text": "   }"}, {"type": ".", "children": [], "start_byte": 3341, "end_byte": 3342, "start_point": [90, 15], "end_point": [90, 16], "text": "\n"}, {"type": "field_identifier", "children": [], "start_byte": 3342, "end_byte": 3349, "start_point": [90, 16], "end_point": [90, 23], "text": "       "}], "start_byte": 3337, "end_byte": 3349, "start_point": [90, 11], "end_point": [90, 23], "text": "   }\n       "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3349, "end_byte": 3350, "start_point": [90, 23], "end_point": [90, 24], "text": " "}, {"type": ")", "children": [], "start_byte": 3350, "end_byte": 3351, "start_point": [90, 24], "end_point": [90, 25], "text": "/"}], "start_byte": 3349, "end_byte": 3351, "start_point": [90, 23], "end_point": [90, 25], "text": " /"}], "start_byte": 3337, "end_byte": 3351, "start_point": [90, 11], "end_point": [90, 25], "text": "   }\n        /"}, {"type": "&&", "children": [], "start_byte": 3352, "end_byte": 3354, "start_point": [90, 26], "end_point": [90, 28], "text": " p"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3355, "end_byte": 3363, "start_point": [90, 29], "end_point": [90, 37], "text": "intln!(\""}, {"type": "!=", "children": [], "start_byte": 3364, "end_byte": 3366, "start_point": [90, 38], "end_point": [90, 40], "text": "er"}, {"type": "integer_literal", "children": [], "start_byte": 3367, "end_byte": 3368, "start_point": [90, 41], "end_point": [90, 42], "text": "\ud83d\udcaa"}], "start_byte": 3355, "end_byte": 3368, "start_point": [90, 29], "end_point": [90, 42], "text": "intln!(\"Here\ud83d\udcaa"}], "start_byte": 3337, "end_byte": 3368, "start_point": [90, 11], "end_point": [90, 42], "text": "   }\n        // println!(\"Here\ud83d\udcaa"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 3369, "end_byte": 3370, "start_point": [90, 43], "end_point": [90, 44], "text": ")"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 3383, "end_byte": 3388, "start_point": [91, 12], "end_point": [91, 17], "text": "\u8fd9\u91cc\uff0cIN"}, {"type": "!", "children": [], "start_byte": 3388, "end_byte": 3389, "start_point": [91, 17], "end_point": [91, 18], "text": "_"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 3389, "end_byte": 3390, "start_point": [91, 18], "end_point": [91, 19], "text": "N"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 3390, "end_byte": 3391, "start_point": [91, 19], "end_point": [91, 20], "text": "A"}, {"type": "\"", "children": [], "start_byte": 3410, "end_byte": 3411, "start_point": [91, 39], "end_point": [91, 40], "text": "\n"}], "start_byte": 3390, "end_byte": 3411, "start_point": [91, 19], "end_point": [91, 40], "text": "AME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n"}, {"type": ")", "children": [], "start_byte": 3411, "end_byte": 3412, "start_point": [91, 40], "end_point": [91, 41], "text": " "}], "start_byte": 3389, "end_byte": 3412, "start_point": [91, 18], "end_point": [91, 41], "text": "NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n "}], "start_byte": 3383, "end_byte": 3412, "start_point": [91, 12], "end_point": [91, 41], "text": "\u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n "}, {"type": ";", "children": [], "start_byte": 3412, "end_byte": 3413, "start_point": [91, 41], "end_point": [91, 42], "text": " "}], "start_byte": 3383, "end_byte": 3413, "start_point": [91, 12], "end_point": [91, 42], "text": "\u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n  "}, {"type": "}", "children": [], "start_byte": 3422, "end_byte": 3423, "start_point": [92, 8], "end_point": [92, 9], "text": "\u4f46"}], "start_byte": 3369, "end_byte": 3423, "start_point": [90, 43], "end_point": [92, 9], "text": ");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46"}], "start_byte": 3334, "end_byte": 3423, "start_point": [90, 8], "end_point": [92, 9], "text": "      }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46"}], "start_byte": 3334, "end_byte": 3423, "start_point": [90, 8], "end_point": [92, 9], "text": "      }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46"}, {"type": "line_comment", "children": [], "start_byte": 3432, "end_byte": 3456, "start_point": [93, 8], "end_point": [93, 32], "text": "E \u662f\u57fa\u4e8e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff08\u4ee5 NUL \u5b57\u8282\u7ed3"}, {"type": "line_comment", "children": [], "start_byte": 3465, "end_byte": 3521, "start_point": [94, 8], "end_point": [94, 64], "text": "   // \u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a NUL \u5b57\u8282\u3002\n        let in_name_str = IN"}, {"type": "line_comment", "children": [], "start_byte": 3530, "end_byte": 3610, "start_point": [95, 8], "end_point": [95, 88], "text": "         .iter()\n            .take_while(|&&c| c != 0) // \u53ea\u53d6\u76f4\u5230 NUL \u5b57\u8282\u4e4b\u524d\u7684\u90e8\u5206\n     "}, {"type": "line_comment", "children": [], "start_byte": 3619, "end_byte": 3675, "start_point": [96, 8], "end_point": [96, 64], "text": "ap(|&c| c as char)\n            .collect::<String>();\n\n  "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 3684, "end_byte": 3687, "start_point": [97, 8], "end_point": [97, 11], "text": " ou"}, {"type": "identifier", "children": [], "start_byte": 3688, "end_byte": 3699, "start_point": [97, 12], "end_point": [97, 23], "text": "_name_str ="}, {"type": "=", "children": [], "start_byte": 3700, "end_byte": 3701, "start_point": [97, 24], "end_point": [97, 25], "text": "f"}, {"type": "call_expression", "children": [{"type": "generic_function", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3702, "end_byte": 3709, "start_point": [97, 26], "end_point": [97, 33], "text": "rmat!(\""}, {"type": ".", "children": [], "start_byte": 3722, "end_byte": 3723, "start_point": [98, 12], "end_point": [98, 13], "text": "a"}, {"type": "field_identifier", "children": [], "start_byte": 3723, "end_byte": 3727, "start_point": [98, 13], "end_point": [98, 17], "text": "me_s"}], "start_byte": 3702, "end_byte": 3727, "start_point": [97, 26], "end_point": [98, 17], "text": "rmat!(\"{}.bz2\", in_name_s"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3727, "end_byte": 3728, "start_point": [98, 17], "end_point": [98, 18], "text": "t"}, {"type": ")", "children": [], "start_byte": 3728, "end_byte": 3729, "start_point": [98, 18], "end_point": [98, 19], "text": "r"}], "start_byte": 3727, "end_byte": 3729, "start_point": [98, 17], "end_point": [98, 19], "text": "tr"}], "start_byte": 3702, "end_byte": 3729, "start_point": [97, 26], "end_point": [98, 19], "text": "rmat!(\"{}.bz2\", in_name_str"}, {"type": ".", "children": [], "start_byte": 3742, "end_byte": 3743, "start_point": [99, 12], "end_point": [99, 13], "text": "\n"}, {"type": "field_identifier", "children": [], "start_byte": 3743, "end_byte": 3753, "start_point": [99, 13], "end_point": [99, 23], "text": "        //"}], "start_byte": 3702, "end_byte": 3753, "start_point": [97, 26], "end_point": [99, 23], "text": "rmat!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        //"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3753, "end_byte": 3754, "start_point": [99, 23], "end_point": [99, 24], "text": " "}, {"type": "closure_expression", "children": [{"type": "closure_parameters", "children": [{"type": "|", "children": [], "start_byte": 3754, "end_byte": 3755, "start_point": [99, 24], "end_point": [99, 25], "text": "p"}, {"type": "reference_pattern", "children": [{"type": "&", "children": [], "start_byte": 3755, "end_byte": 3756, "start_point": [99, 25], "end_point": [99, 26], "text": "r"}, {"type": "reference_pattern", "children": [{"type": "&", "children": [], "start_byte": 3756, "end_byte": 3757, "start_point": [99, 26], "end_point": [99, 27], "text": "i"}, {"type": "identifier", "children": [], "start_byte": 3757, "end_byte": 3758, "start_point": [99, 27], "end_point": [99, 28], "text": "n"}], "start_byte": 3756, "end_byte": 3758, "start_point": [99, 26], "end_point": [99, 28], "text": "in"}], "start_byte": 3755, "end_byte": 3758, "start_point": [99, 25], "end_point": [99, 28], "text": "rin"}, {"type": "|", "children": [], "start_byte": 3758, "end_byte": 3759, "start_point": [99, 28], "end_point": [99, 29], "text": "t"}], "start_byte": 3754, "end_byte": 3759, "start_point": [99, 24], "end_point": [99, 29], "text": "print"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3760, "end_byte": 3761, "start_point": [99, 30], "end_point": [99, 31], "text": "n"}, {"type": "!=", "children": [], "start_byte": 3762, "end_byte": 3764, "start_point": [99, 32], "end_point": [99, 34], "text": "(\""}, {"type": "integer_literal", "children": [], "start_byte": 3765, "end_byte": 3766, "start_point": [99, 35], "end_point": [99, 36], "text": " "}], "start_byte": 3760, "end_byte": 3766, "start_point": [99, 30], "end_point": [99, 36], "text": "n!(\"\ud83d\udc26 "}], "start_byte": 3754, "end_byte": 3766, "start_point": [99, 24], "end_point": [99, 36], "text": "println!(\"\ud83d\udc26 "}, {"type": ")", "children": [], "start_byte": 3766, "end_byte": 3767, "start_point": [99, 36], "end_point": [99, 37], "text": "i"}], "start_byte": 3753, "end_byte": 3767, "start_point": [99, 23], "end_point": [99, 37], "text": " println!(\"\ud83d\udc26 i"}], "start_byte": 3702, "end_byte": 3767, "start_point": [97, 26], "end_point": [99, 37], "text": "rmat!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 i"}, {"type": "line_comment", "children": [], "start_byte": 3768, "end_byte": 3809, "start_point": [99, 38], "end_point": [99, 79], "text": "_name_str: {}; out_name_str: {}\",in_name_"}, {"type": ".", "children": [], "start_byte": 3822, "end_byte": 3823, "start_point": [100, 12], "end_point": [100, 13], "text": "_"}, {"type": "field_identifier", "children": [], "start_byte": 3823, "end_byte": 3826, "start_point": [100, 13], "end_point": [100, 16], "text": "str"}], "start_byte": 3702, "end_byte": 3826, "start_point": [97, 26], "end_point": [100, 16], "text": "rmat!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3826, "end_byte": 3827, "start_point": [100, 16], "end_point": [100, 17], "text": ")"}, {"type": "closure_expression", "children": [{"type": "closure_parameters", "children": [{"type": "|", "children": [], "start_byte": 3827, "end_byte": 3828, "start_point": [100, 17], "end_point": [100, 18], "text": ";"}, {"type": "reference_pattern", "children": [{"type": "&", "children": [], "start_byte": 3828, "end_byte": 3829, "start_point": [100, 18], "end_point": [100, 19], "text": "\n"}, {"type": "identifier", "children": [], "start_byte": 3829, "end_byte": 3830, "start_point": [100, 19], "end_point": [100, 20], "text": "\n"}], "start_byte": 3828, "end_byte": 3830, "start_point": [100, 18], "end_point": [100, 20], "text": "\n\n"}, {"type": "|", "children": [], "start_byte": 3830, "end_byte": 3831, "start_point": [100, 20], "end_point": [100, 21], "text": " "}], "start_byte": 3827, "end_byte": 3831, "start_point": [100, 17], "end_point": [100, 21], "text": ";\n\n "}, {"type": "type_cast_expression", "children": [{"type": "identifier", "children": [], "start_byte": 3832, "end_byte": 3833, "start_point": [100, 22], "end_point": [100, 23], "text": " "}, {"type": "as", "children": [], "start_byte": 3834, "end_byte": 3836, "start_point": [100, 24], "end_point": [100, 26], "text": "  "}, {"type": "primitive_type", "children": [], "start_byte": 3837, "end_byte": 3841, "start_point": [100, 27], "end_point": [100, 31], "text": " // "}], "start_byte": 3832, "end_byte": 3841, "start_point": [100, 22], "end_point": [100, 31], "text": "      // "}], "start_byte": 3827, "end_byte": 3841, "start_point": [100, 17], "end_point": [100, 31], "text": ";\n\n        // "}, {"type": ")", "children": [], "start_byte": 3841, "end_byte": 3842, "start_point": [100, 31], "end_point": [100, 32], "text": "\u5904"}], "start_byte": 3826, "end_byte": 3842, "start_point": [100, 16], "end_point": [100, 32], "text": ");\n\n        // \u5904"}], "start_byte": 3702, "end_byte": 3842, "start_point": [97, 26], "end_point": [100, 32], "text": "rmat!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904"}, {"type": ".", "children": [], "start_byte": 3855, "end_byte": 3856, "start_point": [101, 12], "end_point": [101, 13], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 3856, "end_byte": 3863, "start_point": [101, 13], "end_point": [101, 20], "text": "  match"}], "start_byte": 3702, "end_byte": 3863, "start_point": [97, 26], "end_point": [101, 20], "text": "rmat!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match"}, {"type": "::", "children": [], "start_byte": 3863, "end_byte": 3865, "start_point": [101, 20], "end_point": [101, 22], "text": " F"}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 3865, "end_byte": 3866, "start_point": [101, 22], "end_point": [101, 23], "text": "i"}, {"type": "type_identifier", "children": [], "start_byte": 3866, "end_byte": 3872, "start_point": [101, 23], "end_point": [101, 29], "text": "le::op"}, {"type": ">", "children": [], "start_byte": 3872, "end_byte": 3873, "start_point": [101, 29], "end_point": [101, 30], "text": "e"}], "start_byte": 3865, "end_byte": 3873, "start_point": [101, 22], "end_point": [101, 30], "text": "ile::ope"}], "start_byte": 3702, "end_byte": 3873, "start_point": [97, 26], "end_point": [101, 30], "text": "rmat!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::ope"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 3873, "end_byte": 3874, "start_point": [101, 30], "end_point": [101, 31], "text": "n"}, {"type": ")", "children": [], "start_byte": 3874, "end_byte": 3875, "start_point": [101, 31], "end_point": [101, 32], "text": "("}], "start_byte": 3873, "end_byte": 3875, "start_point": [101, 30], "end_point": [101, 32], "text": "n("}], "start_byte": 3702, "end_byte": 3875, "start_point": [97, 26], "end_point": [101, 32], "text": "rmat!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open("}, {"type": ";", "children": [], "start_byte": 3875, "end_byte": 3876, "start_point": [101, 32], "end_point": [101, 33], "text": "P"}], "start_byte": 3684, "end_byte": 3876, "start_point": [97, 8], "end_point": [101, 33], "text": " out_name_str = format!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open(P"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 3886, "end_byte": 3889, "start_point": [103, 8], "end_point": [103, 11], "text": "in_"}, {"type": "identifier", "children": [], "start_byte": 3890, "end_byte": 3902, "start_point": [103, 12], "end_point": [103, 24], "text": "ame_str)) {\n"}, {"type": "=", "children": [], "start_byte": 3903, "end_byte": 3904, "start_point": [103, 25], "end_point": [103, 26], "text": " "}, {"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 3905, "end_byte": 3911, "start_point": [103, 27], "end_point": [103, 33], "text": "      "}, {"type": "!", "children": [], "start_byte": 3911, "end_byte": 3912, "start_point": [103, 33], "end_point": [103, 34], "text": " "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 3912, "end_byte": 3913, "start_point": [103, 34], "end_point": [103, 35], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 3913, "end_byte": 3914, "start_point": [103, 35], "end_point": [103, 36], "text": " "}, {"type": "\"", "children": [], "start_byte": 3920, "end_byte": 3921, "start_point": [103, 42], "end_point": [103, 43], "text": "e"}], "start_byte": 3913, "end_byte": 3921, "start_point": [103, 35], "end_point": [103, 43], "text": " Ok(file"}, {"type": "identifier", "children": [], "start_byte": 3923, "end_byte": 3934, "start_point": [103, 45], "end_point": [103, 56], "text": "=> in_file "}, {"type": ")", "children": [], "start_byte": 3934, "end_byte": 3935, "start_point": [103, 56], "end_point": [103, 57], "text": "="}], "start_byte": 3912, "end_byte": 3935, "start_point": [103, 34], "end_point": [103, 57], "text": "  Ok(file) => in_file ="}], "start_byte": 3905, "end_byte": 3935, "start_point": [103, 27], "end_point": [103, 57], "text": "         Ok(file) => in_file ="}, {"type": ";", "children": [], "start_byte": 3935, "end_byte": 3936, "start_point": [103, 57], "end_point": [103, 58], "text": " "}], "start_byte": 3886, "end_byte": 3936, "start_point": [103, 8], "end_point": [103, 58], "text": "in_name_str)) {\n            Ok(file) => in_file = "}, {"type": "line_comment", "children": [], "start_byte": 3937, "end_byte": 3961, "start_point": [103, 59], "end_point": [103, 83], "text": "ome(file),\n            E"}, {"type": "line_comment", "children": [], "start_byte": 3970, "end_byte": 4050, "start_point": [104, 8], "end_point": [104, 88], "text": "{\n                eprintln!(\"Error opening input file: {}\", e);\n                "}, {"type": "line_comment", "children": [], "start_byte": 4060, "end_byte": 4087, "start_point": [106, 8], "end_point": [106, 35], "text": "(e);\n            }\n        "}, {"type": "expression_statement", "children": [{"type": "match_expression", "children": [{"type": "match", "children": [], "start_byte": 4096, "end_byte": 4101, "start_point": [107, 8], "end_point": [107, 13], "text": "  mat"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4102, "end_byte": 4106, "start_point": [107, 14], "end_point": [107, 18], "text": "h Fi"}, {"type": "::", "children": [], "start_byte": 4106, "end_byte": 4108, "start_point": [107, 18], "end_point": [107, 20], "text": "le"}, {"type": "identifier", "children": [], "start_byte": 4108, "end_byte": 4112, "start_point": [107, 20], "end_point": [107, 24], "text": "::cr"}], "start_byte": 4102, "end_byte": 4112, "start_point": [107, 14], "end_point": [107, 24], "text": "h File::cr"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4112, "end_byte": 4113, "start_point": [107, 24], "end_point": [107, 25], "text": "e"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4113, "end_byte": 4117, "start_point": [107, 25], "end_point": [107, 29], "text": "ate("}, {"type": "::", "children": [], "start_byte": 4117, "end_byte": 4119, "start_point": [107, 29], "end_point": [107, 31], "text": "Pa"}, {"type": "identifier", "children": [], "start_byte": 4119, "end_byte": 4122, "start_point": [107, 31], "end_point": [107, 34], "text": "th:"}], "start_byte": 4113, "end_byte": 4122, "start_point": [107, 25], "end_point": [107, 34], "text": "ate(Path:"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4122, "end_byte": 4123, "start_point": [107, 34], "end_point": [107, 35], "text": ":"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 4123, "end_byte": 4124, "start_point": [107, 35], "end_point": [107, 36], "text": "n"}, {"type": "identifier", "children": [], "start_byte": 4124, "end_byte": 4135, "start_point": [107, 36], "end_point": [107, 47], "text": "ew(&out_nam"}], "start_byte": 4123, "end_byte": 4135, "start_point": [107, 35], "end_point": [107, 47], "text": "new(&out_nam"}, {"type": ")", "children": [], "start_byte": 4135, "end_byte": 4136, "start_point": [107, 47], "end_point": [107, 48], "text": "e"}], "start_byte": 4122, "end_byte": 4136, "start_point": [107, 34], "end_point": [107, 48], "text": ":new(&out_name"}], "start_byte": 4113, "end_byte": 4136, "start_point": [107, 25], "end_point": [107, 48], "text": "ate(Path::new(&out_name"}, {"type": ")", "children": [], "start_byte": 4136, "end_byte": 4137, "start_point": [107, 48], "end_point": [107, 49], "text": "_"}], "start_byte": 4112, "end_byte": 4137, "start_point": [107, 24], "end_point": [107, 49], "text": "eate(Path::new(&out_name_"}], "start_byte": 4102, "end_byte": 4137, "start_point": [107, 14], "end_point": [107, 49], "text": "h File::create(Path::new(&out_name_"}, {"type": "match_block", "children": [{"type": "{", "children": [], "start_byte": 4138, "end_byte": 4139, "start_point": [107, 50], "end_point": [107, 51], "text": "t"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 4152, "end_byte": 4154, "start_point": [108, 12], "end_point": [108, 14], "text": "  "}, {"type": "(", "children": [], "start_byte": 4154, "end_byte": 4155, "start_point": [108, 14], "end_point": [108, 15], "text": " "}, {"type": "identifier", "children": [], "start_byte": 4155, "end_byte": 4159, "start_point": [108, 15], "end_point": [108, 19], "text": "  Ok"}, {"type": ")", "children": [], "start_byte": 4159, "end_byte": 4160, "start_point": [108, 19], "end_point": [108, 20], "text": "("}], "start_byte": 4152, "end_byte": 4160, "start_point": [108, 12], "end_point": [108, 20], "text": "     Ok("}], "start_byte": 4152, "end_byte": 4160, "start_point": [108, 12], "end_point": [108, 20], "text": "     Ok("}, {"type": "=>", "children": [], "start_byte": 4161, "end_byte": 4163, "start_point": [108, 21], "end_point": [108, 23], "text": "il"}, {"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4164, "end_byte": 4171, "start_point": [108, 24], "end_point": [108, 31], "text": ") => ou"}, {"type": "=", "children": [], "start_byte": 4172, "end_byte": 4173, "start_point": [108, 32], "end_point": [108, 33], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4174, "end_byte": 4178, "start_point": [108, 34], "end_point": [108, 38], "text": "ile "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4178, "end_byte": 4179, "start_point": [108, 38], "end_point": [108, 39], "text": "="}, {"type": "identifier", "children": [], "start_byte": 4179, "end_byte": 4183, "start_point": [108, 39], "end_point": [108, 43], "text": " Som"}, {"type": ")", "children": [], "start_byte": 4183, "end_byte": 4184, "start_point": [108, 43], "end_point": [108, 44], "text": "e"}], "start_byte": 4178, "end_byte": 4184, "start_point": [108, 38], "end_point": [108, 44], "text": "= Some"}], "start_byte": 4174, "end_byte": 4184, "start_point": [108, 34], "end_point": [108, 44], "text": "ile = Some"}], "start_byte": 4164, "end_byte": 4184, "start_point": [108, 24], "end_point": [108, 44], "text": ") => out_file = Some"}, {"type": ",", "children": [], "start_byte": 4184, "end_byte": 4185, "start_point": [108, 44], "end_point": [108, 45], "text": "("}], "start_byte": 4152, "end_byte": 4185, "start_point": [108, 12], "end_point": [108, 45], "text": "     Ok(file) => out_file = Some("}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 4198, "end_byte": 4201, "start_point": [109, 12], "end_point": [109, 15], "text": "   "}, {"type": "(", "children": [], "start_byte": 4201, "end_byte": 4202, "start_point": [109, 15], "end_point": [109, 16], "text": " "}, {"type": "identifier", "children": [], "start_byte": 4202, "end_byte": 4203, "start_point": [109, 16], "end_point": [109, 17], "text": " "}, {"type": ")", "children": [], "start_byte": 4203, "end_byte": 4204, "start_point": [109, 17], "end_point": [109, 18], "text": " "}], "start_byte": 4198, "end_byte": 4204, "start_point": [109, 12], "end_point": [109, 18], "text": "      "}], "start_byte": 4198, "end_byte": 4204, "start_point": [109, 12], "end_point": [109, 18], "text": "      "}, {"type": "=>", "children": [], "start_byte": 4205, "end_byte": 4207, "start_point": [109, 19], "end_point": [109, 21], "text": "rr"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 4208, "end_byte": 4209, "start_point": [109, 22], "end_point": [109, 23], "text": "e"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 4226, "end_byte": 4234, "start_point": [110, 16], "end_point": [110, 24], "text": "      ep"}, {"type": "!", "children": [], "start_byte": 4234, "end_byte": 4235, "start_point": [110, 24], "end_point": [110, 25], "text": "r"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 4235, "end_byte": 4236, "start_point": [110, 25], "end_point": [110, 26], "text": "i"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 4236, "end_byte": 4237, "start_point": [110, 26], "end_point": [110, 27], "text": "n"}, {"type": "\"", "children": [], "start_byte": 4265, "end_byte": 4266, "start_point": [110, 55], "end_point": [110, 56], "text": "f"}], "start_byte": 4236, "end_byte": 4266, "start_point": [110, 26], "end_point": [110, 56], "text": "ntln!(\"Error creating output f"}, {"type": "identifier", "children": [], "start_byte": 4268, "end_byte": 4269, "start_point": [110, 58], "end_point": [110, 59], "text": "e"}, {"type": ")", "children": [], "start_byte": 4269, "end_byte": 4270, "start_point": [110, 59], "end_point": [110, 60], "text": ":"}], "start_byte": 4235, "end_byte": 4270, "start_point": [110, 25], "end_point": [110, 60], "text": "intln!(\"Error creating output file:"}], "start_byte": 4226, "end_byte": 4270, "start_point": [110, 16], "end_point": [110, 60], "text": "      eprintln!(\"Error creating output file:"}, {"type": ";", "children": [], "start_byte": 4270, "end_byte": 4271, "start_point": [110, 60], "end_point": [110, 61], "text": " "}], "start_byte": 4226, "end_byte": 4271, "start_point": [110, 16], "end_point": [110, 61], "text": "      eprintln!(\"Error creating output file: "}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 4288, "end_byte": 4294, "start_point": [111, 16], "end_point": [111, 22], "text": "      "}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4295, "end_byte": 4298, "start_point": [111, 23], "end_point": [111, 26], "text": " re"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4298, "end_byte": 4299, "start_point": [111, 26], "end_point": [111, 27], "text": "t"}, {"type": "identifier", "children": [], "start_byte": 4299, "end_byte": 4300, "start_point": [111, 27], "end_point": [111, 28], "text": "u"}, {"type": ")", "children": [], "start_byte": 4300, "end_byte": 4301, "start_point": [111, 28], "end_point": [111, 29], "text": "r"}], "start_byte": 4298, "end_byte": 4301, "start_point": [111, 26], "end_point": [111, 29], "text": "tur"}], "start_byte": 4295, "end_byte": 4301, "start_point": [111, 23], "end_point": [111, 29], "text": " retur"}], "start_byte": 4288, "end_byte": 4301, "start_point": [111, 16], "end_point": [111, 29], "text": "        retur"}, {"type": ";", "children": [], "start_byte": 4301, "end_byte": 4302, "start_point": [111, 29], "end_point": [111, 30], "text": "n"}], "start_byte": 4288, "end_byte": 4302, "start_point": [111, 16], "end_point": [111, 30], "text": "        return"}, {"type": "}", "children": [], "start_byte": 4315, "end_byte": 4316, "start_point": [112, 12], "end_point": [112, 13], "text": " "}], "start_byte": 4208, "end_byte": 4316, "start_point": [109, 22], "end_point": [112, 13], "text": "e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n     "}], "start_byte": 4198, "end_byte": 4316, "start_point": [109, 12], "end_point": [112, 13], "text": "      Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n     "}, {"type": "}", "children": [], "start_byte": 4325, "end_byte": 4326, "start_point": [113, 8], "end_point": [113, 9], "text": " "}], "start_byte": 4138, "end_byte": 4326, "start_point": [107, 50], "end_point": [113, 9], "text": "tr)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n "}], "start_byte": 4096, "end_byte": 4326, "start_point": [107, 8], "end_point": [113, 9], "text": "  match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n "}], "start_byte": 4096, "end_byte": 4326, "start_point": [107, 8], "end_point": [113, 9], "text": "  match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n "}, {"type": "expression_statement", "children": [{"type": "match_expression", "children": [{"type": "match", "children": [], "start_byte": 4336, "end_byte": 4341, "start_point": [115, 8], "end_point": [115, 13], "text": "     "}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4342, "end_byte": 4346, "start_point": [115, 14], "end_point": [115, 18], "text": "  //"}, {"type": "::", "children": [], "start_byte": 4346, "end_byte": 4348, "start_point": [115, 18], "end_point": [115, 20], "text": " p"}, {"type": "identifier", "children": [], "start_byte": 4348, "end_byte": 4354, "start_point": [115, 20], "end_point": [115, 26], "text": "rintln"}], "start_byte": 4342, "end_byte": 4354, "start_point": [115, 14], "end_point": [115, 26], "text": "  // println"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4354, "end_byte": 4355, "start_point": [115, 26], "end_point": [115, 27], "text": "!"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4355, "end_byte": 4359, "start_point": [115, 27], "end_point": [115, 31], "text": "(\"\ud83c\udf32\""}, {"type": "::", "children": [], "start_byte": 4359, "end_byte": 4361, "start_point": [115, 31], "end_point": [115, 33], "text": ");"}, {"type": "identifier", "children": [], "start_byte": 4361, "end_byte": 4364, "start_point": [115, 33], "end_point": [115, 36], "text": "\n  "}], "start_byte": 4355, "end_byte": 4364, "start_point": [115, 27], "end_point": [115, 36], "text": "(\"\ud83c\udf32\");\n  "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4364, "end_byte": 4365, "start_point": [115, 36], "end_point": [115, 37], "text": " "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 4365, "end_byte": 4366, "start_point": [115, 37], "end_point": [115, 38], "text": " "}, {"type": "identifier", "children": [], "start_byte": 4366, "end_byte": 4378, "start_point": [115, 38], "end_point": [115, 50], "text": "    if let ("}], "start_byte": 4365, "end_byte": 4378, "start_point": [115, 37], "end_point": [115, 50], "text": "     if let ("}, {"type": ")", "children": [], "start_byte": 4378, "end_byte": 4379, "start_point": [115, 50], "end_point": [115, 51], "text": "S"}], "start_byte": 4364, "end_byte": 4379, "start_point": [115, 36], "end_point": [115, 51], "text": "      if let (S"}], "start_byte": 4355, "end_byte": 4379, "start_point": [115, 27], "end_point": [115, 51], "text": "(\"\ud83c\udf32\");\n        if let (S"}, {"type": ")", "children": [], "start_byte": 4379, "end_byte": 4380, "start_point": [115, 51], "end_point": [115, 52], "text": "o"}], "start_byte": 4354, "end_byte": 4380, "start_point": [115, 26], "end_point": [115, 52], "text": "!(\"\ud83c\udf32\");\n        if let (So"}], "start_byte": 4342, "end_byte": 4380, "start_point": [115, 14], "end_point": [115, 52], "text": "  // println!(\"\ud83c\udf32\");\n        if let (So"}, {"type": "match_block", "children": [{"type": "{", "children": [], "start_byte": 4381, "end_byte": 4382, "start_point": [115, 53], "end_point": [115, 54], "text": "e"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 4395, "end_byte": 4397, "start_point": [116, 12], "end_point": [116, 14], "text": ", "}, {"type": "(", "children": [], "start_byte": 4397, "end_byte": 4398, "start_point": [116, 14], "end_point": [116, 15], "text": "S"}, {"type": "identifier", "children": [], "start_byte": 4398, "end_byte": 4402, "start_point": [116, 15], "end_point": [116, 19], "text": "ome("}, {"type": ")", "children": [], "start_byte": 4402, "end_byte": 4403, "start_point": [116, 19], "end_point": [116, 20], "text": "m"}], "start_byte": 4395, "end_byte": 4403, "start_point": [116, 12], "end_point": [116, 20], "text": ", Some(m"}], "start_byte": 4395, "end_byte": 4403, "start_point": [116, 12], "end_point": [116, 20], "text": ", Some(m"}, {"type": "=>", "children": [], "start_byte": 4404, "end_byte": 4406, "start_point": [116, 21], "end_point": [116, 23], "text": "t "}, {"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4407, "end_byte": 4415, "start_point": [116, 24], "end_point": [116, 32], "text": "ut_file)"}, {"type": "=", "children": [], "start_byte": 4416, "end_byte": 4417, "start_point": [116, 33], "end_point": [116, 34], "text": " "}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4418, "end_byte": 4422, "start_point": [116, 35], "end_point": [116, 39], "text": " (in"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4422, "end_byte": 4423, "start_point": [116, 39], "end_point": [116, 40], "text": "_"}, {"type": "identifier", "children": [], "start_byte": 4423, "end_byte": 4427, "start_point": [116, 40], "end_point": [116, 44], "text": "file"}, {"type": ")", "children": [], "start_byte": 4427, "end_byte": 4428, "start_point": [116, 44], "end_point": [116, 45], "text": ","}], "start_byte": 4422, "end_byte": 4428, "start_point": [116, 39], "end_point": [116, 45], "text": "_file,"}], "start_byte": 4418, "end_byte": 4428, "start_point": [116, 35], "end_point": [116, 45], "text": " (in_file,"}], "start_byte": 4407, "end_byte": 4428, "start_point": [116, 24], "end_point": [116, 45], "text": "ut_file)) = (in_file,"}, {"type": ",", "children": [], "start_byte": 4428, "end_byte": 4429, "start_point": [116, 45], "end_point": [116, 46], "text": " "}], "start_byte": 4395, "end_byte": 4429, "start_point": [116, 12], "end_point": [116, 46], "text": ", Some(mut out_file)) = (in_file, "}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 4442, "end_byte": 4445, "start_point": [117, 12], "end_point": [117, 15], "text": "   "}, {"type": "(", "children": [], "start_byte": 4445, "end_byte": 4446, "start_point": [117, 15], "end_point": [117, 16], "text": " "}, {"type": "identifier", "children": [], "start_byte": 4446, "end_byte": 4447, "start_point": [117, 16], "end_point": [117, 17], "text": " "}, {"type": ")", "children": [], "start_byte": 4447, "end_byte": 4448, "start_point": [117, 17], "end_point": [117, 18], "text": " "}], "start_byte": 4442, "end_byte": 4448, "start_point": [117, 12], "end_point": [117, 18], "text": "      "}], "start_byte": 4442, "end_byte": 4448, "start_point": [117, 12], "end_point": [117, 18], "text": "      "}, {"type": "=>", "children": [], "start_byte": 4449, "end_byte": 4451, "start_point": [117, 19], "end_point": [117, 21], "text": "  "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 4452, "end_byte": 4453, "start_point": [117, 22], "end_point": [117, 23], "text": " "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 4470, "end_byte": 4478, "start_point": [118, 16], "end_point": [118, 24], "text": "\n       "}, {"type": "!", "children": [], "start_byte": 4478, "end_byte": 4479, "start_point": [118, 24], "end_point": [118, 25], "text": " "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 4479, "end_byte": 4480, "start_point": [118, 25], "end_point": [118, 26], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 4480, "end_byte": 4481, "start_point": [118, 26], "end_point": [118, 27], "text": " "}, {"type": "\"", "children": [], "start_byte": 4511, "end_byte": 4512, "start_point": [118, 57], "end_point": [118, 58], "text": "e"}], "start_byte": 4480, "end_byte": 4512, "start_point": [118, 26], "end_point": [118, 58], "text": "   if let Err(e) = compress_stre"}, {"type": "identifier", "children": [], "start_byte": 4514, "end_byte": 4515, "start_point": [118, 60], "end_point": [118, 61], "text": "("}, {"type": ")", "children": [], "start_byte": 4515, "end_byte": 4516, "start_point": [118, 61], "end_point": [118, 62], "text": "&"}], "start_byte": 4479, "end_byte": 4516, "start_point": [118, 25], "end_point": [118, 62], "text": "    if let Err(e) = compress_stream(&"}], "start_byte": 4470, "end_byte": 4516, "start_point": [118, 16], "end_point": [118, 62], "text": "\n            if let Err(e) = compress_stream(&"}, {"type": ";", "children": [], "start_byte": 4516, "end_byte": 4517, "start_point": [118, 62], "end_point": [118, 63], "text": "m"}], "start_byte": 4470, "end_byte": 4517, "start_point": [118, 16], "end_point": [118, 63], "text": "\n            if let Err(e) = compress_stream(&m"}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 4534, "end_byte": 4540, "start_point": [119, 16], "end_point": [119, 22], "text": "out_fi"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4541, "end_byte": 4544, "start_point": [119, 23], "end_point": [119, 26], "text": "e) "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4544, "end_byte": 4545, "start_point": [119, 26], "end_point": [119, 27], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 4545, "end_byte": 4546, "start_point": [119, 27], "end_point": [119, 28], "text": "\n"}, {"type": ")", "children": [], "start_byte": 4546, "end_byte": 4547, "start_point": [119, 28], "end_point": [119, 29], "text": " "}], "start_byte": 4544, "end_byte": 4547, "start_point": [119, 26], "end_point": [119, 29], "text": "{\n "}], "start_byte": 4541, "end_byte": 4547, "start_point": [119, 23], "end_point": [119, 29], "text": "e) {\n "}], "start_byte": 4534, "end_byte": 4547, "start_point": [119, 16], "end_point": [119, 29], "text": "out_file) {\n "}, {"type": ";", "children": [], "start_byte": 4547, "end_byte": 4548, "start_point": [119, 29], "end_point": [119, 30], "text": " "}], "start_byte": 4534, "end_byte": 4548, "start_point": [119, 16], "end_point": [119, 30], "text": "out_file) {\n  "}, {"type": "}", "children": [], "start_byte": 4561, "end_byte": 4562, "start_point": [120, 12], "end_point": [120, 13], "text": " "}], "start_byte": 4452, "end_byte": 4562, "start_point": [117, 22], "end_point": [120, 13], "text": " // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                "}], "start_byte": 4442, "end_byte": 4562, "start_point": [117, 12], "end_point": [120, 13], "text": "           // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                "}, {"type": "}", "children": [], "start_byte": 4571, "end_byte": 4572, "start_point": [121, 8], "end_point": [121, 9], "text": "("}], "start_byte": 4381, "end_byte": 4572, "start_point": [115, 53], "end_point": [121, 9], "text": "e(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!("}], "start_byte": 4336, "end_byte": 4572, "start_point": [115, 8], "end_point": [121, 9], "text": "        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!("}], "start_byte": 4336, "end_byte": 4572, "start_point": [115, 8], "end_point": [121, 9], "text": "        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!("}, {"type": "line_comment", "children": [], "start_byte": 4582, "end_byte": 4602, "start_point": [123, 8], "end_point": [123, 28], "text": "stream error: {}\", e"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 4611, "end_byte": 4613, "start_point": [124, 8], "end_point": [124, 10], "text": "  "}, {"type": "let_condition", "children": [{"type": "let", "children": [], "start_byte": 4614, "end_byte": 4617, "start_point": [124, 11], "end_point": [124, 14], "text": "   "}, {"type": "tuple_pattern", "children": [{"type": "(", "children": [], "start_byte": 4618, "end_byte": 4619, "start_point": [124, 15], "end_point": [124, 16], "text": " "}, {"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 4619, "end_byte": 4623, "start_point": [124, 16], "end_point": [124, 20], "text": "  re"}, {"type": "(", "children": [], "start_byte": 4623, "end_byte": 4624, "start_point": [124, 20], "end_point": [124, 21], "text": "t"}, {"type": "mut_pattern", "children": [{"type": "mutable_specifier", "children": [], "start_byte": 4624, "end_byte": 4627, "start_point": [124, 21], "end_point": [124, 24], "text": "urn"}, {"type": "identifier", "children": [], "start_byte": 4628, "end_byte": 4635, "start_point": [124, 25], "end_point": [124, 32], "text": "Err(io:"}], "start_byte": 4624, "end_byte": 4635, "start_point": [124, 21], "end_point": [124, 32], "text": "urn Err(io:"}, {"type": ")", "children": [], "start_byte": 4635, "end_byte": 4636, "start_point": [124, 32], "end_point": [124, 33], "text": ":"}], "start_byte": 4619, "end_byte": 4636, "start_point": [124, 16], "end_point": [124, 33], "text": "  return Err(io::"}, {"type": ",", "children": [], "start_byte": 4636, "end_byte": 4637, "start_point": [124, 33], "end_point": [124, 34], "text": "E"}, {"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 4638, "end_byte": 4642, "start_point": [124, 35], "end_point": [124, 39], "text": "ror:"}, {"type": "(", "children": [], "start_byte": 4642, "end_byte": 4643, "start_point": [124, 39], "end_point": [124, 40], "text": ":"}, {"type": "mut_pattern", "children": [{"type": "mutable_specifier", "children": [], "start_byte": 4643, "end_byte": 4646, "start_point": [124, 40], "end_point": [124, 43], "text": "new"}, {"type": "identifier", "children": [], "start_byte": 4647, "end_byte": 4655, "start_point": [124, 44], "end_point": [124, 52], "text": "io::Erro"}], "start_byte": 4643, "end_byte": 4655, "start_point": [124, 40], "end_point": [124, 52], "text": "new(io::Erro"}, {"type": ")", "children": [], "start_byte": 4655, "end_byte": 4656, "start_point": [124, 52], "end_point": [124, 53], "text": "r"}], "start_byte": 4638, "end_byte": 4656, "start_point": [124, 35], "end_point": [124, 53], "text": "ror::new(io::Error"}, {"type": ")", "children": [], "start_byte": 4656, "end_byte": 4657, "start_point": [124, 53], "end_point": [124, 54], "text": "K"}], "start_byte": 4618, "end_byte": 4657, "start_point": [124, 15], "end_point": [124, 54], "text": "   return Err(io::Error::new(io::ErrorK"}, {"type": "=", "children": [], "start_byte": 4658, "end_byte": 4659, "start_point": [124, 55], "end_point": [124, 56], "text": "n"}, {"type": "tuple_expression", "children": [{"type": "(", "children": [], "start_byte": 4660, "end_byte": 4661, "start_point": [124, 57], "end_point": [124, 58], "text": ":"}, {"type": "identifier", "children": [], "start_byte": 4661, "end_byte": 4668, "start_point": [124, 58], "end_point": [124, 65], "text": ":Other,"}, {"type": ",", "children": [], "start_byte": 4668, "end_byte": 4669, "start_point": [124, 65], "end_point": [124, 66], "text": " "}, {"type": "identifier", "children": [], "start_byte": 4670, "end_byte": 4678, "start_point": [124, 67], "end_point": [124, 75], "text": "compress"}, {"type": ")", "children": [], "start_byte": 4678, "end_byte": 4679, "start_point": [124, 75], "end_point": [124, 76], "text": "_"}], "start_byte": 4660, "end_byte": 4679, "start_point": [124, 57], "end_point": [124, 76], "text": "::Other, \"compress_"}], "start_byte": 4614, "end_byte": 4679, "start_point": [124, 11], "end_point": [124, 76], "text": "       return Err(io::Error::new(io::ErrorKind::Other, \"compress_"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 4680, "end_byte": 4681, "start_point": [124, 77], "end_point": [124, 78], "text": "t"}, {"type": "line_comment", "children": [], "start_byte": 4694, "end_byte": 4714, "start_point": [125, 12], "end_point": [125, 32], "text": ");\n            }\n   "}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 4727, "end_byte": 4729, "start_point": [126, 12], "end_point": [126, 14], "text": "  "}, {"type": "let_condition", "children": [{"type": "let", "children": [], "start_byte": 4730, "end_byte": 4733, "start_point": [126, 15], "end_point": [126, 18], "text": "DEL"}, {"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 4734, "end_byte": 4737, "start_point": [126, 19], "end_point": [126, 22], "text": "TE_"}, {"type": "(", "children": [], "start_byte": 4737, "end_byte": 4738, "start_point": [126, 22], "end_point": [126, 23], "text": "O"}, {"type": "identifier", "children": [], "start_byte": 4738, "end_byte": 4739, "start_point": [126, 23], "end_point": [126, 24], "text": "U"}, {"type": ")", "children": [], "start_byte": 4739, "end_byte": 4740, "start_point": [126, 24], "end_point": [126, 25], "text": "T"}], "start_byte": 4734, "end_byte": 4740, "start_point": [126, 19], "end_point": [126, 25], "text": "TE_OUT"}, {"type": "=", "children": [], "start_byte": 4741, "end_byte": 4742, "start_point": [126, 26], "end_point": [126, 27], "text": "U"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4743, "end_byte": 4758, "start_point": [126, 28], "end_point": [126, 43], "text": "_ON_INTERRUPT ="}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4758, "end_byte": 4759, "start_point": [126, 43], "end_point": [126, 44], "text": " "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 4759, "end_byte": 4760, "start_point": [126, 44], "end_point": [126, 45], "text": "f"}, {"type": "mutable_specifier", "children": [], "start_byte": 4760, "end_byte": 4763, "start_point": [126, 45], "end_point": [126, 48], "text": "als"}, {"type": "identifier", "children": [], "start_byte": 4764, "end_byte": 4771, "start_point": [126, 49], "end_point": [126, 56], "text": ";\n    }"}], "start_byte": 4759, "end_byte": 4771, "start_point": [126, 44], "end_point": [126, 56], "text": "false;\n    }"}, {"type": ",", "children": [], "start_byte": 4771, "end_byte": 4772, "start_point": [126, 56], "end_point": [126, 57], "text": "\n"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 4773, "end_byte": 4774, "start_point": [126, 58], "end_point": [126, 59], "text": " "}, {"type": "mutable_specifier", "children": [], "start_byte": 4774, "end_byte": 4777, "start_point": [126, 59], "end_point": [126, 62], "text": "   "}, {"type": "identifier", "children": [], "start_byte": 4778, "end_byte": 4786, "start_point": [126, 63], "end_point": [126, 71], "text": "k(())\n}\n"}], "start_byte": 4773, "end_byte": 4786, "start_point": [126, 58], "end_point": [126, 71], "text": "    Ok(())\n}\n"}, {"type": ")", "children": [], "start_byte": 4786, "end_byte": 4787, "start_point": [126, 71], "end_point": [126, 72], "text": "\n"}], "start_byte": 4758, "end_byte": 4787, "start_point": [126, 43], "end_point": [126, 72], "text": " false;\n    }\n\n    Ok(())\n}\n\n"}], "start_byte": 4743, "end_byte": 4787, "start_point": [126, 28], "end_point": [126, 72], "text": "_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n"}], "start_byte": 4730, "end_byte": 4787, "start_point": [126, 15], "end_point": [126, 72], "text": "DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 4788, "end_byte": 4789, "start_point": [126, 73], "end_point": [126, 74], "text": "["}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 4806, "end_byte": 4814, "start_point": [127, 16], "end_point": [127, 24], "text": "sts {\n  "}, {"type": "!", "children": [], "start_byte": 4814, "end_byte": 4815, "start_point": [127, 24], "end_point": [127, 25], "text": " "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 4815, "end_byte": 4816, "start_point": [127, 25], "end_point": [127, 26], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 4816, "end_byte": 4817, "start_point": [127, 26], "end_point": [127, 27], "text": "u"}, {"type": "\"", "children": [], "start_byte": 4842, "end_byte": 4843, "start_point": [127, 52], "end_point": [127, 53], "text": ":"}], "start_byte": 4816, "end_byte": 4843, "start_point": [127, 26], "end_point": [127, 53], "text": "use super::*;\n    use std::"}, {"type": "identifier", "children": [], "start_byte": 4845, "end_byte": 4846, "start_point": [127, 55], "end_point": [127, 56], "text": ":"}, {"type": ")", "children": [], "start_byte": 4846, "end_byte": 4847, "start_point": [127, 56], "end_point": [127, 57], "text": ":"}], "start_byte": 4815, "end_byte": 4847, "start_point": [127, 25], "end_point": [127, 57], "text": " use super::*;\n    use std::io::"}], "start_byte": 4806, "end_byte": 4847, "start_point": [127, 16], "end_point": [127, 57], "text": "sts {\n    use super::*;\n    use std::io::"}, {"type": ";", "children": [], "start_byte": 4847, "end_byte": 4848, "start_point": [127, 57], "end_point": [127, 58], "text": "{"}], "start_byte": 4806, "end_byte": 4848, "start_point": [127, 16], "end_point": [127, 58], "text": "sts {\n    use super::*;\n    use std::io::{"}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 4865, "end_byte": 4871, "start_point": [128, 16], "end_point": [128, 22], "text": " use s"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4872, "end_byte": 4875, "start_point": [128, 23], "end_point": [128, 26], "text": "d::"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4875, "end_byte": 4876, "start_point": [128, 26], "end_point": [128, 27], "text": "f"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4876, "end_byte": 4878, "start_point": [128, 27], "end_point": [128, 29], "text": "s:"}, {"type": "::", "children": [], "start_byte": 4878, "end_byte": 4880, "start_point": [128, 29], "end_point": [128, 31], "text": ":F"}, {"type": "identifier", "children": [], "start_byte": 4880, "end_byte": 4885, "start_point": [128, 31], "end_point": [128, 36], "text": "ile;\n"}], "start_byte": 4876, "end_byte": 4885, "start_point": [128, 27], "end_point": [128, 36], "text": "s::File;\n"}, {"type": "::", "children": [], "start_byte": 4885, "end_byte": 4887, "start_point": [128, 36], "end_point": [128, 38], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 4887, "end_byte": 4890, "start_point": [128, 38], "end_point": [128, 41], "text": "  u"}], "start_byte": 4876, "end_byte": 4890, "start_point": [128, 27], "end_point": [128, 41], "text": "s::File;\n    u"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 4890, "end_byte": 4891, "start_point": [128, 41], "end_point": [128, 42], "text": "s"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4891, "end_byte": 4893, "start_point": [128, 42], "end_point": [128, 44], "text": "e "}, {"type": "::", "children": [], "start_byte": 4893, "end_byte": 4895, "start_point": [128, 44], "end_point": [128, 46], "text": "st"}, {"type": "identifier", "children": [], "start_byte": 4895, "end_byte": 4904, "start_point": [128, 46], "end_point": [128, 55], "text": "d::path::"}], "start_byte": 4891, "end_byte": 4904, "start_point": [128, 42], "end_point": [128, 55], "text": "e std::path::"}, {"type": "::", "children": [], "start_byte": 4904, "end_byte": 4906, "start_point": [128, 55], "end_point": [128, 57], "text": "Pa"}, {"type": "identifier", "children": [], "start_byte": 4906, "end_byte": 4911, "start_point": [128, 57], "end_point": [128, 62], "text": "th;\n\n"}], "start_byte": 4891, "end_byte": 4911, "start_point": [128, 42], "end_point": [128, 62], "text": "e std::path::Path;\n\n"}, {"type": ",", "children": [], "start_byte": 4911, "end_byte": 4912, "start_point": [128, 62], "end_point": [128, 63], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 4913, "end_byte": 4914, "start_point": [128, 64], "end_point": [128, 65], "text": " "}, {"type": "\"", "children": [], "start_byte": 4936, "end_byte": 4937, "start_point": [128, 87], "end_point": [128, 88], "text": "\u7684"}], "start_byte": 4913, "end_byte": 4937, "start_point": [128, 64], "end_point": [128, 88], "text": "  // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684"}, {"type": ")", "children": [], "start_byte": 4937, "end_byte": 4938, "start_point": [128, 88], "end_point": [128, 89], "text": "\u80fd"}], "start_byte": 4890, "end_byte": 4938, "start_point": [128, 41], "end_point": [128, 89], "text": "se std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd"}], "start_byte": 4876, "end_byte": 4938, "start_point": [128, 27], "end_point": [128, 89], "text": "s::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd"}, {"type": ")", "children": [], "start_byte": 4938, "end_byte": 4939, "start_point": [128, 89], "end_point": [128, 90], "text": "\u529b"}], "start_byte": 4875, "end_byte": 4939, "start_point": [128, 26], "end_point": [128, 90], "text": "fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b"}], "start_byte": 4872, "end_byte": 4939, "start_point": [128, 23], "end_point": [128, 90], "text": "d::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b"}], "start_byte": 4865, "end_byte": 4939, "start_point": [128, 16], "end_point": [128, 90], "text": " use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b"}, {"type": ";", "children": [], "start_byte": 4939, "end_byte": 4940, "start_point": [128, 90], "end_point": [128, 91], "text": "\n"}], "start_byte": 4865, "end_byte": 4940, "start_point": [128, 16], "end_point": [128, 91], "text": " use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n"}, {"type": "}", "children": [], "start_byte": 4953, "end_byte": 4954, "start_point": [129, 12], "end_point": [129, 13], "text": " "}], "start_byte": 4788, "end_byte": 4954, "start_point": [126, 73], "end_point": [129, 13], "text": "[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n  "}], "start_byte": 4727, "end_byte": 4954, "start_point": [126, 12], "end_point": [129, 13], "text": "   DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n  "}], "start_byte": 4727, "end_byte": 4954, "start_point": [126, 12], "end_point": [129, 13], "text": "   DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n  "}, {"type": "}", "children": [], "start_byte": 4963, "end_byte": 4964, "start_point": [130, 8], "end_point": [130, 9], "text": "_"}], "start_byte": 4680, "end_byte": 4964, "start_point": [124, 77], "end_point": [130, 9], "text": "tream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_"}], "start_byte": 4611, "end_byte": 4964, "start_point": [124, 8], "end_point": [130, 9], "text": "          return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_"}], "start_byte": 4611, "end_byte": 4964, "start_point": [124, 8], "end_point": [130, 9], "text": "          return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 4974, "end_byte": 5000, "start_point": [132, 8], "end_point": [132, 34], "text": "alid_input() {\n        // "}, {"type": "=", "children": [], "start_byte": 5001, "end_byte": 5002, "start_point": [132, 35], "end_point": [132, 36], "text": "e"}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 5003, "end_byte": 5008, "start_point": [132, 37], "end_point": [132, 42], "text": " inpu"}], "start_byte": 5003, "end_byte": 5008, "start_point": [132, 37], "end_point": [132, 42], "text": " inpu"}], "start_byte": 4974, "end_byte": 5008, "start_point": [132, 8], "end_point": [132, 42], "text": "alid_input() {\n        // let inpu"}, {"type": ";", "children": [], "start_byte": 5008, "end_byte": 5009, "start_point": [132, 42], "end_point": [132, 43], "text": "t"}], "start_byte": 4974, "end_byte": 5009, "start_point": [132, 8], "end_point": [132, 43], "text": "alid_input() {\n        // let input"}, {"type": "}", "children": [], "start_byte": 5014, "end_byte": 5015, "start_point": [133, 4], "end_point": [133, 5], "text": "n"}], "start_byte": 1226, "end_byte": 5015, "start_point": [33, 11], "end_point": [133, 5], "text": "tln!(\"0Here\ud83d\udcaa\");\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    \n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_MODE {\n            1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Check if input file exists\n        // \u901a\u8fc7\u8c03\u7528 as_str() \u65b9\u6cd5\u5c06\u8fd9\u4e2a String \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\n        if SRC_MODE != 1 && !Path::new(u8_array_to_string(&IN_NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // let in_file = match SRC_MODE {\n        //     1 => io::stdin(),\n        //     _ => fs::File::open(&IN_NAME)?,\n        // };\n        // let out_file = match SRC_MODE {\n        //     1 | 2 => io::stdout(),\n        //     _ => fs::File::create(&OUT_NAME)?,\n        // };\n\n        let mut in_file: Option<File> = None;\n        let mut out_file: Option<File> = None;\n        if let Some(n) = name {\n            // println!(\"Compressing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\");\n        }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46\u5982\u679c IN_NAME \u662f\u57fa\u4e8e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff08\u4ee5 NUL \u5b57\u8282\u7ed3\u5c3e\uff09\uff0c\n        // \u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a NUL \u5b57\u8282\u3002\n        let in_name_str = IN_NAME\n            .iter()\n            .take_while(|&&c| c != 0) // \u53ea\u53d6\u76f4\u5230 NUL \u5b57\u8282\u4e4b\u524d\u7684\u90e8\u5206\n            .map(|&c| c as char)\n            .collect::<String>();\n\n        let out_name_str = format!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open(Path::new(&in_name_str)) {\n            Ok(file) => in_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error opening input file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!(\"compress_stream error: {}\", e);\n                return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_valid_input() {\n        // let input_filen"}], "start_byte": 1219, "end_byte": 5015, "start_point": [33, 4], "end_point": [133, 5], "text": "// println!(\"0Here\ud83d\udcaa\");\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    \n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_MODE {\n            1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Check if input file exists\n        // \u901a\u8fc7\u8c03\u7528 as_str() \u65b9\u6cd5\u5c06\u8fd9\u4e2a String \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\n        if SRC_MODE != 1 && !Path::new(u8_array_to_string(&IN_NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // let in_file = match SRC_MODE {\n        //     1 => io::stdin(),\n        //     _ => fs::File::open(&IN_NAME)?,\n        // };\n        // let out_file = match SRC_MODE {\n        //     1 | 2 => io::stdout(),\n        //     _ => fs::File::create(&OUT_NAME)?,\n        // };\n\n        let mut in_file: Option<File> = None;\n        let mut out_file: Option<File> = None;\n        if let Some(n) = name {\n            // println!(\"Compressing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\");\n        }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46\u5982\u679c IN_NAME \u662f\u57fa\u4e8e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff08\u4ee5 NUL \u5b57\u8282\u7ed3\u5c3e\uff09\uff0c\n        // \u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a NUL \u5b57\u8282\u3002\n        let in_name_str = IN_NAME\n            .iter()\n            .take_while(|&&c| c != 0) // \u53ea\u53d6\u76f4\u5230 NUL \u5b57\u8282\u4e4b\u524d\u7684\u90e8\u5206\n            .map(|&c| c as char)\n            .collect::<String>();\n\n        let out_name_str = format!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open(Path::new(&in_name_str)) {\n            Ok(file) => in_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error opening input file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!(\"compress_stream error: {}\", e);\n                return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_valid_input() {\n        // let input_filen"}], "start_byte": 1219, "end_byte": 5015, "start_point": [33, 4], "end_point": [133, 5], "text": "// println!(\"0Here\ud83d\udcaa\");\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    \n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_MODE {\n            1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Check if input file exists\n        // \u901a\u8fc7\u8c03\u7528 as_str() \u65b9\u6cd5\u5c06\u8fd9\u4e2a String \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\n        if SRC_MODE != 1 && !Path::new(u8_array_to_string(&IN_NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // let in_file = match SRC_MODE {\n        //     1 => io::stdin(),\n        //     _ => fs::File::open(&IN_NAME)?,\n        // };\n        // let out_file = match SRC_MODE {\n        //     1 | 2 => io::stdout(),\n        //     _ => fs::File::create(&OUT_NAME)?,\n        // };\n\n        let mut in_file: Option<File> = None;\n        let mut out_file: Option<File> = None;\n        if let Some(n) = name {\n            // println!(\"Compressing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\");\n        }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46\u5982\u679c IN_NAME \u662f\u57fa\u4e8e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff08\u4ee5 NUL \u5b57\u8282\u7ed3\u5c3e\uff09\uff0c\n        // \u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a NUL \u5b57\u8282\u3002\n        let in_name_str = IN_NAME\n            .iter()\n            .take_while(|&&c| c != 0) // \u53ea\u53d6\u76f4\u5230 NUL \u5b57\u8282\u4e4b\u524d\u7684\u90e8\u5206\n            .map(|&c| c as char)\n            .collect::<String>();\n\n        let out_name_str = format!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open(Path::new(&in_name_str)) {\n            Ok(file) => in_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error opening input file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!(\"compress_stream error: {}\", e);\n                return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_valid_input() {\n        // let input_filen"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 5021, "end_byte": 5023, "start_point": [135, 4], "end_point": [135, 6], "text": "\"/"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 5023, "end_byte": 5024, "start_point": [135, 6], "end_point": [135, 7], "text": "r"}, {"type": "unit_expression", "children": [{"type": "(", "children": [], "start_byte": 5024, "end_byte": 5025, "start_point": [135, 7], "end_point": [135, 8], "text": "o"}, {"type": ")", "children": [], "start_byte": 5025, "end_byte": 5026, "start_point": [135, 8], "end_point": [135, 9], "text": "o"}], "start_byte": 5024, "end_byte": 5026, "start_point": [135, 7], "end_point": [135, 9], "text": "oo"}, {"type": ")", "children": [], "start_byte": 5026, "end_byte": 5027, "start_point": [135, 9], "end_point": [135, 10], "text": "t"}], "start_byte": 5023, "end_byte": 5027, "start_point": [135, 6], "end_point": [135, 10], "text": "root"}], "start_byte": 5021, "end_byte": 5027, "start_point": [135, 4], "end_point": [135, 10], "text": "\"/root"}, {"type": "}", "children": [], "start_byte": 5028, "end_byte": 5029, "start_point": [136, 0], "end_point": [136, 1], "text": "c"}], "start_byte": 1037, "end_byte": 5029, "start_point": [25, 61], "end_point": [136, 1], "text": "ln!(\"Compress\ud83d\udd25\");\n     if let Some(n) = name {\n        // println!(\"Compressing file: {}\", n);\n    } else {\n        // println!(\"No file name provided\");\n    }\n\n    unsafe {\n        // println!(\"0Here\ud83d\udcaa\");\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    \n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_MODE {\n            1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Check if input file exists\n        // \u901a\u8fc7\u8c03\u7528 as_str() \u65b9\u6cd5\u5c06\u8fd9\u4e2a String \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\n        if SRC_MODE != 1 && !Path::new(u8_array_to_string(&IN_NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // let in_file = match SRC_MODE {\n        //     1 => io::stdin(),\n        //     _ => fs::File::open(&IN_NAME)?,\n        // };\n        // let out_file = match SRC_MODE {\n        //     1 | 2 => io::stdout(),\n        //     _ => fs::File::create(&OUT_NAME)?,\n        // };\n\n        let mut in_file: Option<File> = None;\n        let mut out_file: Option<File> = None;\n        if let Some(n) = name {\n            // println!(\"Compressing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\");\n        }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46\u5982\u679c IN_NAME \u662f\u57fa\u4e8e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff08\u4ee5 NUL \u5b57\u8282\u7ed3\u5c3e\uff09\uff0c\n        // \u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a NUL \u5b57\u8282\u3002\n        let in_name_str = IN_NAME\n            .iter()\n            .take_while(|&&c| c != 0) // \u53ea\u53d6\u76f4\u5230 NUL \u5b57\u8282\u4e4b\u524d\u7684\u90e8\u5206\n            .map(|&c| c as char)\n            .collect::<String>();\n\n        let out_name_str = format!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open(Path::new(&in_name_str)) {\n            Ok(file) => in_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error opening input file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!(\"compress_stream error: {}\", e);\n                return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_valid_input() {\n        // let input_filename = \"/root/c"}], "start_byte": 976, "end_byte": 5029, "start_point": [25, 0], "end_point": [136, 1], "text": "s(name: Option<&str>) -> Result<(), io::Error> {\n    // println!(\"Compress\ud83d\udd25\");\n     if let Some(n) = name {\n        // println!(\"Compressing file: {}\", n);\n    } else {\n        // println!(\"No file name provided\");\n    }\n\n    unsafe {\n        // println!(\"0Here\ud83d\udcaa\");\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    \n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_MODE {\n            1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Check if input file exists\n        // \u901a\u8fc7\u8c03\u7528 as_str() \u65b9\u6cd5\u5c06\u8fd9\u4e2a String \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\n        if SRC_MODE != 1 && !Path::new(u8_array_to_string(&IN_NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // let in_file = match SRC_MODE {\n        //     1 => io::stdin(),\n        //     _ => fs::File::open(&IN_NAME)?,\n        // };\n        // let out_file = match SRC_MODE {\n        //     1 | 2 => io::stdout(),\n        //     _ => fs::File::create(&OUT_NAME)?,\n        // };\n\n        let mut in_file: Option<File> = None;\n        let mut out_file: Option<File> = None;\n        if let Some(n) = name {\n            // println!(\"Compressing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\");\n        }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46\u5982\u679c IN_NAME \u662f\u57fa\u4e8e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff08\u4ee5 NUL \u5b57\u8282\u7ed3\u5c3e\uff09\uff0c\n        // \u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a NUL \u5b57\u8282\u3002\n        let in_name_str = IN_NAME\n            .iter()\n            .take_while(|&&c| c != 0) // \u53ea\u53d6\u76f4\u5230 NUL \u5b57\u8282\u4e4b\u524d\u7684\u90e8\u5206\n            .map(|&c| c as char)\n            .collect::<String>();\n\n        let out_name_str = format!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open(Path::new(&in_name_str)) {\n            Ok(file) => in_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error opening input file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!(\"compress_stream error: {}\", e);\n                return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_valid_input() {\n        // let input_filename = \"/root/c"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 5031, "end_byte": 5032, "start_point": [138, 0], "end_point": [138, 1], "text": "w"}, {"type": "[", "children": [], "start_byte": 5032, "end_byte": 5033, "start_point": [138, 1], "end_point": [138, 2], "text": "n"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 5033, "end_byte": 5036, "start_point": [138, 2], "end_point": [138, 5], "text": "-ru"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 5036, "end_byte": 5037, "start_point": [138, 5], "end_point": [138, 6], "text": "s"}, {"type": "identifier", "children": [], "start_byte": 5037, "end_byte": 5041, "start_point": [138, 6], "end_point": [138, 10], "text": "t/bz"}, {"type": ")", "children": [], "start_byte": 5041, "end_byte": 5042, "start_point": [138, 10], "end_point": [138, 11], "text": "i"}], "start_byte": 5036, "end_byte": 5042, "start_point": [138, 5], "end_point": [138, 11], "text": "st/bzi"}], "start_byte": 5033, "end_byte": 5042, "start_point": [138, 2], "end_point": [138, 11], "text": "-rust/bzi"}, {"type": "]", "children": [], "start_byte": 5042, "end_byte": 5043, "start_point": [138, 11], "end_point": [138, 12], "text": "p"}], "start_byte": 5031, "end_byte": 5043, "start_point": [138, 0], "end_point": [138, 12], "text": "wn-rust/bzip"}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 5044, "end_byte": 5047, "start_point": [139, 0], "end_point": [139, 3], "text": "/sa"}, {"type": "identifier", "children": [], "start_byte": 5048, "end_byte": 5053, "start_point": [139, 4], "end_point": [139, 9], "text": "ple1."}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 5054, "end_byte": 5055, "start_point": [139, 10], "end_point": [139, 11], "text": "e"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 5060, "end_byte": 5063, "start_point": [140, 4], "end_point": [140, 7], "text": "   "}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 5064, "end_byte": 5069, "start_point": [140, 8], "end_point": [140, 13], "text": "   //"}, {"type": "::", "children": [], "start_byte": 5069, "end_byte": 5071, "start_point": [140, 13], "end_point": [140, 15], "text": " l"}, {"type": "*", "children": [], "start_byte": 5071, "end_byte": 5072, "start_point": [140, 15], "end_point": [140, 16], "text": "e"}], "start_byte": 5064, "end_byte": 5072, "start_point": [140, 8], "end_point": [140, 16], "text": "   // le"}, {"type": ";", "children": [], "start_byte": 5072, "end_byte": 5073, "start_point": [140, 16], "end_point": [140, 17], "text": "t"}], "start_byte": 5060, "end_byte": 5073, "start_point": [140, 4], "end_point": [140, 17], "text": "       // let"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 5078, "end_byte": 5081, "start_point": [141, 4], "end_point": [141, 7], "text": "ut_"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 5082, "end_byte": 5085, "start_point": [141, 8], "end_point": [141, 11], "text": "ile"}, {"type": "::", "children": [], "start_byte": 5085, "end_byte": 5087, "start_point": [141, 11], "end_point": [141, 13], "text": "na"}, {"type": "identifier", "children": [], "start_byte": 5087, "end_byte": 5089, "start_point": [141, 13], "end_point": [141, 15], "text": "me"}], "start_byte": 5082, "end_byte": 5089, "start_point": [141, 8], "end_point": [141, 15], "text": "ilename"}, {"type": "::", "children": [], "start_byte": 5089, "end_byte": 5091, "start_point": [141, 15], "end_point": [141, 17], "text": " ="}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 5091, "end_byte": 5092, "start_point": [141, 17], "end_point": [141, 18], "text": " "}, {"type": "self", "children": [], "start_byte": 5092, "end_byte": 5096, "start_point": [141, 18], "end_point": [141, 22], "text": "\"out"}, {"type": ",", "children": [], "start_byte": 5096, "end_byte": 5097, "start_point": [141, 22], "end_point": [141, 23], "text": "p"}, {"type": "identifier", "children": [], "start_byte": 5098, "end_byte": 5103, "start_point": [141, 24], "end_point": [141, 29], "text": "t.txt"}, {"type": "}", "children": [], "start_byte": 5103, "end_byte": 5104, "start_point": [141, 29], "end_point": [141, 30], "text": "\""}], "start_byte": 5091, "end_byte": 5104, "start_point": [141, 17], "end_point": [141, 30], "text": " \"output.txt\""}], "start_byte": 5082, "end_byte": 5104, "start_point": [141, 8], "end_point": [141, 30], "text": "ilename = \"output.txt\""}, {"type": ";", "children": [], "start_byte": 5104, "end_byte": 5105, "start_point": [141, 30], "end_point": [141, 31], "text": ";"}], "start_byte": 5078, "end_byte": 5105, "start_point": [141, 4], "end_point": [141, 31], "text": "ut_filename = \"output.txt\";"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 5110, "end_byte": 5113, "start_point": [142, 4], "end_point": [142, 7], "text": "   "}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 5114, "end_byte": 5117, "start_point": [142, 8], "end_point": [142, 11], "text": "let"}, {"type": "::", "children": [], "start_byte": 5117, "end_byte": 5119, "start_point": [142, 11], "end_point": [142, 13], "text": " i"}, {"type": "identifier", "children": [], "start_byte": 5119, "end_byte": 5121, "start_point": [142, 13], "end_point": [142, 15], "text": "np"}], "start_byte": 5114, "end_byte": 5121, "start_point": [142, 8], "end_point": [142, 15], "text": "let inp"}, {"type": "::", "children": [], "start_byte": 5121, "end_byte": 5123, "start_point": [142, 15], "end_point": [142, 17], "text": "ut"}, {"type": "identifier", "children": [], "start_byte": 5123, "end_byte": 5127, "start_point": [142, 17], "end_point": [142, 21], "text": "_fil"}], "start_byte": 5114, "end_byte": 5127, "start_point": [142, 8], "end_point": [142, 21], "text": "let input_fil"}, {"type": ";", "children": [], "start_byte": 5127, "end_byte": 5128, "start_point": [142, 21], "end_point": [142, 22], "text": "e"}], "start_byte": 5110, "end_byte": 5128, "start_point": [142, 4], "end_point": [142, 22], "text": "    let input_file"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 5133, "end_byte": 5136, "start_point": [143, 4], "end_point": [143, 7], "text": "= \""}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 5137, "end_byte": 5140, "start_point": [143, 8], "end_point": [143, 11], "text": "roo"}, {"type": "::", "children": [], "start_byte": 5140, "end_byte": 5142, "start_point": [143, 11], "end_point": [143, 13], "text": "t/"}, {"type": "identifier", "children": [], "start_byte": 5142, "end_byte": 5146, "start_point": [143, 13], "end_point": [143, 17], "text": "crow"}], "start_byte": 5137, "end_byte": 5146, "start_point": [143, 8], "end_point": [143, 17], "text": "root/crow"}, {"type": "::", "children": [], "start_byte": 5146, "end_byte": 5148, "start_point": [143, 17], "end_point": [143, 19], "text": "n-"}, {"type": "identifier", "children": [], "start_byte": 5148, "end_byte": 5152, "start_point": [143, 19], "end_point": [143, 23], "text": "rust"}], "start_byte": 5137, "end_byte": 5152, "start_point": [143, 8], "end_point": [143, 23], "text": "root/crown-rust"}, {"type": ";", "children": [], "start_byte": 5152, "end_byte": 5153, "start_point": [143, 23], "end_point": [143, 24], "text": "/"}], "start_byte": 5133, "end_byte": 5153, "start_point": [143, 4], "end_point": [143, 24], "text": "= \"/root/crown-rust/"}, {"type": "line_comment", "children": [], "start_byte": 5159, "end_byte": 5209, "start_point": [145, 4], "end_point": [145, 54], "text": "backup/11Nov.txt\";\n                // \u521b\u5efa\u4e00\u4e2a\u8f93\u5165\u6587\u4ef6\u7528\u4e8e\u6d4b\u8bd5"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 5214, "end_byte": 5215, "start_point": [146, 4], "end_point": [146, 5], "text": " "}, {"type": "[", "children": [], "start_byte": 5215, "end_byte": 5216, "start_point": [146, 5], "end_point": [146, 6], "text": " "}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 5216, "end_byte": 5220, "start_point": [146, 6], "end_point": [146, 10], "text": "  le"}], "start_byte": 5216, "end_byte": 5220, "start_point": [146, 6], "end_point": [146, 10], "text": "  le"}, {"type": "]", "children": [], "start_byte": 5220, "end_byte": 5221, "start_point": [146, 10], "end_point": [146, 11], "text": "t"}], "start_byte": 5214, "end_byte": 5221, "start_point": [146, 4], "end_point": [146, 11], "text": "    let"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 5226, "end_byte": 5228, "start_point": [147, 4], "end_point": [147, 6], "text": "fi"}, {"type": "identifier", "children": [], "start_byte": 5229, "end_byte": 5254, "start_point": [147, 7], "end_point": [147, 32], "text": "e = File::create(input_fi"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 5254, "end_byte": 5255, "start_point": [147, 32], "end_point": [147, 33], "text": "l"}, {"type": ")", "children": [], "start_byte": 5255, "end_byte": 5256, "start_point": [147, 33], "end_point": [147, 34], "text": "e"}], "start_byte": 5254, "end_byte": 5256, "start_point": [147, 32], "end_point": [147, 34], "text": "le"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 5257, "end_byte": 5258, "start_point": [147, 35], "end_point": [147, 36], "text": "a"}, {"type": "line_comment", "children": [], "start_byte": 5267, "end_byte": 5328, "start_point": [148, 8], "end_point": [148, 69], "text": "p();\n        writeln!(file, \"1\").unwrap();\n        // \u8bbe\u7f6e\u6d4b\u8bd5\u73af\u5883."}, {"type": "line_comment", "children": [], "start_byte": 5337, "end_byte": 5375, "start_point": [149, 8], "end_point": [149, 46], "text": "unsafe{\n            SRC_MODE = 3; // \u5047"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 5384, "end_byte": 5387, "start_point": [150, 8], "end_point": [150, 11], "text": "\u5f0f\n "}, {"type": "identifier", "children": [], "start_byte": 5388, "end_byte": 5402, "start_point": [150, 12], "end_point": [150, 26], "text": "      }\n      "}, {"type": "=", "children": [], "start_byte": 5403, "end_byte": 5404, "start_point": [150, 27], "end_point": [150, 28], "text": " "}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 5405, "end_byte": 5406, "start_point": [150, 29], "end_point": [150, 30], "text": "e"}, {"type": "\"", "children": [], "start_byte": 5445, "end_byte": 5446, "start_point": [150, 69], "end_point": [150, 70], "text": " "}], "start_byte": 5405, "end_byte": 5446, "start_point": [150, 29], "end_point": [150, 70], "text": "et mut in_name_array = [0; 1034];\n       "}, {"type": ";", "children": [], "start_byte": 5446, "end_byte": 5447, "start_point": [150, 70], "end_point": [150, 71], "text": " "}], "start_byte": 5384, "end_byte": 5447, "start_point": [150, 8], "end_point": [150, 71], "text": "\u5f0f\n        }\n        let mut in_name_array = [0; 1034];\n        "}, {"type": "line_comment", "children": [], "start_byte": 5464, "end_byte": 5503, "start_point": [151, 16], "end_point": [151, 55], "text": "put_filename.as_bytes();\n        in_nam"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 5512, "end_byte": 5515, "start_point": [152, 8], "end_point": [152, 11], "text": ".in"}, {"type": "mutable_specifier", "children": [], "start_byte": 5516, "end_byte": 5519, "start_point": [152, 12], "end_point": [152, 15], "text": "byt"}, {"type": "identifier", "children": [], "start_byte": 5520, "end_byte": 5524, "start_point": [152, 16], "end_point": [152, 20], "text": "s.le"}, {"type": "=", "children": [], "start_byte": 5525, "end_byte": 5526, "start_point": [152, 21], "end_point": [152, 22], "text": "("}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 5527, "end_byte": 5531, "start_point": [152, 23], "end_point": [152, 27], "text": "].co"}, {"type": "::", "children": [], "start_byte": 5531, "end_byte": 5533, "start_point": [152, 27], "end_point": [152, 29], "text": "py"}, {"type": "identifier", "children": [], "start_byte": 5533, "end_byte": 5539, "start_point": [152, 29], "end_point": [152, 35], "text": "_from_"}], "start_byte": 5527, "end_byte": 5539, "start_point": [152, 23], "end_point": [152, 35], "text": "].copy_from_"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 5539, "end_byte": 5540, "start_point": [152, 35], "end_point": [152, 36], "text": "s"}, {"type": "identifier", "children": [], "start_byte": 5540, "end_byte": 5554, "start_point": [152, 36], "end_point": [152, 50], "text": "lice(in_bytes)"}, {"type": ")", "children": [], "start_byte": 5554, "end_byte": 5555, "start_point": [152, 50], "end_point": [152, 51], "text": ";"}], "start_byte": 5539, "end_byte": 5555, "start_point": [152, 35], "end_point": [152, 51], "text": "slice(in_bytes);"}], "start_byte": 5527, "end_byte": 5555, "start_point": [152, 23], "end_point": [152, 51], "text": "].copy_from_slice(in_bytes);"}, {"type": ".", "children": [], "start_byte": 5555, "end_byte": 5556, "start_point": [152, 51], "end_point": [152, 52], "text": "\n"}, {"type": "field_identifier", "children": [], "start_byte": 5556, "end_byte": 5562, "start_point": [152, 52], "end_point": [152, 58], "text": "      "}], "start_byte": 5527, "end_byte": 5562, "start_point": [152, 23], "end_point": [152, 58], "text": "].copy_from_slice(in_bytes);\n      "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 5562, "end_byte": 5563, "start_point": [152, 58], "end_point": [152, 59], "text": " "}, {"type": ")", "children": [], "start_byte": 5563, "end_byte": 5564, "start_point": [152, 59], "end_point": [152, 60], "text": " "}], "start_byte": 5562, "end_byte": 5564, "start_point": [152, 58], "end_point": [152, 60], "text": "  "}], "start_byte": 5527, "end_byte": 5564, "start_point": [152, 23], "end_point": [152, 60], "text": "].copy_from_slice(in_bytes);\n        "}, {"type": ";", "children": [], "start_byte": 5564, "end_byte": 5565, "start_point": [152, 60], "end_point": [152, 61], "text": "u"}], "start_byte": 5512, "end_byte": 5565, "start_point": [152, 8], "end_point": [152, 61], "text": ".in_bytes.len()].copy_from_slice(in_bytes);\n        u"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 5574, "end_byte": 5581, "start_point": [153, 8], "end_point": [153, 15], "text": "       "}, {"type": "!", "children": [], "start_byte": 5581, "end_byte": 5582, "start_point": [153, 15], "end_point": [153, 16], "text": " "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 5582, "end_byte": 5583, "start_point": [153, 16], "end_point": [153, 17], "text": " "}, {"type": "identifier", "children": [], "start_byte": 5583, "end_byte": 5587, "start_point": [153, 17], "end_point": [153, 21], "text": " IN_"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 5589, "end_byte": 5590, "start_point": [153, 23], "end_point": [153, 24], "text": "M"}, {"type": "\"", "children": [], "start_byte": 5591, "end_byte": 5592, "start_point": [153, 25], "end_point": [153, 26], "text": " "}], "start_byte": 5589, "end_byte": 5592, "start_point": [153, 23], "end_point": [153, 26], "text": "ME "}, {"type": ")", "children": [], "start_byte": 5592, "end_byte": 5593, "start_point": [153, 26], "end_point": [153, 27], "text": "="}], "start_byte": 5582, "end_byte": 5593, "start_point": [153, 16], "end_point": [153, 27], "text": "  IN_NAME ="}], "start_byte": 5574, "end_byte": 5593, "start_point": [153, 8], "end_point": [153, 27], "text": "          IN_NAME ="}, {"type": ".", "children": [], "start_byte": 5593, "end_byte": 5594, "start_point": [153, 27], "end_point": [153, 28], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 5594, "end_byte": 5600, "start_point": [153, 28], "end_point": [153, 34], "text": "in_nam"}], "start_byte": 5574, "end_byte": 5600, "start_point": [153, 8], "end_point": [153, 34], "text": "          IN_NAME = in_nam"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 5600, "end_byte": 5601, "start_point": [153, 34], "end_point": [153, 35], "text": "e"}, {"type": ")", "children": [], "start_byte": 5601, "end_byte": 5602, "start_point": [153, 35], "end_point": [153, 36], "text": "_"}], "start_byte": 5600, "end_byte": 5602, "start_point": [153, 34], "end_point": [153, 36], "text": "e_"}], "start_byte": 5574, "end_byte": 5602, "start_point": [153, 8], "end_point": [153, 36], "text": "          IN_NAME = in_name_"}, {"type": ";", "children": [], "start_byte": 5602, "end_byte": 5603, "start_point": [153, 36], "end_point": [153, 37], "text": "a"}], "start_byte": 5574, "end_byte": 5603, "start_point": [153, 8], "end_point": [153, 37], "text": "          IN_NAME = in_name_a"}, {"type": "line_comment", "children": [], "start_byte": 5612, "end_byte": 5634, "start_point": [154, 8], "end_point": [154, 30], "text": "\u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        "}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 5643, "end_byte": 5649, "start_point": [155, 8], "end_point": [155, 14], "text": "  // l"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 5649, "end_byte": 5650, "start_point": [155, 14], "end_point": [155, 15], "text": "e"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 5663, "end_byte": 5671, "start_point": [156, 12], "end_point": [156, 20], "text": "e_array "}, {"type": "=", "children": [], "start_byte": 5672, "end_byte": 5673, "start_point": [156, 21], "end_point": [156, 22], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 5674, "end_byte": 5675, "start_point": [156, 23], "end_point": [156, 24], "text": "0"}], "start_byte": 5663, "end_byte": 5675, "start_point": [156, 12], "end_point": [156, 24], "text": "e_array = [0"}, {"type": ";", "children": [], "start_byte": 5675, "end_byte": 5676, "start_point": [156, 24], "end_point": [156, 25], "text": ";"}], "start_byte": 5663, "end_byte": 5676, "start_point": [156, 12], "end_point": [156, 25], "text": "e_array = [0;"}, {"type": "line_comment", "children": [], "start_byte": 5677, "end_byte": 5707, "start_point": [156, 26], "end_point": [156, 56], "text": "1034];\n        // let out_byte"}, {"type": "}", "children": [], "start_byte": 5716, "end_byte": 5717, "start_point": [157, 8], "end_point": [157, 9], "text": "t"}], "start_byte": 5649, "end_byte": 5717, "start_point": [155, 14], "end_point": [157, 9], "text": "et mut out_name_array = [0; 1034];\n        // let out_bytes = output"}], "start_byte": 5643, "end_byte": 5717, "start_point": [155, 8], "end_point": [157, 9], "text": "  // let mut out_name_array = [0; 1034];\n        // let out_bytes = output"}], "start_byte": 5643, "end_byte": 5717, "start_point": [155, 8], "end_point": [157, 9], "text": "  // let mut out_name_array = [0; 1034];\n        // let out_bytes = output"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 5726, "end_byte": 5729, "start_point": [158, 8], "end_point": [158, 11], "text": ".as"}, {"type": "mutable_specifier", "children": [], "start_byte": 5730, "end_byte": 5733, "start_point": [158, 12], "end_point": [158, 15], "text": "byt"}, {"type": "identifier", "children": [], "start_byte": 5734, "end_byte": 5747, "start_point": [158, 16], "end_point": [158, 29], "text": "s();\n        "}, {"type": "=", "children": [], "start_byte": 5748, "end_byte": 5749, "start_point": [158, 30], "end_point": [158, 31], "text": "/"}, {"type": "array_expression", "children": [{"type": "[", "children": [], "start_byte": 5750, "end_byte": 5751, "start_point": [158, 32], "end_point": [158, 33], "text": "o"}, {"type": "integer_literal", "children": [], "start_byte": 5751, "end_byte": 5752, "start_point": [158, 33], "end_point": [158, 34], "text": "u"}, {"type": ";", "children": [], "start_byte": 5752, "end_byte": 5753, "start_point": [158, 34], "end_point": [158, 35], "text": "t"}, {"type": "integer_literal", "children": [], "start_byte": 5754, "end_byte": 5758, "start_point": [158, 36], "end_point": [158, 40], "text": "name"}, {"type": "]", "children": [], "start_byte": 5758, "end_byte": 5759, "start_point": [158, 40], "end_point": [158, 41], "text": "_"}], "start_byte": 5750, "end_byte": 5759, "start_point": [158, 32], "end_point": [158, 41], "text": "out_name_"}, {"type": ";", "children": [], "start_byte": 5759, "end_byte": 5760, "start_point": [158, 41], "end_point": [158, 42], "text": "a"}], "start_byte": 5726, "end_byte": 5760, "start_point": [158, 8], "end_point": [158, 42], "text": ".as_bytes();\n        // out_name_a"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 5769, "end_byte": 5772, "start_point": [159, 8], "end_point": [159, 11], "text": "t_b"}, {"type": "identifier", "children": [], "start_byte": 5773, "end_byte": 5781, "start_point": [159, 12], "end_point": [159, 20], "text": "tes.len("}, {"type": "=", "children": [], "start_byte": 5782, "end_byte": 5783, "start_point": [159, 21], "end_point": [159, 22], "text": "]"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 5784, "end_byte": 5798, "start_point": [159, 23], "end_point": [159, 37], "text": "copy_from_slic"}, {"type": ".", "children": [], "start_byte": 5798, "end_byte": 5799, "start_point": [159, 37], "end_point": [159, 38], "text": "e"}, {"type": "field_identifier", "children": [], "start_byte": 5799, "end_byte": 5807, "start_point": [159, 38], "end_point": [159, 46], "text": "(out_byt"}], "start_byte": 5784, "end_byte": 5807, "start_point": [159, 23], "end_point": [159, 46], "text": "copy_from_slice(out_byt"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 5807, "end_byte": 5808, "start_point": [159, 46], "end_point": [159, 47], "text": "e"}, {"type": ")", "children": [], "start_byte": 5808, "end_byte": 5809, "start_point": [159, 47], "end_point": [159, 48], "text": "s"}], "start_byte": 5807, "end_byte": 5809, "start_point": [159, 46], "end_point": [159, 48], "text": "es"}], "start_byte": 5784, "end_byte": 5809, "start_point": [159, 23], "end_point": [159, 48], "text": "copy_from_slice(out_bytes"}, {"type": ";", "children": [], "start_byte": 5809, "end_byte": 5810, "start_point": [159, 48], "end_point": [159, 49], "text": ")"}], "start_byte": 5769, "end_byte": 5810, "start_point": [159, 8], "end_point": [159, 49], "text": "t_bytes.len()].copy_from_slice(out_bytes)"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 5819, "end_byte": 5832, "start_point": [160, 8], "end_point": [160, 21], "text": " // unsafe{\n "}, {"type": "[", "children": [], "start_byte": 5832, "end_byte": 5833, "start_point": [160, 21], "end_point": [160, 22], "text": " "}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "range_expression", "children": [{"type": "..", "children": [], "start_byte": 5833, "end_byte": 5835, "start_point": [160, 22], "end_point": [160, 24], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 5835, "end_byte": 5843, "start_point": [160, 24], "end_point": [160, 32], "text": "    //  "}], "start_byte": 5833, "end_byte": 5843, "start_point": [160, 22], "end_point": [160, 32], "text": "      //  "}, {"type": ".", "children": [], "start_byte": 5843, "end_byte": 5844, "start_point": [160, 32], "end_point": [160, 33], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 5844, "end_byte": 5847, "start_point": [160, 33], "end_point": [160, 36], "text": "  O"}], "start_byte": 5833, "end_byte": 5847, "start_point": [160, 22], "end_point": [160, 36], "text": "      //     O"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 5847, "end_byte": 5848, "start_point": [160, 36], "end_point": [160, 37], "text": "U"}, {"type": ")", "children": [], "start_byte": 5848, "end_byte": 5849, "start_point": [160, 37], "end_point": [160, 38], "text": "T"}], "start_byte": 5847, "end_byte": 5849, "start_point": [160, 36], "end_point": [160, 38], "text": "UT"}], "start_byte": 5833, "end_byte": 5849, "start_point": [160, 22], "end_point": [160, 38], "text": "      //     OUT"}, {"type": "]", "children": [], "start_byte": 5849, "end_byte": 5850, "start_point": [160, 38], "end_point": [160, 39], "text": "_"}], "start_byte": 5819, "end_byte": 5850, "start_point": [160, 8], "end_point": [160, 39], "text": " // unsafe{\n        //     OUT_"}, {"type": ".", "children": [], "start_byte": 5850, "end_byte": 5851, "start_point": [160, 39], "end_point": [160, 40], "text": "N"}, {"type": "field_identifier", "children": [], "start_byte": 5851, "end_byte": 5866, "start_point": [160, 40], "end_point": [160, 55], "text": "AME = out_name_"}], "start_byte": 5819, "end_byte": 5866, "start_point": [160, 8], "end_point": [160, 55], "text": " // unsafe{\n        //     OUT_NAME = out_name_"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 5866, "end_byte": 5867, "start_point": [160, 55], "end_point": [160, 56], "text": "a"}, {"type": "identifier", "children": [], "start_byte": 5867, "end_byte": 5875, "start_point": [160, 56], "end_point": [160, 64], "text": "rray; //"}, {"type": ")", "children": [], "start_byte": 5875, "end_byte": 5876, "start_point": [160, 64], "end_point": [160, 65], "text": " "}], "start_byte": 5866, "end_byte": 5876, "start_point": [160, 55], "end_point": [160, 65], "text": "array; // "}], "start_byte": 5819, "end_byte": 5876, "start_point": [160, 8], "end_point": [160, 65], "text": " // unsafe{\n        //     OUT_NAME = out_name_array; // "}, {"type": ";", "children": [], "start_byte": 5876, "end_byte": 5877, "start_point": [160, 65], "end_point": [160, 66], "text": "\u5c06"}], "start_byte": 5819, "end_byte": 5877, "start_point": [160, 8], "end_point": [160, 66], "text": " // unsafe{\n        //     OUT_NAME = out_name_array; // \u5c06"}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 5886, "end_byte": 5892, "start_point": [161, 8], "end_point": [161, 14], "text": "\u5c0f\u6570\u7ec4\n  "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 5892, "end_byte": 5893, "start_point": [161, 14], "end_point": [161, 15], "text": " "}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 5906, "end_byte": 5913, "start_point": [162, 12], "end_point": [162, 19], "text": "      /"}, {"type": "=", "children": [], "start_byte": 5914, "end_byte": 5915, "start_point": [162, 20], "end_point": [162, 21], "text": " "}, {"type": "identifier", "children": [], "start_byte": 5916, "end_byte": 5929, "start_point": [162, 22], "end_point": [162, 35], "text": "\u884ccompress\u51fd\u6570\n\n"}], "start_byte": 5906, "end_byte": 5929, "start_point": [162, 12], "end_point": [162, 35], "text": "      // \u6267\u884ccompress\u51fd\u6570\n\n"}, {"type": ";", "children": [], "start_byte": 5929, "end_byte": 5930, "start_point": [162, 35], "end_point": [162, 36], "text": " "}], "start_byte": 5906, "end_byte": 5930, "start_point": [162, 12], "end_point": [162, 36], "text": "      // \u6267\u884ccompress\u51fd\u6570\n\n "}, {"type": "line_comment", "children": [], "start_byte": 5931, "end_byte": 5967, "start_point": [162, 37], "end_point": [162, 73], "text": "      let result = compress(Some(inp"}, {"type": "}", "children": [], "start_byte": 5976, "end_byte": 5977, "start_point": [163, 8], "end_point": [163, 9], "text": "m"}], "start_byte": 5892, "end_byte": 5977, "start_point": [161, 14], "end_point": [163, 9], "text": "      // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filenam"}], "start_byte": 5886, "end_byte": 5977, "start_point": [161, 8], "end_point": [163, 9], "text": "\u5c0f\u6570\u7ec4\n        // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filenam"}], "start_byte": 5886, "end_byte": 5977, "start_point": [161, 8], "end_point": [163, 9], "text": "\u5c0f\u6570\u7ec4\n        // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filenam"}, {"type": "line_comment", "children": [], "start_byte": 5987, "end_byte": 6025, "start_point": [165, 8], "end_point": [165, 46], "text": "   // assert!(result.is_ok());\n\n      "}, {"type": "line_comment", "children": [], "start_byte": 6034, "end_byte": 6080, "start_point": [166, 8], "end_point": [166, 54], "text": "\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        // assert!(Path::new(output_fil"}, {"type": "line_comment", "children": [], "start_byte": 6089, "end_byte": 6153, "start_point": [167, 8], "end_point": [167, 72], "text": "ists());\n\n        // \u6e05\u7406\u6d4b\u8bd5\u6587\u4ef6\n        // std::fs::remove_file(inpu"}, {"type": "line_comment", "children": [], "start_byte": 6162, "end_byte": 6172, "start_point": [168, 8], "end_point": [168, 18], "text": "e).unwrap("}, {"type": "line_comment", "children": [], "start_byte": 6181, "end_byte": 6251, "start_point": [169, 8], "end_point": [169, 78], "text": "  // std::fs::remove_file(output_filename).unwrap();\n    }\n\n    // \u6d4b\u8bd5c"}, {"type": "line_comment", "children": [], "start_byte": 6260, "end_byte": 6264, "start_point": [170, 8], "end_point": [170, 12], "text": "\u5904\u7406\u65e0\u6548"}, {"type": "line_comment", "children": [], "start_byte": 6274, "end_byte": 6297, "start_point": [172, 8], "end_point": [172, 31], "text": "#[test]\n    fn test_com"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 6307, "end_byte": 6310, "start_point": [174, 8], "end_point": [174, 11], "text": "lid"}, {"type": "identifier", "children": [], "start_byte": 6311, "end_byte": 6317, "start_point": [174, 12], "end_point": [174, 18], "text": "input("}, {"type": "=", "children": [], "start_byte": 6318, "end_byte": 6319, "start_point": [174, 19], "end_point": [174, 20], "text": " "}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 6320, "end_byte": 6328, "start_point": [174, 21], "end_point": [174, 29], "text": "\n       "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 6328, "end_byte": 6329, "start_point": [174, 29], "end_point": [174, 30], "text": " "}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 6329, "end_byte": 6333, "start_point": [174, 30], "end_point": [174, 34], "text": "let "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 6333, "end_byte": 6334, "start_point": [174, 34], "end_point": [174, 35], "text": "r"}, {"type": "identifier", "children": [], "start_byte": 6334, "end_byte": 6348, "start_point": [174, 35], "end_point": [174, 49], "text": "esult = compre"}, {"type": ")", "children": [], "start_byte": 6348, "end_byte": 6349, "start_point": [174, 49], "end_point": [174, 50], "text": "s"}], "start_byte": 6333, "end_byte": 6349, "start_point": [174, 34], "end_point": [174, 50], "text": "result = compres"}], "start_byte": 6329, "end_byte": 6349, "start_point": [174, 30], "end_point": [174, 50], "text": "let result = compres"}, {"type": ")", "children": [], "start_byte": 6349, "end_byte": 6350, "start_point": [174, 50], "end_point": [174, 51], "text": "s"}], "start_byte": 6328, "end_byte": 6350, "start_point": [174, 29], "end_point": [174, 51], "text": " let result = compress"}], "start_byte": 6320, "end_byte": 6350, "start_point": [174, 21], "end_point": [174, 51], "text": "\n        let result = compress"}, {"type": ";", "children": [], "start_byte": 6350, "end_byte": 6351, "start_point": [174, 51], "end_point": [174, 52], "text": "("}], "start_byte": 6307, "end_byte": 6351, "start_point": [174, 8], "end_point": [174, 52], "text": "lid_input() {\n        let result = compress("}, {"type": "line_comment", "children": [], "start_byte": 6360, "end_byte": 6387, "start_point": [175, 8], "end_point": [175, 35], "text": "      assert!(result.is_err"}, {"type": "line_comment", "children": [], "start_byte": 6397, "end_byte": 6430, "start_point": [177, 8], "end_point": [177, 41], "text": "\n\n    // \u66f4\u591a\u6d4b\u8bd5\u7528\u4f8b...\n}\n\n// #[derive"}, {"type": "line_comment", "children": [], "start_byte": 6439, "end_byte": 6487, "start_point": [178, 8], "end_point": [178, 56], "text": "q)]\n// pub enum SrcMode {\n//     SM_I2O = 1,\n// "}, {"type": "line_comment", "children": [], "start_byte": 6497, "end_byte": 6518, "start_point": [180, 8], "end_point": [180, 29], "text": " = 2,\n//     SM_F2F ="}, {"type": "line_comment", "children": [], "start_byte": 6527, "end_byte": 6576, "start_point": [181, 8], "end_point": [181, 57], "text": "\n// impl From<i32> for SrcMode {\n//     fn from(m"}, {"type": "line_comment", "children": [], "start_byte": 6585, "end_byte": 6635, "start_point": [182, 8], "end_point": [182, 58], "text": " -> Self {\n//         match mode {\n//             "}, {"type": "}", "children": [], "start_byte": 6640, "end_byte": 6641, "start_point": [183, 4], "end_point": [183, 5], "text": "S"}], "start_byte": 5257, "end_byte": 6641, "start_point": [147, 35], "end_point": [183, 5], "text": "ame).unwrap();\n        writeln!(file, \"1\").unwrap();\n        // \u8bbe\u7f6e\u6d4b\u8bd5\u73af\u5883.\n        unsafe{\n            SRC_MODE = 3; // \u5047\u8bbe 3 \u4ee3\u8868\u6b63\u5e38\u6a21\u5f0f\n        }\n        let mut in_name_array = [0; 1034];\n        let in_bytes = input_filename.as_bytes();\n        in_name_array[..in_bytes.len()].copy_from_slice(in_bytes);\n        unsafe{\n            IN_NAME = in_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        }\n\n        // let mut out_name_array = [0; 1034];\n        // let out_bytes = output_filename.as_bytes();\n        // out_name_array[..out_bytes.len()].copy_from_slice(out_bytes);\n        // unsafe{\n        //     OUT_NAME = out_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filename));\n        // assert!(result.is_ok());\n\n        // \u9a8c\u8bc1\u8f93\u51fa\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        // assert!(Path::new(output_filename).exists());\n\n        // \u6e05\u7406\u6d4b\u8bd5\u6587\u4ef6\n        // std::fs::remove_file(input_filename).unwrap();\n        // std::fs::remove_file(output_filename).unwrap();\n    }\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u65e0\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_invalid_input() {\n        let result = compress(None);\n        assert!(result.is_err());\n    }\n\n    // \u66f4\u591a\u6d4b\u8bd5\u7528\u4f8b...\n}\n\n// #[derive(PartialEq)]\n// pub enum SrcMode {\n//     SM_I2O = 1,\n//     SM_F2O = 2,\n//     SM_F2F = 3,\n// }\n\n// impl From<i32> for SrcMode {\n//     fn from(mode: i32) -> Self {\n//         match mode {\n//             1 => S"}], "start_byte": 5226, "end_byte": 6641, "start_point": [147, 4], "end_point": [183, 5], "text": "file = File::create(input_filename).unwrap();\n        writeln!(file, \"1\").unwrap();\n        // \u8bbe\u7f6e\u6d4b\u8bd5\u73af\u5883.\n        unsafe{\n            SRC_MODE = 3; // \u5047\u8bbe 3 \u4ee3\u8868\u6b63\u5e38\u6a21\u5f0f\n        }\n        let mut in_name_array = [0; 1034];\n        let in_bytes = input_filename.as_bytes();\n        in_name_array[..in_bytes.len()].copy_from_slice(in_bytes);\n        unsafe{\n            IN_NAME = in_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        }\n\n        // let mut out_name_array = [0; 1034];\n        // let out_bytes = output_filename.as_bytes();\n        // out_name_array[..out_bytes.len()].copy_from_slice(out_bytes);\n        // unsafe{\n        //     OUT_NAME = out_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filename));\n        // assert!(result.is_ok());\n\n        // \u9a8c\u8bc1\u8f93\u51fa\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        // assert!(Path::new(output_filename).exists());\n\n        // \u6e05\u7406\u6d4b\u8bd5\u6587\u4ef6\n        // std::fs::remove_file(input_filename).unwrap();\n        // std::fs::remove_file(output_filename).unwrap();\n    }\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u65e0\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_invalid_input() {\n        let result = compress(None);\n        assert!(result.is_err());\n    }\n\n    // \u66f4\u591a\u6d4b\u8bd5\u7528\u4f8b...\n}\n\n// #[derive(PartialEq)]\n// pub enum SrcMode {\n//     SM_I2O = 1,\n//     SM_F2O = 2,\n//     SM_F2F = 3,\n// }\n\n// impl From<i32> for SrcMode {\n//     fn from(mode: i32) -> Self {\n//         match mode {\n//             1 => S"}, {"type": "line_comment", "children": [], "start_byte": 6647, "end_byte": 6697, "start_point": [185, 4], "end_point": [185, 54], "text": "::SM_I2O,\n//             2 => SrcMode::SM_F2O,\n// "}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 6702, "end_byte": 6703, "start_point": [186, 4], "end_point": [186, 5], "text": " "}, {"type": "[", "children": [], "start_byte": 6703, "end_byte": 6704, "start_point": [186, 5], "end_point": [186, 6], "text": " "}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 6704, "end_byte": 6708, "start_point": [186, 6], "end_point": [186, 10], "text": "    "}], "start_byte": 6704, "end_byte": 6708, "start_point": [186, 6], "end_point": [186, 10], "text": "    "}, {"type": "]", "children": [], "start_byte": 6708, "end_byte": 6709, "start_point": [186, 10], "end_point": [186, 11], "text": " "}], "start_byte": 6702, "end_byte": 6709, "start_point": [186, 4], "end_point": [186, 11], "text": "       "}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 6714, "end_byte": 6716, "start_point": [187, 4], "end_point": [187, 6], "text": "Sr"}, {"type": "identifier", "children": [], "start_byte": 6717, "end_byte": 6744, "start_point": [187, 7], "end_point": [187, 34], "text": "Mode::SM_F2F,\n//           "}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 6744, "end_byte": 6745, "start_point": [187, 34], "end_point": [187, 35], "text": " "}, {"type": ")", "children": [], "start_byte": 6745, "end_byte": 6746, "start_point": [187, 35], "end_point": [187, 36], "text": " "}], "start_byte": 6744, "end_byte": 6746, "start_point": [187, 34], "end_point": [187, 36], "text": "  "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 6747, "end_byte": 6748, "start_point": [187, 37], "end_point": [187, 38], "text": " "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 6757, "end_byte": 6760, "start_point": [188, 8], "end_point": [188, 11], "text": "(\"I"}, {"type": "identifier", "children": [], "start_byte": 6761, "end_byte": 6767, "start_point": [188, 12], "end_point": [188, 18], "text": "valid "}, {"type": "=", "children": [], "start_byte": 6768, "end_byte": 6769, "start_point": [188, 19], "end_point": [188, 20], "text": "o"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 6770, "end_byte": 6778, "start_point": [188, 21], "end_point": [188, 29], "text": "rce mode"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 6778, "end_byte": 6779, "start_point": [188, 29], "end_point": [188, 30], "text": "\""}, {"type": "identifier", "children": [], "start_byte": 6779, "end_byte": 6783, "start_point": [188, 30], "end_point": [188, 34], "text": "),\n/"}, {"type": ")", "children": [], "start_byte": 6783, "end_byte": 6784, "start_point": [188, 34], "end_point": [188, 35], "text": "/"}], "start_byte": 6778, "end_byte": 6784, "start_point": [188, 29], "end_point": [188, 35], "text": "\"),\n//"}], "start_byte": 6770, "end_byte": 6784, "start_point": [188, 21], "end_point": [188, 35], "text": "rce mode\"),\n//"}, {"type": ";", "children": [], "start_byte": 6784, "end_byte": 6785, "start_point": [188, 35], "end_point": [188, 36], "text": " "}], "start_byte": 6757, "end_byte": 6785, "start_point": [188, 8], "end_point": [188, 36], "text": "(\"Invalid source mode\"),\n// "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 6794, "end_byte": 6800, "start_point": [189, 8], "end_point": [189, 14], "text": "\n//   "}, {"type": "!", "children": [], "start_byte": 6800, "end_byte": 6801, "start_point": [189, 14], "end_point": [189, 15], "text": " "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 6801, "end_byte": 6802, "start_point": [189, 15], "end_point": [189, 16], "text": " "}, {"type": "identifier", "children": [], "start_byte": 6802, "end_byte": 6808, "start_point": [189, 16], "end_point": [189, 22], "text": "}\n// }"}, {"type": "identifier", "children": [], "start_byte": 6809, "end_byte": 6815, "start_point": [189, 23], "end_point": [189, 29], "text": "// fn "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 6815, "end_byte": 6816, "start_point": [189, 29], "end_point": [189, 30], "text": "i"}, {"type": ")", "children": [], "start_byte": 6816, "end_byte": 6817, "start_point": [189, 30], "end_point": [189, 31], "text": "o"}], "start_byte": 6815, "end_byte": 6817, "start_point": [189, 29], "end_point": [189, 31], "text": "io"}, {"type": ")", "children": [], "start_byte": 6817, "end_byte": 6818, "start_point": [189, 31], "end_point": [189, 32], "text": "_"}], "start_byte": 6801, "end_byte": 6818, "start_point": [189, 15], "end_point": [189, 32], "text": " }\n// }\n// fn io_"}], "start_byte": 6794, "end_byte": 6818, "start_point": [189, 8], "end_point": [189, 32], "text": "\n//     }\n// }\n// fn io_"}, {"type": ";", "children": [], "start_byte": 6818, "end_byte": 6819, "start_point": [189, 32], "end_point": [189, 33], "text": "e"}], "start_byte": 6794, "end_byte": 6819, "start_point": [189, 8], "end_point": [189, 33], "text": "\n//     }\n// }\n// fn io_e"}, {"type": "}", "children": [], "start_byte": 6824, "end_byte": 6825, "start_point": [190, 4], "end_point": [190, 5], "text": ")"}], "start_byte": 6747, "end_byte": 6825, "start_point": [187, 37], "end_point": [190, 5], "text": " => panic!(\"Invalid source mode\"),\n//         }\n//     }\n// }\n// fn io_error()"}], "start_byte": 6714, "end_byte": 6825, "start_point": [187, 4], "end_point": [190, 5], "text": "SrcMode::SM_F2F,\n//             _ => panic!(\"Invalid source mode\"),\n//         }\n//     }\n// }\n// fn io_error()"}, {"type": "line_comment", "children": [], "start_byte": 6831, "end_byte": 6855, "start_point": [192, 4], "end_point": [192, 28], "text": "::Result<()> {\n//     Er"}, {"type": "}", "children": [], "start_byte": 6856, "end_byte": 6857, "start_point": [193, 0], "end_point": [193, 1], "text": "("}], "start_byte": 5054, "end_byte": 6857, "start_point": [139, 10], "end_point": [193, 1], "text": "ef\";\n        // let output_filename = \"output.txt\";\n        let input_filename = \"/root/crown-rust/bzip2-backup/11Nov.txt\";\n                // \u521b\u5efa\u4e00\u4e2a\u8f93\u5165\u6587\u4ef6\u7528\u4e8e\u6d4b\u8bd5\n        let mut file = File::create(input_filename).unwrap();\n        writeln!(file, \"1\").unwrap();\n        // \u8bbe\u7f6e\u6d4b\u8bd5\u73af\u5883.\n        unsafe{\n            SRC_MODE = 3; // \u5047\u8bbe 3 \u4ee3\u8868\u6b63\u5e38\u6a21\u5f0f\n        }\n        let mut in_name_array = [0; 1034];\n        let in_bytes = input_filename.as_bytes();\n        in_name_array[..in_bytes.len()].copy_from_slice(in_bytes);\n        unsafe{\n            IN_NAME = in_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        }\n\n        // let mut out_name_array = [0; 1034];\n        // let out_bytes = output_filename.as_bytes();\n        // out_name_array[..out_bytes.len()].copy_from_slice(out_bytes);\n        // unsafe{\n        //     OUT_NAME = out_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filename));\n        // assert!(result.is_ok());\n\n        // \u9a8c\u8bc1\u8f93\u51fa\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        // assert!(Path::new(output_filename).exists());\n\n        // \u6e05\u7406\u6d4b\u8bd5\u6587\u4ef6\n        // std::fs::remove_file(input_filename).unwrap();\n        // std::fs::remove_file(output_filename).unwrap();\n    }\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u65e0\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_invalid_input() {\n        let result = compress(None);\n        assert!(result.is_err());\n    }\n\n    // \u66f4\u591a\u6d4b\u8bd5\u7528\u4f8b...\n}\n\n// #[derive(PartialEq)]\n// pub enum SrcMode {\n//     SM_I2O = 1,\n//     SM_F2O = 2,\n//     SM_F2F = 3,\n// }\n\n// impl From<i32> for SrcMode {\n//     fn from(mode: i32) -> Self {\n//         match mode {\n//             1 => SrcMode::SM_I2O,\n//             2 => SrcMode::SM_F2O,\n//             3 => SrcMode::SM_F2F,\n//             _ => panic!(\"Invalid source mode\"),\n//         }\n//     }\n// }\n// fn io_error() -> io::Result<()> {\n//     Err("}], "start_byte": 5044, "end_byte": 6857, "start_point": [139, 0], "end_point": [193, 1], "text": "/sample1.ref\";\n        // let output_filename = \"output.txt\";\n        let input_filename = \"/root/crown-rust/bzip2-backup/11Nov.txt\";\n                // \u521b\u5efa\u4e00\u4e2a\u8f93\u5165\u6587\u4ef6\u7528\u4e8e\u6d4b\u8bd5\n        let mut file = File::create(input_filename).unwrap();\n        writeln!(file, \"1\").unwrap();\n        // \u8bbe\u7f6e\u6d4b\u8bd5\u73af\u5883.\n        unsafe{\n            SRC_MODE = 3; // \u5047\u8bbe 3 \u4ee3\u8868\u6b63\u5e38\u6a21\u5f0f\n        }\n        let mut in_name_array = [0; 1034];\n        let in_bytes = input_filename.as_bytes();\n        in_name_array[..in_bytes.len()].copy_from_slice(in_bytes);\n        unsafe{\n            IN_NAME = in_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        }\n\n        // let mut out_name_array = [0; 1034];\n        // let out_bytes = output_filename.as_bytes();\n        // out_name_array[..out_bytes.len()].copy_from_slice(out_bytes);\n        // unsafe{\n        //     OUT_NAME = out_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filename));\n        // assert!(result.is_ok());\n\n        // \u9a8c\u8bc1\u8f93\u51fa\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        // assert!(Path::new(output_filename).exists());\n\n        // \u6e05\u7406\u6d4b\u8bd5\u6587\u4ef6\n        // std::fs::remove_file(input_filename).unwrap();\n        // std::fs::remove_file(output_filename).unwrap();\n    }\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u65e0\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_invalid_input() {\n        let result = compress(None);\n        assert!(result.is_err());\n    }\n\n    // \u66f4\u591a\u6d4b\u8bd5\u7528\u4f8b...\n}\n\n// #[derive(PartialEq)]\n// pub enum SrcMode {\n//     SM_I2O = 1,\n//     SM_F2O = 2,\n//     SM_F2F = 3,\n// }\n\n// impl From<i32> for SrcMode {\n//     fn from(mode: i32) -> Self {\n//         match mode {\n//             1 => SrcMode::SM_I2O,\n//             2 => SrcMode::SM_F2O,\n//             3 => SrcMode::SM_F2F,\n//             _ => panic!(\"Invalid source mode\"),\n//         }\n//     }\n// }\n// fn io_error() -> io::Result<()> {\n//     Err("}, {"type": "line_comment", "children": [], "start_byte": 6859, "end_byte": 6882, "start_point": [195, 0], "end_point": [195, 23], "text": "::Error::new(ErrorKind:"}, {"type": "line_comment", "children": [], "start_byte": 6883, "end_byte": 6904, "start_point": [196, 0], "end_point": [196, 21], "text": "Other, \"IO error occu"}, {"type": "line_comment", "children": [], "start_byte": 6905, "end_byte": 6923, "start_point": [197, 0], "end_point": [197, 18], "text": "red\"))\n// }\n"}, {"type": "line_comment", "children": [], "start_byte": 6924, "end_byte": 6942, "start_point": [198, 0], "end_point": [198, 18], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 6943, "end_byte": 6961, "start_point": [199, 0], "end_point": [199, 18], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 6962, "end_byte": 6966, "start_point": [200, 0], "end_point": [200, 4], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 6968, "end_byte": 6999, "start_point": [202, 0], "end_point": [202, 31], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7000, "end_byte": 7035, "start_point": [203, 0], "end_point": [203, 35], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7036, "end_byte": 7059, "start_point": [204, 0], "end_point": [204, 23], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7060, "end_byte": 7096, "start_point": [205, 0], "end_point": [205, 36], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7097, "end_byte": 7133, "start_point": [206, 0], "end_point": [206, 36], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7134, "end_byte": 7170, "start_point": [207, 0], "end_point": [207, 36], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7171, "end_byte": 7221, "start_point": [208, 0], "end_point": [208, 50], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7222, "end_byte": 7234, "start_point": [209, 0], "end_point": [209, 12], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7235, "end_byte": 7243, "start_point": [210, 0], "end_point": [210, 8], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7244, "end_byte": 7248, "start_point": [211, 0], "end_point": [211, 4], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7249, "end_byte": 7285, "start_point": [212, 0], "end_point": [212, 36], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7286, "end_byte": 7351, "start_point": [213, 0], "end_point": [213, 65], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 7352, "end_byte": 7356, "start_point": [214, 0], "end_point": [214, 4], "text": ""}], "start_byte": 0, "end_byte": 7357, "start_point": [0, 0], "end_point": [215, 0], "text": "use crate::global_vars::bzip2_c2::*;\nuse crate::global_vars::bzip2_c5::*;\nuse crate::global_vars::bzip2_c1::*;\nuse crate::global_vars::conversion::*;\nuse crate::bzip2::scc_95_applySavedTimeInfoToOutputFile_96_applySavedFileAttrToOutputFile_97_saveInputFileMetaInfo::*;\nuse crate::bzip2::scc_93_crcError_ioError::io_error;\nuse crate::bzip2::scc_90_root_52_setExit::set_exit;\nuse crate::bzip2::scc_56_fopen_output_safely::*;\nuse crate::bzip2::scc_87_fileExists::*;\nuse crate::bzip2::scc_116_hasSuffix_107_mapSuffix::*;\nuse crate::bzip2::scc_105_copyFileName::*;\nuse crate::bzip2::scc_110_compressStream::*;\nuse crate::bzip2::scc_60_root_41_containsDubiousChars::contains_dubious_chars;\nuse std::fs::File;\nuse std::io::{self, Write};\nuse std::path::Path;\nuse std::process;\nuse libc::{isatty, fileno};\nuse std::io::stdout;  // \u5bfc\u5165 stdout\nuse std::os::unix::io::AsRawFd;  // \u5bfc\u5165 Unix-specific trait \u548c\u51fd\u6570\nuse std::os::fd::FromRawFd;\n \npub static mut SRC_MODE: i32 = 1;\n\n\npub fn compress(name: Option<&str>) -> Result<(), io::Error> {\n    // println!(\"Compress\ud83d\udd25\");\n     if let Some(n) = name {\n        // println!(\"Compressing file: {}\", n);\n    } else {\n        // println!(\"No file name provided\");\n    }\n\n    unsafe {\n        // println!(\"0Here\ud83d\udcaa\");\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    \n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\\n\");\n        }\n\n        match SRC_MODE {\n            1 => {\n                IN_NAME = string_to_u8_array_1034(\"(stdin)\".to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdin and stdout handling\n            }\n            3 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(format!(\"{}.bz2\", name.unwrap_or_default()));\n                // normal file handling\n            }\n            2 => {\n                IN_NAME = string_to_u8_array_1034(name.clone().unwrap_or_default().to_string());\n                OUT_NAME = string_to_u8_array_1034(\"(stdout)\".to_string());\n                // stdout handling\n            }\n            _ => panic!(\"compress: bad srcMode\"),\n        }\n    \n        // Check if input file exists\n        // \u901a\u8fc7\u8c03\u7528 as_str() \u65b9\u6cd5\u5c06\u8fd9\u4e2a String \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5207\u7247\n        if SRC_MODE != 1 && !Path::new(u8_array_to_string(&IN_NAME).as_str()).exists() {\n            eprintln!(\"{}: Can't open input file {}: No such file or directory\", (u8_array_to_string(&PROG_NAME)), u8_array_to_string(&IN_NAME));\n            process::exit(1);\n        }\n\n        // Open input and output files\n        // let in_file = match SRC_MODE {\n        //     1 => io::stdin(),\n        //     _ => fs::File::open(&IN_NAME)?,\n        // };\n        // let out_file = match SRC_MODE {\n        //     1 | 2 => io::stdout(),\n        //     _ => fs::File::create(&OUT_NAME)?,\n        // };\n\n        let mut in_file: Option<File> = None;\n        let mut out_file: Option<File> = None;\n        if let Some(n) = name {\n            // println!(\"Compressing file: {}\", n);\n            // \u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9 in_file\n            in_file = Some(File::open(n)?);\n        } else {\n            // println!(\"No file name provided\");\n        }\n    \n\n\n\n        if name.is_none() && SRC_MODE != 1 {\n            panic!(\"compress: bad modes\");\n        }\n        // println!(\"Here\ud83d\udcaa\");\n        // \u8fd9\u91cc\uff0cIN_NAME \u88ab\u8f6c\u6362\u6210\u4e00\u4e2a Rust \u5b57\u7b26\u4e32\uff0c\n        // \u4f46\u5982\u679c IN_NAME \u662f\u57fa\u4e8e C \u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff08\u4ee5 NUL \u5b57\u8282\u7ed3\u5c3e\uff09\uff0c\n        // \u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e5f\u4f1a\u5305\u542b\u8fd9\u4e2a NUL \u5b57\u8282\u3002\n        let in_name_str = IN_NAME\n            .iter()\n            .take_while(|&&c| c != 0) // \u53ea\u53d6\u76f4\u5230 NUL \u5b57\u8282\u4e4b\u524d\u7684\u90e8\u5206\n            .map(|&c| c as char)\n            .collect::<String>();\n\n        let out_name_str = format!(\"{}.bz2\", in_name_str); // \u6784\u5efa\u8f93\u51fa\u6587\u4ef6\u540d\n        // println!(\"\ud83d\udc26 in_name_str: {}; out_name_str: {}\",in_name_str, out_name_str);\n\n        // \u5904\u7406\u6587\u4ef6\u6253\u5f00\u64cd\u4f5c\n        match File::open(Path::new(&in_name_str)) {\n            Ok(file) => in_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error opening input file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        match File::create(Path::new(&out_name_str)) {\n            Ok(file) => out_file = Some(file),\n            Err(e) => {\n                eprintln!(\"Error creating output file: {}\", e);\n                return Err(e);\n            }\n        }\n\n        // println!(\"\ud83c\udf32\");\n        if let (Some(mut in_file), Some(mut out_file)) = (in_file, out_file) {\n            // println!(\"\ud83d\ude97\");\n            if let Err(e) = compress_stream(&mut in_file, &mut out_file) {\n                eprintln!(\"compress_stream error: {}\", e);\n                return Err(io::Error::new(io::ErrorKind::Other, \"compress_stream failed\"));\n            }\n        }\n\n        DELETE_OUTPUT_ON_INTERRUPT = false;\n    }\n\n    Ok(())\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::io::{self, Write};\n    use std::fs::File;\n    use std::path::Path;\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u6709\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_valid_input() {\n        // let input_filename = \"/root/crown-rust/bzip2/sample1.ref\";\n        // let output_filename = \"output.txt\";\n        let input_filename = \"/root/crown-rust/bzip2-backup/11Nov.txt\";\n                // \u521b\u5efa\u4e00\u4e2a\u8f93\u5165\u6587\u4ef6\u7528\u4e8e\u6d4b\u8bd5\n        let mut file = File::create(input_filename).unwrap();\n        writeln!(file, \"1\").unwrap();\n        // \u8bbe\u7f6e\u6d4b\u8bd5\u73af\u5883.\n        unsafe{\n            SRC_MODE = 3; // \u5047\u8bbe 3 \u4ee3\u8868\u6b63\u5e38\u6a21\u5f0f\n        }\n        let mut in_name_array = [0; 1034];\n        let in_bytes = input_filename.as_bytes();\n        in_name_array[..in_bytes.len()].copy_from_slice(in_bytes);\n        unsafe{\n            IN_NAME = in_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        }\n\n        // let mut out_name_array = [0; 1034];\n        // let out_bytes = output_filename.as_bytes();\n        // out_name_array[..out_bytes.len()].copy_from_slice(out_bytes);\n        // unsafe{\n        //     OUT_NAME = out_name_array; // \u5c06Vec\u8f6c\u6362\u4e3a\u56fa\u5b9a\u5927\u5c0f\u6570\u7ec4\n        // }\n\n        // \u6267\u884ccompress\u51fd\u6570\n\n        let result = compress(Some(input_filename));\n        // assert!(result.is_ok());\n\n        // \u9a8c\u8bc1\u8f93\u51fa\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        // assert!(Path::new(output_filename).exists());\n\n        // \u6e05\u7406\u6d4b\u8bd5\u6587\u4ef6\n        // std::fs::remove_file(input_filename).unwrap();\n        // std::fs::remove_file(output_filename).unwrap();\n    }\n\n    // \u6d4b\u8bd5compress\u51fd\u6570\u5904\u7406\u65e0\u6548\u8f93\u5165\u7684\u80fd\u529b\n    #[test]\n    fn test_compress_invalid_input() {\n        let result = compress(None);\n        assert!(result.is_err());\n    }\n\n    // \u66f4\u591a\u6d4b\u8bd5\u7528\u4f8b...\n}\n\n// #[derive(PartialEq)]\n// pub enum SrcMode {\n//     SM_I2O = 1,\n//     SM_F2O = 2,\n//     SM_F2F = 3,\n// }\n\n// impl From<i32> for SrcMode {\n//     fn from(mode: i32) -> Self {\n//         match mode {\n//             1 => SrcMode::SM_I2O,\n//             2 => SrcMode::SM_F2O,\n//             3 => SrcMode::SM_F2F,\n//             _ => panic!(\"Invalid source mode\"),\n//         }\n//     }\n// }\n// fn io_error() -> io::Result<()> {\n//     Err(io::Error::new(ErrorKind::Other, \"IO error occurred\"))\n// }\n"}