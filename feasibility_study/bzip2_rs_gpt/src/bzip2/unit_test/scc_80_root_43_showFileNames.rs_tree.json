{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 4, "end_byte": 7, "start_point": [0, 4], "end_point": [0, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 7, "end_byte": 9, "start_point": [0, 7], "end_point": [0, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "io"}], "start_byte": 4, "end_byte": 11, "start_point": [0, 4], "end_point": [0, 11], "text": "std::io"}, {"type": "::", "children": [], "start_byte": 11, "end_byte": 13, "start_point": [0, 11], "end_point": [0, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 13, "end_byte": 18, "start_point": [0, 13], "end_point": [0, 18], "text": "Write"}], "start_byte": 4, "end_byte": 18, "start_point": [0, 4], "end_point": [0, 18], "text": "std::io::Write"}, {"type": ";", "children": [], "start_byte": 18, "end_byte": 19, "start_point": [0, 18], "end_point": [0, 19], "text": ";"}], "start_byte": 0, "end_byte": 19, "start_point": [0, 0], "end_point": [0, 19], "text": "use std::io::Write;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 20, "end_byte": 23, "start_point": [1, 0], "end_point": [1, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 24, "end_byte": 27, "start_point": [1, 4], "end_point": [1, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 27, "end_byte": 29, "start_point": [1, 7], "end_point": [1, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 29, "end_byte": 31, "start_point": [1, 9], "end_point": [1, 11], "text": "fs"}], "start_byte": 24, "end_byte": 31, "start_point": [1, 4], "end_point": [1, 11], "text": "std::fs"}, {"type": "::", "children": [], "start_byte": 31, "end_byte": 33, "start_point": [1, 11], "end_point": [1, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 33, "end_byte": 37, "start_point": [1, 13], "end_point": [1, 17], "text": "File"}], "start_byte": 24, "end_byte": 37, "start_point": [1, 4], "end_point": [1, 17], "text": "std::fs::File"}, {"type": ";", "children": [], "start_byte": 37, "end_byte": 38, "start_point": [1, 17], "end_point": [1, 18], "text": ";"}], "start_byte": 20, "end_byte": 38, "start_point": [1, 0], "end_point": [1, 18], "text": "use std::fs::File;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 39, "end_byte": 42, "start_point": [2, 0], "end_point": [2, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 43, "end_byte": 46, "start_point": [2, 4], "end_point": [2, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 46, "end_byte": 48, "start_point": [2, 7], "end_point": [2, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 48, "end_byte": 52, "start_point": [2, 9], "end_point": [2, 13], "text": "path"}], "start_byte": 43, "end_byte": 52, "start_point": [2, 4], "end_point": [2, 13], "text": "std::path"}, {"type": "::", "children": [], "start_byte": 52, "end_byte": 54, "start_point": [2, 13], "end_point": [2, 15], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 54, "end_byte": 58, "start_point": [2, 15], "end_point": [2, 19], "text": "Path"}], "start_byte": 43, "end_byte": 58, "start_point": [2, 4], "end_point": [2, 19], "text": "std::path::Path"}, {"type": ";", "children": [], "start_byte": 58, "end_byte": 59, "start_point": [2, 19], "end_point": [2, 20], "text": ";"}], "start_byte": 39, "end_byte": 59, "start_point": [2, 0], "end_point": [2, 20], "text": "use std::path::Path;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 60, "end_byte": 63, "start_point": [3, 0], "end_point": [3, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 64, "end_byte": 69, "start_point": [3, 4], "end_point": [3, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 69, "end_byte": 71, "start_point": [3, 9], "end_point": [3, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 71, "end_byte": 82, "start_point": [3, 11], "end_point": [3, 22], "text": "global_vars"}], "start_byte": 64, "end_byte": 82, "start_point": [3, 4], "end_point": [3, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 82, "end_byte": 84, "start_point": [3, 22], "end_point": [3, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 84, "end_byte": 92, "start_point": [3, 24], "end_point": [3, 32], "text": "bzip2_c5"}], "start_byte": 64, "end_byte": 92, "start_point": [3, 4], "end_point": [3, 32], "text": "crate::global_vars::bzip2_c5"}, {"type": "::", "children": [], "start_byte": 92, "end_byte": 94, "start_point": [3, 32], "end_point": [3, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 94, "end_byte": 95, "start_point": [3, 34], "end_point": [3, 35], "text": "*"}], "start_byte": 64, "end_byte": 95, "start_point": [3, 4], "end_point": [3, 35], "text": "crate::global_vars::bzip2_c5::*"}, {"type": ";", "children": [], "start_byte": 95, "end_byte": 96, "start_point": [3, 35], "end_point": [3, 36], "text": ";"}], "start_byte": 60, "end_byte": 96, "start_point": [3, 0], "end_point": [3, 36], "text": "use crate::global_vars::bzip2_c5::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 97, "end_byte": 100, "start_point": [4, 0], "end_point": [4, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 101, "end_byte": 106, "start_point": [4, 4], "end_point": [4, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 106, "end_byte": 108, "start_point": [4, 9], "end_point": [4, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 108, "end_byte": 119, "start_point": [4, 11], "end_point": [4, 22], "text": "global_vars"}], "start_byte": 101, "end_byte": 119, "start_point": [4, 4], "end_point": [4, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 119, "end_byte": 121, "start_point": [4, 22], "end_point": [4, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 121, "end_byte": 129, "start_point": [4, 24], "end_point": [4, 32], "text": "bzip2_c1"}], "start_byte": 101, "end_byte": 129, "start_point": [4, 4], "end_point": [4, 32], "text": "crate::global_vars::bzip2_c1"}, {"type": "::", "children": [], "start_byte": 129, "end_byte": 131, "start_point": [4, 32], "end_point": [4, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 131, "end_byte": 132, "start_point": [4, 34], "end_point": [4, 35], "text": "*"}], "start_byte": 101, "end_byte": 132, "start_point": [4, 4], "end_point": [4, 35], "text": "crate::global_vars::bzip2_c1::*"}, {"type": ";", "children": [], "start_byte": 132, "end_byte": 133, "start_point": [4, 35], "end_point": [4, 36], "text": ";"}], "start_byte": 97, "end_byte": 133, "start_point": [4, 0], "end_point": [4, 36], "text": "use crate::global_vars::bzip2_c1::*;"}, {"type": "line_comment", "children": [], "start_byte": 134, "end_byte": 173, "start_point": [5, 0], "end_point": [5, 39], "text": "// \u6a21\u62dfC\u8bed\u8a00\u4e2d\u7684Bool\u548cChar\u7c7b\u578b\ntype Bool = bool;"}, {"type": "type_item", "children": [{"type": "type", "children": [], "start_byte": 174, "end_byte": 178, "start_point": [6, 0], "end_point": [6, 4], "text": "type"}, {"type": "type_identifier", "children": [], "start_byte": 179, "end_byte": 183, "start_point": [6, 5], "end_point": [6, 9], "text": "Char"}, {"type": "=", "children": [], "start_byte": 184, "end_byte": 185, "start_point": [6, 10], "end_point": [6, 11], "text": "="}, {"type": "primitive_type", "children": [], "start_byte": 186, "end_byte": 190, "start_point": [6, 12], "end_point": [6, 16], "text": "u8;\n"}, {"type": ";", "children": [], "start_byte": 190, "end_byte": 191, "start_point": [6, 16], "end_point": [6, 17], "text": "\n"}], "start_byte": 174, "end_byte": 191, "start_point": [6, 0], "end_point": [6, 17], "text": "type Char = u8;\n\n"}, {"type": "type_item", "children": [{"type": "type", "children": [], "start_byte": 192, "end_byte": 196, "start_point": [7, 0], "end_point": [7, 4], "text": "/ \u5168\u5c40"}, {"type": "type_identifier", "children": [], "start_byte": 197, "end_byte": 201, "start_point": [7, 5], "end_point": [7, 9], "text": "\u91cf\npu"}, {"type": "=", "children": [], "start_byte": 202, "end_byte": 203, "start_point": [7, 10], "end_point": [7, 11], "text": " "}, {"type": "primitive_type", "children": [], "start_byte": 204, "end_byte": 206, "start_point": [7, 12], "end_point": [7, 14], "text": "n "}, {"type": ";", "children": [], "start_byte": 206, "end_byte": 207, "start_point": [7, 14], "end_point": [7, 15], "text": "s"}], "start_byte": 192, "end_byte": 207, "start_point": [7, 0], "end_point": [7, 15], "text": "/ \u5168\u5c40\u53d8\u91cf\npub fn s"}, {"type": "line_comment", "children": [], "start_byte": 209, "end_byte": 224, "start_point": [9, 0], "end_point": [9, 15], "text": "w_file_names() "}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 225, "end_byte": 228, "start_point": [10, 0], "end_point": [10, 3], "text": "\n  "}], "start_byte": 225, "end_byte": 228, "start_point": [10, 0], "end_point": [10, 3], "text": "\n  "}, {"type": "fn", "children": [], "start_byte": 229, "end_byte": 231, "start_point": [10, 4], "end_point": [10, 6], "text": " u"}, {"type": "identifier", "children": [], "start_byte": 232, "end_byte": 247, "start_point": [10, 7], "end_point": [10, 22], "text": "safe {\n        "}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 247, "end_byte": 248, "start_point": [10, 22], "end_point": [10, 23], "text": "i"}, {"type": ")", "children": [], "start_byte": 248, "end_byte": 249, "start_point": [10, 23], "end_point": [10, 24], "text": "f"}], "start_byte": 247, "end_byte": 249, "start_point": [10, 22], "end_point": [10, 24], "text": "if"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 250, "end_byte": 251, "start_point": [10, 25], "end_point": [10, 26], "text": "N"}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 256, "end_byte": 262, "start_point": [11, 4], "end_point": [11, 10], "text": "{\n    "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 263, "end_byte": 264, "start_point": [11, 11], "end_point": [11, 12], "text": " "}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 273, "end_byte": 275, "start_point": [12, 8], "end_point": [12, 10], "text": "\u5c06\u5b57"}, {"type": "identifier", "children": [], "start_byte": 276, "end_byte": 281, "start_point": [12, 11], "end_point": [12, 16], "text": "\u6570\u7ec4\u8f6c\u4e3a\u5b57"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 282, "end_byte": 283, "start_point": [12, 17], "end_point": [12, 18], "text": "\u4e32"}, {"type": "line_comment", "children": [], "start_byte": 296, "end_byte": 329, "start_point": [13, 12], "end_point": [13, 45], "text": "let in_str = std::str::from_utf8("}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 342, "end_byte": 345, "start_point": [14, 12], "end_point": [14, 15], "text": "rap"}, {"type": "identifier", "children": [], "start_byte": 346, "end_byte": 352, "start_point": [14, 16], "end_point": [14, 22], "text": ").trim"}, {"type": "=", "children": [], "start_byte": 353, "end_byte": 354, "start_point": [14, 23], "end_point": [14, 24], "text": "e"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 355, "end_byte": 358, "start_point": [14, 25], "end_point": [14, 28], "text": "d_m"}, {"type": "::", "children": [], "start_byte": 358, "end_byte": 360, "start_point": [14, 28], "end_point": [14, 30], "text": "at"}, {"type": "identifier", "children": [], "start_byte": 360, "end_byte": 363, "start_point": [14, 30], "end_point": [14, 33], "text": "che"}], "start_byte": 355, "end_byte": 363, "start_point": [14, 25], "end_point": [14, 33], "text": "d_matche"}, {"type": "::", "children": [], "start_byte": 363, "end_byte": 365, "start_point": [14, 33], "end_point": [14, 35], "text": "s("}, {"type": "identifier", "children": [], "start_byte": 365, "end_byte": 374, "start_point": [14, 35], "end_point": [14, 44], "text": "'\\0');\n  "}], "start_byte": 355, "end_byte": 374, "start_point": [14, 25], "end_point": [14, 44], "text": "d_matches('\\0');\n  "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 374, "end_byte": 375, "start_point": [14, 44], "end_point": [14, 45], "text": " "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 375, "end_byte": 376, "start_point": [14, 45], "end_point": [14, 46], "text": " "}, {"type": "identifier", "children": [], "start_byte": 376, "end_byte": 383, "start_point": [14, 46], "end_point": [14, 53], "text": "       "}], "start_byte": 375, "end_byte": 383, "start_point": [14, 45], "end_point": [14, 53], "text": "        "}, {"type": ")", "children": [], "start_byte": 383, "end_byte": 384, "start_point": [14, 53], "end_point": [14, 54], "text": " "}], "start_byte": 374, "end_byte": 384, "start_point": [14, 44], "end_point": [14, 54], "text": "          "}], "start_byte": 355, "end_byte": 384, "start_point": [14, 25], "end_point": [14, 54], "text": "d_matches('\\0');\n            "}, {"type": ".", "children": [], "start_byte": 384, "end_byte": 385, "start_point": [14, 54], "end_point": [14, 55], "text": "l"}, {"type": "field_identifier", "children": [], "start_byte": 385, "end_byte": 391, "start_point": [14, 55], "end_point": [14, 61], "text": "et out"}], "start_byte": 355, "end_byte": 391, "start_point": [14, 25], "end_point": [14, 61], "text": "d_matches('\\0');\n            let out"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 391, "end_byte": 392, "start_point": [14, 61], "end_point": [14, 62], "text": "_"}, {"type": ")", "children": [], "start_byte": 392, "end_byte": 393, "start_point": [14, 62], "end_point": [14, 63], "text": "s"}], "start_byte": 391, "end_byte": 393, "start_point": [14, 61], "end_point": [14, 63], "text": "_s"}], "start_byte": 355, "end_byte": 393, "start_point": [14, 25], "end_point": [14, 63], "text": "d_matches('\\0');\n            let out_s"}, {"type": ".", "children": [], "start_byte": 393, "end_byte": 394, "start_point": [14, 63], "end_point": [14, 64], "text": "t"}, {"type": "field_identifier", "children": [], "start_byte": 394, "end_byte": 410, "start_point": [14, 64], "end_point": [14, 80], "text": "r = std::str::fr"}], "start_byte": 355, "end_byte": 410, "start_point": [14, 25], "end_point": [14, 80], "text": "d_matches('\\0');\n            let out_str = std::str::fr"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 410, "end_byte": 411, "start_point": [14, 80], "end_point": [14, 81], "text": "o"}, {"type": "char_literal", "children": [], "start_byte": 411, "end_byte": 415, "start_point": [14, 81], "end_point": [14, 85], "text": "m_ut"}, {"type": ")", "children": [], "start_byte": 415, "end_byte": 416, "start_point": [14, 85], "end_point": [14, 86], "text": "f"}], "start_byte": 410, "end_byte": 416, "start_point": [14, 80], "end_point": [14, 86], "text": "om_utf"}], "start_byte": 355, "end_byte": 416, "start_point": [14, 25], "end_point": [14, 86], "text": "d_matches('\\0');\n            let out_str = std::str::from_utf"}, {"type": ";", "children": [], "start_byte": 416, "end_byte": 417, "start_point": [14, 86], "end_point": [14, 87], "text": "8"}], "start_byte": 342, "end_byte": 417, "start_point": [14, 12], "end_point": [14, 87], "text": "rap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 430, "end_byte": 433, "start_point": [15, 12], "end_point": [15, 15], "text": "nwr"}, {"type": "identifier", "children": [], "start_byte": 434, "end_byte": 441, "start_point": [15, 16], "end_point": [15, 23], "text": "p().tri"}, {"type": "=", "children": [], "start_byte": 442, "end_byte": 443, "start_point": [15, 24], "end_point": [15, 25], "text": "_"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 444, "end_byte": 447, "start_point": [15, 26], "end_point": [15, 29], "text": "nd_"}, {"type": "::", "children": [], "start_byte": 447, "end_byte": 449, "start_point": [15, 29], "end_point": [15, 31], "text": "ma"}, {"type": "identifier", "children": [], "start_byte": 449, "end_byte": 452, "start_point": [15, 31], "end_point": [15, 34], "text": "tch"}], "start_byte": 444, "end_byte": 452, "start_point": [15, 26], "end_point": [15, 34], "text": "nd_match"}, {"type": "::", "children": [], "start_byte": 452, "end_byte": 454, "start_point": [15, 34], "end_point": [15, 36], "text": "es"}, {"type": "identifier", "children": [], "start_byte": 454, "end_byte": 463, "start_point": [15, 36], "end_point": [15, 45], "text": "('\\0');\n\n"}], "start_byte": 444, "end_byte": 463, "start_point": [15, 26], "end_point": [15, 45], "text": "nd_matches('\\0');\n\n"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 463, "end_byte": 464, "start_point": [15, 45], "end_point": [15, 46], "text": " "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 464, "end_byte": 465, "start_point": [15, 46], "end_point": [15, 47], "text": " "}, {"type": "identifier", "children": [], "start_byte": 465, "end_byte": 473, "start_point": [15, 47], "end_point": [15, 55], "text": "        "}], "start_byte": 464, "end_byte": 473, "start_point": [15, 46], "end_point": [15, 55], "text": "         "}, {"type": ")", "children": [], "start_byte": 473, "end_byte": 474, "start_point": [15, 55], "end_point": [15, 56], "text": " "}], "start_byte": 463, "end_byte": 474, "start_point": [15, 45], "end_point": [15, 56], "text": "           "}], "start_byte": 444, "end_byte": 474, "start_point": [15, 26], "end_point": [15, 56], "text": "nd_matches('\\0');\n\n           "}, {"type": ".", "children": [], "start_byte": 474, "end_byte": 475, "start_point": [15, 56], "end_point": [15, 57], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 475, "end_byte": 481, "start_point": [15, 57], "end_point": [15, 63], "text": "writel"}], "start_byte": 444, "end_byte": 481, "start_point": [15, 26], "end_point": [15, 63], "text": "nd_matches('\\0');\n\n            writel"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 481, "end_byte": 482, "start_point": [15, 63], "end_point": [15, 64], "text": "n"}, {"type": ")", "children": [], "start_byte": 482, "end_byte": 483, "start_point": [15, 64], "end_point": [15, 65], "text": "!"}], "start_byte": 481, "end_byte": 483, "start_point": [15, 63], "end_point": [15, 65], "text": "n!"}], "start_byte": 444, "end_byte": 483, "start_point": [15, 26], "end_point": [15, 65], "text": "nd_matches('\\0');\n\n            writeln!"}, {"type": ".", "children": [], "start_byte": 483, "end_byte": 484, "start_point": [15, 65], "end_point": [15, 66], "text": "("}, {"type": "field_identifier", "children": [], "start_byte": 484, "end_byte": 500, "start_point": [15, 66], "end_point": [15, 82], "text": "std::io::stderr("}], "start_byte": 444, "end_byte": 500, "start_point": [15, 26], "end_point": [15, 82], "text": "nd_matches('\\0');\n\n            writeln!(std::io::stderr("}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 500, "end_byte": 501, "start_point": [15, 82], "end_point": [15, 83], "text": ")"}, {"type": "char_literal", "children": [], "start_byte": 501, "end_byte": 505, "start_point": [15, 83], "end_point": [15, 87], "text": ", \"\\"}, {"type": ")", "children": [], "start_byte": 505, "end_byte": 506, "start_point": [15, 87], "end_point": [15, 88], "text": "t"}], "start_byte": 500, "end_byte": 506, "start_point": [15, 82], "end_point": [15, 88], "text": "), \"\\t"}], "start_byte": 444, "end_byte": 506, "start_point": [15, 26], "end_point": [15, 88], "text": "nd_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\t"}, {"type": ";", "children": [], "start_byte": 506, "end_byte": 507, "start_point": [15, 88], "end_point": [15, 89], "text": "I"}], "start_byte": 430, "end_byte": 507, "start_point": [15, 12], "end_point": [15, 89], "text": "nwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tI"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 521, "end_byte": 528, "start_point": [17, 12], "end_point": [17, 19], "text": ", outpu"}, {"type": "!", "children": [], "start_byte": 528, "end_byte": 529, "start_point": [17, 19], "end_point": [17, 20], "text": "t"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 529, "end_byte": 530, "start_point": [17, 20], "end_point": [17, 21], "text": " "}, {"type": "identifier", "children": [], "start_byte": 530, "end_byte": 533, "start_point": [17, 21], "end_point": [17, 24], "text": "fil"}, {"type": "identifier", "children": [], "start_byte": 535, "end_byte": 537, "start_point": [17, 26], "end_point": [17, 28], "text": "= "}, {"type": "identifier", "children": [], "start_byte": 539, "end_byte": 545, "start_point": [17, 30], "end_point": [17, 36], "text": "\", in_"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 545, "end_byte": 546, "start_point": [17, 36], "end_point": [17, 37], "text": "s"}, {"type": ")", "children": [], "start_byte": 546, "end_byte": 547, "start_point": [17, 37], "end_point": [17, 38], "text": "t"}], "start_byte": 545, "end_byte": 547, "start_point": [17, 36], "end_point": [17, 38], "text": "st"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 549, "end_byte": 550, "start_point": [17, 40], "end_point": [17, 41], "text": " "}, {"type": "escape_sequence", "children": [], "start_byte": 550, "end_byte": 552, "start_point": [17, 41], "end_point": [17, 43], "text": "ou"}, {"type": "\"", "children": [], "start_byte": 585, "end_byte": 586, "start_point": [17, 76], "end_point": [17, 77], "text": "}"}], "start_byte": 549, "end_byte": 586, "start_point": [17, 40], "end_point": [17, 77], "text": " out_str).unwrap();\n        }\n    }\n}"}, {"type": "identifier", "children": [], "start_byte": 588, "end_byte": 594, "start_point": [17, 79], "end_point": [17, 85], "text": "#[cfg("}, {"type": "identifier", "children": [], "start_byte": 596, "end_byte": 603, "start_point": [17, 87], "end_point": [17, 94], "text": "st)]\nmo"}, {"type": ")", "children": [], "start_byte": 603, "end_byte": 604, "start_point": [17, 94], "end_point": [17, 95], "text": "d"}], "start_byte": 529, "end_byte": 604, "start_point": [17, 20], "end_point": [17, 95], "text": " file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod"}], "start_byte": 521, "end_byte": 604, "start_point": [17, 12], "end_point": [17, 95], "text": ", output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod"}, {"type": ".", "children": [], "start_byte": 604, "end_byte": 605, "start_point": [17, 95], "end_point": [17, 96], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 605, "end_byte": 611, "start_point": [17, 96], "end_point": [17, 102], "text": "tests "}], "start_byte": 521, "end_byte": 611, "start_point": [17, 12], "end_point": [17, 102], "text": ", output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 611, "end_byte": 612, "start_point": [17, 102], "end_point": [17, 103], "text": "{"}, {"type": ")", "children": [], "start_byte": 612, "end_byte": 613, "start_point": [17, 103], "end_point": [17, 104], "text": "\n"}], "start_byte": 611, "end_byte": 613, "start_point": [17, 102], "end_point": [17, 104], "text": "{\n"}], "start_byte": 521, "end_byte": 613, "start_point": [17, 12], "end_point": [17, 104], "text": ", output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n"}, {"type": ";", "children": [], "start_byte": 613, "end_byte": 614, "start_point": [17, 104], "end_point": [17, 105], "text": " "}], "start_byte": 521, "end_byte": 614, "start_point": [17, 12], "end_point": [17, 105], "text": ", output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n "}, {"type": "}", "children": [], "start_byte": 623, "end_byte": 624, "start_point": [18, 8], "end_point": [18, 9], "text": "p"}], "start_byte": 282, "end_byte": 624, "start_point": [12, 17], "end_point": [18, 9], "text": "\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use sup"}], "start_byte": 273, "end_byte": 624, "start_point": [12, 8], "end_point": [18, 9], "text": "\u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use sup"}], "start_byte": 273, "end_byte": 624, "start_point": [12, 8], "end_point": [18, 9], "text": "\u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use sup"}, {"type": "}", "children": [], "start_byte": 629, "end_byte": 630, "start_point": [19, 4], "end_point": [19, 5], "text": ";"}], "start_byte": 263, "end_byte": 630, "start_point": [11, 11], "end_point": [19, 5], "text": "       // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;"}], "start_byte": 256, "end_byte": 630, "start_point": [11, 4], "end_point": [19, 5], "text": "{\n            // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;"}], "start_byte": 256, "end_byte": 630, "start_point": [11, 4], "end_point": [19, 5], "text": "{\n            // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;"}, {"type": "}", "children": [], "start_byte": 631, "end_byte": 632, "start_point": [20, 0], "end_point": [20, 1], "text": " "}], "start_byte": 250, "end_byte": 632, "start_point": [10, 25], "end_point": [20, 1], "text": "NOISY {\n            // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n "}], "start_byte": 225, "end_byte": 632, "start_point": [10, 0], "end_point": [20, 1], "text": "\n    unsafe {\n        if NOISY {\n            // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n "}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 634, "end_byte": 635, "start_point": [22, 0], "end_point": [22, 1], "text": " "}, {"type": "[", "children": [], "start_byte": 635, "end_byte": 636, "start_point": [22, 1], "end_point": [22, 2], "text": "u"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 636, "end_byte": 639, "start_point": [22, 2], "end_point": [22, 5], "text": "se "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 639, "end_byte": 640, "start_point": [22, 5], "end_point": [22, 6], "text": "s"}, {"type": "identifier", "children": [], "start_byte": 640, "end_byte": 644, "start_point": [22, 6], "end_point": [22, 10], "text": "td::"}, {"type": ")", "children": [], "start_byte": 644, "end_byte": 645, "start_point": [22, 10], "end_point": [22, 11], "text": "p"}], "start_byte": 639, "end_byte": 645, "start_point": [22, 5], "end_point": [22, 11], "text": "std::p"}], "start_byte": 636, "end_byte": 645, "start_point": [22, 2], "end_point": [22, 11], "text": "se std::p"}, {"type": "]", "children": [], "start_byte": 645, "end_byte": 646, "start_point": [22, 11], "end_point": [22, 12], "text": "r"}], "start_byte": 634, "end_byte": 646, "start_point": [22, 0], "end_point": [22, 12], "text": " use std::pr"}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 647, "end_byte": 650, "start_point": [23, 0], "end_point": [23, 3], "text": "ces"}, {"type": "identifier", "children": [], "start_byte": 651, "end_byte": 656, "start_point": [23, 4], "end_point": [23, 9], "text": "::Com"}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 657, "end_byte": 658, "start_point": [23, 10], "end_point": [23, 11], "text": "a"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 663, "end_byte": 666, "start_point": [24, 4], "end_point": [24, 7], "text": "   "}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 667, "end_byte": 672, "start_point": [24, 8], "end_point": [24, 13], "text": "se cr"}, {"type": "::", "children": [], "start_byte": 672, "end_byte": 674, "start_point": [24, 13], "end_point": [24, 15], "text": "at"}, {"type": "*", "children": [], "start_byte": 674, "end_byte": 675, "start_point": [24, 15], "end_point": [24, 16], "text": "e"}], "start_byte": 667, "end_byte": 675, "start_point": [24, 8], "end_point": [24, 16], "text": "se crate"}, {"type": ";", "children": [], "start_byte": 675, "end_byte": 676, "start_point": [24, 16], "end_point": [24, 17], "text": ":"}], "start_byte": 663, "end_byte": 676, "start_point": [24, 4], "end_point": [24, 17], "text": "   use crate:"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 681, "end_byte": 684, "start_point": [25, 4], "end_point": [25, 7], "text": "al_"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 685, "end_byte": 688, "start_point": [25, 8], "end_point": [25, 11], "text": "ars"}, {"type": "::", "children": [], "start_byte": 688, "end_byte": 690, "start_point": [25, 11], "end_point": [25, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 690, "end_byte": 697, "start_point": [25, 13], "end_point": [25, 20], "text": "bzip2_c"}], "start_byte": 685, "end_byte": 697, "start_point": [25, 8], "end_point": [25, 20], "text": "ars::bzip2_c"}, {"type": "::", "children": [], "start_byte": 697, "end_byte": 699, "start_point": [25, 20], "end_point": [25, 22], "text": "5:"}, {"type": "identifier", "children": [], "start_byte": 699, "end_byte": 706, "start_point": [25, 22], "end_point": [25, 29], "text": ":*;\n   "}], "start_byte": 685, "end_byte": 706, "start_point": [25, 8], "end_point": [25, 29], "text": "ars::bzip2_c5::*;\n   "}, {"type": ";", "children": [], "start_byte": 706, "end_byte": 707, "start_point": [25, 29], "end_point": [25, 30], "text": " "}], "start_byte": 681, "end_byte": 707, "start_point": [25, 4], "end_point": [25, 30], "text": "al_vars::bzip2_c5::*;\n    "}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 712, "end_byte": 715, "start_point": [26, 4], "end_point": [26, 7], "text": "t]\n"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 716, "end_byte": 721, "start_point": [26, 8], "end_point": [26, 13], "text": "   fn"}, {"type": "::", "children": [], "start_byte": 721, "end_byte": 723, "start_point": [26, 13], "end_point": [26, 15], "text": " t"}, {"type": "identifier", "children": [], "start_byte": 723, "end_byte": 734, "start_point": [26, 15], "end_point": [26, 26], "text": "est_show_fi"}], "start_byte": 716, "end_byte": 734, "start_point": [26, 8], "end_point": [26, 26], "text": "   fn test_show_fi"}, {"type": "::", "children": [], "start_byte": 734, "end_byte": 736, "start_point": [26, 26], "end_point": [26, 28], "text": "le"}, {"type": "identifier", "children": [], "start_byte": 736, "end_byte": 744, "start_point": [26, 28], "end_point": [26, 36], "text": "_names_n"}], "start_byte": 716, "end_byte": 744, "start_point": [26, 8], "end_point": [26, 36], "text": "   fn test_show_file_names_n"}, {"type": "::", "children": [], "start_byte": 744, "end_byte": 746, "start_point": [26, 36], "end_point": [26, 38], "text": "oi"}, {"type": "*", "children": [], "start_byte": 746, "end_byte": 747, "start_point": [26, 38], "end_point": [26, 39], "text": "s"}], "start_byte": 716, "end_byte": 747, "start_point": [26, 8], "end_point": [26, 39], "text": "   fn test_show_file_names_nois"}, {"type": ";", "children": [], "start_byte": 747, "end_byte": 748, "start_point": [26, 39], "end_point": [26, 40], "text": "y"}], "start_byte": 712, "end_byte": 748, "start_point": [26, 4], "end_point": [26, 40], "text": "t]\n    fn test_show_file_names_noisy"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 753, "end_byte": 754, "start_point": [27, 4], "end_point": [27, 5], "text": "("}, {"type": "[", "children": [], "start_byte": 754, "end_byte": 755, "start_point": [27, 5], "end_point": [27, 6], "text": ")"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 755, "end_byte": 759, "start_point": [27, 6], "end_point": [27, 10], "text": " {\n "}], "start_byte": 755, "end_byte": 759, "start_point": [27, 6], "end_point": [27, 10], "text": " {\n "}, {"type": "]", "children": [], "start_byte": 759, "end_byte": 760, "start_point": [27, 10], "end_point": [27, 11], "text": " "}], "start_byte": 753, "end_byte": 760, "start_point": [27, 4], "end_point": [27, 11], "text": "() {\n  "}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 765, "end_byte": 767, "start_point": [28, 4], "end_point": [28, 6], "text": " /"}, {"type": "identifier", "children": [], "start_byte": 768, "end_byte": 799, "start_point": [28, 7], "end_point": [28, 38], "text": " \u521b\u5efa\u4e00\u4e2atemp\u6587\u4ef6\u6a21\u62df\u8f93\u5165\u6587\u4ef6\n        let _"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 799, "end_byte": 800, "start_point": [28, 38], "end_point": [28, 39], "text": "t"}, {"type": ")", "children": [], "start_byte": 800, "end_byte": 801, "start_point": [28, 39], "end_point": [28, 40], "text": "e"}], "start_byte": 799, "end_byte": 801, "start_point": [28, 38], "end_point": [28, 40], "text": "te"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 802, "end_byte": 803, "start_point": [28, 41], "end_point": [28, 42], "text": "p"}, {"type": "line_comment", "children": [], "start_byte": 812, "end_byte": 855, "start_point": [29, 8], "end_point": [29, 51], "text": "ile::create(\"testInput.txt\").unwrap();\n\n   "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 864, "end_byte": 867, "start_point": [30, 8], "end_point": [30, 11], "text": "_fi"}, {"type": "identifier", "children": [], "start_byte": 868, "end_byte": 878, "start_point": [30, 12], "end_point": [30, 22], "text": "e_names();"}, {"type": "=", "children": [], "start_byte": 879, "end_byte": 880, "start_point": [30, 23], "end_point": [30, 24], "text": "\n"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 881, "end_byte": 885, "start_point": [30, 25], "end_point": [30, 29], "text": "    "}, {"type": "::", "children": [], "start_byte": 885, "end_byte": 887, "start_point": [30, 29], "end_point": [30, 31], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 887, "end_byte": 893, "start_point": [30, 31], "end_point": [30, 37], "text": " // \u4f7f\u7528"}], "start_byte": 881, "end_byte": 893, "start_point": [30, 25], "end_point": [30, 37], "text": "       // \u4f7f\u7528"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 893, "end_byte": 894, "start_point": [30, 37], "end_point": [30, 38], "text": "P"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 894, "end_byte": 895, "start_point": [30, 38], "end_point": [30, 39], "text": "a"}, {"type": "\"", "children": [], "start_byte": 908, "end_byte": 909, "start_point": [30, 52], "end_point": [30, 53], "text": " "}], "start_byte": 894, "end_byte": 909, "start_point": [30, 38], "end_point": [30, 53], "text": "ath\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n   "}, {"type": ")", "children": [], "start_byte": 909, "end_byte": 910, "start_point": [30, 53], "end_point": [30, 54], "text": " "}], "start_byte": 893, "end_byte": 910, "start_point": [30, 37], "end_point": [30, 54], "text": "Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n    "}], "start_byte": 881, "end_byte": 910, "start_point": [30, 25], "end_point": [30, 54], "text": "       // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n    "}, {"type": ".", "children": [], "start_byte": 910, "end_byte": 911, "start_point": [30, 54], "end_point": [30, 55], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 911, "end_byte": 917, "start_point": [30, 55], "end_point": [30, 61], "text": "   ass"}], "start_byte": 881, "end_byte": 917, "start_point": [30, 25], "end_point": [30, 61], "text": "       // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        ass"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 917, "end_byte": 918, "start_point": [30, 61], "end_point": [30, 62], "text": "e"}, {"type": ")", "children": [], "start_byte": 918, "end_byte": 919, "start_point": [30, 62], "end_point": [30, 63], "text": "r"}], "start_byte": 917, "end_byte": 919, "start_point": [30, 61], "end_point": [30, 63], "text": "er"}], "start_byte": 881, "end_byte": 919, "start_point": [30, 25], "end_point": [30, 63], "text": "       // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        asser"}, {"type": ";", "children": [], "start_byte": 919, "end_byte": 920, "start_point": [30, 63], "end_point": [30, 64], "text": "t"}], "start_byte": 864, "end_byte": 920, "start_point": [30, 8], "end_point": [30, 64], "text": "_file_names();\n\n        // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        assert"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 930, "end_byte": 945, "start_point": [32, 8], "end_point": [32, 23], "text": "w(\"testInput.tx"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 945, "end_byte": 946, "start_point": [32, 23], "end_point": [32, 24], "text": "t"}, {"type": ")", "children": [], "start_byte": 946, "end_byte": 947, "start_point": [32, 24], "end_point": [32, 25], "text": "\""}], "start_byte": 945, "end_byte": 947, "start_point": [32, 23], "end_point": [32, 25], "text": "t\""}], "start_byte": 930, "end_byte": 947, "start_point": [32, 8], "end_point": [32, 25], "text": "w(\"testInput.txt\""}, {"type": ";", "children": [], "start_byte": 947, "end_byte": 948, "start_point": [32, 25], "end_point": [32, 26], "text": ")"}], "start_byte": 930, "end_byte": 948, "start_point": [32, 8], "end_point": [32, 26], "text": "w(\"testInput.txt\")"}, {"type": "line_comment", "children": [], "start_byte": 958, "end_byte": 995, "start_point": [34, 8], "end_point": [34, 45], "text": ";\n\n        // \u5220\u9664temp\u6587\u4ef6\n        Comman"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1004, "end_byte": 1010, "start_point": [35, 8], "end_point": [35, 14], "text": "m\").ar"}, {"type": "!", "children": [], "start_byte": 1010, "end_byte": 1011, "start_point": [35, 14], "end_point": [35, 15], "text": "g"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1011, "end_byte": 1012, "start_point": [35, 15], "end_point": [35, 16], "text": "("}, {"type": "identifier", "children": [], "start_byte": 1012, "end_byte": 1016, "start_point": [35, 16], "end_point": [35, 20], "text": "\"tes"}, {"type": "identifier", "children": [], "start_byte": 1018, "end_byte": 1021, "start_point": [35, 22], "end_point": [35, 25], "text": "npu"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1021, "end_byte": 1022, "start_point": [35, 25], "end_point": [35, 26], "text": "t"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1022, "end_byte": 1023, "start_point": [35, 26], "end_point": [35, 27], "text": "."}, {"type": "\"", "children": [], "start_byte": 1036, "end_byte": 1037, "start_point": [35, 40], "end_point": [35, 41], "text": ")"}], "start_byte": 1022, "end_byte": 1037, "start_point": [35, 26], "end_point": [35, 41], "text": ".txt\").output()"}, {"type": ")", "children": [], "start_byte": 1037, "end_byte": 1038, "start_point": [35, 41], "end_point": [35, 42], "text": "."}], "start_byte": 1021, "end_byte": 1038, "start_point": [35, 25], "end_point": [35, 42], "text": "t.txt\").output()."}, {"type": "identifier", "children": [], "start_byte": 1039, "end_byte": 1045, "start_point": [35, 43], "end_point": [35, 49], "text": "nwrap("}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1045, "end_byte": 1046, "start_point": [35, 49], "end_point": [35, 50], "text": ")"}, {"type": ")", "children": [], "start_byte": 1046, "end_byte": 1047, "start_point": [35, 50], "end_point": [35, 51], "text": ";"}], "start_byte": 1045, "end_byte": 1047, "start_point": [35, 49], "end_point": [35, 51], "text": ");"}, {"type": ")", "children": [], "start_byte": 1047, "end_byte": 1048, "start_point": [35, 51], "end_point": [35, 52], "text": "\n"}], "start_byte": 1011, "end_byte": 1048, "start_point": [35, 15], "end_point": [35, 52], "text": "(\"testInput.txt\").output().unwrap();\n"}], "start_byte": 1004, "end_byte": 1048, "start_point": [35, 8], "end_point": [35, 52], "text": "m\").arg(\"testInput.txt\").output().unwrap();\n"}, {"type": ";", "children": [], "start_byte": 1048, "end_byte": 1049, "start_point": [35, 52], "end_point": [35, 53], "text": " "}], "start_byte": 1004, "end_byte": 1049, "start_point": [35, 8], "end_point": [35, 53], "text": "m\").arg(\"testInput.txt\").output().unwrap();\n "}, {"type": "line_comment", "children": [], "start_byte": 1059, "end_byte": 1078, "start_point": [37, 8], "end_point": [37, 27], "text": "#[test]\n    fn test"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1087, "end_byte": 1094, "start_point": [38, 8], "end_point": [38, 15], "text": "e_names"}, {"type": "::", "children": [], "start_byte": 1094, "end_byte": 1096, "start_point": [38, 15], "end_point": [38, 17], "text": "_n"}, {"type": "identifier", "children": [], "start_byte": 1096, "end_byte": 1099, "start_point": [38, 17], "end_point": [38, 20], "text": "ois"}], "start_byte": 1087, "end_byte": 1099, "start_point": [38, 8], "end_point": [38, 20], "text": "e_names_nois"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1099, "end_byte": 1100, "start_point": [38, 20], "end_point": [38, 21], "text": "y"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1100, "end_byte": 1101, "start_point": [38, 21], "end_point": [38, 22], "text": "_"}, {"type": "\"", "children": [], "start_byte": 1103, "end_byte": 1104, "start_point": [38, 24], "end_point": [38, 25], "text": "l"}], "start_byte": 1100, "end_byte": 1104, "start_point": [38, 21], "end_point": [38, 25], "text": "_fal"}, {"type": ")", "children": [], "start_byte": 1104, "end_byte": 1105, "start_point": [38, 25], "end_point": [38, 26], "text": "s"}], "start_byte": 1099, "end_byte": 1105, "start_point": [38, 20], "end_point": [38, 26], "text": "y_fals"}], "start_byte": 1087, "end_byte": 1105, "start_point": [38, 8], "end_point": [38, 26], "text": "e_names_noisy_fals"}, {"type": ".", "children": [], "start_byte": 1105, "end_byte": 1106, "start_point": [38, 26], "end_point": [38, 27], "text": "e"}, {"type": "field_identifier", "children": [], "start_byte": 1106, "end_byte": 1109, "start_point": [38, 27], "end_point": [38, 30], "text": "() "}], "start_byte": 1087, "end_byte": 1109, "start_point": [38, 8], "end_point": [38, 30], "text": "e_names_noisy_false() "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1109, "end_byte": 1110, "start_point": [38, 30], "end_point": [38, 31], "text": "{"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1110, "end_byte": 1111, "start_point": [38, 31], "end_point": [38, 32], "text": "\n"}, {"type": "\"", "children": [], "start_byte": 1124, "end_byte": 1125, "start_point": [38, 45], "end_point": [38, 46], "text": "e"}], "start_byte": 1110, "end_byte": 1125, "start_point": [38, 31], "end_point": [38, 46], "text": "\n        unsafe"}, {"type": ")", "children": [], "start_byte": 1125, "end_byte": 1126, "start_point": [38, 46], "end_point": [38, 47], "text": " "}], "start_byte": 1109, "end_byte": 1126, "start_point": [38, 30], "end_point": [38, 47], "text": "{\n        unsafe "}], "start_byte": 1087, "end_byte": 1126, "start_point": [38, 8], "end_point": [38, 47], "text": "e_names_noisy_false() {\n        unsafe "}, {"type": ".", "children": [], "start_byte": 1126, "end_byte": 1127, "start_point": [38, 47], "end_point": [38, 48], "text": "{"}, {"type": "field_identifier", "children": [], "start_byte": 1127, "end_byte": 1133, "start_point": [38, 48], "end_point": [38, 54], "text": "\n     "}], "start_byte": 1087, "end_byte": 1133, "start_point": [38, 8], "end_point": [38, 54], "text": "e_names_noisy_false() {\n        unsafe {\n     "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1133, "end_byte": 1134, "start_point": [38, 54], "end_point": [38, 55], "text": " "}, {"type": ")", "children": [], "start_byte": 1134, "end_byte": 1135, "start_point": [38, 55], "end_point": [38, 56], "text": " "}], "start_byte": 1133, "end_byte": 1135, "start_point": [38, 54], "end_point": [38, 56], "text": "  "}], "start_byte": 1087, "end_byte": 1135, "start_point": [38, 8], "end_point": [38, 56], "text": "e_names_noisy_false() {\n        unsafe {\n       "}, {"type": ".", "children": [], "start_byte": 1135, "end_byte": 1136, "start_point": [38, 56], "end_point": [38, 57], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1136, "end_byte": 1142, "start_point": [38, 57], "end_point": [38, 63], "text": "    NO"}], "start_byte": 1087, "end_byte": 1142, "start_point": [38, 8], "end_point": [38, 63], "text": "e_names_noisy_false() {\n        unsafe {\n            NO"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1142, "end_byte": 1143, "start_point": [38, 63], "end_point": [38, 64], "text": "I"}, {"type": ")", "children": [], "start_byte": 1143, "end_byte": 1144, "start_point": [38, 64], "end_point": [38, 65], "text": "S"}], "start_byte": 1142, "end_byte": 1144, "start_point": [38, 63], "end_point": [38, 65], "text": "IS"}], "start_byte": 1087, "end_byte": 1144, "start_point": [38, 8], "end_point": [38, 65], "text": "e_names_noisy_false() {\n        unsafe {\n            NOIS"}, {"type": ";", "children": [], "start_byte": 1144, "end_byte": 1145, "start_point": [38, 65], "end_point": [38, 66], "text": "Y"}], "start_byte": 1087, "end_byte": 1145, "start_point": [38, 8], "end_point": [38, 66], "text": "e_names_noisy_false() {\n        unsafe {\n            NOISY"}, {"type": "}", "children": [], "start_byte": 1150, "end_byte": 1151, "start_point": [39, 4], "end_point": [39, 5], "text": "l"}], "start_byte": 802, "end_byte": 1151, "start_point": [28, 41], "end_point": [39, 5], "text": "p_file = File::create(\"testInput.txt\").unwrap();\n\n        show_file_names();\n\n        // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        assert!(Path::new(\"testInput.txt\").exists());\n\n        // \u5220\u9664temp\u6587\u4ef6\n        Command::new(\"rm\").arg(\"testInput.txt\").output().unwrap();\n    }\n\n    #[test]\n    fn test_show_file_names_noisy_false() {\n        unsafe {\n            NOISY = fal"}], "start_byte": 765, "end_byte": 1151, "start_point": [28, 4], "end_point": [39, 5], "text": " // \u521b\u5efa\u4e00\u4e2atemp\u6587\u4ef6\u6a21\u62df\u8f93\u5165\u6587\u4ef6\n        let _temp_file = File::create(\"testInput.txt\").unwrap();\n\n        show_file_names();\n\n        // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        assert!(Path::new(\"testInput.txt\").exists());\n\n        // \u5220\u9664temp\u6587\u4ef6\n        Command::new(\"rm\").arg(\"testInput.txt\").output().unwrap();\n    }\n\n    #[test]\n    fn test_show_file_names_noisy_false() {\n        unsafe {\n            NOISY = fal"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 1157, "end_byte": 1158, "start_point": [41, 4], "end_point": [41, 5], "text": " "}, {"type": "[", "children": [], "start_byte": 1158, "end_byte": 1159, "start_point": [41, 5], "end_point": [41, 6], "text": " "}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 1159, "end_byte": 1163, "start_point": [41, 6], "end_point": [41, 10], "text": "    "}], "start_byte": 1159, "end_byte": 1163, "start_point": [41, 6], "end_point": [41, 10], "text": "    "}, {"type": "]", "children": [], "start_byte": 1163, "end_byte": 1164, "start_point": [41, 10], "end_point": [41, 11], "text": "}"}], "start_byte": 1157, "end_byte": 1164, "start_point": [41, 4], "end_point": [41, 11], "text": "      }"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 1169, "end_byte": 1171, "start_point": [42, 4], "end_point": [42, 6], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 1172, "end_byte": 1204, "start_point": [42, 7], "end_point": [42, 39], "text": "  // \u6b64\u6d4b\u8bd5\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u6587\u4ef6\u540d\uff0c\u56e0\u4e3a\u5f53noisy\u4e3afalse\u65f6"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 1204, "end_byte": 1205, "start_point": [42, 39], "end_point": [42, 40], "text": "\u4e0d"}, {"type": ")", "children": [], "start_byte": 1205, "end_byte": 1206, "start_point": [42, 40], "end_point": [42, 41], "text": "\u5e94"}], "start_byte": 1204, "end_byte": 1206, "start_point": [42, 39], "end_point": [42, 41], "text": "\u4e0d\u5e94"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1207, "end_byte": 1208, "start_point": [42, 42], "end_point": [42, 43], "text": "\u8f93"}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 1217, "end_byte": 1223, "start_point": [43, 8], "end_point": [43, 14], "text": "     s"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1224, "end_byte": 1225, "start_point": [43, 15], "end_point": [43, 16], "text": "o"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1238, "end_byte": 1243, "start_point": [44, 12], "end_point": [44, 17], "text": ");\n\n "}, {"type": "=", "children": [], "start_byte": 1244, "end_byte": 1245, "start_point": [44, 18], "end_point": [44, 19], "text": " "}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 1246, "end_byte": 1251, "start_point": [44, 20], "end_point": [44, 25], "text": "    /"}], "start_byte": 1246, "end_byte": 1251, "start_point": [44, 20], "end_point": [44, 25], "text": "    /"}], "start_byte": 1238, "end_byte": 1251, "start_point": [44, 12], "end_point": [44, 25], "text": ");\n\n        /"}, {"type": ";", "children": [], "start_byte": 1251, "end_byte": 1252, "start_point": [44, 25], "end_point": [44, 26], "text": "/"}], "start_byte": 1238, "end_byte": 1252, "start_point": [44, 12], "end_point": [44, 26], "text": ");\n\n        //"}, {"type": "}", "children": [], "start_byte": 1261, "end_byte": 1262, "start_point": [45, 8], "end_point": [45, 9], "text": "\u6587"}], "start_byte": 1224, "end_byte": 1262, "start_point": [43, 15], "end_point": [45, 9], "text": "ow_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587"}], "start_byte": 1217, "end_byte": 1262, "start_point": [43, 8], "end_point": [45, 9], "text": "     show_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587"}], "start_byte": 1217, "end_byte": 1262, "start_point": [43, 8], "end_point": [45, 9], "text": "     show_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587"}, {"type": "line_comment", "children": [], "start_byte": 1272, "end_byte": 1363, "start_point": [47, 8], "end_point": [47, 99], "text": "assert!(!Path::new(\"testOutput.txt\").exists());\n    }\n}\n"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1372, "end_byte": 1387, "start_point": [48, 8], "end_point": [48, 23], "text": ""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1387, "end_byte": 1388, "start_point": [48, 23], "end_point": [48, 24], "text": ""}, {"type": ")", "children": [], "start_byte": 1388, "end_byte": 1389, "start_point": [48, 24], "end_point": [48, 25], "text": ""}], "start_byte": 1387, "end_byte": 1389, "start_point": [48, 23], "end_point": [48, 25], "text": ""}], "start_byte": 1372, "end_byte": 1389, "start_point": [48, 8], "end_point": [48, 25], "text": ""}, {"type": ";", "children": [], "start_byte": 1389, "end_byte": 1390, "start_point": [48, 25], "end_point": [48, 26], "text": ""}], "start_byte": 1372, "end_byte": 1390, "start_point": [48, 8], "end_point": [48, 26], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 1400, "end_byte": 1433, "start_point": [50, 8], "end_point": [50, 41], "text": ""}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1442, "end_byte": 1448, "start_point": [51, 8], "end_point": [51, 14], "text": ""}, {"type": "!", "children": [], "start_byte": 1448, "end_byte": 1449, "start_point": [51, 14], "end_point": [51, 15], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1449, "end_byte": 1450, "start_point": [51, 15], "end_point": [51, 16], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1451, "end_byte": 1455, "start_point": [51, 17], "end_point": [51, 21], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1457, "end_byte": 1460, "start_point": [51, 23], "end_point": [51, 26], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1460, "end_byte": 1461, "start_point": [51, 26], "end_point": [51, 27], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1461, "end_byte": 1462, "start_point": [51, 27], "end_point": [51, 28], "text": ""}, {"type": "\"", "children": [], "start_byte": 1476, "end_byte": 1477, "start_point": [51, 42], "end_point": [51, 43], "text": ""}], "start_byte": 1461, "end_byte": 1477, "start_point": [51, 27], "end_point": [51, 43], "text": ""}, {"type": ")", "children": [], "start_byte": 1477, "end_byte": 1478, "start_point": [51, 43], "end_point": [51, 44], "text": ""}], "start_byte": 1460, "end_byte": 1478, "start_point": [51, 26], "end_point": [51, 44], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1479, "end_byte": 1485, "start_point": [51, 45], "end_point": [51, 51], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1485, "end_byte": 1486, "start_point": [51, 51], "end_point": [51, 52], "text": ""}, {"type": ")", "children": [], "start_byte": 1486, "end_byte": 1487, "start_point": [51, 52], "end_point": [51, 53], "text": ""}], "start_byte": 1485, "end_byte": 1487, "start_point": [51, 51], "end_point": [51, 53], "text": ""}, {"type": ")", "children": [], "start_byte": 1487, "end_byte": 1488, "start_point": [51, 53], "end_point": [51, 54], "text": ""}], "start_byte": 1449, "end_byte": 1488, "start_point": [51, 15], "end_point": [51, 54], "text": ""}], "start_byte": 1442, "end_byte": 1488, "start_point": [51, 8], "end_point": [51, 54], "text": ""}, {"type": ";", "children": [], "start_byte": 1488, "end_byte": 1489, "start_point": [51, 54], "end_point": [51, 55], "text": ""}], "start_byte": 1442, "end_byte": 1489, "start_point": [51, 8], "end_point": [51, 55], "text": ""}, {"type": "}", "children": [], "start_byte": 1494, "end_byte": 1495, "start_point": [52, 4], "end_point": [52, 5], "text": ""}], "start_byte": 1207, "end_byte": 1495, "start_point": [42, 42], "end_point": [52, 5], "text": "\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\n        show_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587\u4ef6\n        assert!(!Path::new(\"testOutput.txt\").exists());\n    }\n}\n"}], "start_byte": 1169, "end_byte": 1495, "start_point": [42, 4], "end_point": [52, 5], "text": "     // \u6b64\u6d4b\u8bd5\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u6587\u4ef6\u540d\uff0c\u56e0\u4e3a\u5f53noisy\u4e3afalse\u65f6\u4e0d\u5e94\u8be5\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\n        show_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587\u4ef6\n        assert!(!Path::new(\"testOutput.txt\").exists());\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1496, "end_byte": 1497, "start_point": [53, 0], "end_point": [53, 1], "text": ""}], "start_byte": 657, "end_byte": 1497, "start_point": [23, 10], "end_point": [53, 1], "text": "and;\n    use crate::global_vars::bzip2_c5::*;\n    #[test]\n    fn test_show_file_names_noisy_true() {\n        // \u521b\u5efa\u4e00\u4e2atemp\u6587\u4ef6\u6a21\u62df\u8f93\u5165\u6587\u4ef6\n        let _temp_file = File::create(\"testInput.txt\").unwrap();\n\n        show_file_names();\n\n        // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        assert!(Path::new(\"testInput.txt\").exists());\n\n        // \u5220\u9664temp\u6587\u4ef6\n        Command::new(\"rm\").arg(\"testInput.txt\").output().unwrap();\n    }\n\n    #[test]\n    fn test_show_file_names_noisy_false() {\n        unsafe {\n            NOISY = false;\n        }\n\n        // \u6b64\u6d4b\u8bd5\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u6587\u4ef6\u540d\uff0c\u56e0\u4e3a\u5f53noisy\u4e3afalse\u65f6\u4e0d\u5e94\u8be5\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\n        show_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587\u4ef6\n        assert!(!Path::new(\"testOutput.txt\").exists());\n    }\n}\n"}], "start_byte": 647, "end_byte": 1497, "start_point": [23, 0], "end_point": [53, 1], "text": "cess::Command;\n    use crate::global_vars::bzip2_c5::*;\n    #[test]\n    fn test_show_file_names_noisy_true() {\n        // \u521b\u5efa\u4e00\u4e2atemp\u6587\u4ef6\u6a21\u62df\u8f93\u5165\u6587\u4ef6\n        let _temp_file = File::create(\"testInput.txt\").unwrap();\n\n        show_file_names();\n\n        // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        assert!(Path::new(\"testInput.txt\").exists());\n\n        // \u5220\u9664temp\u6587\u4ef6\n        Command::new(\"rm\").arg(\"testInput.txt\").output().unwrap();\n    }\n\n    #[test]\n    fn test_show_file_names_noisy_false() {\n        unsafe {\n            NOISY = false;\n        }\n\n        // \u6b64\u6d4b\u8bd5\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u6587\u4ef6\u540d\uff0c\u56e0\u4e3a\u5f53noisy\u4e3afalse\u65f6\u4e0d\u5e94\u8be5\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\n        show_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587\u4ef6\n        assert!(!Path::new(\"testOutput.txt\").exists());\n    }\n}\n"}], "start_byte": 0, "end_byte": 1498, "start_point": [0, 0], "end_point": [54, 0], "text": "use std::io::Write;\nuse std::fs::File;\nuse std::path::Path;\nuse crate::global_vars::bzip2_c5::*;\nuse crate::global_vars::bzip2_c1::*;\n// \u6a21\u62dfC\u8bed\u8a00\u4e2d\u7684Bool\u548cChar\u7c7b\u578b\ntype Bool = bool;\ntype Char = u8;\n\n// \u5168\u5c40\u53d8\u91cf\npub fn show_file_names() {\n    unsafe {\n        if NOISY {\n            // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u4e3a\u5b57\u7b26\u4e32\n            let in_str = std::str::from_utf8(&IN_NAME).unwrap().trim_end_matches('\\0');\n            let out_str = std::str::from_utf8(&OUT_NAME).unwrap().trim_end_matches('\\0');\n\n            writeln!(std::io::stderr(), \"\\tInput file = {}, output file = {}\", in_str, out_str).unwrap();\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::process::Command;\n    use crate::global_vars::bzip2_c5::*;\n    #[test]\n    fn test_show_file_names_noisy_true() {\n        // \u521b\u5efa\u4e00\u4e2atemp\u6587\u4ef6\u6a21\u62df\u8f93\u5165\u6587\u4ef6\n        let _temp_file = File::create(\"testInput.txt\").unwrap();\n\n        show_file_names();\n\n        // \u4f7f\u7528Path\u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n        assert!(Path::new(\"testInput.txt\").exists());\n\n        // \u5220\u9664temp\u6587\u4ef6\n        Command::new(\"rm\").arg(\"testInput.txt\").output().unwrap();\n    }\n\n    #[test]\n    fn test_show_file_names_noisy_false() {\n        unsafe {\n            NOISY = false;\n        }\n\n        // \u6b64\u6d4b\u8bd5\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u6587\u4ef6\u540d\uff0c\u56e0\u4e3a\u5f53noisy\u4e3afalse\u65f6\u4e0d\u5e94\u8be5\u8f93\u51fa\u4efb\u4f55\u5185\u5bb9\n        show_file_names();\n\n        // \u786e\u4fdd\u6ca1\u6709\u521b\u5efa\u8f93\u51fa\u6587\u4ef6\n        assert!(!Path::new(\"testOutput.txt\").exists());\n    }\n}\n"}