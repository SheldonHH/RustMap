{"message":"unused import: `Read`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":6216,"byte_end":6220,"line_start":154,"line_end":154,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"use std::io::{self, Read, BufRead};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":6214,"byte_end":6220,"line_start":154,"line_end":154,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use std::io::{self, Read, BufRead};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Read`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:154:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Read, BufRead};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"type `bzFile` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20066,"byte_end":20072,"line_start":530,"line_end":530,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"pub struct bzFile {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20066,"byte_end":20072,"line_start":530,"line_end":530,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"pub struct bzFile {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":"BzFile","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `bzFile` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:530:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct bzFile {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BzFile`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20375,"byte_end":20380,"line_start":542,"line_end":542,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use serde_json::{Value};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20358,"byte_end":20382,"line_start":542,"line_end":542,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use serde_json::{Value};","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:542:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde_json::{Value};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `c_int`, `c_void`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20402,"byte_end":20407,"line_start":543,"line_end":543,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"use std::os::raw::{c_int, c_void};","highlight_start":20,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20409,"byte_end":20415,"line_start":543,"line_end":543,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"use std::os::raw::{c_int, c_void};","highlight_start":27,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20383,"byte_end":20417,"line_start":543,"line_end":543,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"use std::os::raw::{c_int, c_void};","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `c_int`, `c_void`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:543:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::raw::{c_int, c_void};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `decode`, `encode`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20431,"byte_end":20437,"line_start":544,"line_end":544,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"use base64::{encode, decode};  // Import specific functions if needed","highlight_start":14,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20439,"byte_end":20445,"line_start":544,"line_end":544,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"use base64::{encode, decode};  // Import specific functions if needed","highlight_start":22,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20418,"byte_end":20447,"line_start":544,"line_end":544,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"use base64::{encode, decode};  // Import specific functions if needed","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `decode`, `encode`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:544:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m544\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse base64::{encode, decode};  // Import specific functions if needed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"type `bz_stream` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":22917,"byte_end":22926,"line_start":612,"line_end":612,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"pub struct bz_stream {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":22917,"byte_end":22926,"line_start":612,"line_end":612,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"pub struct bz_stream {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"BzStream","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `bz_stream` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:612:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m612\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct bz_stream {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BzStream`\u001b[0m\n\n"}
{"message":"type `bz_stream_DState` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":25108,"byte_end":25124,"line_start":676,"line_end":676,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct bz_stream_DState {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":25108,"byte_end":25124,"line_start":676,"line_end":676,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct bz_stream_DState {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"BzStreamDstate","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `bz_stream_DState` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:676:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m676\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct bz_stream_DState {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BzStreamDstate`\u001b[0m\n\n"}
{"message":"unused import: `std::io::Cursor`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/bsClose.rs","byte_start":2769,"byte_end":2784,"line_start":98,"line_end":98,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"    use std::io::Cursor;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/bsClose.rs","byte_start":2765,"byte_end":2785,"line_start":98,"line_end":98,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    use std::io::Cursor;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::Cursor`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/bsClose.rs:98:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use std::io::Cursor;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/bsClose.rs","byte_start":2794,"byte_end":2802,"line_start":99,"line_end":99,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/bsClose.rs","byte_start":2790,"byte_end":2803,"line_start":99,"line_end":99,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/bsClose.rs:99:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Cursor`, `Read`, `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":69,"byte_end":75,"line_start":2,"line_end":2,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":77,"byte_end":82,"line_start":2,"line_end":2,"column_start":23,"column_end":28,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":23,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":84,"byte_end":88,"line_start":2,"line_end":2,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":55,"byte_end":90,"line_start":2,"line_end":2,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Cursor`, `Read`, `Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Cursor, Write, Read};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::convert::TryInto`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":95,"byte_end":116,"line_start":3,"line_end":3,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":91,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::convert::TryInto`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::convert::TryInto;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c1::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":122,"byte_end":153,"line_start":4,"line_end":4,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":118,"byte_end":154,"line_start":4,"line_end":4,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c1::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c2::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":159,"byte_end":190,"line_start":5,"line_end":5,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":155,"byte_end":191,"line_start":5,"line_end":5,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c2::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c2::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c4::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":196,"byte_end":227,"line_start":6,"line_end":6,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c4::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":192,"byte_end":228,"line_start":6,"line_end":6,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c4::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c4::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c4::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2recover::writeError::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":233,"byte_end":267,"line_start":7,"line_end":7,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use crate::bzip2recover::writeError::*;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":229,"byte_end":268,"line_start":7,"line_end":7,"column_start":1,"column_end":40,"is_primary":true,"text":[{"text":"use crate::bzip2recover::writeError::*;","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2recover::writeError::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2recover::writeError::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Layout`, `alloc`, `realloc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":286,"byte_end":291,"line_start":8,"line_end":8,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":293,"byte_end":300,"line_start":8,"line_end":8,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":302,"byte_end":308,"line_start":8,"line_end":8,"column_start":34,"column_end":40,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":34,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":269,"byte_end":310,"line_start":8,"line_end":8,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Layout`, `alloc`, `realloc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/compress_bsPutBit_bsGetBit_bsPutUInt32.rs:8:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::alloc::{alloc, realloc, Layout};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Cursor`, `Read`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":69,"byte_end":75,"line_start":2,"line_end":2,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":84,"byte_end":88,"line_start":2,"line_end":2,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":69,"byte_end":77,"line_start":2,"line_end":2,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":15,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":82,"byte_end":88,"line_start":2,"line_end":2,"column_start":28,"column_end":34,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":28,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Cursor`, `Read`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Cursor, Write, Read};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::convert::TryInto`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":95,"byte_end":116,"line_start":3,"line_end":3,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":91,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::convert::TryInto;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::convert::TryInto`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::convert::TryInto;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unnecessary parentheses around assigned value","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":873,"byte_end":874,"line_start":30,"line_end":30,"column_start":24,"column_end":25,"is_primary":true,"text":[{"text":"    bitstream.buffer = ((bitstream.buffer << 1) | (bit & 0x1));","highlight_start":24,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":911,"byte_end":912,"line_start":30,"line_end":30,"column_start":62,"column_end":63,"is_primary":true,"text":[{"text":"    bitstream.buffer = ((bitstream.buffer << 1) | (bit & 0x1));","highlight_start":62,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":873,"byte_end":874,"line_start":30,"line_end":30,"column_start":24,"column_end":25,"is_primary":true,"text":[{"text":"    bitstream.buffer = ((bitstream.buffer << 1) | (bit & 0x1));","highlight_start":24,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":911,"byte_end":912,"line_start":30,"line_end":30,"column_start":62,"column_end":63,"is_primary":true,"text":[{"text":"    bitstream.buffer = ((bitstream.buffer << 1) | (bit & 0x1));","highlight_start":62,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around assigned value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs:30:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    bitstream.buffer = ((bitstream.buffer << 1) | (bit & 0x1));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    bitstream.buffer = \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0m(bitstream.buffer << 1) | (bit & 0x1)\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    bitstream.buffer = (bitstream.buffer << 1) | (bit & 0x1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around assigned value","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":1051,"byte_end":1052,"line_start":36,"line_end":36,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"        bitstream.buffer <<= (8 - bitstream.buff_live);","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":1075,"byte_end":1076,"line_start":36,"line_end":36,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        bitstream.buffer <<= (8 - bitstream.buff_live);","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":1051,"byte_end":1052,"line_start":36,"line_end":36,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"        bitstream.buffer <<= (8 - bitstream.buff_live);","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs","byte_start":1075,"byte_end":1076,"line_start":36,"line_end":36,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        bitstream.buffer <<= (8 - bitstream.buff_live);","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around assigned value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/bsPutBit_bsGetBit_bsPutUInt32.rs:36:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        bitstream.buffer <<= (8 - bitstream.buff_live);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        bitstream.buffer <<= \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0m8 - bitstream.buff_live\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        bitstream.buffer <<= 8 - bitstream.buff_live;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unused import: `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/readError.rs","byte_start":105,"byte_end":110,"line_start":5,"line_end":5,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{self, Write}; // 引入Rust标准库中的I/O模块","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/readError.rs","byte_start":103,"byte_end":110,"line_start":5,"line_end":5,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{self, Write}; // 引入Rust标准库中的I/O模块","highlight_start":19,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/readError.rs:5:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Write}; // 引入Rust标准库中的I/O模块\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c1::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/endsInBz2.rs","byte_start":4,"byte_end":35,"line_start":1,"line_end":1,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/endsInBz2.rs","byte_start":0,"byte_end":36,"line_start":1,"line_end":1,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c1::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/endsInBz2.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::path::Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_87_fileExists.rs","byte_start":23,"byte_end":38,"line_start":2,"line_end":2,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_87_fileExists.rs","byte_start":19,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::Path`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_87_fileExists.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::Path;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_87_fileExists.rs","byte_start":44,"byte_end":58,"line_start":3,"line_end":3,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::Write;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_87_fileExists.rs","byte_start":40,"byte_end":59,"line_start":3,"line_end":3,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"use std::io::Write;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_87_fileExists.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::Write;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_39_BZ2_bzDecompressInit_40_bzReadOpen::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":4,"byte_end":62,"line_start":1,"line_end":1,"column_start":5,"column_end":63,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_39_BZ2_bzDecompressInit_40_bzReadOpen::*;","highlight_start":5,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":0,"byte_end":63,"line_start":1,"line_end":1,"column_start":1,"column_end":64,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_39_BZ2_bzDecompressInit_40_bzReadOpen::*;","highlight_start":1,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_39_BZ2_bzDecompressInit_40_bzReadOpen::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_39_BZ2_bzDecompressInit_40_bzReadOpen::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":68,"byte_end":122,"line_start":2,"line_end":2,"column_start":5,"column_end":59,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*;","highlight_start":5,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":64,"byte_end":123,"line_start":2,"line_end":2,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_64_BZ2_bzDecompress_65_BZ2_bzRead::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_9_root_7_BZ2_bzReadGetUnused::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":128,"byte_end":177,"line_start":3,"line_end":3,"column_start":5,"column_end":54,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_9_root_7_BZ2_bzReadGetUnused::*;","highlight_start":5,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":124,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_9_root_7_BZ2_bzReadGetUnused::*;","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_9_root_7_BZ2_bzReadGetUnused::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_9_root_7_BZ2_bzReadGetUnused::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c5::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":586,"byte_end":617,"line_start":12,"line_end":12,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":582,"byte_end":618,"line_start":12,"line_end":12,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c5::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c5::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `PROG_NAME`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":654,"byte_end":663,"line_start":13,"line_end":13,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::{PROG_NAME};","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":619,"byte_end":665,"line_start":13,"line_end":13,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::{PROG_NAME};","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `PROG_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:13:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c2::{PROG_NAME};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `bzFile`, `verbosity`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":701,"byte_end":710,"line_start":14,"line_end":14,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{verbosity,bzFile};","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":711,"byte_end":717,"line_start":14,"line_end":14,"column_start":46,"column_end":52,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{verbosity,bzFile};","highlight_start":46,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":666,"byte_end":719,"line_start":14,"line_end":14,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{verbosity,bzFile};","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `bzFile`, `verbosity`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:14:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{verbosity,bzFile};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `ErrorKind`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":787,"byte_end":791,"line_start":19,"line_end":19,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, ErrorKind};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":793,"byte_end":802,"line_start":19,"line_end":19,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use std::io::{self, ErrorKind};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":773,"byte_end":804,"line_start":19,"line_end":19,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use std::io::{self, ErrorKind};","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ErrorKind`, `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:19:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, ErrorKind};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_76_root_43_showFileNames.rs","byte_start":24,"byte_end":37,"line_start":2,"line_end":2,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_76_root_43_showFileNames.rs","byte_start":20,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs::File`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_76_root_43_showFileNames.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::File;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::path::Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_76_root_43_showFileNames.rs","byte_start":43,"byte_end":58,"line_start":3,"line_end":3,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_76_root_43_showFileNames.rs","byte_start":39,"byte_end":59,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::Path`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_76_root_43_showFileNames.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::Path;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c5::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":200,"byte_end":231,"line_start":5,"line_end":5,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":196,"byte_end":232,"line_start":5,"line_end":5,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c5::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c5::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `dealloc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":285,"byte_end":292,"line_start":7,"line_end":7,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, dealloc, Layout};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":283,"byte_end":292,"line_start":7,"line_end":7,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, dealloc, Layout};","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `dealloc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:7:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::alloc::{alloc, dealloc, Layout};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `File`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":1277,"byte_end":1281,"line_start":34,"line_end":34,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::{self, File};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":1283,"byte_end":1287,"line_start":34,"line_end":34,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"use std::fs::{self, File};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":1263,"byte_end":1289,"line_start":34,"line_end":34,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::fs::{self, File};","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `File`, `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:34:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::{self, File};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::process::Command`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":1294,"byte_end":1315,"line_start":35,"line_end":35,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::process::Command;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":1290,"byte_end":1316,"line_start":35,"line_end":35,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::process::Command;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::process::Command`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:35:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process::Command;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::path::Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":1321,"byte_end":1336,"line_start":36,"line_end":36,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":1317,"byte_end":1337,"line_start":36,"line_end":36,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::Path`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:36:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::Path;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `process`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":1965,"byte_end":1972,"line_start":40,"line_end":40,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"use std::{env, process, io};","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":1963,"byte_end":1972,"line_start":40,"line_end":40,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"use std::{env, process, io};","highlight_start":14,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `process`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:40:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{env, process, io};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c2::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs","byte_start":49,"byte_end":80,"line_start":2,"line_end":2,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs","byte_start":45,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c2::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c2::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":1522,"byte_end":1535,"line_start":41,"line_end":41,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":1518,"byte_end":1536,"line_start":41,"line_end":41,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs::File`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:41:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::File;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_50_root_36_pad.rs","byte_start":25,"byte_end":38,"line_start":3,"line_end":3,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_50_root_36_pad.rs","byte_start":21,"byte_end":39,"line_start":3,"line_end":3,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs::File`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_50_root_36_pad.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::File;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_50_root_36_pad.rs","byte_start":44,"byte_end":63,"line_start":4,"line_end":4,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_50_root_36_pad.rs","byte_start":40,"byte_end":64,"line_start":4,"line_end":4,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::prelude::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_50_root_36_pad.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_73_BZ2_bzWrite::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":439,"byte_end":474,"line_start":8,"line_end":8,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_73_BZ2_bzWrite::*;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":435,"byte_end":475,"line_start":8,"line_end":8,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_73_BZ2_bzWrite::*;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_73_BZ2_bzWrite::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_73_BZ2_bzWrite::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":480,"byte_end":541,"line_start":9,"line_end":9,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen::*;","highlight_start":5,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":476,"byte_end":542,"line_start":9,"line_end":9,"column_start":1,"column_end":67,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen::*;","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_88_outOfMemory_scc_89_myMalloc::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":596,"byte_end":647,"line_start":11,"line_end":11,"column_start":5,"column_end":56,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_88_outOfMemory_scc_89_myMalloc::*;","highlight_start":5,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":592,"byte_end":648,"line_start":11,"line_end":11,"column_start":1,"column_end":57,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_88_outOfMemory_scc_89_myMalloc::*;","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_88_outOfMemory_scc_89_myMalloc::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_88_outOfMemory_scc_89_myMalloc::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Write`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":683,"byte_end":687,"line_start":14,"line_end":14,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, Read, Write};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":695,"byte_end":700,"line_start":14,"line_end":14,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"use std::io::{self, Read, Write};","highlight_start":27,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":683,"byte_end":689,"line_start":14,"line_end":14,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{self, Read, Write};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":693,"byte_end":700,"line_start":14,"line_end":14,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use std::io::{self, Read, Write};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Write`, `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:14:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Read, Write};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::os::unix::io::AsRawFd`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":707,"byte_end":733,"line_start":15,"line_end":15,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use std::os::unix::io::AsRawFd;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":703,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use std::os::unix::io::AsRawFd;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::os::unix::io::AsRawFd`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::unix::io::AsRawFd;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":4,"byte_end":11,"line_start":1,"line_end":1,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use std::fs;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":0,"byte_end":12,"line_start":1,"line_end":1,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"use std::fs;","highlight_start":1,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Write`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":27,"byte_end":31,"line_start":2,"line_end":2,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":33,"byte_end":38,"line_start":2,"line_end":2,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":13,"byte_end":40,"line_start":2,"line_end":2,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Write`, `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Write};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::os::unix::fs::MetadataExt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":45,"byte_end":75,"line_start":3,"line_end":3,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use std::os::unix::fs::MetadataExt;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":41,"byte_end":76,"line_start":3,"line_end":3,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use std::os::unix::fs::MetadataExt;","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::os::unix::fs::MetadataExt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::unix::fs::MetadataExt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_79_root_46_setExit::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":81,"byte_end":120,"line_start":4,"line_end":4,"column_start":5,"column_end":44,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_79_root_46_setExit::*;","highlight_start":5,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":77,"byte_end":121,"line_start":4,"line_end":4,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_79_root_46_setExit::*;","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_79_root_46_setExit::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_79_root_46_setExit::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c5::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":126,"byte_end":157,"line_start":5,"line_end":5,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":122,"byte_end":158,"line_start":5,"line_end":5,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c5::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c5::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c1::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":163,"byte_end":194,"line_start":6,"line_end":6,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":159,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c1::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c2::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":200,"byte_end":231,"line_start":7,"line_end":7,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":196,"byte_end":232,"line_start":7,"line_end":7,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c2::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c2::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c2::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::process`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_82_crcError_83_ioError.rs","byte_start":398,"byte_end":410,"line_start":10,"line_end":10,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use std::process;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_82_crcError_83_ioError.rs","byte_start":394,"byte_end":411,"line_start":10,"line_end":10,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use std::process;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::process`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_82_crcError_83_ioError.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `FromRawFd`, `IntoRawFd`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_49_fopen_output_safely.rs","byte_start":211,"byte_end":220,"line_start":8,"line_end":8,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"use std::os::unix::io::{FromRawFd, IntoRawFd};","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_49_fopen_output_safely.rs","byte_start":222,"byte_end":231,"line_start":8,"line_end":8,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"use std::os::unix::io::{FromRawFd, IntoRawFd};","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_49_fopen_output_safely.rs","byte_start":187,"byte_end":233,"line_start":8,"line_end":8,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"use std::os::unix::io::{FromRawFd, IntoRawFd};","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `FromRawFd`, `IntoRawFd`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_49_fopen_output_safely.rs:8:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::unix::io::{FromRawFd, IntoRawFd};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::process::Command`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_49_fopen_output_safely.rs","byte_start":238,"byte_end":259,"line_start":9,"line_end":9,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::process::Command;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_49_fopen_output_safely.rs","byte_start":234,"byte_end":260,"line_start":9,"line_end":9,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::process::Command;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::process::Command`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_49_fopen_output_safely.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process::Command;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_97_testStream::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":793,"byte_end":827,"line_start":16,"line_end":16,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_97_testStream::*;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":789,"byte_end":828,"line_start":16,"line_end":16,"column_start":1,"column_end":40,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_97_testStream::*;","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_97_testStream::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_100_testf.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_97_testStream::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":850,"byte_end":854,"line_start":18,"line_end":18,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"use std::fs::{self, File};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":848,"byte_end":854,"line_start":18,"line_end":18,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use std::fs::{self, File};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `File`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_100_testf.rs:18:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::{self, File};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `BufReader`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":877,"byte_end":886,"line_start":19,"line_end":19,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader};","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":875,"byte_end":886,"line_start":19,"line_end":19,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader};","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BufReader`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_100_testf.rs:19:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, BufReader};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::os::unix::io::AsRawFd`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":893,"byte_end":919,"line_start":20,"line_end":20,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use std::os::unix::io::AsRawFd;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":889,"byte_end":920,"line_start":20,"line_end":20,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use std::os::unix::io::AsRawFd;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::os::unix::io::AsRawFd`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_100_testf.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::unix::io::AsRawFd;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::path::Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":925,"byte_end":940,"line_start":21,"line_end":21,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":921,"byte_end":941,"line_start":21,"line_end":21,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::Path`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_100_testf.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::Path;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `S_IFDIR`, `isatty`, `stat`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":953,"byte_end":959,"line_start":22,"line_end":22,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"use libc::{isatty, stat, S_IFDIR};","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":961,"byte_end":965,"line_start":22,"line_end":22,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"use libc::{isatty, stat, S_IFDIR};","highlight_start":20,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":967,"byte_end":974,"line_start":22,"line_end":22,"column_start":26,"column_end":33,"is_primary":true,"text":[{"text":"use libc::{isatty, stat, S_IFDIR};","highlight_start":26,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":942,"byte_end":976,"line_start":22,"line_end":22,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"use libc::{isatty, stat, S_IFDIR};","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `S_IFDIR`, `isatty`, `stat`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_100_testf.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libc::{isatty, stat, S_IFDIR};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unnecessary parentheses around `if` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":2216,"byte_end":2217,"line_start":60,"line_end":60,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (metadata.file_type().is_dir()) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":2246,"byte_end":2247,"line_start":60,"line_end":60,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"            if (metadata.file_type().is_dir()) {","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":2216,"byte_end":2217,"line_start":60,"line_end":60,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (metadata.file_type().is_dir()) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bzip2/scc_100_testf.rs","byte_start":2246,"byte_end":2247,"line_start":60,"line_end":60,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"            if (metadata.file_type().is_dir()) {","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around `if` condition\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_100_testf.rs:60:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if (metadata.file_type().is_dir()) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            if \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mmetadata.file_type().is_dir()\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            if metadata.file_type().is_dir() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unused imports: `OP_MODE`, `exitValue`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs","byte_start":80,"byte_end":89,"line_start":2,"line_end":2,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME};","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs","byte_start":100,"byte_end":107,"line_start":2,"line_end":2,"column_start":56,"column_end":63,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME};","highlight_start":56,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs","byte_start":80,"byte_end":91,"line_start":2,"line_end":2,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME};","highlight_start":36,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs","byte_start":98,"byte_end":107,"line_start":2,"line_end":2,"column_start":54,"column_end":63,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME};","highlight_start":54,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `OP_MODE`, `exitValue`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs:2:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::process`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs","byte_start":199,"byte_end":211,"line_start":5,"line_end":5,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use std::process;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs","byte_start":195,"byte_end":212,"line_start":5,"line_end":5,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use std::process;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::process`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_95_mySIGSEGVorSIGBUScatcher.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c1::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s.rs","byte_start":4,"byte_end":35,"line_start":1,"line_end":1,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s.rs","byte_start":0,"byte_end":36,"line_start":1,"line_end":1,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c1::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":154,"byte_end":267,"line_start":5,"line_end":5,"column_start":5,"column_end":118,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo::*;","highlight_start":5,"highlight_end":118}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":150,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":119,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo::*;","highlight_start":1,"highlight_end":119}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_82_crcError_83_ioError::io_error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":273,"byte_end":323,"line_start":6,"line_end":6,"column_start":5,"column_end":55,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_82_crcError_83_ioError::io_error;","highlight_start":5,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":269,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":56,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_82_crcError_83_ioError::io_error;","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_82_crcError_83_ioError::io_error`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_82_crcError_83_ioError::io_error;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_79_root_46_setExit::set_exit`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":329,"byte_end":375,"line_start":7,"line_end":7,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_79_root_46_setExit::set_exit;","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":325,"byte_end":376,"line_start":7,"line_end":7,"column_start":1,"column_end":52,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_79_root_46_setExit::set_exit;","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_79_root_46_setExit::set_exit`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_79_root_46_setExit::set_exit;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_49_fopen_output_safely::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":381,"byte_end":424,"line_start":8,"line_end":8,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_49_fopen_output_safely::*;","highlight_start":5,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":377,"byte_end":425,"line_start":8,"line_end":8,"column_start":1,"column_end":49,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_49_fopen_output_safely::*;","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_49_fopen_output_safely::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_49_fopen_output_safely::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_87_fileExists::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":430,"byte_end":464,"line_start":9,"line_end":9,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_87_fileExists::*;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":426,"byte_end":465,"line_start":9,"line_end":9,"column_start":1,"column_end":40,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_87_fileExists::*;","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_87_fileExists::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_87_fileExists::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_105_hasSuffix_106_mapSuffix::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":470,"byte_end":518,"line_start":10,"line_end":10,"column_start":5,"column_end":53,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_105_hasSuffix_106_mapSuffix::*;","highlight_start":5,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":466,"byte_end":519,"line_start":10,"line_end":10,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_105_hasSuffix_106_mapSuffix::*;","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_105_hasSuffix_106_mapSuffix::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_105_hasSuffix_106_mapSuffix::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_94_copyFileName::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":524,"byte_end":560,"line_start":11,"line_end":11,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_94_copyFileName::*;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":520,"byte_end":561,"line_start":11,"line_end":11,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_94_copyFileName::*;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_94_copyFileName::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_94_copyFileName::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzip2::scc_55_root_40_containsDubiousChars::contains_dubious_chars`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":610,"byte_end":683,"line_start":13,"line_end":13,"column_start":5,"column_end":78,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_55_root_40_containsDubiousChars::contains_dubious_chars;","highlight_start":5,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":606,"byte_end":684,"line_start":13,"line_end":13,"column_start":1,"column_end":79,"is_primary":true,"text":[{"text":"use crate::bzip2::scc_55_root_40_containsDubiousChars::contains_dubious_chars;","highlight_start":1,"highlight_end":79}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzip2::scc_55_root_40_containsDubiousChars::contains_dubious_chars`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzip2::scc_55_root_40_containsDubiousChars::contains_dubious_chars;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":724,"byte_end":729,"line_start":15,"line_end":15,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":722,"byte_end":729,"line_start":15,"line_end":15,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{self, Write};","highlight_start":19,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Write`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:15:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Write};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `fileno`, `isatty`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":782,"byte_end":788,"line_start":18,"line_end":18,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"use libc::{isatty, fileno};","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":790,"byte_end":796,"line_start":18,"line_end":18,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"use libc::{isatty, fileno};","highlight_start":20,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":771,"byte_end":798,"line_start":18,"line_end":18,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use libc::{isatty, fileno};","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `fileno`, `isatty`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libc::{isatty, fileno};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::stdout`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":803,"byte_end":818,"line_start":19,"line_end":19,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::io::stdout;  // 导入 stdout","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":799,"byte_end":819,"line_start":19,"line_end":19,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::stdout;  // 导入 stdout","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::stdout`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::stdout;  // 导入 stdout\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::os::unix::io::AsRawFd`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":842,"byte_end":868,"line_start":20,"line_end":20,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use std::os::unix::io::AsRawFd;  // 导入 Unix-specific trait 和函数","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":838,"byte_end":869,"line_start":20,"line_end":20,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use std::os::unix::io::AsRawFd;  // 导入 Unix-specific trait 和函数","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::os::unix::io::AsRawFd`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::unix::io::AsRawFd;  // 导入 Unix-specific trait 和函数\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::os::fd::FromRawFd`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":915,"byte_end":937,"line_start":21,"line_end":21,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use std::os::fd::FromRawFd;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":911,"byte_end":938,"line_start":21,"line_end":21,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use std::os::fd::FromRawFd;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::os::fd::FromRawFd`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::os::fd::FromRawFd;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Result`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":91,"byte_end":97,"line_start":2,"line_end":2,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"use std::io::{self, BufRead, BufReader, Error, Result, Write};","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":89,"byte_end":97,"line_start":2,"line_end":2,"column_start":46,"column_end":54,"is_primary":true,"text":[{"text":"use std::io::{self, BufRead, BufReader, Error, Result, Write};","highlight_start":46,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Result`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:2:48\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, BufRead, BufReader, Error, Result, Write};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::stderr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":130,"byte_end":145,"line_start":4,"line_end":4,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::io::stderr;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":126,"byte_end":146,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::stderr;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::stderr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::stderr;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::sleep_lib::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":221,"byte_end":253,"line_start":8,"line_end":8,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":217,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::sleep_lib::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::sleep_lib::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_62_BZ2_bz__AssertH__fail::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":159,"byte_end":204,"line_start":5,"line_end":5,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_62_BZ2_bz__AssertH__fail::*;","highlight_start":5,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":155,"byte_end":205,"line_start":5,"line_end":5,"column_start":1,"column_end":51,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_62_BZ2_bz__AssertH__fail::*;","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_62_BZ2_bz__AssertH__fail::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_62_BZ2_bz__AssertH__fail::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::path::Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":294,"byte_end":309,"line_start":7,"line_end":7,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":290,"byte_end":310,"line_start":7,"line_end":7,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::Path`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::Path;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::mem`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":315,"byte_end":323,"line_start":8,"line_end":8,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::mem;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":311,"byte_end":324,"line_start":8,"line_end":8,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::mem;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::mem`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::mem;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::sleep_lib::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":352,"byte_end":384,"line_start":10,"line_end":10,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":348,"byte_end":385,"line_start":10,"line_end":10,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::sleep_lib::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::sleep_lib::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::bzip2_c1::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":390,"byte_end":421,"line_start":11,"line_end":11,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":386,"byte_end":422,"line_start":11,"line_end":11,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::*;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::bzip2_c1::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unnecessary parentheses around `if` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7185,"byte_end":7186,"line_start":214,"line_end":214,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7245,"byte_end":7246,"line_start":214,"line_end":214,"column_start":76,"column_end":77,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":76,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7185,"byte_end":7186,"line_start":214,"line_end":214,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7245,"byte_end":7246,"line_start":214,"line_end":214,"column_start":76,"column_end":77,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":76,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around `if` condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:214:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            if \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mbhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            if bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around `while` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7381,"byte_end":7382,"line_start":218,"line_end":218,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7441,"byte_end":7442,"line_start":218,"line_end":218,"column_start":83,"column_end":84,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":83,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7381,"byte_end":7382,"line_start":218,"line_end":218,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7441,"byte_end":7442,"line_start":218,"line_end":218,"column_start":83,"column_end":84,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {","highlight_start":83,"highlight_end":84}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around `while` condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:218:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                while \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mbhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                while bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) != 0 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around `if` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7800,"byte_end":7801,"line_start":230,"line_end":230,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7860,"byte_end":7861,"line_start":230,"line_end":230,"column_start":76,"column_end":77,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":76,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7800,"byte_end":7801,"line_start":230,"line_end":230,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7860,"byte_end":7861,"line_start":230,"line_end":230,"column_start":76,"column_end":77,"is_primary":true,"text":[{"text":"            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":76,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around `if` condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:230:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            if \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mbhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            if bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around `while` condition","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7996,"byte_end":7997,"line_start":234,"line_end":234,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":8056,"byte_end":8057,"line_start":234,"line_end":234,"column_start":83,"column_end":84,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":83,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":7996,"byte_end":7997,"line_start":234,"line_end":234,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":8056,"byte_end":8057,"line_start":234,"line_end":234,"column_start":83,"column_end":84,"is_primary":true,"text":[{"text":"                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {","highlight_start":83,"highlight_end":84}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around `while` condition\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:234:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                while (bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                while \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mbhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                while bhtab[(k as usize) >> 5] & (1u32 << ((k & 31) as u32)) == 0 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unnecessary parentheses around assigned value","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":8314,"byte_end":8315,"line_start":245,"line_end":245,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"                n_not_done += (r - l + 1);","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":8324,"byte_end":8325,"line_start":245,"line_end":245,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"                n_not_done += (r - l + 1);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":8314,"byte_end":8315,"line_start":245,"line_end":245,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"                n_not_done += (r - l + 1);","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":8324,"byte_end":8325,"line_start":245,"line_end":245,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"                n_not_done += (r - l + 1);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around assigned value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:245:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                n_not_done += (r - l + 1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                n_not_done += \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mr - l + 1\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                n_not_done += r - l + 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unused import: `std::time::Instant`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":258,"byte_end":276,"line_start":7,"line_end":7,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::time::Instant;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":254,"byte_end":277,"line_start":7,"line_end":7,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use std::time::Instant;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::time::Instant`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_70_fallbackQSort3.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::Instant;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":66,"byte_end":74,"line_start":3,"line_end":3,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":62,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_29_mainSimpleSort.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":5732,"byte_end":5740,"line_start":147,"line_end":147,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":5728,"byte_end":5741,"line_start":147,"line_end":147,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::*`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_29_mainSimpleSort.rs:147:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Error`, `Result`, `Write`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":33,"byte_end":37,"line_start":2,"line_end":2,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader, Write, BufRead, Result, Error};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":50,"byte_end":55,"line_start":2,"line_end":2,"column_start":32,"column_end":37,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader, Write, BufRead, Result, Error};","highlight_start":32,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":66,"byte_end":72,"line_start":2,"line_end":2,"column_start":48,"column_end":54,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader, Write, BufRead, Result, Error};","highlight_start":48,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":74,"byte_end":79,"line_start":2,"line_end":2,"column_start":56,"column_end":61,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader, Write, BufRead, Result, Error};","highlight_start":56,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":33,"byte_end":39,"line_start":2,"line_end":2,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader, Write, BufRead, Result, Error};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":48,"byte_end":55,"line_start":2,"line_end":2,"column_start":30,"column_end":37,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader, Write, BufRead, Result, Error};","highlight_start":30,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":64,"byte_end":79,"line_start":2,"line_end":2,"column_start":46,"column_end":61,"is_primary":true,"text":[{"text":"use std::io::{self, BufReader, Write, BufRead, Result, Error};","highlight_start":46,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Error`, `Result`, `Write`, `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, BufReader, Write, BufRead, Result, Error};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::path::Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":199,"byte_end":214,"line_start":6,"line_end":6,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":195,"byte_end":215,"line_start":6,"line_end":6,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::Path`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::Path;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::mem`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":220,"byte_end":228,"line_start":7,"line_end":7,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::mem;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":216,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::mem;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::mem`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::mem;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fmt::Display`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":234,"byte_end":251,"line_start":8,"line_end":8,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use std::fmt::Display;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":230,"byte_end":252,"line_start":8,"line_end":8,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use std::fmt::Display;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt::Display`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt::Display;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::sleep_lib::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":406,"byte_end":438,"line_start":10,"line_end":10,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":402,"byte_end":439,"line_start":10,"line_end":10,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::sleep_lib::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::sleep_lib::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::cmp::Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_28_root_19_mainGtU.rs","byte_start":30,"byte_end":48,"line_start":2,"line_end":2,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_28_root_19_mainGtU.rs","byte_start":26,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::cmp::Ordering`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_28_root_19_mainGtU.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::cmp::Ordering;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_9_root_7_BZ2_bzReadGetUnused.rs","byte_start":49,"byte_end":62,"line_start":3,"line_end":3,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_9_root_7_BZ2_bzReadGetUnused.rs","byte_start":45,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs::File`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_9_root_7_BZ2_bzReadGetUnused.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::File;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_7_unRLE_obuf_to_output_SMALL::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":52,"byte_end":101,"line_start":2,"line_end":2,"column_start":5,"column_end":54,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_7_unRLE_obuf_to_output_SMALL::*;","highlight_start":5,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":48,"byte_end":102,"line_start":2,"line_end":2,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_7_unRLE_obuf_to_output_SMALL::*;","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_7_unRLE_obuf_to_output_SMALL::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_7_unRLE_obuf_to_output_SMALL::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::bzlib::scc_8_root_6_unRLE_obuf_to_output_FAST::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":107,"byte_end":162,"line_start":3,"line_end":3,"column_start":5,"column_end":60,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_8_root_6_unRLE_obuf_to_output_FAST::*;","highlight_start":5,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":103,"byte_end":163,"line_start":3,"line_end":3,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"use crate::bzlib::scc_8_root_6_unRLE_obuf_to_output_FAST::*;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::bzlib::scc_8_root_6_unRLE_obuf_to_output_FAST::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::bzlib::scc_8_root_6_unRLE_obuf_to_output_FAST::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Error`, `Read`, `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":285,"byte_end":290,"line_start":7,"line_end":7,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"use std::io::{Error, Read, Write};","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":292,"byte_end":296,"line_start":7,"line_end":7,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{Error, Read, Write};","highlight_start":22,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":298,"byte_end":303,"line_start":7,"line_end":7,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"use std::io::{Error, Read, Write};","highlight_start":28,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":271,"byte_end":305,"line_start":7,"line_end":7,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"use std::io::{Error, Read, Write};","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Error`, `Read`, `Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:7:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Error, Read, Write};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":310,"byte_end":318,"line_start":8,"line_end":8,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":306,"byte_end":319,"line_start":8,"line_end":8,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ptr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ptr;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::slice`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":324,"byte_end":334,"line_start":9,"line_end":9,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"use std::slice;","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":320,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"use std::slice;","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::slice`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::slice;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_46_root_33_myfeof.rs","byte_start":20,"byte_end":25,"line_start":1,"line_end":1,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{Read, Write, Seek, SeekFrom};","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_46_root_33_myfeof.rs","byte_start":18,"byte_end":25,"line_start":1,"line_end":1,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"use std::io::{Read, Write, Seek, SeekFrom};","highlight_start":19,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_46_root_33_myfeof.rs:1:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Read, Write, Seek, SeekFrom};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_46_root_33_myfeof.rs","byte_start":67,"byte_end":86,"line_start":3,"line_end":3,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_46_root_33_myfeof.rs","byte_start":63,"byte_end":87,"line_start":3,"line_end":3,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::prelude::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_46_root_33_myfeof.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs::OpenOptions`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_46_root_33_myfeof.rs","byte_start":92,"byte_end":112,"line_start":4,"line_end":4,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use std::fs::OpenOptions;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_46_root_33_myfeof.rs","byte_start":88,"byte_end":113,"line_start":4,"line_end":4,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"use std::fs::OpenOptions;","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs::OpenOptions`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_46_root_33_myfeof.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::OpenOptions;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `EState`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":388,"byte_end":394,"line_start":6,"line_end":6,"column_start":47,"column_end":53,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{bz_stream, EState};","highlight_start":47,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":386,"byte_end":394,"line_start":6,"line_end":6,"column_start":45,"column_end":53,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{bz_stream, EState};","highlight_start":45,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `EState`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:6:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{bz_stream, EState};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":4340,"byte_end":4345,"line_start":106,"line_end":106,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"use std::io::{Error, Write};","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":4340,"byte_end":4347,"line_start":106,"line_end":106,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"use std::io::{Error, Write};","highlight_start":15,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:106:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Error, Write};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":4381,"byte_end":4389,"line_start":108,"line_end":108,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":4377,"byte_end":4390,"line_start":108,"line_end":108,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ptr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:108:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ptr;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":4464,"byte_end":4477,"line_start":111,"line_end":111,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":4460,"byte_end":4478,"line_start":111,"line_end":111,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs::File`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:111:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::File;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `File`, `remove_file`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":152,"byte_end":156,"line_start":6,"line_end":6,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::{File, remove_file};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":158,"byte_end":169,"line_start":6,"line_end":6,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"use std::fs::{File, remove_file};","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":138,"byte_end":171,"line_start":6,"line_end":6,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use std::fs::{File, remove_file};","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `File`, `remove_file`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_62_BZ2_bz__AssertH__fail.rs:6:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs::{File, remove_file};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `AssertUnwindSafe`, `catch_unwind`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":189,"byte_end":201,"line_start":7,"line_end":7,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"use std::panic::{catch_unwind, AssertUnwindSafe};","highlight_start":18,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":203,"byte_end":219,"line_start":7,"line_end":7,"column_start":32,"column_end":48,"is_primary":true,"text":[{"text":"use std::panic::{catch_unwind, AssertUnwindSafe};","highlight_start":32,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":172,"byte_end":221,"line_start":7,"line_end":7,"column_start":1,"column_end":50,"is_primary":true,"text":[{"text":"use std::panic::{catch_unwind, AssertUnwindSafe};","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AssertUnwindSafe`, `catch_unwind`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_62_BZ2_bz__AssertH__fail.rs:7:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::panic::{catch_unwind, AssertUnwindSafe};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Cursor`, `Read`, `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":238,"byte_end":242,"line_start":10,"line_end":10,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::{self, Write, Read, Cursor, stderr};","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":251,"byte_end":255,"line_start":10,"line_end":10,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"use std::io::{self, Write, Read, Cursor, stderr};","highlight_start":28,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":257,"byte_end":263,"line_start":10,"line_end":10,"column_start":34,"column_end":40,"is_primary":true,"text":[{"text":"use std::io::{self, Write, Read, Cursor, stderr};","highlight_start":34,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":238,"byte_end":244,"line_start":10,"line_end":10,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{self, Write, Read, Cursor, stderr};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":249,"byte_end":263,"line_start":10,"line_end":10,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"use std::io::{self, Write, Read, Cursor, stderr};","highlight_start":26,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Cursor`, `Read`, `self`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_62_BZ2_bz__AssertH__fail.rs:10:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{self, Write, Read, Cursor, stderr};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::process::Command`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":279,"byte_end":300,"line_start":12,"line_end":12,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::process::Command;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":275,"byte_end":301,"line_start":12,"line_end":12,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::process::Command;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::process::Command`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_62_BZ2_bz__AssertH__fail.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process::Command;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fs`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":941,"byte_end":948,"line_start":38,"line_end":38,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use std::fs;","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":937,"byte_end":949,"line_start":38,"line_end":38,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"use std::fs;","highlight_start":1,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_62_BZ2_bz__AssertH__fail.rs:38:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fs;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::path::Path`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":954,"byte_end":969,"line_start":39,"line_end":39,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_62_BZ2_bz__AssertH__fail.rs","byte_start":950,"byte_end":970,"line_start":39,"line_end":39,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::path::Path;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::path::Path`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_62_BZ2_bz__AssertH__fail.rs:39:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::path::Path;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `bz_stream` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4406,"byte_end":4415,"line_start":130,"line_end":130,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"pub struct bz_stream {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4406,"byte_end":4415,"line_start":130,"line_end":130,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"pub struct bz_stream {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"BzStream","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `bz_stream` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:130:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct bz_stream {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BzStream`\u001b[0m\n\n"}
{"message":"unused import: `EState`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_70_handle_compress.rs","byte_start":160,"byte_end":166,"line_start":3,"line_end":3,"column_start":47,"column_end":53,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{bz_stream, EState};","highlight_start":47,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_70_handle_compress.rs","byte_start":158,"byte_end":166,"line_start":3,"line_end":3,"column_start":45,"column_end":53,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{bz_stream, EState};","highlight_start":45,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `EState`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_70_handle_compress.rs:3:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{bz_stream, EState};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::sleep_lib::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_70_handle_compress.rs","byte_start":413,"byte_end":445,"line_start":7,"line_end":7,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_70_handle_compress.rs","byte_start":409,"byte_end":446,"line_start":7,"line_end":7,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::sleep_lib::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_70_handle_compress.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::sleep_lib::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `bzFile` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":457,"byte_end":463,"line_start":18,"line_end":18,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"pub struct bzFile {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":457,"byte_end":463,"line_start":18,"line_end":18,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"pub struct bzFile {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":"BzFile","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `bzFile` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_3_BZ2_bzReadClose.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct bzFile {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BzFile`\u001b[0m\n\n"}
{"message":"unused imports: `BZ2_crc32Table`, `BZ2_rNums`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":85,"byte_end":99,"line_start":2,"line_end":2,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{BZ2_crc32Table, BZ2_rNums, DState};","highlight_start":36,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":101,"byte_end":110,"line_start":2,"line_end":2,"column_start":52,"column_end":61,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{BZ2_crc32Table, BZ2_rNums, DState};","highlight_start":52,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":85,"byte_end":112,"line_start":2,"line_end":2,"column_start":36,"column_end":63,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{BZ2_crc32Table, BZ2_rNums, DState};","highlight_start":36,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BZ2_crc32Table`, `BZ2_rNums`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs:2:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{BZ2_crc32Table, BZ2_rNums, DState};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":106,"byte_end":111,"line_start":4,"line_end":4,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"use std::io::{Error, Write};","highlight_start":15,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":106,"byte_end":113,"line_start":4,"line_end":4,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"use std::io::{Error, Write};","highlight_start":15,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Error`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_73_BZ2_bzWrite.rs:4:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Error, Write};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"denote infinite loops with `loop { ... }`","code":{"code":"while_true","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":1223,"byte_end":1233,"line_start":48,"line_end":48,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        while true {","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(while_true)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `loop`","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":1223,"byte_end":1233,"line_start":48,"line_end":48,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        while true {","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"loop","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: denote infinite loops with `loop { ... }`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_73_BZ2_bzWrite.rs:48:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        while true {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `loop`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(while_true)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `std::ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":0,"byte_end":13,"line_start":1,"line_end":1,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ptr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ptr;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `DState`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":144,"byte_end":150,"line_start":3,"line_end":3,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{EState, DState, bz_stream,  bzFile};","highlight_start":44,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":142,"byte_end":150,"line_start":3,"line_end":3,"column_start":42,"column_end":50,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{EState, DState, bz_stream,  bzFile};","highlight_start":42,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `DState`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs:3:44\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{EState, DState, bz_stream,  bzFile};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::ffi::c_void`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":2305,"byte_end":2321,"line_start":80,"line_end":80,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::ffi::c_void;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":2301,"byte_end":2322,"line_start":80,"line_end":80,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use std::ffi::c_void;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ffi::c_void`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs:80:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ffi::c_void;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `EState`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs","byte_start":46,"byte_end":52,"line_start":1,"line_end":1,"column_start":47,"column_end":53,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{bz_stream, EState};","highlight_start":47,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs","byte_start":44,"byte_end":52,"line_start":1,"line_end":1,"column_start":45,"column_end":53,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{bz_stream, EState};","highlight_start":45,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `EState`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs:1:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{bz_stream, EState};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs","byte_start":59,"byte_end":67,"line_start":2,"line_end":2,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs","byte_start":55,"byte_end":68,"line_start":2,"line_end":2,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ptr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ptr;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `print_estate`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs","byte_start":58,"byte_end":70,"line_start":1,"line_end":1,"column_start":59,"column_end":71,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{EState,BZ2_crc32Table, print_estate};","highlight_start":59,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs","byte_start":56,"byte_end":70,"line_start":1,"line_end":1,"column_start":57,"column_end":71,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{EState,BZ2_crc32Table, print_estate};","highlight_start":57,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `print_estate`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs:1:59\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{EState,BZ2_crc32Table, print_estate};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `BZ2_crc32Table`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":36,"byte_end":50,"line_start":2,"line_end":2,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{BZ2_crc32Table, BZ2_rNums, DState};","highlight_start":36,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":36,"byte_end":52,"line_start":2,"line_end":2,"column_start":36,"column_end":52,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{BZ2_crc32Table, BZ2_rNums, DState};","highlight_start":36,"highlight_end":52}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BZ2_crc32Table`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs:2:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{BZ2_crc32Table, BZ2_rNums, DState};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::ptr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_39_BZ2_bzDecompressInit_40_bzReadOpen.rs","byte_start":159,"byte_end":167,"line_start":3,"line_end":3,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_39_BZ2_bzDecompressInit_40_bzReadOpen.rs","byte_start":155,"byte_end":168,"line_start":3,"line_end":3,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::ptr;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ptr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_39_BZ2_bzDecompressInit_40_bzReadOpen.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::ptr;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `BZ2_rNums`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_39_BZ2_bzDecompressInit_40_bzReadOpen.rs","byte_start":291,"byte_end":300,"line_start":5,"line_end":5,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{BZ2_rNums, DState, bz_stream_DState,  bzFile};","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_39_BZ2_bzDecompressInit_40_bzReadOpen.rs","byte_start":291,"byte_end":302,"line_start":5,"line_end":5,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"use crate::global_vars::bzip2_c1::{BZ2_rNums, DState, bz_stream_DState,  bzFile};","highlight_start":36,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BZ2_rNums`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_39_BZ2_bzDecompressInit_40_bzReadOpen.rs:5:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::bzip2_c1::{BZ2_rNums, DState, bz_stream_DState,  bzFile};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"denote infinite loops with `loop { ... }`","code":{"code":"while_true","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":3636,"byte_end":3646,"line_start":121,"line_end":121,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        while true {","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `loop`","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":3636,"byte_end":3646,"line_start":121,"line_end":121,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        while true {","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"loop","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: denote infinite loops with `loop { ... }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:121:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        while true {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `loop`\u001b[0m\n\n"}
{"message":"denote infinite loops with `loop { ... }`","code":{"code":"while_true","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":10948,"byte_end":10958,"line_start":343,"line_end":343,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"while true {","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `loop`","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":10948,"byte_end":10958,"line_start":343,"line_end":343,"column_start":1,"column_end":11,"is_primary":true,"text":[{"text":"while true {","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":"loop","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: denote infinite loops with `loop { ... }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:343:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mwhile true {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `loop`\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::sleep_lib::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":41,"byte_end":73,"line_start":2,"line_end":2,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":37,"byte_end":74,"line_start":2,"line_end":2,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::sleep_lib::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::sleep_lib::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"denote infinite loops with `loop { ... }`","code":{"code":"while_true","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":6058,"byte_end":6068,"line_start":179,"line_end":179,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        while true {","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `loop`","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":6058,"byte_end":6068,"line_start":179,"line_end":179,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        while true {","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"loop","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: denote infinite loops with `loop { ... }`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:179:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        while true {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `loop`\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::sleep_lib::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":41,"byte_end":73,"line_start":2,"line_end":2,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":37,"byte_end":74,"line_start":2,"line_end":2,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use crate::global_vars::sleep_lib::*;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::sleep_lib::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_69_BZ2_compressBlock.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::sleep_lib::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::global_vars::conversion::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":408,"byte_end":441,"line_start":8,"line_end":8,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"use crate::global_vars::conversion::*;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":404,"byte_end":442,"line_start":8,"line_end":8,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use crate::global_vars::conversion::*;","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::global_vars::conversion::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_69_BZ2_compressBlock.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::global_vars::conversion::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Cursor`, `Read`, `Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":457,"byte_end":463,"line_start":9,"line_end":9,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":465,"byte_end":470,"line_start":9,"line_end":9,"column_start":23,"column_end":28,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":23,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":472,"byte_end":476,"line_start":9,"line_end":9,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":443,"byte_end":478,"line_start":9,"line_end":9,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use std::io::{Cursor, Write, Read};","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Cursor`, `Read`, `Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_69_BZ2_compressBlock.rs:9:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::{Cursor, Write, Read};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Layout`, `alloc`, `realloc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":496,"byte_end":501,"line_start":10,"line_end":10,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":503,"byte_end":510,"line_start":10,"line_end":10,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":512,"byte_end":518,"line_start":10,"line_end":10,"column_start":34,"column_end":40,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":34,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":479,"byte_end":520,"line_start":10,"line_end":10,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use std::alloc::{alloc, realloc, Layout};","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Layout`, `alloc`, `realloc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_69_BZ2_compressBlock.rs:10:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::alloc::{alloc, realloc, Layout};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::process::exit`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":525,"byte_end":543,"line_start":11,"line_end":11,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::process::exit;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":521,"byte_end":544,"line_start":11,"line_end":11,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use std::process::exit;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::process::exit`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_69_BZ2_compressBlock.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process::exit;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::fmt::Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":19998,"byte_end":20013,"line_start":528,"line_end":528,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::fmt::Write as FmtWrite; // 用于使用 write! 宏","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt::Write`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:528:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m528\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt::Write as FmtWrite; // 用于使用 write! 宏\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::prelude`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_49_fopen_output_safely.rs","byte_start":166,"byte_end":182,"line_start":7,"line_end":7,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::prelude`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_49_fopen_output_safely.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::prelude`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":86,"byte_end":102,"line_start":3,"line_end":3,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::prelude`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::io::prelude`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":86,"byte_end":102,"line_start":3,"line_end":3,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::io::prelude::*;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::io::prelude`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::io::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2705,"byte_end":2717,"line_start":73,"line_end":73,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        BZ_MEM_ERROR => {","highlight_start":9,"highlight_end":21}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2586,"byte_end":2601,"line_start":69,"line_end":69,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        BZ_CONFIG_ERROR => {","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:73:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_CONFIG_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_MEM_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2865,"byte_end":2876,"line_start":77,"line_end":77,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        BZ_IO_ERROR => {","highlight_start":9,"highlight_end":20}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2586,"byte_end":2601,"line_start":69,"line_end":69,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        BZ_CONFIG_ERROR => {","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:77:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_CONFIG_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_IO_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2965,"byte_end":2966,"line_start":81,"line_end":81,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        _ => {","highlight_start":9,"highlight_end":10}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2586,"byte_end":2601,"line_start":69,"line_end":69,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        BZ_CONFIG_ERROR => {","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:81:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_CONFIG_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/huffman/scc_62_BZ2_hbMakeCodeLengths.rs","byte_start":498,"byte_end":499,"line_start":17,"line_end":17,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/huffman/scc_62_BZ2_hbMakeCodeLengths.rs","byte_start":498,"byte_end":499,"line_start":17,"line_end":17,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `i`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/huffman/scc_62_BZ2_hbMakeCodeLengths.rs:17:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut i: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `e`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8937,"byte_end":8938,"line_start":254,"line_end":254,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        Err(e) => {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8937,"byte_end":8938,"line_start":254,"line_end":254,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        Err(e) => {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_e","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:254:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Err(e) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e`\u001b[0m\n\n"}
{"message":"unused variable: `e`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":9098,"byte_end":9099,"line_start":260,"line_end":260,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"        if let Err(e) = writeln!(file, \"{}\", line) {","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":9098,"byte_end":9099,"line_start":260,"line_end":260,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"        if let Err(e) = writeln!(file, \"{}\", line) {","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"_e","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:260:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Err(e) = writeln!(file, \"{}\", line) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e`\u001b[0m\n\n"}
{"message":"unused variable: `line`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":16141,"byte_end":16145,"line_start":393,"line_end":393,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let line = line?;","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":16141,"byte_end":16145,"line_start":393,"line_end":393,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let line = line?;","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"_line","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `line`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:393:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let line = line?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_line`\u001b[0m\n\n"}
{"message":"unused variable: `z_stream`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":980,"byte_end":988,"line_start":24,"line_end":24,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"pub fn test_stream(z_stream: &mut File) {","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_97_testStream.rs","byte_start":980,"byte_end":988,"line_start":24,"line_end":24,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"pub fn test_stream(z_stream: &mut File) {","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":"_z_stream","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `z_stream`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_97_testStream.rs:24:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn test_stream(z_stream: &mut File) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_z_stream`\u001b[0m\n\n"}
{"message":"unused variable: `n`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_93_mySignalCatcher.rs","byte_start":404,"byte_end":405,"line_start":10,"line_end":10,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn clean_up_and_fail(n: IntNative) {","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_93_mySignalCatcher.rs","byte_start":404,"byte_end":405,"line_start":10,"line_end":10,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn clean_up_and_fail(n: IntNative) {","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"_n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `n`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_93_mySignalCatcher.rs:10:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn clean_up_and_fail(n: IntNative) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_n`\u001b[0m\n\n"}
{"message":"unused variable: `n`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_93_mySignalCatcher.rs","byte_start":567,"byte_end":568,"line_start":15,"line_end":15,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"pub fn my_signal_catcher(n: IntNative) {","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_93_mySignalCatcher.rs","byte_start":567,"byte_end":568,"line_start":15,"line_end":15,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"pub fn my_signal_catcher(n: IntNative) {","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"_n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `n`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_93_mySignalCatcher.rs:15:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn my_signal_catcher(n: IntNative) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_n`\u001b[0m\n\n"}
{"message":"unused variable: `in_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":389,"byte_end":396,"line_start":10,"line_end":10,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"pub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":389,"byte_end":396,"line_start":10,"line_end":10,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"pub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":"_in_name","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `in_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:10:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_in_name`\u001b[0m\n\n"}
{"message":"unused variable: `out_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":404,"byte_end":412,"line_start":10,"line_end":10,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"pub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {","highlight_start":37,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":404,"byte_end":412,"line_start":10,"line_end":10,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"pub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {","highlight_start":37,"highlight_end":45}],"label":null,"suggested_replacement":"_out_name","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `out_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:10:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_out_name`\u001b[0m\n\n"}
{"message":"unused variable: `output_handle_just_in_case`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":437,"byte_end":463,"line_start":10,"line_end":10,"column_start":70,"column_end":96,"is_primary":true,"text":[{"text":"pub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {","highlight_start":70,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs","byte_start":437,"byte_end":463,"line_start":10,"line_end":10,"column_start":70,"column_end":96,"is_primary":true,"text":[{"text":"pub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {","highlight_start":70,"highlight_end":96}],"label":null,"suggested_replacement":"_output_handle_just_in_case","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `output_handle_just_in_case`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_88_outOfMemory_scc_89_myMalloc.rs:10:70\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn out_of_memory(in_name: &str, out_name: &str, prog_name: &str, output_handle_just_in_case: Option<&mut std::fs::File>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_output_handle_just_in_case`\u001b[0m\n\n"}
{"message":"unused variable: `argc`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4163,"byte_end":4167,"line_start":103,"line_end":103,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let argc = gou.len() as i32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4163,"byte_end":4167,"line_start":103,"line_end":103,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let argc = gou.len() as i32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"_argc","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `argc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:103:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let argc = gou.len() as i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_argc`\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4717,"byte_end":4718,"line_start":125,"line_end":125,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i = 0;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4717,"byte_end":4718,"line_start":125,"line_end":125,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i = 0;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:125:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut i = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"unused variable: `j`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4736,"byte_end":4737,"line_start":126,"line_end":126,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut j = 0;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4736,"byte_end":4737,"line_start":126,"line_end":126,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut j = 0;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_j","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `j`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:126:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut j = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_j`\u001b[0m\n\n"}
{"message":"value assigned to `decode` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4748,"byte_end":4754,"line_start":128,"line_end":128,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    decode = true;","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `decode` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:128:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    decode = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `n`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs","byte_start":151,"byte_end":152,"line_start":4,"line_end":4,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn my_sigsegv_or_sigbus_catcher(n: i32) {","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs","byte_start":151,"byte_end":152,"line_start":4,"line_end":4,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn my_sigsegv_or_sigbus_catcher(n: i32) {","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":"_n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `n`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs:4:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn my_sigsegv_or_sigbus_catcher(n: i32) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_n`\u001b[0m\n\n"}
{"message":"value assigned to `bzf` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":870,"byte_end":873,"line_start":19,"line_end":19,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    let mut bzf: Option<BZFILE> = None;","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `bzf` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:19:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut bzf: Option<BZFILE> = None;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `BZ_CONFIG_ERROR`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2586,"byte_end":2601,"line_start":69,"line_end":69,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        BZ_CONFIG_ERROR => {","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2586,"byte_end":2601,"line_start":69,"line_end":69,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        BZ_CONFIG_ERROR => {","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"_BZ_CONFIG_ERROR","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `BZ_CONFIG_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:69:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_CONFIG_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_BZ_CONFIG_ERROR`\u001b[0m\n\n"}
{"message":"unused variable: `BZ_MEM_ERROR`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2705,"byte_end":2717,"line_start":73,"line_end":73,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        BZ_MEM_ERROR => {","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2705,"byte_end":2717,"line_start":73,"line_end":73,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        BZ_MEM_ERROR => {","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"_BZ_MEM_ERROR","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `BZ_MEM_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:73:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_MEM_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_BZ_MEM_ERROR`\u001b[0m\n\n"}
{"message":"unused variable: `BZ_IO_ERROR`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2865,"byte_end":2876,"line_start":77,"line_end":77,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        BZ_IO_ERROR => {","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2865,"byte_end":2876,"line_start":77,"line_end":77,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        BZ_IO_ERROR => {","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_BZ_IO_ERROR","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `BZ_IO_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:77:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_IO_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_BZ_IO_ERROR`\u001b[0m\n\n"}
{"message":"unused variable: `name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_107_uncompress.rs","byte_start":1185,"byte_end":1189,"line_start":25,"line_end":25,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"pub fn uncompress(name: Option<&str>){","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_107_uncompress.rs","byte_start":1185,"byte_end":1189,"line_start":25,"line_end":25,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"pub fn uncompress(name: Option<&str>){","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":"_name","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_107_uncompress.rs:25:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn uncompress(name: Option<&str>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_name`\u001b[0m\n\n"}
{"message":"unused variable: `name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_55_root_40_containsDubiousChars.rs","byte_start":295,"byte_end":299,"line_start":6,"line_end":6,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"pub fn contains_dubious_chars(name: &str) -> bool {","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_55_root_40_containsDubiousChars.rs","byte_start":295,"byte_end":299,"line_start":6,"line_end":6,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"pub fn contains_dubious_chars(name: &str) -> bool {","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"_name","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `name`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_55_root_40_containsDubiousChars.rs:6:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn contains_dubious_chars(name: &str) -> bool {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_name`\u001b[0m\n\n"}
{"message":"unused variable: `format`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_102_root_48_redundant.rs","byte_start":281,"byte_end":287,"line_start":10,"line_end":10,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"fn mock_fprintf(format: &str, args: std::fmt::Arguments) {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_102_root_48_redundant.rs","byte_start":281,"byte_end":287,"line_start":10,"line_end":10,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"fn mock_fprintf(format: &str, args: std::fmt::Arguments) {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"_format","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `format`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_102_root_48_redundant.rs:10:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn mock_fprintf(format: &str, args: std::fmt::Arguments) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_format`\u001b[0m\n\n"}
{"message":"unused variable: `ec`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":260,"byte_end":262,"line_start":10,"line_end":10,"column_start":26,"column_end":28,"is_primary":true,"text":[{"text":"pub fn clean_up_and_fail(ec: i32) {","highlight_start":26,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_80_cleanUpAndFail.rs","byte_start":260,"byte_end":262,"line_start":10,"line_end":10,"column_start":26,"column_end":28,"is_primary":true,"text":[{"text":"pub fn clean_up_and_fail(ec: i32) {","highlight_start":26,"highlight_end":28}],"label":null,"suggested_replacement":"_ec","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ec`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_80_cleanUpAndFail.rs:10:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn clean_up_and_fail(ec: i32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ec`\u001b[0m\n\n"}
{"message":"unused variable: `name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var.rs","byte_start":606,"byte_end":610,"line_start":27,"line_end":27,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"        if let Some(ref name) = self.name {","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var.rs","byte_start":606,"byte_end":610,"line_start":27,"line_end":27,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"        if let Some(ref name) = self.name {","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"_name","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var.rs:27:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Some(ref name) = self.name {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_name`\u001b[0m\n\n"}
{"message":"unused variable: `n`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":1090,"byte_end":1091,"line_start":28,"line_end":28,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"     if let Some(n) = name {","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":1090,"byte_end":1091,"line_start":28,"line_end":28,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"     if let Some(n) = name {","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"_n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `n`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:28:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m     if let Some(n) = name {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_n`\u001b[0m\n\n"}
{"message":"value assigned to `in_file` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":2971,"byte_end":2978,"line_start":78,"line_end":78,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"        let mut in_file: Option<File> = None;","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `in_file` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:78:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut in_file: Option<File> = None;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `out_file` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":3017,"byte_end":3025,"line_start":79,"line_end":79,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"        let mut out_file: Option<File> = None;","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `out_file` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:79:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut out_file: Option<File> = None;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `in_file` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_108_compress.rs","byte_start":3210,"byte_end":3217,"line_start":83,"line_end":83,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            in_file = Some(File::open(n)?);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `in_file` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_108_compress.rs:83:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            in_file = Some(File::open(n)?);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `s`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3558,"byte_end":3559,"line_start":108,"line_end":108,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut s: u16; ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3558,"byte_end":3559,"line_start":108,"line_end":108,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut s: u16; ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_s","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `s`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:108:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut s: u16; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_s`\u001b[0m\n\n"}
{"message":"unused variable: `old_j`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3579,"byte_end":3584,"line_start":109,"line_end":109,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    let mut old_j: usize;","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3579,"byte_end":3584,"line_start":109,"line_end":109,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    let mut old_j: usize;","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"_old_j","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `old_j`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:109:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut old_j: usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_old_j`\u001b[0m\n\n"}
{"message":"unused variable: `old_j_i32`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3605,"byte_end":3614,"line_start":110,"line_end":110,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut old_j_i32: i32;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3605,"byte_end":3614,"line_start":110,"line_end":110,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut old_j_i32: i32;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_old_j_i32","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `old_j_i32`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:110:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut old_j_i32: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_old_j_i32`\u001b[0m\n\n"}
{"message":"unused variable: `k`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3633,"byte_end":3634,"line_start":111,"line_end":111,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut k: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3633,"byte_end":3634,"line_start":111,"line_end":111,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut k: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_k","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `k`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:111:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut k: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_k`\u001b[0m\n\n"}
{"message":"unused variable: `ss`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3653,"byte_end":3655,"line_start":112,"line_end":112,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut ss: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3653,"byte_end":3655,"line_start":112,"line_end":112,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut ss: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_ss","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ss`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:112:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut ss: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ss`\u001b[0m\n\n"}
{"message":"unused variable: `sb`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3674,"byte_end":3676,"line_start":113,"line_end":113,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut sb: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3674,"byte_end":3676,"line_start":113,"line_end":113,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut sb: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_sb","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sb`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:113:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut sb: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sb`\u001b[0m\n\n"}
{"message":"unused variable: `copyStart`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3792,"byte_end":3801,"line_start":116,"line_end":116,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut copyStart: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3792,"byte_end":3801,"line_start":116,"line_end":116,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut copyStart: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_copyStart","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `copyStart`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:116:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut copyStart: Vec<i32> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_copyStart`\u001b[0m\n\n"}
{"message":"unused variable: `copyEnd`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3840,"byte_end":3847,"line_start":117,"line_end":117,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3840,"byte_end":3847,"line_start":117,"line_end":117,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"_copyEnd","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `copyEnd`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:117:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut copyEnd: Vec<i32> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_copyEnd`\u001b[0m\n\n"}
{"message":"unused variable: `c1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3886,"byte_end":3888,"line_start":118,"line_end":118,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut c1: u8;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3886,"byte_end":3888,"line_start":118,"line_end":118,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut c1: u8;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_c1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `c1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:118:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut c1: u8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_c1`\u001b[0m\n\n"}
{"message":"unused variable: `num_q_sorted`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3906,"byte_end":3918,"line_start":119,"line_end":119,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut num_q_sorted: i32 = 0;","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3906,"byte_end":3918,"line_start":119,"line_end":119,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"    let mut num_q_sorted: i32 = 0;","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"_num_q_sorted","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `num_q_sorted`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:119:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut num_q_sorted: i32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_num_q_sorted`\u001b[0m\n\n"}
{"message":"unused variable: `file`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":1003,"byte_end":1007,"line_start":38,"line_end":38,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut file = File::create(filename)?;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":1003,"byte_end":1007,"line_start":38,"line_end":38,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut file = File::create(filename)?;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"_file","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `file`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:38:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut file = File::create(filename)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_file`\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4641,"byte_end":4642,"line_start":128,"line_end":128,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4641,"byte_end":4642,"line_start":128,"line_end":128,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:128:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut i: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"unused variable: `cc`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4741,"byte_end":4743,"line_start":133,"line_end":133,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut cc: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4741,"byte_end":4743,"line_start":133,"line_end":133,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut cc: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_cc","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:133:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut cc: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cc`\u001b[0m\n\n"}
{"message":"unused variable: `cc1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4762,"byte_end":4765,"line_start":134,"line_end":134,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    let mut cc1: i32;","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4762,"byte_end":4765,"line_start":134,"line_end":134,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"    let mut cc1: i32;","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_cc1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cc1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:134:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut cc1: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cc1`\u001b[0m\n\n"}
{"message":"variable `counter1` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":6148,"byte_end":6156,"line_start":181,"line_end":181,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut counter1 = 0;","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_counter1` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `counter1` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:181:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut counter1 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_counter1` instead\u001b[0m\n\n"}
{"message":"variable `counter_71` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":6854,"byte_end":6864,"line_start":206,"line_end":206,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"        let mut counter_71 = 0;","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_counter_71` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `counter_71` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:206:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut counter_71 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_counter_71` instead\u001b[0m\n\n"}
{"message":"variable `counter_70` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":1739,"byte_end":1749,"line_start":52,"line_end":52,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"    let mut counter_70 = 0;","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_counter_70` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `counter_70` is assigned to, but never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_70_fallbackQSort3.rs:52:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut counter_70 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_counter_70` instead\u001b[0m\n\n"}
{"message":"variable `arr1_values` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":4858,"byte_end":4869,"line_start":123,"line_end":123,"column_start":14,"column_end":25,"is_primary":true,"text":[{"text":"    let (mut arr1_values, mut arr2_values, mut ftab): (Vec<u32>, Vec<u32>, Vec<u32>) = (Vec::new(), Vec::new(), Vec::new());","highlight_start":14,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_arr1_values` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `arr1_values` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:123:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut arr1_values, mut arr2_values, mut ftab): (Vec<u32>, Vec<u32>, Vec<u32>) = (Vec::new(), Vec::new(), Vec::new());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_arr1_values` instead\u001b[0m\n\n"}
{"message":"variable `arr2_values` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":4875,"byte_end":4886,"line_start":123,"line_end":123,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"    let (mut arr1_values, mut arr2_values, mut ftab): (Vec<u32>, Vec<u32>, Vec<u32>) = (Vec::new(), Vec::new(), Vec::new());","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_arr2_values` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `arr2_values` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:123:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut arr1_values, mut arr2_values, mut ftab): (Vec<u32>, Vec<u32>, Vec<u32>) = (Vec::new(), Vec::new(), Vec::new());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_arr2_values` instead\u001b[0m\n\n"}
{"message":"value assigned to `arr1_values` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":7537,"byte_end":7548,"line_start":177,"line_end":177,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"                arr1_values = inner.split(\",\").filter_map(|s| s.trim().parse::<u32>().ok()).collect();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `arr1_values` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:177:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                arr1_values = inner.split(\",\").filter_map(|s| s.trim().parse::<u32>().ok()).collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `arr2_values` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":7693,"byte_end":7704,"line_start":180,"line_end":180,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"                arr2_values = inner.split(\",\").filter_map(|s| s.trim().parse::<u32>().ok()).collect();","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `arr2_values` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:180:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                arr2_values = inner.split(\",\").filter_map(|s| s.trim().parse::<u32>().ok()).collect();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `strm`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":490,"byte_end":494,"line_start":13,"line_end":13,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"pub fn BZ2_bzDecompress(strm: *mut bz_stream_DState) -> i32 {","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":490,"byte_end":494,"line_start":13,"line_end":13,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"pub fn BZ2_bzDecompress(strm: *mut bz_stream_DState) -> i32 {","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"_strm","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `strm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:13:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzDecompress(strm: *mut bz_stream_DState) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_strm`\u001b[0m\n\n"}
{"message":"unused variable: `bzerror`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2702,"byte_end":2709,"line_start":68,"line_end":68,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":19,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2702,"byte_end":2709,"line_start":68,"line_end":68,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":19,"highlight_end":26}],"label":null,"suggested_replacement":"_bzerror","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `bzerror`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:68:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_bzerror`\u001b[0m\n\n"}
{"message":"unused variable: `b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2721,"byte_end":2722,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2721,"byte_end":2722,"line_start":68,"line_end":68,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `b`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:68:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_b`\u001b[0m\n\n"}
{"message":"unused variable: `buf`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2732,"byte_end":2735,"line_start":68,"line_end":68,"column_start":49,"column_end":52,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":49,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2732,"byte_end":2735,"line_start":68,"line_end":68,"column_start":49,"column_end":52,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":49,"highlight_end":52}],"label":null,"suggested_replacement":"_buf","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `buf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:68:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_buf`\u001b[0m\n\n"}
{"message":"variable `counter_75` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":1189,"byte_end":1199,"line_start":27,"line_end":27,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"    let mut counter_75 = 0;","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_counter_75` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `counter_75` is assigned to, but never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:27:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut counter_75 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_counter_75` instead\u001b[0m\n\n"}
{"message":"unused variable: `progress`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":2754,"byte_end":2762,"line_start":66,"line_end":66,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let progress = handle_compress(strm);","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":2754,"byte_end":2762,"line_start":66,"line_end":66,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let progress = handle_compress(strm);","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"_progress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `progress`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:66:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let progress = handle_compress(strm);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_progress`\u001b[0m\n\n"}
{"message":"value assigned to `counter_75` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":3551,"byte_end":3561,"line_start":82,"line_end":82,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"                counter_75 += 1;","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `counter_75` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:82:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                counter_75 += 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `progress`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":3647,"byte_end":3655,"line_start":84,"line_end":84,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let progress = handle_compress(strm);","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs","byte_start":3647,"byte_end":3655,"line_start":84,"line_end":84,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"                let progress = handle_compress(strm);","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"_progress","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `progress`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64.rs:84:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let progress = handle_compress(strm);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_progress`\u001b[0m\n\n"}
{"message":"variable `counter` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_70_handle_compress.rs","byte_start":663,"byte_end":670,"line_start":13,"line_end":13,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut counter = 0;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_counter` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `counter` is assigned to, but never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_70_handle_compress.rs:13:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut counter = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_counter` instead\u001b[0m\n\n"}
{"message":"unused variable: `uc`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":1033,"byte_end":1035,"line_start":29,"line_end":29,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let uc = *ll16.offset((t >> 8) as isize) as u8;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":1033,"byte_end":1035,"line_start":29,"line_end":29,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let uc = *ll16.offset((t >> 8) as isize) as u8;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"_uc","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `uc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs:29:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let uc = *ll16.offset((t >> 8) as isize) as u8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_uc`\u001b[0m\n\n"}
{"message":"unused variable: `uc`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":2339,"byte_end":2341,"line_start":65,"line_end":65,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let uc = *ll16.offset((t >> 8) as isize) as u8;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":2339,"byte_end":2341,"line_start":65,"line_end":65,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let uc = *ll16.offset((t >> 8) as isize) as u8;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"_uc","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `uc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs:65:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let uc = *ll16.offset((t >> 8) as isize) as u8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_uc`\u001b[0m\n\n"}
{"message":"unused variable: `n`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":331,"byte_end":332,"line_start":9,"line_end":9,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut n: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":331,"byte_end":332,"line_start":9,"line_end":9,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut n: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_n","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `n`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_73_BZ2_bzWrite.rs:9:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut n: i32;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_n`\u001b[0m\n\n"}
{"message":"unused variable: `n2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":351,"byte_end":353,"line_start":10,"line_end":10,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut n2: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":351,"byte_end":353,"line_start":10,"line_end":10,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut n2: i32;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_n2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `n2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_73_BZ2_bzWrite.rs:10:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut n2: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_n2`\u001b[0m\n\n"}
{"message":"unused variable: `zbits_vec`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":5690,"byte_end":5699,"line_start":175,"line_end":175,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let zbits_vec = vec![0u8; zbits_size].into_boxed_slice();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":5690,"byte_end":5699,"line_start":175,"line_end":175,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let zbits_vec = vec![0u8; zbits_size].into_boxed_slice();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_zbits_vec","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `zbits_vec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs:175:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let zbits_vec = vec![0u8; zbits_size].into_boxed_slice();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_zbits_vec`\u001b[0m\n\n"}
{"message":"unused variable: `block`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs","byte_start":6018,"byte_end":6023,"line_start":154,"line_end":154,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"                let block = &s.block;","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs","byte_start":6018,"byte_end":6023,"line_start":154,"line_end":154,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"                let block = &s.block;","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":"_block","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `block`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs:154:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let block = &s.block;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_block`\u001b[0m\n\n"}
{"message":"unused variable: `block`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs","byte_start":8846,"byte_end":8851,"line_start":217,"line_end":217,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"                let block = &s.block;","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs","byte_start":8846,"byte_end":8851,"line_start":217,"line_end":217,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"                let block = &s.block;","highlight_start":21,"highlight_end":26}],"label":null,"suggested_replacement":"_block","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `block`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_30_copy_input_until_stop_31_copy_output_until_stop.rs:217:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let block = &s.block;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_block`\u001b[0m\n\n"}
{"message":"unused variable: `v`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":495,"byte_end":496,"line_start":12,"line_end":12,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut v: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":495,"byte_end":496,"line_start":12,"line_end":12,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut v: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_v","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `v`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:12:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut v: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_v`\u001b[0m\n\n"}
{"message":"unused variable: `t`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":515,"byte_end":516,"line_start":13,"line_end":13,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut t: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":515,"byte_end":516,"line_start":13,"line_end":13,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut t: i32;","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_t","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:13:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut t: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_t`\u001b[0m\n\n"}
{"message":"value assigned to `bt` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":620,"byte_end":622,"line_start":18,"line_end":18,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut bt: i32 = 0;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `bt` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:18:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut bt: i32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `iter`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":666,"byte_end":670,"line_start":20,"line_end":20,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut iter: i32;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":666,"byte_end":670,"line_start":20,"line_end":20,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut iter: i32;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"_iter","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `iter`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:20:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut iter: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_iter`\u001b[0m\n\n"}
{"message":"unused variable: `j`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":9548,"byte_end":9549,"line_start":297,"line_end":297,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        for j in 0..s.selectorMtf[i as usize] {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":9548,"byte_end":9549,"line_start":297,"line_end":297,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        for j in 0..s.selectorMtf[i as usize] {","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"_j","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `j`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:297:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for j in 0..s.selectorMtf[i as usize] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_j`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":16017,"byte_end":16027,"line_start":390,"line_end":390,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        let mut estate = EState::default(); // 假设EState实现了Default trait","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":16017,"byte_end":16021,"line_start":390,"line_end":390,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut estate = EState::default(); // 假设EState实现了Default trait","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:390:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut estate = EState::default(); // 假设EState实现了Default trait\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4713,"byte_end":4718,"line_start":125,"line_end":125,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i = 0;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4713,"byte_end":4717,"line_start":125,"line_end":125,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut i = 0;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:125:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut i = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4732,"byte_end":4737,"line_start":126,"line_end":126,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut j = 0;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":4732,"byte_end":4736,"line_start":126,"line_end":126,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut j = 0;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:126:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut j = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":7495,"byte_end":7512,"line_start":206,"line_end":206,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"        let mut prog_name_str = u8_array_to_string(&PROG_NAME);","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":7495,"byte_end":7499,"line_start":206,"line_end":206,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut prog_name_str = u8_array_to_string(&PROG_NAME);","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:206:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut prog_name_str = u8_array_to_string(&PROG_NAME);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":938,"byte_end":956,"line_start":21,"line_end":21,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    let mut nbytes_in_lo32 = 0u32;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":938,"byte_end":942,"line_start":21,"line_end":21,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut nbytes_in_lo32 = 0u32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nbytes_in_lo32 = 0u32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":973,"byte_end":991,"line_start":22,"line_end":22,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    let mut nbytes_in_hi32 = 0u32;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":973,"byte_end":977,"line_start":22,"line_end":22,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut nbytes_in_hi32 = 0u32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:22:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nbytes_in_hi32 = 0u32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":1008,"byte_end":1027,"line_start":23,"line_end":23,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let mut nbytes_out_lo32 = 0u32;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":1008,"byte_end":1012,"line_start":23,"line_end":23,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut nbytes_out_lo32 = 0u32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:23:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nbytes_out_lo32 = 0u32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":1044,"byte_end":1063,"line_start":24,"line_end":24,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"    let mut nbytes_out_hi32 = 0u32;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":1044,"byte_end":1048,"line_start":24,"line_end":24,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut nbytes_out_hi32 = 0u32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:24:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nbytes_out_hi32 = 0u32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3788,"byte_end":3801,"line_start":116,"line_end":116,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let mut copyStart: Vec<i32> = vec![0; 256];","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3788,"byte_end":3792,"line_start":116,"line_end":116,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut copyStart: Vec<i32> = vec![0; 256];","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:116:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut copyStart: Vec<i32> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3836,"byte_end":3847,"line_start":117,"line_end":117,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3836,"byte_end":3840,"line_start":117,"line_end":117,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:117:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut copyEnd: Vec<i32> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3902,"byte_end":3918,"line_start":119,"line_end":119,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let mut num_q_sorted: i32 = 0;","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3902,"byte_end":3906,"line_start":119,"line_end":119,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut num_q_sorted: i32 = 0;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:119:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut num_q_sorted: i32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":999,"byte_end":1007,"line_start":38,"line_end":38,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let mut file = File::create(filename)?;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":999,"byte_end":1003,"line_start":38,"line_end":38,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut file = File::create(filename)?;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:38:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut file = File::create(filename)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4809,"byte_end":4820,"line_start":136,"line_end":136,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut n_bhtab: i32;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":4809,"byte_end":4813,"line_start":136,"line_end":136,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut n_bhtab: i32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:136:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut n_bhtab: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":1897,"byte_end":1903,"line_start":57,"line_end":57,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let mut lo = stack_lo[sp];","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":1897,"byte_end":1901,"line_start":57,"line_end":57,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut lo = stack_lo[sp];","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_70_fallbackQSort3.rs:57:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut lo = stack_lo[sp];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":1932,"byte_end":1938,"line_start":58,"line_end":58,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let mut hi = stack_hi[sp];","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":1932,"byte_end":1936,"line_start":58,"line_end":58,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut hi = stack_hi[sp];","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_70_fallbackQSort3.rs:58:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut hi = stack_hi[sp];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":601,"byte_end":607,"line_start":15,"line_end":15,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                    mut lo: i32,          // 排序开始的索引","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":601,"byte_end":605,"line_start":15,"line_end":15,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                    mut lo: i32,          // 排序开始的索引","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_29_mainSimpleSort.rs:15:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    mut lo: i32,          // 排序开始的索引\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":668,"byte_end":674,"line_start":16,"line_end":16,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                    mut hi: i32,          // 排序结束的索引","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":668,"byte_end":672,"line_start":16,"line_end":16,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                    mut hi: i32,          // 排序结束的索引","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_29_mainSimpleSort.rs:16:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    mut hi: i32,          // 排序结束的索引\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_68_mainQSort3.rs","byte_start":2454,"byte_end":2463,"line_start":66,"line_end":66,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    mut lo_st: Int32, ","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_68_mainQSort3.rs","byte_start":2454,"byte_end":2458,"line_start":66,"line_end":66,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    mut lo_st: Int32, ","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_68_mainQSort3.rs:66:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut lo_st: Int32, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_68_mainQSort3.rs","byte_start":2477,"byte_end":2486,"line_start":67,"line_end":67,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    mut hi_st: Int32, ","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_68_mainQSort3.rs","byte_start":2477,"byte_end":2481,"line_start":67,"line_end":67,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    mut hi_st: Int32, ","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_68_mainQSort3.rs:67:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut hi_st: Int32, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":1890,"byte_end":1907,"line_start":46,"line_end":46,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"    let mut arr1_from_ptr: Vec<u32> = s.ptr.clone();","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":1890,"byte_end":1894,"line_start":46,"line_end":46,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut arr1_from_ptr: Vec<u32> = s.ptr.clone();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:46:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut arr1_from_ptr: Vec<u32> = s.ptr.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":2920,"byte_end":2929,"line_start":70,"line_end":70,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let mut wfact = s.workFactor.clamp(1, 100);","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":2920,"byte_end":2924,"line_start":70,"line_end":70,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut wfact = s.workFactor.clamp(1, 100);","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:70:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut wfact = s.workFactor.clamp(1, 100);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5179,"byte_end":5194,"line_start":127,"line_end":127,"column_start":26,"column_end":41,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":26,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5179,"byte_end":5183,"line_start":127,"line_end":127,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:127:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5196,"byte_end":5212,"line_start":127,"line_end":127,"column_start":43,"column_end":59,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":43,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5196,"byte_end":5200,"line_start":127,"line_end":127,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":43,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:127:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":719,"byte_end":733,"line_start":22,"line_end":22,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let mut alpha_size: i32;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":719,"byte_end":723,"line_start":22,"line_end":22,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut alpha_size: i32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:22:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut alpha_size: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":826,"byte_end":837,"line_start":26,"line_end":26,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut nGroups: i32;","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":826,"byte_end":830,"line_start":26,"line_end":26,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut nGroups: i32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:26:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nGroups: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3226,"byte_end":3238,"line_start":113,"line_end":113,"column_start":25,"column_end":37,"is_primary":true,"text":[{"text":"                    let mut tempSwap: u8;","highlight_start":25,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3226,"byte_end":3230,"line_start":113,"line_end":113,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"                    let mut tempSwap: u8;","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:113:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut tempSwap: u8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":5345,"byte_end":5353,"line_start":147,"line_end":147,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let mut arr2 = rebuild_arr2_from_block(&estate.block);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_69_BZ2_compressBlock.rs","byte_start":5345,"byte_end":5349,"line_start":147,"line_end":147,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut arr2 = rebuild_arr2_from_block(&estate.block);","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_69_BZ2_compressBlock.rs:147:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut arr2 = rebuild_arr2_from_block(&estate.block);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":9348,"byte_end":9354,"line_start":245,"line_end":245,"column_start":32,"column_end":38,"is_primary":true,"text":[{"text":"                        'L' => unsafe { license(); },","highlight_start":32,"highlight_end":38}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_unsafe)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:245:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        'L' => unsafe { license(); },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_unsafe)]` on by default\u001b[0m\n\n"}
{"message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":12472,"byte_end":12478,"line_start":319,"line_end":319,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"            unsafe {blockSize100k = 2; }","highlight_start":13,"highlight_end":19}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_110_main.rs","byte_start":12326,"byte_end":12332,"line_start":314,"line_end":314,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"    unsafe {","highlight_start":5,"highlight_end":11}],"label":"because it's nested under this `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:319:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbecause it's nested under this `unsafe` block\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            unsafe {blockSize100k = 2; }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":12566,"byte_end":12572,"line_start":322,"line_end":322,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"            unsafe {eprintln!(\"{}: -c and -t cannot be used together.\", String::from_utf8_lossy(&PROG_NAME));}","highlight_start":13,"highlight_end":19}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_110_main.rs","byte_start":12326,"byte_end":12332,"line_start":314,"line_end":314,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"    unsafe {","highlight_start":5,"highlight_end":11}],"label":"because it's nested under this `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:322:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbecause it's nested under this `unsafe` block\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            unsafe {eprintln!(\"{}: -c and -t cannot be used together.\", String::from_utf8_lossy(&PROG_NAME));}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":12832,"byte_end":12838,"line_start":329,"line_end":329,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"            unsafe {blockSize100k = 0; }","highlight_start":13,"highlight_end":19}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_110_main.rs","byte_start":12326,"byte_end":12332,"line_start":314,"line_end":314,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"    unsafe {","highlight_start":5,"highlight_end":11}],"label":"because it's nested under this `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:329:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbecause it's nested under this `unsafe` block\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            unsafe {blockSize100k = 0; }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_110_main.rs","byte_start":13931,"byte_end":13937,"line_start":360,"line_end":360,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"                            unsafe {NUM_FILE_NAMES += 1;}","highlight_start":29,"highlight_end":35}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bzip2/scc_110_main.rs","byte_start":12928,"byte_end":12934,"line_start":333,"line_end":333,"column_start":5,"column_end":11,"is_primary":false,"text":[{"text":"    unsafe {","highlight_start":5,"highlight_end":11}],"label":"because it's nested under this `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_110_main.rs:360:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mbecause it's nested under this `unsafe` block\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            unsafe {NUM_FILE_NAMES += 1;}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs","byte_start":700,"byte_end":706,"line_start":27,"line_end":27,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe {","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs:27:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"message":"type alias `UChar` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c2.rs","byte_start":46,"byte_end":51,"line_start":3,"line_end":3,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"type UChar = u8;","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `UChar` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c2.rs:3:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype UChar = u8;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"function `convert_to_vec` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":6743,"byte_end":6757,"line_start":169,"line_end":169,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn convert_to_vec<T>(ptr_option: Option<*mut T>, num_elements: usize) -> Vec<T> ","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `convert_to_vec` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:169:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn convert_to_vec<T>(ptr_option: Option<*mut T>, num_elements: usize) -> Vec<T> \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `print_ptr_u32` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":13171,"byte_end":13184,"line_start":342,"line_end":342,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn print_ptr_u32(name: &str, ptr: Option<*mut u32>) {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `print_ptr_u32` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:342:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m342\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn print_ptr_u32(name: &str, ptr: Option<*mut u32>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated functions `vec_to_raw_pointer`, `parse_value`, and `parse_array` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":13368,"byte_end":13379,"line_start":350,"line_end":350,"column_start":1,"column_end":12,"is_primary":false,"text":[{"text":"impl EState {  ","highlight_start":1,"highlight_end":12}],"label":"associated functions in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":16910,"byte_end":16928,"line_start":412,"line_end":412,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"    fn vec_to_raw_pointer<T>(mut v: Vec<T>) -> *mut T {","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":17087,"byte_end":17098,"line_start":417,"line_end":417,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"    fn parse_value<T: FromStr>(line: &str, prefix: &str) -> io::Result<T> {","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":17460,"byte_end":17471,"line_start":424,"line_end":424,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"    fn parse_array<T: FromStr>(line: &str, prefix: &str) -> io::Result<Vec<T>> {","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated functions `vec_to_raw_pointer`, `parse_value`, and `parse_array` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:412:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl EState {  \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated functions in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn vec_to_raw_pointer<T>(mut v: Vec<T>) -> *mut T {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn parse_value<T: FromStr>(line: &str, prefix: &str) -> io::Result<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m424\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn parse_array<T: FromStr>(line: &str, prefix: &str) -> io::Result<Vec<T>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type alias `MaybeUInt64` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/readError.rs","byte_start":210,"byte_end":221,"line_start":9,"line_end":9,"column_start":6,"column_end":17,"is_primary":true,"text":[{"text":"type MaybeUInt64 = u64;","highlight_start":6,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `MaybeUInt64` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/readError.rs:9:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype MaybeUInt64 = u64;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"static `BYTES_OUT` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/readError.rs","byte_start":571,"byte_end":580,"line_start":16,"line_end":16,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"static mut BYTES_OUT: MaybeUInt64 = 0;","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static `BYTES_OUT` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/readError.rs:16:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstatic mut BYTES_OUT: MaybeUInt64 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"static `BYTES_IN` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/readError.rs","byte_start":610,"byte_end":618,"line_start":17,"line_end":17,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"static mut BYTES_IN: MaybeUInt64 = 0;","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static `BYTES_IN` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/readError.rs:17:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstatic mut BYTES_IN: MaybeUInt64 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"function `too_many_blocks` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/tooManyBlocks.rs","byte_start":183,"byte_end":198,"line_start":4,"line_end":4,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn too_many_blocks(max_handled_blocks: i32) {","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `too_many_blocks` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/tooManyBlocks.rs:4:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn too_many_blocks(max_handled_blocks: i32) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `mock_exit` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/tooManyBlocks.rs","byte_start":937,"byte_end":946,"line_start":20,"line_end":20,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"fn mock_exit(_status: i32) {","highlight_start":4,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `mock_exit` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/tooManyBlocks.rs:20:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn mock_exit(_status: i32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `main` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_87_fileExists.rs","byte_start":1038,"byte_end":1042,"line_start":41,"line_end":41,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `main` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_87_fileExists.rs:41:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"type alias `Bool` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_76_root_43_showFileNames.rs","byte_start":179,"byte_end":183,"line_start":7,"line_end":7,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"type Bool = bool;","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Bool` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_76_root_43_showFileNames.rs:7:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Bool = bool;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"type alias `Char` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_76_root_43_showFileNames.rs","byte_start":197,"byte_end":201,"line_start":8,"line_end":8,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"type Char = u8;","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Char` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_76_root_43_showFileNames.rs:8:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Char = u8;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"function `u_int64_is_zero` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_9_root_11_uInt64_isZero.rs","byte_start":151,"byte_end":166,"line_start":8,"line_end":8,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn u_int64_is_zero(n: &UInt64) -> bool {","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `u_int64_is_zero` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_9_root_11_uInt64_isZero.rs:8:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn u_int64_is_zero(n: &UInt64) -> bool {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `my_signal_catcher` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_50_mySignalCatcher.rs","byte_start":84,"byte_end":101,"line_start":3,"line_end":3,"column_start":4,"column_end":21,"is_primary":true,"text":[{"text":"fn my_signal_catcher() {","highlight_start":4,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `my_signal_catcher` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_50_mySignalCatcher.rs:3:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn my_signal_catcher() {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `my_sigsegv_or_sigbus_catcher` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs","byte_start":122,"byte_end":150,"line_start":4,"line_end":4,"column_start":4,"column_end":32,"is_primary":true,"text":[{"text":"fn my_sigsegv_or_sigbus_catcher(n: i32) {","highlight_start":4,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `my_sigsegv_or_sigbus_catcher` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_52_mySIGSEGVorSIGBUScatcher.rs:4:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn my_sigsegv_or_sigbus_catcher(n: i32) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `uInt64_isZero` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":173,"byte_end":186,"line_start":9,"line_end":9,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn uInt64_isZero(n: &UInt64) -> bool {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `uInt64_isZero` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_13_uInt64_toAscii.rs:9:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn uInt64_isZero(n: &UInt64) -> bool {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `uInt64_toAscii` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":346,"byte_end":360,"line_start":19,"line_end":19,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn uInt64_toAscii(outbuf: &mut [char; 32], n: &UInt64) {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `uInt64_toAscii` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_13_uInt64_toAscii.rs:19:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn uInt64_toAscii(outbuf: &mut [char; 32], n: &UInt64) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type alias `Char` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":663,"byte_end":667,"line_start":16,"line_end":16,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"type Char = char;","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Char` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:16:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Char = char;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"type alias `UChar` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":697,"byte_end":702,"line_start":18,"line_end":18,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"type UChar = u8;","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `UChar` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:18:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype UChar = u8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"type alias `Int32` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":714,"byte_end":719,"line_start":19,"line_end":19,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"type Int32 = i32;","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Int32` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:19:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Int32 = i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"type alias `UInt32` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":732,"byte_end":738,"line_start":20,"line_end":20,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"type UInt32 = u32;","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `UInt32` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:20:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype UInt32 = u32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"type alias `Int16` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":751,"byte_end":756,"line_start":21,"line_end":21,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"type Int16 = i16;","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Int16` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:21:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Int16 = i16;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"type alias `UInt16` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":769,"byte_end":775,"line_start":22,"line_end":22,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"type UInt16 = u16;","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `UInt16` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:22:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype UInt16 = u16;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"type alias `IntNative` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_54_root_39_notAStandardFile.rs","byte_start":788,"byte_end":797,"line_start":23,"line_end":23,"column_start":6,"column_end":15,"is_primary":true,"text":[{"text":"type IntNative = isize;  // 使用isize以表示与平台位数相关的整数","highlight_start":6,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `IntNative` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_54_root_39_notAStandardFile.rs:23:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype IntNative = isize;  // 使用isize以表示与平台位数相关的整数\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"type alias `Int32` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_1_root_1_cadvise.rs","byte_start":116,"byte_end":121,"line_start":7,"line_end":7,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"type Int32 = i32;","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Int32` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_1_root_1_cadvise.rs:7:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Int32 = i32;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"type alias `Bool` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_1_root_1_cadvise.rs","byte_start":134,"byte_end":138,"line_start":8,"line_end":8,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"type Bool = bool;","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Bool` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_1_root_1_cadvise.rs:8:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Bool = bool;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"function `make_maps_d` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/decompress/scc_5_root_4_makeMaps_d.rs","byte_start":108,"byte_end":119,"line_start":8,"line_end":8,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn make_maps_d(s: &mut DState) {","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `make_maps_d` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decompress/scc_5_root_4_makeMaps_d.rs:8:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn make_maps_d(s: &mut DState) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `read_dat_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":259,"byte_end":272,"line_start":10,"line_end":10,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn read_dat_file(path: &str) -> io::Result<(Vec<u32>, Vec<u8>, Vec<u16>, Vec<u32>, i32, i32, i32)> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_dat_file` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:10:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_dat_file(path: &str) -> io::Result<(Vec<u32>, Vec<u8>, Vec<u16>, Vec<u32>, i32, i32, i32)> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `saveArrayToFile` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":2631,"byte_end":2646,"line_start":76,"line_end":76,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn saveArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `saveArrayToFile` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:76:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn saveArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `saveBlockArrayToFile` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":428,"byte_end":448,"line_start":14,"line_end":14,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn saveBlockArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `saveBlockArrayToFile` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:14:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn saveBlockArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `print_int_and_byte_view_of_array` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":901,"byte_end":933,"line_start":37,"line_end":37,"column_start":4,"column_end":36,"is_primary":true,"text":[{"text":"fn print_int_and_byte_view_of_array(eclass: &[u32], filename: &str) -> io::Result<Vec<u8>> {","highlight_start":4,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `print_int_and_byte_view_of_array` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:37:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn print_int_and_byte_view_of_array(eclass: &[u32], filename: &str) -> io::Result<Vec<u8>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `read_dat_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":2442,"byte_end":2455,"line_start":68,"line_end":68,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u32>, Vec<u32>, i32, i32)> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_dat_file` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:68:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u32>, Vec<u32>, i32, i32)> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `save_to_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":3863,"byte_end":3875,"line_start":105,"line_end":105,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn save_to_file<T: Display>(data: &Vec<T>, file_name: &str) -> io::Result<()> {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `save_to_file` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:105:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn save_to_file<T: Display>(data: &Vec<T>, file_name: &str) -> io::Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `read_dat_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":282,"byte_end":295,"line_start":9,"line_end":9,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u32>, i32, i32)> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_dat_file` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_70_fallbackQSort3.rs:9:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u32>, i32, i32)> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `read_dat_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_29_mainSimpleSort.rs","byte_start":4008,"byte_end":4021,"line_start":98,"line_end":98,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u8>, Vec<u16>, u32, u32, u32, u32, u32)> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_dat_file` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_29_mainSimpleSort.rs:98:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u8>, Vec<u16>, u32, u32, u32, u32, u32)> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `main` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_30_root_20_mmed3.rs","byte_start":787,"byte_end":791,"line_start":32,"line_end":32,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `main` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_30_root_20_mmed3.rs:32:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"function `read_dat_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_68_mainQSort3.rs","byte_start":365,"byte_end":378,"line_start":10,"line_end":10,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u8>, Vec<u16>, u32, u32, u32, u32, Option<u32>)> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_dat_file` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_68_mainQSort3.rs:10:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_dat_file(path: &str) -> Result<(Vec<u32>, Vec<u8>, Vec<u16>, u32, u32, u32, u32, Option<u32>)> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `fill_2d_array` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":501,"byte_end":514,"line_start":12,"line_end":12,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn fill_2d_array<T: std::str::FromStr>(arr: &mut [[T; 258]; 6], data: &str) ","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `fill_2d_array` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:12:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn fill_2d_array<T: std::str::FromStr>(arr: &mut [[T; 258]; 6], data: &str) \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `fill_2d_array_len_pack` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":1093,"byte_end":1115,"line_start":25,"line_end":25,"column_start":4,"column_end":26,"is_primary":true,"text":[{"text":"fn fill_2d_array_len_pack(arr: &mut [[u32; 4]; 258], data: &str) {","highlight_start":4,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `fill_2d_array_len_pack` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:25:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn fill_2d_array_len_pack(arr: &mut [[u32; 4]; 258], data: &str) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `read_lines` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":1402,"byte_end":1412,"line_start":34,"line_end":34,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"fn read_lines<P>(filename: P) -> std::io::Result<std::io::Lines<std::io::BufReader<std::fs::File>>>","highlight_start":4,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_lines` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:34:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_lines<P>(filename: P) -> std::io::Result<std::io::Lines<std::io::BufReader<std::fs::File>>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `read_dat_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":4398,"byte_end":4411,"line_start":115,"line_end":115,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn read_dat_file(path: &str) -> std::result::Result<(bz_stream, EState), std::io::Error> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_dat_file` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:115:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_dat_file(path: &str) -> std::result::Result<(bz_stream, EState), std::io::Error> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `read_dat_file` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_28_root_19_mainGtU.rs","byte_start":1903,"byte_end":1916,"line_start":70,"line_end":70,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn read_dat_file(path: &str) -> Result<(u64, u64, Vec<u8>, Vec<u16>, u64, u64)> {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `read_dat_file` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_28_root_19_mainGtU.rs:70:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn read_dat_file(path: &str) -> Result<(u64, u64, Vec<u8>, Vec<u16>, u64, u64)> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant `BZ_M_IDLE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_70_handle_compress.rs","byte_start":2139,"byte_end":2148,"line_start":54,"line_end":54,"column_start":7,"column_end":16,"is_primary":true,"text":[{"text":"const BZ_M_IDLE: i32 = 1;","highlight_start":7,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BZ_M_IDLE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_70_handle_compress.rs:54:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst BZ_M_IDLE: i32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `set_error` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":5346,"byte_end":5355,"line_start":162,"line_end":162,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"fn set_error(bzerror: &mut Option<i32>, lastErr: &mut i32, err: i32) {","highlight_start":4,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `set_error` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_73_BZ2_bzWrite.rs:162:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn set_error(bzerror: &mut Option<i32>, lastErr: &mut i32, err: i32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `main` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_42_root_57_BZ2_bzlibVersion.rs","byte_start":487,"byte_end":491,"line_start":20,"line_end":20,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `main` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_42_root_57_BZ2_bzlibVersion.rs:20:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"function `main` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_36_root_27_default_bzfree_38_bz_config_ok_37_default_bzalloc.rs","byte_start":1828,"byte_end":1832,"line_start":54,"line_end":54,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `main` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_36_root_27_default_bzfree_38_bz_config_ok_37_default_bzalloc.rs:54:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"type alias `UInt16` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":159,"byte_end":165,"line_start":8,"line_end":8,"column_start":6,"column_end":12,"is_primary":true,"text":[{"text":"type UInt16 = u16;","highlight_start":6,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `UInt16` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs:8:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype UInt16 = u16;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"type alias `UChar` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":178,"byte_end":183,"line_start":9,"line_end":9,"column_start":6,"column_end":11,"is_primary":true,"text":[{"text":"type UChar = u8;","highlight_start":6,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `UChar` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs:9:6\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype UChar = u8;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"type alias `Bool` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":195,"byte_end":199,"line_start":10,"line_end":10,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"type Bool = bool;","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type alias `Bool` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs:10:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Bool = bool;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"function `convert_to_vec` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":695,"byte_end":709,"line_start":32,"line_end":32,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn convert_to_vec(ptr_option: Option<*mut u32>, num_elements: usize) -> Vec<u32> {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `convert_to_vec` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:32:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn convert_to_vec(ptr_option: Option<*mut u32>, num_elements: usize) -> Vec<u32> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"module `scc_62_BZ2_hbMakeCodeLengths` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/huffman/mod.rs","byte_start":8,"byte_end":36,"line_start":1,"line_end":1,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"pub mod scc_62_BZ2_hbMakeCodeLengths;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/huffman/mod.rs","byte_start":8,"byte_end":36,"line_start":1,"line_end":1,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"pub mod scc_62_BZ2_hbMakeCodeLengths;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":"scc_62_bz2_hb_make_code_lengths","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_62_BZ2_hbMakeCodeLengths` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/huffman/mod.rs:1:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_62_BZ2_hbMakeCodeLengths;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_62_bz2_hb_make_code_lengths`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"module `scc_17_root_14_BZ2_hbAssignCodes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/huffman/mod.rs","byte_start":46,"byte_end":78,"line_start":2,"line_end":2,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_17_root_14_BZ2_hbAssignCodes;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/huffman/mod.rs","byte_start":46,"byte_end":78,"line_start":2,"line_end":2,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_17_root_14_BZ2_hbAssignCodes;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":"scc_17_root_14_bz2_hb_assign_codes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_17_root_14_BZ2_hbAssignCodes` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/huffman/mod.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_17_root_14_BZ2_hbAssignCodes;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_17_root_14_bz2_hb_assign_codes`\u001b[0m\n\n"}
{"message":"module `scc_4_root_3_BZ2_hbCreateDecodeTables` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/huffman/mod.rs","byte_start":88,"byte_end":125,"line_start":3,"line_end":3,"column_start":9,"column_end":46,"is_primary":true,"text":[{"text":"pub mod scc_4_root_3_BZ2_hbCreateDecodeTables;","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/huffman/mod.rs","byte_start":88,"byte_end":125,"line_start":3,"line_end":3,"column_start":9,"column_end":46,"is_primary":true,"text":[{"text":"pub mod scc_4_root_3_BZ2_hbCreateDecodeTables;","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":"scc_4_root_3_bz2_hb_create_decode_tables","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_4_root_3_BZ2_hbCreateDecodeTables` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/huffman/mod.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_4_root_3_BZ2_hbCreateDecodeTables;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_4_root_3_bz2_hb_create_decode_tables`\u001b[0m\n\n"}
{"message":"constant `BZ_HDR_h` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":240,"byte_end":248,"line_start":9,"line_end":9,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BZ_HDR_h: u8 = 0x68; // 'h'","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":240,"byte_end":248,"line_start":9,"line_end":9,"column_start":11,"column_end":19,"is_primary":true,"text":[{"text":"pub const BZ_HDR_h: u8 = 0x68; // 'h'","highlight_start":11,"highlight_end":19}],"label":null,"suggested_replacement":"BZ_HDR_H","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `BZ_HDR_h` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:9:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const BZ_HDR_h: u8 = 0x68; // 'h'\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BZ_HDR_H`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"message":"static variable `verbosity` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":321,"byte_end":330,"line_start":11,"line_end":11,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"pub static mut verbosity: Int32 = 0;","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":321,"byte_end":330,"line_start":11,"line_end":11,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"pub static mut verbosity: Int32 = 0;","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"VERBOSITY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `verbosity` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:11:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub static mut verbosity: Int32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `VERBOSITY`\u001b[0m\n\n"}
{"message":"static variable `blockSize100k` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":827,"byte_end":840,"line_start":23,"line_end":23,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"pub static mut blockSize100k: Int32 = 9;","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":827,"byte_end":840,"line_start":23,"line_end":23,"column_start":16,"column_end":29,"is_primary":true,"text":[{"text":"pub static mut blockSize100k: Int32 = 9;","highlight_start":16,"highlight_end":29}],"label":null,"suggested_replacement":"BLOCK_SIZE100K","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `blockSize100k` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:23:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub static mut blockSize100k: Int32 = 9;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BLOCK_SIZE100K`\u001b[0m\n\n"}
{"message":"static variable `workFactor` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":868,"byte_end":878,"line_start":24,"line_end":24,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"pub static mut workFactor: Int32 = 0;","highlight_start":16,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":868,"byte_end":878,"line_start":24,"line_end":24,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"pub static mut workFactor: Int32 = 0;","highlight_start":16,"highlight_end":26}],"label":null,"suggested_replacement":"WORK_FACTOR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `workFactor` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:24:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub static mut workFactor: Int32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `WORK_FACTOR`\u001b[0m\n\n"}
{"message":"static variable `BZ2_rNums` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":2484,"byte_end":2493,"line_start":84,"line_end":84,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"pub static mut BZ2_rNums: [i32; 512] = [0; 512];","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":2484,"byte_end":2493,"line_start":84,"line_end":84,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"pub static mut BZ2_rNums: [i32; 512] = [0; 512];","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"BZ2_R_NUMS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `BZ2_rNums` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:84:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub static mut BZ2_rNums: [i32; 512] = [0; 512];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BZ2_R_NUMS`\u001b[0m\n\n"}
{"message":"static variable `BZ2_crc32Table` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":2842,"byte_end":2856,"line_start":86,"line_end":86,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"pub static mut BZ2_crc32Table: [u32; 256] = [","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":2842,"byte_end":2856,"line_start":86,"line_end":86,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"pub static mut BZ2_crc32Table: [u32; 256] = [","highlight_start":16,"highlight_end":30}],"label":null,"suggested_replacement":"BZ2_CRC32_TABLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `BZ2_crc32Table` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:86:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub static mut BZ2_crc32Table: [u32; 256] = [\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BZ2_CRC32_TABLE`\u001b[0m\n\n"}
{"message":"structure field `origPtr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":7626,"byte_end":7633,"line_start":200,"line_end":200,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"pub   origPtr: Int32,","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":7626,"byte_end":7633,"line_start":200,"line_end":200,"column_start":7,"column_end":14,"is_primary":true,"text":[{"text":"pub   origPtr: Int32,","highlight_start":7,"highlight_end":14}],"label":null,"suggested_replacement":"orig_ptr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `origPtr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:200:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub   origPtr: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `orig_ptr`\u001b[0m\n\n"}
{"message":"structure field `workFactor` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":7904,"byte_end":7914,"line_start":212,"line_end":212,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":" pub   workFactor: Int32,","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":7904,"byte_end":7914,"line_start":212,"line_end":212,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":" pub   workFactor: Int32,","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"work_factor","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `workFactor` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:212:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   workFactor: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `work_factor`\u001b[0m\n\n"}
{"message":"structure field `rNToGo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":7986,"byte_end":7992,"line_start":215,"line_end":215,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   rNToGo: Int32, ","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":7986,"byte_end":7992,"line_start":215,"line_end":215,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   rNToGo: Int32, ","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"r_nto_go","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rNToGo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:215:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   rNToGo: Int32, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_nto_go`\u001b[0m\n\n"}
{"message":"structure field `rTPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8009,"byte_end":8014,"line_start":216,"line_end":216,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":" pub   rTPos: Int32,","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8009,"byte_end":8014,"line_start":216,"line_end":216,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":" pub   rTPos: Int32,","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":"r_tpos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rTPos` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:216:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   rTPos: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_tpos`\u001b[0m\n\n"}
{"message":"structure field `nblockMAX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8053,"byte_end":8062,"line_start":219,"line_end":219,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":" pub   nblockMAX: Int32,","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8053,"byte_end":8062,"line_start":219,"line_end":219,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":" pub   nblockMAX: Int32,","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"nblock_max","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nblockMAX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:219:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   nblockMAX: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nblock_max`\u001b[0m\n\n"}
{"message":"structure field `numZ` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8078,"byte_end":8082,"line_start":220,"line_end":220,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   numZ: Int32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8078,"byte_end":8082,"line_start":220,"line_end":220,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   numZ: Int32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"num_z","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `numZ` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:220:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   numZ: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `num_z`\u001b[0m\n\n"}
{"message":"structure field `nInUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8127,"byte_end":8133,"line_start":222,"line_end":222,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   nInUse: Int32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8127,"byte_end":8133,"line_start":222,"line_end":222,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   nInUse: Int32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"n_in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nInUse` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:222:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   nInUse: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_in_use`\u001b[0m\n\n"}
{"message":"structure field `inUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8150,"byte_end":8155,"line_start":224,"line_end":224,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":" pub   inUse: [Bool; 256],","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8150,"byte_end":8155,"line_start":224,"line_end":224,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":" pub   inUse: [Bool; 256],","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":"in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `inUse` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:224:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   inUse: [Bool; 256],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `in_use`\u001b[0m\n\n"}
{"message":"structure field `unseqToSeq` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8177,"byte_end":8187,"line_start":225,"line_end":225,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":" pub   unseqToSeq: [UChar; 256],","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8177,"byte_end":8187,"line_start":225,"line_end":225,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":" pub   unseqToSeq: [UChar; 256],","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"unseq_to_seq","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `unseqToSeq` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:225:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   unseqToSeq: [UChar; 256],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `unseq_to_seq`\u001b[0m\n\n"}
{"message":"structure field `bsBuff` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8211,"byte_end":8217,"line_start":227,"line_end":227,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   bsBuff: UInt32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8211,"byte_end":8217,"line_start":227,"line_end":227,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   bsBuff: UInt32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"bs_buff","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bsBuff` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:227:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   bsBuff: UInt32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_buff`\u001b[0m\n\n"}
{"message":"structure field `bsLive` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8234,"byte_end":8240,"line_start":228,"line_end":228,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   bsLive: Int32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8234,"byte_end":8240,"line_start":228,"line_end":228,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   bsLive: Int32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"bs_live","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bsLive` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:228:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   bsLive: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_live`\u001b[0m\n\n"}
{"message":"structure field `blockCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8256,"byte_end":8264,"line_start":229,"line_end":229,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":" pub   blockCRC: UInt32,","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8256,"byte_end":8264,"line_start":229,"line_end":229,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":" pub   blockCRC: UInt32,","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":"block_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:229:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   blockCRC: UInt32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_crc`\u001b[0m\n\n"}
{"message":"structure field `combinedCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8281,"byte_end":8292,"line_start":230,"line_end":230,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":" pub   combinedCRC: UInt32,","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8281,"byte_end":8292,"line_start":230,"line_end":230,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":" pub   combinedCRC: UInt32,","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"combined_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `combinedCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:230:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   combinedCRC: UInt32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `combined_crc`\u001b[0m\n\n"}
{"message":"structure field `blockNo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8334,"byte_end":8341,"line_start":232,"line_end":232,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   blockNo: Int32,","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8334,"byte_end":8341,"line_start":232,"line_end":232,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   blockNo: Int32,","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"block_no","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockNo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:232:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   blockNo: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_no`\u001b[0m\n\n"}
{"message":"structure field `blockSize100k` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8357,"byte_end":8370,"line_start":233,"line_end":233,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   blockSize100k: Int32,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8357,"byte_end":8370,"line_start":233,"line_end":233,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   blockSize100k: Int32,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"block_size100k","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockSize100k` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:233:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   blockSize100k: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_size100k`\u001b[0m\n\n"}
{"message":"structure field `nMTF` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8386,"byte_end":8390,"line_start":234,"line_end":234,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   nMTF: Int32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8386,"byte_end":8390,"line_start":234,"line_end":234,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   nMTF: Int32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"n_mtf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nMTF` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:234:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   nMTF: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_mtf`\u001b[0m\n\n"}
{"message":"structure field `mtfFreq` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8408,"byte_end":8415,"line_start":236,"line_end":236,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   mtfFreq: [Int32; 258],","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8408,"byte_end":8415,"line_start":236,"line_end":236,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   mtfFreq: [Int32; 258],","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"mtf_freq","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `mtfFreq` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:236:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   mtfFreq: [Int32; 258],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mtf_freq`\u001b[0m\n\n"}
{"message":"structure field `selectorMtf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8483,"byte_end":8494,"line_start":238,"line_end":238,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":" pub   selectorMtf: [UChar; 2 + (900000 / 50)],","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":8483,"byte_end":8494,"line_start":238,"line_end":238,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":" pub   selectorMtf: [UChar; 2 + (900000 / 50)],","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"selector_mtf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `selectorMtf` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:238:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   selectorMtf: [UChar; 2 + (900000 / 50)],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `selector_mtf`\u001b[0m\n\n"}
{"message":"structure field `bufN` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20132,"byte_end":20136,"line_start":533,"line_end":533,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"  pub  bufN: i32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20132,"byte_end":20136,"line_start":533,"line_end":533,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"  pub  bufN: i32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"buf_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bufN` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:533:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  bufN: i32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `buf_n`\u001b[0m\n\n"}
{"message":"structure field `strmD` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20196,"byte_end":20201,"line_start":536,"line_end":536,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"  pub  strmD: bz_stream_DState,","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20196,"byte_end":20201,"line_start":536,"line_end":536,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"  pub  strmD: bz_stream_DState,","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":"strm_d","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `strmD` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:536:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m536\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  strmD: bz_stream_DState,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `strm_d`\u001b[0m\n\n"}
{"message":"structure field `lastErr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20228,"byte_end":20235,"line_start":537,"line_end":537,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   lastErr: i32,","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20228,"byte_end":20235,"line_start":537,"line_end":537,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   lastErr: i32,","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"last_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `lastErr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:537:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m537\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   lastErr: i32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_err`\u001b[0m\n\n"}
{"message":"structure field `initialisedOk` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20249,"byte_end":20262,"line_start":538,"line_end":538,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   initialisedOk: bool,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":20249,"byte_end":20262,"line_start":538,"line_end":538,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   initialisedOk: bool,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"initialised_ok","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `initialisedOk` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:538:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m538\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   initialisedOk: bool,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `initialised_ok`\u001b[0m\n\n"}
{"message":"structure field `blockRandomised` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26034,"byte_end":26049,"line_start":701,"line_end":701,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"    pub  blockRandomised: Bool, // 区块是否随机化 // Whether the block is randomised","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26034,"byte_end":26049,"line_start":701,"line_end":701,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"    pub  blockRandomised: Bool, // 区块是否随机化 // Whether the block is randomised","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"block_randomised","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockRandomised` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:701:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m701\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  blockRandomised: Bool, // 区块是否随机化 // Whether the block is randomised\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_randomised`\u001b[0m\n\n"}
{"message":"structure field `rNToGo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26126,"byte_end":26132,"line_start":702,"line_end":702,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  rNToGo: Int32,         /// RLE 重复次数 / RLE repeat count","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26126,"byte_end":26132,"line_start":702,"line_end":702,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  rNToGo: Int32,         /// RLE 重复次数 / RLE repeat count","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"r_nto_go","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rNToGo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:702:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  rNToGo: Int32,         /// RLE 重复次数 / RLE repeat count\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_nto_go`\u001b[0m\n\n"}
{"message":"structure field `rTPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26198,"byte_end":26203,"line_start":703,"line_end":703,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    pub  rTPos: Int32,          // 最后输出的RLE值 // RLE value last output","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26198,"byte_end":26203,"line_start":703,"line_end":703,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    pub  rTPos: Int32,          // 最后输出的RLE值 // RLE value last output","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":"r_tpos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rTPos` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:703:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m703\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  rTPos: Int32,          // 最后输出的RLE值 // RLE value last output\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_tpos`\u001b[0m\n\n"}
{"message":"structure field `bsBuff` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26283,"byte_end":26289,"line_start":705,"line_end":705,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  bsBuff: UInt32,        // Bitstream // 比特流缓冲区","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26283,"byte_end":26289,"line_start":705,"line_end":705,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  bsBuff: UInt32,        // Bitstream // 比特流缓冲区","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"bs_buff","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bsBuff` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:705:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m705\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  bsBuff: UInt32,        // Bitstream // 比特流缓冲区\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_buff`\u001b[0m\n\n"}
{"message":"structure field `bsLive` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26350,"byte_end":26356,"line_start":706,"line_end":706,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  bsLive: Int32,         // bsBuff 中剩余的位数 // Number of bits left in bsBuff","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26350,"byte_end":26356,"line_start":706,"line_end":706,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  bsLive: Int32,         // bsBuff 中剩余的位数 // Number of bits left in bsBuff","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"bs_live","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bsLive` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:706:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  bsLive: Int32,         // bsBuff 中剩余的位数 // Number of bits left in bsBuff\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_live`\u001b[0m\n\n"}
{"message":"structure field `blockSize100k` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26447,"byte_end":26460,"line_start":708,"line_end":708,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"    pub  blockSize100k: Int32,  // Block size, units of 100k","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26447,"byte_end":26460,"line_start":708,"line_end":708,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"    pub  blockSize100k: Int32,  // Block size, units of 100k","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"block_size100k","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockSize100k` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:708:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m708\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  blockSize100k: Int32,  // Block size, units of 100k\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_size100k`\u001b[0m\n\n"}
{"message":"structure field `smallDecompress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26508,"byte_end":26523,"line_start":709,"line_end":709,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"    pub  smallDecompress: Bool, // Use the slower, smaller decompression routine","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26508,"byte_end":26523,"line_start":709,"line_end":709,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"    pub  smallDecompress: Bool, // Use the slower, smaller decompression routine","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"small_decompress","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `smallDecompress` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:709:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m709\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  smallDecompress: Bool, // Use the slower, smaller decompression routine\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `small_decompress`\u001b[0m\n\n"}
{"message":"structure field `currBlockNo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26589,"byte_end":26600,"line_start":710,"line_end":710,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"    pub  currBlockNo: Int32,    // The current block number","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26589,"byte_end":26600,"line_start":710,"line_end":710,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"    pub  currBlockNo: Int32,    // The current block number","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"curr_block_no","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `currBlockNo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:710:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m710\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  currBlockNo: Int32,    // The current block number\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `curr_block_no`\u001b[0m\n\n"}
{"message":"structure field `origPtr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26719,"byte_end":26726,"line_start":713,"line_end":713,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"   pub   origPtr: Int32,        // Pointer to original data","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26719,"byte_end":26726,"line_start":713,"line_end":713,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"   pub   origPtr: Int32,        // Pointer to original data","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":"orig_ptr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `origPtr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:713:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m713\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   origPtr: Int32,        // Pointer to original data\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `orig_ptr`\u001b[0m\n\n"}
{"message":"structure field `tPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26779,"byte_end":26783,"line_start":714,"line_end":714,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"   pub   tPos: UInt32,          // 缓冲区中的当前位置 // Current position in buffer","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":26779,"byte_end":26783,"line_start":714,"line_end":714,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"   pub   tPos: UInt32,          // 缓冲区中的当前位置 // Current position in buffer","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"t_pos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `tPos` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:714:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m714\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   tPos: UInt32,          // 缓冲区中的当前位置 // Current position in buffer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t_pos`\u001b[0m\n\n"}
{"message":"structure field `cftabCopy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27229,"byte_end":27238,"line_start":719,"line_end":719,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"   pub   cftabCopy: [Int32; 257], // A copy of the cftab array","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27229,"byte_end":27238,"line_start":719,"line_end":719,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"   pub   cftabCopy: [Int32; 257], // A copy of the cftab array","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"cftab_copy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cftabCopy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:719:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m719\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   cftabCopy: [Int32; 257], // A copy of the cftab array\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cftab_copy`\u001b[0m\n\n"}
{"message":"structure field `storedBlockCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27535,"byte_end":27549,"line_start":725,"line_end":725,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"    pub  storedBlockCRC: UInt32,  // CRC value of stored block","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27535,"byte_end":27549,"line_start":725,"line_end":725,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"    pub  storedBlockCRC: UInt32,  // CRC value of stored block","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"stored_block_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `storedBlockCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:725:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m725\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  storedBlockCRC: UInt32,  // CRC value of stored block\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `stored_block_crc`\u001b[0m\n\n"}
{"message":"structure field `storedCombinedCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27598,"byte_end":27615,"line_start":726,"line_end":726,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"    pub  storedCombinedCRC: UInt32, // Combined CRC value","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27598,"byte_end":27615,"line_start":726,"line_end":726,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"    pub  storedCombinedCRC: UInt32, // Combined CRC value","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"stored_combined_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `storedCombinedCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:726:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m726\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  storedCombinedCRC: UInt32, // Combined CRC value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `stored_combined_crc`\u001b[0m\n\n"}
{"message":"structure field `calculatedBlockCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27656,"byte_end":27674,"line_start":727,"line_end":727,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"    pub  calculatedBlockCRC: UInt32, // Calculated CRC value of block","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27656,"byte_end":27674,"line_start":727,"line_end":727,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"    pub  calculatedBlockCRC: UInt32, // Calculated CRC value of block","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"calculated_block_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `calculatedBlockCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:727:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m727\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  calculatedBlockCRC: UInt32, // Calculated CRC value of block\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `calculated_block_crc`\u001b[0m\n\n"}
{"message":"structure field `calculatedCombinedCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27726,"byte_end":27747,"line_start":728,"line_end":728,"column_start":10,"column_end":31,"is_primary":true,"text":[{"text":"    pub  calculatedCombinedCRC: UInt32, // Calculated combined CRC value","highlight_start":10,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27726,"byte_end":27747,"line_start":728,"line_end":728,"column_start":10,"column_end":31,"is_primary":true,"text":[{"text":"    pub  calculatedCombinedCRC: UInt32, // Calculated combined CRC value","highlight_start":10,"highlight_end":31}],"label":null,"suggested_replacement":"calculated_combined_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `calculatedCombinedCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:728:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m728\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  calculatedCombinedCRC: UInt32, // Calculated combined CRC value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `calculated_combined_crc`\u001b[0m\n\n"}
{"message":"structure field `nInUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27802,"byte_end":27808,"line_start":730,"line_end":730,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  nInUse: Int32,           // Number of bytes in use","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27802,"byte_end":27808,"line_start":730,"line_end":730,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    pub  nInUse: Int32,           // Number of bytes in use","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"n_in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nInUse` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:730:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m730\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  nInUse: Int32,           // Number of bytes in use\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_in_use`\u001b[0m\n\n"}
{"message":"structure field `inUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27862,"byte_end":27867,"line_start":731,"line_end":731,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    pub  inUse: [Bool; 256],      // Flags indicating which values are in use","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27862,"byte_end":27867,"line_start":731,"line_end":731,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"    pub  inUse: [Bool; 256],      // Flags indicating which values are in use","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":"in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `inUse` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:731:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m731\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  inUse: [Bool; 256],      // Flags indicating which values are in use\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `in_use`\u001b[0m\n\n"}
{"message":"structure field `inUse16` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27940,"byte_end":27947,"line_start":732,"line_end":732,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"    pub  inUse16: [Bool; 16],     // 16 位值的标志 Flags for 16-bit values","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":27940,"byte_end":27947,"line_start":732,"line_end":732,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"    pub  inUse16: [Bool; 16],     // 16 位值的标志 Flags for 16-bit values","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":"in_use16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `inUse16` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:732:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m732\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  inUse16: [Bool; 16],     // 16 位值的标志 Flags for 16-bit values\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `in_use16`\u001b[0m\n\n"}
{"message":"structure field `seqToUnseq` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28020,"byte_end":28030,"line_start":733,"line_end":733,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"    pub  seqToUnseq: [UChar; 256], // MTF values","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28020,"byte_end":28030,"line_start":733,"line_end":733,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"    pub  seqToUnseq: [UChar; 256], // MTF values","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"seq_to_unseq","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `seqToUnseq` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:733:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m733\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  seqToUnseq: [UChar; 256], // MTF values\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `seq_to_unseq`\u001b[0m\n\n"}
{"message":"structure field `selectorMtf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28277,"byte_end":28288,"line_start":739,"line_end":739,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"    pub  selectorMtf: [UChar; 2 + (900000 / 50)], // MTF'd selector values","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28277,"byte_end":28288,"line_start":739,"line_end":739,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"    pub  selectorMtf: [UChar; 2 + (900000 / 50)], // MTF'd selector values","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"selector_mtf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `selectorMtf` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:739:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m739\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  selectorMtf: [UChar; 2 + (900000 / 50)], // MTF'd selector values\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `selector_mtf`\u001b[0m\n\n"}
{"message":"structure field `minLens` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28674,"byte_end":28681,"line_start":746,"line_end":746,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"    pub  minLens: [Int32; 6],      // 霍夫曼编码表的最小长度 Minimum lengths of Huffman coding tables","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28674,"byte_end":28681,"line_start":746,"line_end":746,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"    pub  minLens: [Int32; 6],      // 霍夫曼编码表的最小长度 Minimum lengths of Huffman coding tables","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":"min_lens","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `minLens` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:746:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m746\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub  minLens: [Int32; 6],      // 霍夫曼编码表的最小长度 Minimum lengths of Huffman coding tables\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `min_lens`\u001b[0m\n\n"}
{"message":"structure field `save_alphaSize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28932,"byte_end":28946,"line_start":752,"line_end":752,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"   pub   save_alphaSize: Int32,","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28932,"byte_end":28946,"line_start":752,"line_end":752,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"   pub   save_alphaSize: Int32,","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"save_alpha_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_alphaSize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:752:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m752\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_alphaSize: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_alpha_size`\u001b[0m\n\n"}
{"message":"structure field `save_nGroups` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28964,"byte_end":28976,"line_start":753,"line_end":753,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"   pub   save_nGroups: Int32,","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28964,"byte_end":28976,"line_start":753,"line_end":753,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"   pub   save_nGroups: Int32,","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"save_n_groups","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nGroups` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:753:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m753\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_nGroups: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_n_groups`\u001b[0m\n\n"}
{"message":"structure field `save_nSelectors` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28994,"byte_end":29009,"line_start":754,"line_end":754,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"   pub   save_nSelectors: Int32,","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":28994,"byte_end":29009,"line_start":754,"line_end":754,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"   pub   save_nSelectors: Int32,","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"save_n_selectors","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nSelectors` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:754:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m754\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_nSelectors: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_n_selectors`\u001b[0m\n\n"}
{"message":"structure field `save_EOB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29027,"byte_end":29035,"line_start":755,"line_end":755,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"   pub   save_EOB: Int32,","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29027,"byte_end":29035,"line_start":755,"line_end":755,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"   pub   save_EOB: Int32,","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"save_eob","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_EOB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:755:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m755\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_EOB: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_eob`\u001b[0m\n\n"}
{"message":"structure field `save_groupNo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29053,"byte_end":29065,"line_start":756,"line_end":756,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"   pub   save_groupNo: Int32,","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29053,"byte_end":29065,"line_start":756,"line_end":756,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"   pub   save_groupNo: Int32,","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"save_group_no","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_groupNo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:756:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m756\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_groupNo: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_group_no`\u001b[0m\n\n"}
{"message":"structure field `save_groupPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29083,"byte_end":29096,"line_start":757,"line_end":757,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"   pub   save_groupPos: Int32,","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29083,"byte_end":29096,"line_start":757,"line_end":757,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"   pub   save_groupPos: Int32,","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"save_group_pos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_groupPos` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:757:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m757\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_groupPos: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_group_pos`\u001b[0m\n\n"}
{"message":"structure field `save_nextSym` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29114,"byte_end":29126,"line_start":758,"line_end":758,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"   pub   save_nextSym: Int32,","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29114,"byte_end":29126,"line_start":758,"line_end":758,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"   pub   save_nextSym: Int32,","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"save_next_sym","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nextSym` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:758:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m758\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_nextSym: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_next_sym`\u001b[0m\n\n"}
{"message":"structure field `save_nblockMAX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29144,"byte_end":29158,"line_start":759,"line_end":759,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"   pub   save_nblockMAX: Int32,","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29144,"byte_end":29158,"line_start":759,"line_end":759,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"   pub   save_nblockMAX: Int32,","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"save_nblock_max","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nblockMAX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:759:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m759\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_nblockMAX: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_nblock_max`\u001b[0m\n\n"}
{"message":"structure field `save_N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29230,"byte_end":29236,"line_start":762,"line_end":762,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"   pub   save_N: Int32,","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29230,"byte_end":29236,"line_start":762,"line_end":762,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"   pub   save_N: Int32,","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"save_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_N` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:762:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m762\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_N: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_n`\u001b[0m\n\n"}
{"message":"structure field `save_gSel` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29382,"byte_end":29391,"line_start":768,"line_end":768,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"   pub  save_gSel: Int32,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29382,"byte_end":29391,"line_start":768,"line_end":768,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"   pub  save_gSel: Int32,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"save_g_sel","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gSel` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:768:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m768\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub  save_gSel: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_sel`\u001b[0m\n\n"}
{"message":"structure field `save_gMinlen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29410,"byte_end":29422,"line_start":769,"line_end":769,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"   pub    save_gMinlen: Int32,","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29410,"byte_end":29422,"line_start":769,"line_end":769,"column_start":11,"column_end":23,"is_primary":true,"text":[{"text":"   pub    save_gMinlen: Int32,","highlight_start":11,"highlight_end":23}],"label":null,"suggested_replacement":"save_g_minlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gMinlen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:769:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m769\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub    save_gMinlen: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_minlen`\u001b[0m\n\n"}
{"message":"structure field `save_gLimit` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29440,"byte_end":29451,"line_start":770,"line_end":770,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"   pub   save_gLimit: *mut Int32,","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29440,"byte_end":29451,"line_start":770,"line_end":770,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"   pub   save_gLimit: *mut Int32,","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"save_g_limit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gLimit` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:770:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m770\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_gLimit: *mut Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_limit`\u001b[0m\n\n"}
{"message":"structure field `save_gBase` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29474,"byte_end":29484,"line_start":771,"line_end":771,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"  pub    save_gBase: *mut Int32,","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29474,"byte_end":29484,"line_start":771,"line_end":771,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"  pub    save_gBase: *mut Int32,","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"save_g_base","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gBase` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:771:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m771\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub    save_gBase: *mut Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_base`\u001b[0m\n\n"}
{"message":"structure field `save_gPerm` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29507,"byte_end":29517,"line_start":772,"line_end":772,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"   pub   save_gPerm: *mut Int32,","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c1.rs","byte_start":29507,"byte_end":29517,"line_start":772,"line_end":772,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"   pub   save_gPerm: *mut Int32,","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"save_g_perm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gPerm` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c1.rs:772:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m772\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub   save_gPerm: *mut Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_perm`\u001b[0m\n\n"}
{"message":"static variable `exitValue` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/global_vars/bzip2_c5.rs","byte_start":317,"byte_end":326,"line_start":9,"line_end":9,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"pub static mut exitValue: i32 = 0;  // 明确注释数字类型","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/global_vars/bzip2_c5.rs","byte_start":317,"byte_end":326,"line_start":9,"line_end":9,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"pub static mut exitValue: i32 = 0;  // 明确注释数字类型","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"EXIT_VALUE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `exitValue` should have an upper case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/global_vars/bzip2_c5.rs:9:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub static mut exitValue: i32 = 0;  // 明确注释数字类型\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `EXIT_VALUE`\u001b[0m\n\n"}
{"message":"module `writeError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":43,"byte_end":53,"line_start":2,"line_end":2,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub mod writeError;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":43,"byte_end":53,"line_start":2,"line_end":2,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub mod writeError;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"write_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `writeError` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod writeError;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `write_error`\u001b[0m\n\n"}
{"message":"module `bsClose` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":201,"byte_end":208,"line_start":7,"line_end":7,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"pub mod bsClose;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":201,"byte_end":208,"line_start":7,"line_end":7,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"pub mod bsClose;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"bs_close","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `bsClose` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:7:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod bsClose;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_close`\u001b[0m\n\n"}
{"message":"module `compress_bsPutBit_bsGetBit_bsPutUInt32` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":322,"byte_end":360,"line_start":11,"line_end":11,"column_start":9,"column_end":47,"is_primary":true,"text":[{"text":"pub mod compress_bsPutBit_bsGetBit_bsPutUInt32; ","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":322,"byte_end":360,"line_start":11,"line_end":11,"column_start":9,"column_end":47,"is_primary":true,"text":[{"text":"pub mod compress_bsPutBit_bsGetBit_bsPutUInt32; ","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":"compress_bs_put_bit_bs_get_bit_bs_put_uint32","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `compress_bsPutBit_bsGetBit_bsPutUInt32` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:11:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod compress_bsPutBit_bsGetBit_bsPutUInt32; \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `compress_bs_put_bit_bs_get_bit_bs_put_uint32`\u001b[0m\n\n"}
{"message":"module `bsPutBit_bsGetBit_bsPutUInt32` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":371,"byte_end":400,"line_start":12,"line_end":12,"column_start":9,"column_end":38,"is_primary":true,"text":[{"text":"pub mod bsPutBit_bsGetBit_bsPutUInt32;  // scc_5_bsGetBit // scc_34_bsPutUInt32","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":371,"byte_end":400,"line_start":12,"line_end":12,"column_start":9,"column_end":38,"is_primary":true,"text":[{"text":"pub mod bsPutBit_bsGetBit_bsPutUInt32;  // scc_5_bsGetBit // scc_34_bsPutUInt32","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":"bs_put_bit_bs_get_bit_bs_put_uint32","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `bsPutBit_bsGetBit_bsPutUInt32` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:12:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod bsPutBit_bsGetBit_bsPutUInt32;  // scc_5_bsGetBit // scc_34_bsPutUInt32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_put_bit_bs_get_bit_bs_put_uint32`\u001b[0m\n\n"}
{"message":"module `mallocFail` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":520,"byte_end":530,"line_start":15,"line_end":15,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub mod mallocFail; // scc_7_bsOpenWriteStream scc_8_bsOpenReadStream","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":520,"byte_end":530,"line_start":15,"line_end":15,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub mod mallocFail; // scc_7_bsOpenWriteStream scc_8_bsOpenReadStream","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"malloc_fail","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `mallocFail` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod mallocFail; // scc_7_bsOpenWriteStream scc_8_bsOpenReadStream\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `malloc_fail`\u001b[0m\n\n"}
{"message":"module `readError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":590,"byte_end":599,"line_start":16,"line_end":16,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub mod readError;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":590,"byte_end":599,"line_start":16,"line_end":16,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub mod readError;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"read_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `readError` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod readError;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `read_error`\u001b[0m\n\n"}
{"message":"module `tooManyBlocks` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":609,"byte_end":622,"line_start":17,"line_end":17,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"pub mod tooManyBlocks;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":609,"byte_end":622,"line_start":17,"line_end":17,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"pub mod tooManyBlocks;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"too_many_blocks","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `tooManyBlocks` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:17:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod tooManyBlocks;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `too_many_blocks`\u001b[0m\n\n"}
{"message":"module `endsInBz2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":659,"byte_end":668,"line_start":19,"line_end":19,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub mod endsInBz2;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/mod.rs","byte_start":659,"byte_end":668,"line_start":19,"line_end":19,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"pub mod endsInBz2;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"ends_in_bz2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `endsInBz2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/mod.rs:19:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod endsInBz2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ends_in_bz2`\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2recover/bsClose.rs","byte_start":1356,"byte_end":1368,"line_start":44,"line_end":44,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"                    read_error();","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_must_use)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/bzip2recover/bsClose.rs","byte_start":1356,"byte_end":1356,"line_start":44,"line_end":44,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"                    read_error();","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2recover/bsClose.rs:44:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    read_error();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_must_use)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mread_error();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"module `scc_87_fileExists` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":8,"byte_end":25,"line_start":1,"line_end":1,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_87_fileExists;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":8,"byte_end":25,"line_start":1,"line_end":1,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_87_fileExists;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"scc_87_file_exists","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_87_fileExists` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:1:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_87_fileExists;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_87_file_exists`\u001b[0m\n\n"}
{"message":"module `scc_105_hasSuffix_106_mapSuffix` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":35,"byte_end":66,"line_start":2,"line_end":2,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_105_hasSuffix_106_mapSuffix; // scc_117_mapSuffix","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":35,"byte_end":66,"line_start":2,"line_end":2,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_105_hasSuffix_106_mapSuffix; // scc_117_mapSuffix","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":"scc_105_has_suffix_106_map_suffix","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_105_hasSuffix_106_mapSuffix` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_105_hasSuffix_106_mapSuffix; // scc_117_mapSuffix\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_105_has_suffix_106_map_suffix`\u001b[0m\n\n"}
{"message":"module `scc_97_testStream` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":97,"byte_end":114,"line_start":3,"line_end":3,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_97_testStream;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":97,"byte_end":114,"line_start":3,"line_end":3,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_97_testStream;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"scc_97_test_stream","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_97_testStream` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_97_testStream;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_97_test_stream`\u001b[0m\n\n"}
{"message":"module `scc_93_mySignalCatcher` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":124,"byte_end":146,"line_start":4,"line_end":4,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_93_mySignalCatcher;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":124,"byte_end":146,"line_start":4,"line_end":4,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_93_mySignalCatcher;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":"scc_93_my_signal_catcher","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_93_mySignalCatcher` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_93_mySignalCatcher;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_93_my_signal_catcher`\u001b[0m\n\n"}
{"message":"module `scc_76_root_43_showFileNames` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":156,"byte_end":184,"line_start":5,"line_end":5,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"pub mod scc_76_root_43_showFileNames;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":156,"byte_end":184,"line_start":5,"line_end":5,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"pub mod scc_76_root_43_showFileNames;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":"scc_76_root_43_show_file_names","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_76_root_43_showFileNames` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:5:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_76_root_43_showFileNames;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_76_root_43_show_file_names`\u001b[0m\n\n"}
{"message":"module `scc_88_outOfMemory_scc_89_myMalloc` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":194,"byte_end":228,"line_start":6,"line_end":6,"column_start":9,"column_end":43,"is_primary":true,"text":[{"text":"pub mod scc_88_outOfMemory_scc_89_myMalloc; // 100， 102， 103","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":194,"byte_end":228,"line_start":6,"line_end":6,"column_start":9,"column_end":43,"is_primary":true,"text":[{"text":"pub mod scc_88_outOfMemory_scc_89_myMalloc; // 100， 102， 103","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":"scc_88_out_of_memory_scc_89_my_malloc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_88_outOfMemory_scc_89_myMalloc` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:6:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_88_outOfMemory_scc_89_myMalloc; // 100， 102， 103\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_88_out_of_memory_scc_89_my_malloc`\u001b[0m\n\n"}
{"message":"module `scc_96_configError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":407,"byte_end":425,"line_start":11,"line_end":11,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub mod scc_96_configError;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":407,"byte_end":425,"line_start":11,"line_end":11,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub mod scc_96_configError;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"scc_96_config_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_96_configError` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:11:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_96_configError;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_96_config_error`\u001b[0m\n\n"}
{"message":"module `scc_9_root_11_uInt64_isZero` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":567,"byte_end":594,"line_start":16,"line_end":16,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"pub mod scc_9_root_11_uInt64_isZero;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":567,"byte_end":594,"line_start":16,"line_end":16,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"pub mod scc_9_root_11_uInt64_isZero;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":"scc_9_root_11_u_int64_is_zero","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_9_root_11_uInt64_isZero` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:16:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_9_root_11_uInt64_isZero;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_9_root_11_u_int64_is_zero`\u001b[0m\n\n"}
{"message":"module `scc_50_mySignalCatcher` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":604,"byte_end":626,"line_start":17,"line_end":17,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_50_mySignalCatcher;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":604,"byte_end":626,"line_start":17,"line_end":17,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_50_mySignalCatcher;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":"scc_50_my_signal_catcher","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_50_mySignalCatcher` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:17:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_50_mySignalCatcher;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_50_my_signal_catcher`\u001b[0m\n\n"}
{"message":"module `scc_52_mySIGSEGVorSIGBUScatcher` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":636,"byte_end":667,"line_start":18,"line_end":18,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_52_mySIGSEGVorSIGBUScatcher;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":636,"byte_end":667,"line_start":18,"line_end":18,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_52_mySIGSEGVorSIGBUScatcher;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":"scc_52_my_sigsegvor_sigbuscatcher","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_52_mySIGSEGVorSIGBUScatcher` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_52_mySIGSEGVorSIGBUScatcher;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_52_my_sigsegvor_sigbuscatcher`\u001b[0m\n\n"}
{"message":"module `scc_53_root_38_countHardLinks` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":677,"byte_end":706,"line_start":19,"line_end":19,"column_start":9,"column_end":38,"is_primary":true,"text":[{"text":"pub mod scc_53_root_38_countHardLinks;","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":677,"byte_end":706,"line_start":19,"line_end":19,"column_start":9,"column_end":38,"is_primary":true,"text":[{"text":"pub mod scc_53_root_38_countHardLinks;","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":"scc_53_root_38_count_hard_links","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_53_root_38_countHardLinks` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:19:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_53_root_38_countHardLinks;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_53_root_38_count_hard_links`\u001b[0m\n\n"}
{"message":"module `scc_81_compressedStreamEOF` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":716,"byte_end":742,"line_start":20,"line_end":20,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"pub mod scc_81_compressedStreamEOF;","highlight_start":9,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":716,"byte_end":742,"line_start":20,"line_end":20,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"pub mod scc_81_compressedStreamEOF;","highlight_start":9,"highlight_end":35}],"label":null,"suggested_replacement":"scc_81_compressed_stream_eof","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_81_compressedStreamEOF` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_81_compressedStreamEOF;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_81_compressed_stream_eof`\u001b[0m\n\n"}
{"message":"module `scc_13_uInt64_toAscii` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":752,"byte_end":773,"line_start":21,"line_end":21,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_13_uInt64_toAscii;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":752,"byte_end":773,"line_start":21,"line_end":21,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_13_uInt64_toAscii;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"scc_13_u_int64_to_ascii","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_13_uInt64_toAscii` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_13_uInt64_toAscii;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_13_u_int64_to_ascii`\u001b[0m\n\n"}
{"message":"module `scc_52_fileExists` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":783,"byte_end":800,"line_start":22,"line_end":22,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_52_fileExists;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":783,"byte_end":800,"line_start":22,"line_end":22,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_52_fileExists;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"scc_52_file_exists","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_52_fileExists` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:22:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_52_fileExists;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_52_file_exists`\u001b[0m\n\n"}
{"message":"module `scc_94_copyFileName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":810,"byte_end":829,"line_start":23,"line_end":23,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"pub mod scc_94_copyFileName;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":810,"byte_end":829,"line_start":23,"line_end":23,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"pub mod scc_94_copyFileName;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"scc_94_copy_file_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_94_copyFileName` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:23:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_94_copyFileName;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_94_copy_file_name`\u001b[0m\n\n"}
{"message":"module `scc_54_root_39_notAStandardFile` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":839,"byte_end":870,"line_start":24,"line_end":24,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_54_root_39_notAStandardFile;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":839,"byte_end":870,"line_start":24,"line_end":24,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_54_root_39_notAStandardFile;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":"scc_54_root_39_not_astandard_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_54_root_39_notAStandardFile` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:24:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_54_root_39_notAStandardFile;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_54_root_39_not_astandard_file`\u001b[0m\n\n"}
{"message":"module `scc_98_uncompressStream` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":880,"byte_end":903,"line_start":25,"line_end":25,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"pub mod scc_98_uncompressStream;","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":880,"byte_end":903,"line_start":25,"line_end":25,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"pub mod scc_98_uncompressStream;","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":"scc_98_uncompress_stream","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_98_uncompressStream` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:25:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_98_uncompressStream;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_98_uncompress_stream`\u001b[0m\n\n"}
{"message":"module `scc_99_compressStream` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":941,"byte_end":962,"line_start":27,"line_end":27,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_99_compressStream;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":941,"byte_end":962,"line_start":27,"line_end":27,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_99_compressStream;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"scc_99_compress_stream","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_99_compressStream` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:27:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_99_compressStream;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_99_compress_stream`\u001b[0m\n\n"}
{"message":"module `scc_55_root_40_containsDubiousChars` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1053,"byte_end":1088,"line_start":31,"line_end":31,"column_start":9,"column_end":44,"is_primary":true,"text":[{"text":"pub mod scc_55_root_40_containsDubiousChars;","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1053,"byte_end":1088,"line_start":31,"line_end":31,"column_start":9,"column_end":44,"is_primary":true,"text":[{"text":"pub mod scc_55_root_40_containsDubiousChars;","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":"scc_55_root_40_contains_dubious_chars","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_55_root_40_containsDubiousChars` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_55_root_40_containsDubiousChars;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_55_root_40_contains_dubious_chars`\u001b[0m\n\n"}
{"message":"module `scc_80_cleanUpAndFail` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1133,"byte_end":1154,"line_start":33,"line_end":33,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_80_cleanUpAndFail;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1133,"byte_end":1154,"line_start":33,"line_end":33,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_80_cleanUpAndFail;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"scc_80_clean_up_and_fail","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_80_cleanUpAndFail` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_80_cleanUpAndFail;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_80_clean_up_and_fail`\u001b[0m\n\n"}
{"message":"module `scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1164,"byte_end":1260,"line_start":34,"line_end":34,"column_start":9,"column_end":105,"is_primary":true,"text":[{"text":"pub mod scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo;","highlight_start":9,"highlight_end":105}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1164,"byte_end":1260,"line_start":34,"line_end":34,"column_start":9,"column_end":105,"is_primary":true,"text":[{"text":"pub mod scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo;","highlight_start":9,"highlight_end":105}],"label":null,"suggested_replacement":"scc_84_apply_saved_time_info_to_output_file_85_apply_saved_file_attr_to_output_file_86_save_input_file_meta_info","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:34:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_84_applySavedTimeInfoToOutputFile_85_applySavedFileAttrToOutputFile_86_saveInputFileMetaInfo;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_84_apply_saved_time_info_to_output_file_85_apply_saved_file_attr_to_output_file_86_save_input_file_meta_info`\u001b[0m\n\n"}
{"message":"module `scc_82_crcError_83_ioError` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1270,"byte_end":1296,"line_start":35,"line_end":35,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"pub mod scc_82_crcError_83_ioError;","highlight_start":9,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1270,"byte_end":1296,"line_start":35,"line_end":35,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"pub mod scc_82_crcError_83_ioError;","highlight_start":9,"highlight_end":35}],"label":null,"suggested_replacement":"scc_82_crc_error_83_io_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_82_crcError_83_ioError` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:35:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_82_crcError_83_ioError;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_82_crc_error_83_io_error`\u001b[0m\n\n"}
{"message":"module `scc_79_root_46_setExit` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1342,"byte_end":1364,"line_start":37,"line_end":37,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_79_root_46_setExit;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1342,"byte_end":1364,"line_start":37,"line_end":37,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_79_root_46_setExit;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":"scc_79_root_46_set_exit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_79_root_46_setExit` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:37:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_79_root_46_setExit;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_79_root_46_set_exit`\u001b[0m\n\n"}
{"message":"module `scc_95_mySIGSEGVorSIGBUScatcher` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1397,"byte_end":1428,"line_start":39,"line_end":39,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_95_mySIGSEGVorSIGBUScatcher;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1397,"byte_end":1428,"line_start":39,"line_end":39,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_95_mySIGSEGVorSIGBUScatcher;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":"scc_95_my_sigsegvor_sigbuscatcher","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_95_mySIGSEGVorSIGBUScatcher` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:39:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_95_mySIGSEGVorSIGBUScatcher;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_95_my_sigsegvor_sigbuscatcher`\u001b[0m\n\n"}
{"message":"module `scc_10_root_12_uInt64_qrm10` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1522,"byte_end":1549,"line_start":43,"line_end":43,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"pub mod scc_10_root_12_uInt64_qrm10;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1522,"byte_end":1549,"line_start":43,"line_end":43,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"pub mod scc_10_root_12_uInt64_qrm10;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":"scc_10_root_12_u_int64_qrm10","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_10_root_12_uInt64_qrm10` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:43:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_10_root_12_uInt64_qrm10;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_10_root_12_u_int64_qrm10`\u001b[0m\n\n"}
{"message":"module `scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1589,"byte_end":1655,"line_start":45,"line_end":45,"column_start":9,"column_end":75,"is_primary":true,"text":[{"text":"pub mod scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s; // scc_52_root_34_uInt64_from_UInt32s","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1589,"byte_end":1655,"line_start":45,"line_end":45,"column_start":9,"column_end":75,"is_primary":true,"text":[{"text":"pub mod scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s; // scc_52_root_34_uInt64_from_UInt32s","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":"scc_43_root_30_u_int64_to_double_scc_44_root_31_u_int64_from_uint32s","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_43_root_30_uInt64_to_double_scc_44_root_31_uInt64_from_UInt32s; // scc_52_root_34_uInt64_from_UInt32s\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_43_root_30_u_int64_to_double_scc_44_root_31_u_int64_from_uint32s`\u001b[0m\n\n"}
{"message":"module `scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1703,"byte_end":1757,"line_start":46,"line_end":46,"column_start":9,"column_end":63,"is_primary":true,"text":[{"text":"pub mod scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var;","highlight_start":9,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/mod.rs","byte_start":1703,"byte_end":1757,"line_start":46,"line_end":46,"column_start":9,"column_end":63,"is_primary":true,"text":[{"text":"pub mod scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var;","highlight_start":9,"highlight_end":63}],"label":null,"suggested_replacement":"scc_90_mk_cell_91_snoc_string_93_add_flags_from_env_var","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/mod.rs:46:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_90_mk_cell_91_snoc_string_93_add_flags_from_env_var`\u001b[0m\n\n"}
{"message":"function `uInt64_isZero` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":173,"byte_end":186,"line_start":9,"line_end":9,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn uInt64_isZero(n: &UInt64) -> bool {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":173,"byte_end":186,"line_start":9,"line_end":9,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn uInt64_isZero(n: &UInt64) -> bool {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":"u_int64_is_zero","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `uInt64_isZero` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_13_uInt64_toAscii.rs:9:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn uInt64_isZero(n: &UInt64) -> bool {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `u_int64_is_zero`\u001b[0m\n\n"}
{"message":"function `uInt64_toAscii` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":346,"byte_end":360,"line_start":19,"line_end":19,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn uInt64_toAscii(outbuf: &mut [char; 32], n: &UInt64) {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":346,"byte_end":360,"line_start":19,"line_end":19,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn uInt64_toAscii(outbuf: &mut [char; 32], n: &UInt64) {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":"u_int64_to_ascii","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `uInt64_toAscii` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_13_uInt64_toAscii.rs:19:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn uInt64_toAscii(outbuf: &mut [char; 32], n: &UInt64) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `u_int64_to_ascii`\u001b[0m\n\n"}
{"message":"variable `nBuf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":483,"byte_end":487,"line_start":22,"line_end":22,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut nBuf = 0usize;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_13_uInt64_toAscii.rs","byte_start":483,"byte_end":487,"line_start":22,"line_end":22,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut nBuf = 0usize;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"n_buf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nBuf` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_13_uInt64_toAscii.rs:22:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nBuf = 0usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_buf`\u001b[0m\n\n"}
{"message":"variable `BZ_CONFIG_ERROR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2586,"byte_end":2601,"line_start":69,"line_end":69,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        BZ_CONFIG_ERROR => {","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2586,"byte_end":2601,"line_start":69,"line_end":69,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        BZ_CONFIG_ERROR => {","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"bz_config_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `BZ_CONFIG_ERROR` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:69:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_CONFIG_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bz_config_error`\u001b[0m\n\n"}
{"message":"variable `BZ_MEM_ERROR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2705,"byte_end":2717,"line_start":73,"line_end":73,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        BZ_MEM_ERROR => {","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2705,"byte_end":2717,"line_start":73,"line_end":73,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        BZ_MEM_ERROR => {","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":"bz_mem_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `BZ_MEM_ERROR` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:73:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_MEM_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bz_mem_error`\u001b[0m\n\n"}
{"message":"variable `BZ_IO_ERROR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2865,"byte_end":2876,"line_start":77,"line_end":77,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        BZ_IO_ERROR => {","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_99_compressStream.rs","byte_start":2865,"byte_end":2876,"line_start":77,"line_end":77,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        BZ_IO_ERROR => {","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"bz_io_error","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `BZ_IO_ERROR` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_99_compressStream.rs:77:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        BZ_IO_ERROR => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bz_io_error`\u001b[0m\n\n"}
{"message":"function `uInt64_qrm10` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_10_root_12_uInt64_qrm10.rs","byte_start":54,"byte_end":66,"line_start":5,"line_end":5,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"pub fn uInt64_qrm10(n: &mut UInt64) -> i32 {","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_10_root_12_uInt64_qrm10.rs","byte_start":54,"byte_end":66,"line_start":5,"line_end":5,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"pub fn uInt64_qrm10(n: &mut UInt64) -> i32 {","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":"u_int64_qrm10","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `uInt64_qrm10` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_10_root_12_uInt64_qrm10.rs:5:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn uInt64_qrm10(n: &mut UInt64) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `u_int64_qrm10`\u001b[0m\n\n"}
{"message":"method `printLinkLists` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzip2/scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var.rs","byte_start":558,"byte_end":572,"line_start":26,"line_end":26,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"     pub fn printLinkLists(&self) {","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzip2/scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var.rs","byte_start":558,"byte_end":572,"line_start":26,"line_end":26,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"     pub fn printLinkLists(&self) {","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"print_link_lists","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `printLinkLists` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzip2/scc_90_mkCell_91_snoc_string_93_add_flags_from_env_var.rs:26:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m     pub fn printLinkLists(&self) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `print_link_lists`\u001b[0m\n\n"}
{"message":"module `scc_59_BZ2_decompress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/decompress/mod.rs","byte_start":8,"byte_end":29,"line_start":1,"line_end":1,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_59_BZ2_decompress;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/decompress/mod.rs","byte_start":8,"byte_end":29,"line_start":1,"line_end":1,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_59_BZ2_decompress;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"scc_59_bz2_decompress","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_59_BZ2_decompress` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decompress/mod.rs:1:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_59_BZ2_decompress;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_59_bz2_decompress`\u001b[0m\n\n"}
{"message":"module `scc_5_root_4_makeMaps_d` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/decompress/mod.rs","byte_start":39,"byte_end":62,"line_start":2,"line_end":2,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"pub mod scc_5_root_4_makeMaps_d;","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/decompress/mod.rs","byte_start":39,"byte_end":62,"line_start":2,"line_end":2,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"pub mod scc_5_root_4_makeMaps_d;","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":"scc_5_root_4_make_maps_d","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_5_root_4_makeMaps_d` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/decompress/mod.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_5_root_4_makeMaps_d;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_5_root_4_make_maps_d`\u001b[0m\n\n"}
{"message":"module `scc_69_mainSort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":8,"byte_end":23,"line_start":1,"line_end":1,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub mod scc_69_mainSort;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":8,"byte_end":23,"line_start":1,"line_end":1,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"pub mod scc_69_mainSort;","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"scc_69_main_sort","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_69_mainSort` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:1:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_69_mainSort;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_69_main_sort`\u001b[0m\n\n"}
{"message":"module `scc_71_fallbackSort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":33,"byte_end":52,"line_start":2,"line_end":2,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"pub mod scc_71_fallbackSort;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":33,"byte_end":52,"line_start":2,"line_end":2,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"pub mod scc_71_fallbackSort;","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"scc_71_fallback_sort","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_71_fallbackSort` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_71_fallbackSort;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_71_fallback_sort`\u001b[0m\n\n"}
{"message":"module `scc_70_fallbackQSort3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":62,"byte_end":83,"line_start":3,"line_end":3,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_70_fallbackQSort3;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":62,"byte_end":83,"line_start":3,"line_end":3,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_70_fallbackQSort3;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"scc_70_fallback_qsort3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_70_fallbackQSort3` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_70_fallbackQSort3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_70_fallback_qsort3`\u001b[0m\n\n"}
{"message":"module `scc_29_mainSimpleSort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":93,"byte_end":114,"line_start":4,"line_end":4,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_29_mainSimpleSort;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":93,"byte_end":114,"line_start":4,"line_end":4,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_29_mainSimpleSort;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"scc_29_main_simple_sort","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_29_mainSimpleSort` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_29_mainSimpleSort;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_29_main_simple_sort`\u001b[0m\n\n"}
{"message":"module `scc_31_root_21_fallbackSimpleSort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":124,"byte_end":157,"line_start":5,"line_end":5,"column_start":9,"column_end":42,"is_primary":true,"text":[{"text":"pub mod scc_31_root_21_fallbackSimpleSort;","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":124,"byte_end":157,"line_start":5,"line_end":5,"column_start":9,"column_end":42,"is_primary":true,"text":[{"text":"pub mod scc_31_root_21_fallbackSimpleSort;","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":"scc_31_root_21_fallback_simple_sort","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_31_root_21_fallbackSimpleSort` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:5:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_31_root_21_fallbackSimpleSort;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_31_root_21_fallback_simple_sort`\u001b[0m\n\n"}
{"message":"module `scc_68_mainQSort3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":197,"byte_end":214,"line_start":7,"line_end":7,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_68_mainQSort3;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":197,"byte_end":214,"line_start":7,"line_end":7,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"pub mod scc_68_mainQSort3;","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"scc_68_main_qsort3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_68_mainQSort3` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:7:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_68_mainQSort3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_68_main_qsort3`\u001b[0m\n\n"}
{"message":"module `scc_72_BZ2_blockSort` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":224,"byte_end":244,"line_start":8,"line_end":8,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"pub mod scc_72_BZ2_blockSort;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":224,"byte_end":244,"line_start":8,"line_end":8,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"pub mod scc_72_BZ2_blockSort;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"scc_72_bz2_block_sort","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_72_BZ2_blockSort` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:8:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_72_BZ2_blockSort;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_72_bz2_block_sort`\u001b[0m\n\n"}
{"message":"module `scc_28_root_19_mainGtU` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":254,"byte_end":276,"line_start":9,"line_end":9,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_28_root_19_mainGtU;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/mod.rs","byte_start":254,"byte_end":276,"line_start":9,"line_end":9,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub mod scc_28_root_19_mainGtU;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":"scc_28_root_19_main_gt_u","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_28_root_19_mainGtU` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/mod.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_28_root_19_mainGtU;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_28_root_19_main_gt_u`\u001b[0m\n\n"}
{"message":"function `saveArrayToFile` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":2631,"byte_end":2646,"line_start":76,"line_end":76,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn saveArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":2631,"byte_end":2646,"line_start":76,"line_end":76,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn saveArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":"save_array_to_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `saveArrayToFile` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:76:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn saveArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_array_to_file`\u001b[0m\n\n"}
{"message":"variable `bigDone` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3747,"byte_end":3754,"line_start":115,"line_end":115,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut bigDone: Vec<u8> = vec![0; 256];","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3747,"byte_end":3754,"line_start":115,"line_end":115,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut bigDone: Vec<u8> = vec![0; 256];","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"big_done","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `bigDone` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:115:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut bigDone: Vec<u8> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `big_done`\u001b[0m\n\n"}
{"message":"variable `copyStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3792,"byte_end":3801,"line_start":116,"line_end":116,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut copyStart: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3792,"byte_end":3801,"line_start":116,"line_end":116,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut copyStart: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"copy_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `copyStart` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:116:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut copyStart: Vec<i32> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `copy_start`\u001b[0m\n\n"}
{"message":"variable `copyEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3840,"byte_end":3847,"line_start":117,"line_end":117,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":3840,"byte_end":3847,"line_start":117,"line_end":117,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"copy_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `copyEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:117:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut copyEnd: Vec<i32> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `copy_end`\u001b[0m\n\n"}
{"message":"variable `markBucket_file` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":9410,"byte_end":9425,"line_start":292,"line_end":292,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"    let mut markBucket_file = match File::create(\"markBucketValues_rust.txt\") {","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":9410,"byte_end":9425,"line_start":292,"line_end":292,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"    let mut markBucket_file = match File::create(\"markBucketValues_rust.txt\") {","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"mark_bucket_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `markBucket_file` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:292:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut markBucket_file = match File::create(\"markBucketValues_rust.txt\") {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mark_bucket_file`\u001b[0m\n\n"}
{"message":"variable `markBeforeMaskBucket_file` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":9650,"byte_end":9675,"line_start":299,"line_end":299,"column_start":13,"column_end":38,"is_primary":true,"text":[{"text":"    let mut markBeforeMaskBucket_file = match File::create(\"markBeforeMaskBucketValues_rust.txt\") {","highlight_start":13,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":9650,"byte_end":9675,"line_start":299,"line_end":299,"column_start":13,"column_end":38,"is_primary":true,"text":[{"text":"    let mut markBeforeMaskBucket_file = match File::create(\"markBeforeMaskBucketValues_rust.txt\") {","highlight_start":13,"highlight_end":38}],"label":null,"suggested_replacement":"mark_before_mask_bucket_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `markBeforeMaskBucket_file` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:299:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut markBeforeMaskBucket_file = match File::create(\"markBeforeMaskBucketValues_rust.txt\") {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mark_before_mask_bucket_file`\u001b[0m\n\n"}
{"message":"variable `copyStart` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":13060,"byte_end":13069,"line_start":372,"line_end":372,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"        let mut copyStart: Vec<i32> =  vec![0; 256];","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":13060,"byte_end":13069,"line_start":372,"line_end":372,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"        let mut copyStart: Vec<i32> =  vec![0; 256];","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"copy_start","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `copyStart` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:372:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut copyStart: Vec<i32> =  vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `copy_start`\u001b[0m\n\n"}
{"message":"variable `copyEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":13113,"byte_end":13120,"line_start":373,"line_end":373,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"        let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_69_mainSort.rs","byte_start":13113,"byte_end":13120,"line_start":373,"line_end":373,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"        let mut copyEnd: Vec<i32> = vec![0; 256];","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"copy_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `copyEnd` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_69_mainSort.rs:373:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut copyEnd: Vec<i32> = vec![0; 256];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `copy_end`\u001b[0m\n\n"}
{"message":"function `saveBlockArrayToFile` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":428,"byte_end":448,"line_start":14,"line_end":14,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn saveBlockArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_71_fallbackSort.rs","byte_start":428,"byte_end":448,"line_start":14,"line_end":14,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn saveBlockArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":"save_block_array_to_file","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `saveBlockArrayToFile` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_71_fallbackSort.rs:14:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn saveBlockArrayToFile<T>(arr: &Vec<T>, length: usize, filename: &str) -> io::Result<()>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_block_array_to_file`\u001b[0m\n\n"}
{"message":"variable `loSt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":536,"byte_end":540,"line_start":15,"line_end":15,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut loSt: i32 = 0;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":536,"byte_end":540,"line_start":15,"line_end":15,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut loSt: i32 = 0;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"lo_st","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `loSt` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_70_fallbackQSort3.rs:15:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut loSt: i32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `lo_st`\u001b[0m\n\n"}
{"message":"variable `hiSt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":563,"byte_end":567,"line_start":16,"line_end":16,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut hiSt: i32 = 0;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_70_fallbackQSort3.rs","byte_start":563,"byte_end":567,"line_start":16,"line_end":16,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut hiSt: i32 = 0;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"hi_st","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `hiSt` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_70_fallbackQSort3.rs:16:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut hiSt: i32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `hi_st`\u001b[0m\n\n"}
{"message":"variable `origPtr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":4978,"byte_end":4985,"line_start":124,"line_end":124,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let origPtr: i32 = 0;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":4978,"byte_end":4985,"line_start":124,"line_end":124,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let origPtr: i32 = 0;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"orig_ptr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `origPtr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:124:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let origPtr: i32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `orig_ptr`\u001b[0m\n\n"}
{"message":"variable `workFactor` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5167,"byte_end":5177,"line_start":127,"line_end":127,"column_start":14,"column_end":24,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":14,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5167,"byte_end":5177,"line_start":127,"line_end":127,"column_start":14,"column_end":24,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":14,"highlight_end":24}],"label":null,"suggested_replacement":"work_factor","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `workFactor` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:127:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `work_factor`\u001b[0m\n\n"}
{"message":"variable `rNToGo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5218,"byte_end":5224,"line_start":127,"line_end":127,"column_start":65,"column_end":71,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":65,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5218,"byte_end":5224,"line_start":127,"line_end":127,"column_start":65,"column_end":71,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":65,"highlight_end":71}],"label":null,"suggested_replacement":"r_nto_go","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `rNToGo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:127:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_nto_go`\u001b[0m\n\n"}
{"message":"variable `rTPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5230,"byte_end":5235,"line_start":127,"line_end":127,"column_start":77,"column_end":82,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":77,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5230,"byte_end":5235,"line_start":127,"line_end":127,"column_start":77,"column_end":82,"is_primary":true,"text":[{"text":"    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":77,"highlight_end":82}],"label":null,"suggested_replacement":"r_tpos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `rTPos` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:127:77\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut workFactor, mut state_in_ch, mut state_in_len, mut rNToGo, mut rTPos): (u32, u32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_tpos`\u001b[0m\n\n"}
{"message":"variable `nblockMAX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5308,"byte_end":5317,"line_start":128,"line_end":128,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5308,"byte_end":5317,"line_start":128,"line_end":128,"column_start":26,"column_end":35,"is_primary":true,"text":[{"text":"    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":26,"highlight_end":35}],"label":null,"suggested_replacement":"nblock_max","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nblockMAX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:128:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `nblock_max`\u001b[0m\n\n"}
{"message":"variable `numZ` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5323,"byte_end":5327,"line_start":128,"line_end":128,"column_start":41,"column_end":45,"is_primary":true,"text":[{"text":"    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":41,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5323,"byte_end":5327,"line_start":128,"line_end":128,"column_start":41,"column_end":45,"is_primary":true,"text":[{"text":"    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":41,"highlight_end":45}],"label":null,"suggested_replacement":"num_z","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `numZ` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:128:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `num_z`\u001b[0m\n\n"}
{"message":"variable `nInUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5352,"byte_end":5358,"line_start":128,"line_end":128,"column_start":70,"column_end":76,"is_primary":true,"text":[{"text":"    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":70,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5352,"byte_end":5358,"line_start":128,"line_end":128,"column_start":70,"column_end":76,"is_primary":true,"text":[{"text":"    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);","highlight_start":70,"highlight_end":76}],"label":null,"suggested_replacement":"n_in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nInUse` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:128:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut nblock, mut nblockMAX, mut numZ, mut state_out_pos, mut nInUse): (i32, i32, i32, i32, i32) = (0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_in_use`\u001b[0m\n\n"}
{"message":"variable `mtfFreq_value` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5419,"byte_end":5432,"line_start":129,"line_end":129,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"    let (mut mtfFreq_value, mut selector_value, mut selectorMtf_value): (Vec<i32>, Vec<u8>, Vec<u8>) = (Vec::new(), Vec::new(), Vec::new());","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5419,"byte_end":5432,"line_start":129,"line_end":129,"column_start":14,"column_end":27,"is_primary":true,"text":[{"text":"    let (mut mtfFreq_value, mut selector_value, mut selectorMtf_value): (Vec<i32>, Vec<u8>, Vec<u8>) = (Vec::new(), Vec::new(), Vec::new());","highlight_start":14,"highlight_end":27}],"label":null,"suggested_replacement":"mtf_freq_value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `mtfFreq_value` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:129:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut mtfFreq_value, mut selector_value, mut selectorMtf_value): (Vec<i32>, Vec<u8>, Vec<u8>) = (Vec::new(), Vec::new(), Vec::new());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mtf_freq_value`\u001b[0m\n\n"}
{"message":"variable `selectorMtf_value` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5458,"byte_end":5475,"line_start":129,"line_end":129,"column_start":53,"column_end":70,"is_primary":true,"text":[{"text":"    let (mut mtfFreq_value, mut selector_value, mut selectorMtf_value): (Vec<i32>, Vec<u8>, Vec<u8>) = (Vec::new(), Vec::new(), Vec::new());","highlight_start":53,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5458,"byte_end":5475,"line_start":129,"line_end":129,"column_start":53,"column_end":70,"is_primary":true,"text":[{"text":"    let (mut mtfFreq_value, mut selector_value, mut selectorMtf_value): (Vec<i32>, Vec<u8>, Vec<u8>) = (Vec::new(), Vec::new(), Vec::new());","highlight_start":53,"highlight_end":70}],"label":null,"suggested_replacement":"selector_mtf_value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `selectorMtf_value` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:129:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut mtfFreq_value, mut selector_value, mut selectorMtf_value): (Vec<i32>, Vec<u8>, Vec<u8>) = (Vec::new(), Vec::new(), Vec::new());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `selector_mtf_value`\u001b[0m\n\n"}
{"message":"variable `inUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5560,"byte_end":5565,"line_start":130,"line_end":130,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"    let (mut inUse, mut unseqToSeq): (Vec<u32>, Vec<u8>) = (Vec::new(), Vec::new());","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5560,"byte_end":5565,"line_start":130,"line_end":130,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"    let (mut inUse, mut unseqToSeq): (Vec<u32>, Vec<u8>) = (Vec::new(), Vec::new());","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":"in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `inUse` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:130:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut inUse, mut unseqToSeq): (Vec<u32>, Vec<u8>) = (Vec::new(), Vec::new());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `in_use`\u001b[0m\n\n"}
{"message":"variable `unseqToSeq` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5571,"byte_end":5581,"line_start":130,"line_end":130,"column_start":25,"column_end":35,"is_primary":true,"text":[{"text":"    let (mut inUse, mut unseqToSeq): (Vec<u32>, Vec<u8>) = (Vec::new(), Vec::new());","highlight_start":25,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5571,"byte_end":5581,"line_start":130,"line_end":130,"column_start":25,"column_end":35,"is_primary":true,"text":[{"text":"    let (mut inUse, mut unseqToSeq): (Vec<u32>, Vec<u8>) = (Vec::new(), Vec::new());","highlight_start":25,"highlight_end":35}],"label":null,"suggested_replacement":"unseq_to_seq","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `unseqToSeq` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:130:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut inUse, mut unseqToSeq): (Vec<u32>, Vec<u8>) = (Vec::new(), Vec::new());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `unseq_to_seq`\u001b[0m\n\n"}
{"message":"variable `bsBuff` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5655,"byte_end":5661,"line_start":132,"line_end":132,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":14,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5655,"byte_end":5661,"line_start":132,"line_end":132,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":14,"highlight_end":20}],"label":null,"suggested_replacement":"bs_buff","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `bsBuff` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:132:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_buff`\u001b[0m\n\n"}
{"message":"variable `bsLive` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5667,"byte_end":5673,"line_start":132,"line_end":132,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5667,"byte_end":5673,"line_start":132,"line_end":132,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"bs_live","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `bsLive` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:132:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_live`\u001b[0m\n\n"}
{"message":"variable `blockCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5679,"byte_end":5687,"line_start":132,"line_end":132,"column_start":38,"column_end":46,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":38,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5679,"byte_end":5687,"line_start":132,"line_end":132,"column_start":38,"column_end":46,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":38,"highlight_end":46}],"label":null,"suggested_replacement":"block_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `blockCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:132:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_crc`\u001b[0m\n\n"}
{"message":"variable `combinedCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5693,"byte_end":5704,"line_start":132,"line_end":132,"column_start":52,"column_end":63,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":52,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5693,"byte_end":5704,"line_start":132,"line_end":132,"column_start":52,"column_end":63,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":52,"highlight_end":63}],"label":null,"suggested_replacement":"combined_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `combinedCRC` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:132:52\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `combined_crc`\u001b[0m\n\n"}
{"message":"variable `blockNo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5725,"byte_end":5732,"line_start":132,"line_end":132,"column_start":84,"column_end":91,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":84,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5725,"byte_end":5732,"line_start":132,"line_end":132,"column_start":84,"column_end":91,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":84,"highlight_end":91}],"label":null,"suggested_replacement":"block_no","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `blockNo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:132:84\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_no`\u001b[0m\n\n"}
{"message":"variable `blockSize100k` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5738,"byte_end":5751,"line_start":132,"line_end":132,"column_start":97,"column_end":110,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":97,"highlight_end":110}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5738,"byte_end":5751,"line_start":132,"line_end":132,"column_start":97,"column_end":110,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":97,"highlight_end":110}],"label":null,"suggested_replacement":"block_size100k","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `blockSize100k` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:132:97\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_size100k`\u001b[0m\n\n"}
{"message":"variable `nMTF` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5757,"byte_end":5761,"line_start":132,"line_end":132,"column_start":116,"column_end":120,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":116,"highlight_end":120}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/blocksort/scc_72_BZ2_blockSort.rs","byte_start":5757,"byte_end":5761,"line_start":132,"line_end":132,"column_start":116,"column_end":120,"is_primary":true,"text":[{"text":"    let (mut bsBuff, mut bsLive, mut blockCRC, mut combinedCRC, mut verbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);","highlight_start":116,"highlight_end":120}],"label":null,"suggested_replacement":"n_mtf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nMTF` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/blocksort/scc_72_BZ2_blockSort.rs:132:116\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0merbosity,mut  blockNo,mut  blockSize100k, mut nMTF): (u32, i32, u32, u32, i32, i32, i32, i32) = (0, 0, 0, 0, 0, 0, 0, 0);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_mtf`\u001b[0m\n\n"}
{"message":"module `scc_6_root_5_BZ2_indexIntoF` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":30,"byte_end":57,"line_start":2,"line_end":2,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"pub mod scc_6_root_5_BZ2_indexIntoF;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":30,"byte_end":57,"line_start":2,"line_end":2,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"pub mod scc_6_root_5_BZ2_indexIntoF;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":"scc_6_root_5_bz2_index_into_f","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_6_root_5_BZ2_indexIntoF` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_6_root_5_BZ2_indexIntoF;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_6_root_5_bz2_index_into_f`\u001b[0m\n\n"}
{"message":"module `scc_9_root_7_BZ2_bzReadGetUnused` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":67,"byte_end":99,"line_start":3,"line_end":3,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_9_root_7_BZ2_bzReadGetUnused;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":67,"byte_end":99,"line_start":3,"line_end":3,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_9_root_7_BZ2_bzReadGetUnused;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":"scc_9_root_7_bz2_bz_read_get_unused","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_9_root_7_BZ2_bzReadGetUnused` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_9_root_7_BZ2_bzReadGetUnused;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_9_root_7_bz2_bz_read_get_unused`\u001b[0m\n\n"}
{"message":"module `scc_64_BZ2_bzDecompress_65_BZ2_bzRead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":109,"byte_end":146,"line_start":4,"line_end":4,"column_start":9,"column_end":46,"is_primary":true,"text":[{"text":"pub mod scc_64_BZ2_bzDecompress_65_BZ2_bzRead;","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":109,"byte_end":146,"line_start":4,"line_end":4,"column_start":9,"column_end":46,"is_primary":true,"text":[{"text":"pub mod scc_64_BZ2_bzDecompress_65_BZ2_bzRead;","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":"scc_64_bz2_bz_decompress_65_bz2_bz_read","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_64_BZ2_bzDecompress_65_BZ2_bzRead` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_64_BZ2_bzDecompress_65_BZ2_bzRead;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_64_bz2_bz_decompress_65_bz2_bz_read`\u001b[0m\n\n"}
{"message":"module `scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":222,"byte_end":265,"line_start":7,"line_end":7,"column_start":9,"column_end":52,"is_primary":true,"text":[{"text":"pub mod scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64;","highlight_start":9,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":222,"byte_end":265,"line_start":7,"line_end":7,"column_start":9,"column_end":52,"is_primary":true,"text":[{"text":"pub mod scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64;","highlight_start":9,"highlight_end":52}],"label":null,"suggested_replacement":"scc_75_bz2_bz_compress_76_bz2_bz_write_close64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:7:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_75_BZ2_bzCompress_76_BZ2_bzWriteClose64;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_75_bz2_bz_compress_76_bz2_bz_write_close64`\u001b[0m\n\n"}
{"message":"module `scc_62_BZ2_bz__AssertH__fail` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":275,"byte_end":303,"line_start":8,"line_end":8,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"pub mod scc_62_BZ2_bz__AssertH__fail;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":275,"byte_end":303,"line_start":8,"line_end":8,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"pub mod scc_62_BZ2_bz__AssertH__fail;","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":"scc_62_bz2_bz_assert_h_fail","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_62_BZ2_bz__AssertH__fail` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:8:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_62_BZ2_bz__AssertH__fail;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_62_bz2_bz_assert_h_fail`\u001b[0m\n\n"}
{"message":"module `scc_2_root_2_BZ2_bzDecompressEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":457,"byte_end":489,"line_start":13,"line_end":13,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_2_root_2_BZ2_bzDecompressEnd;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":457,"byte_end":489,"line_start":13,"line_end":13,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_2_root_2_BZ2_bzDecompressEnd;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":"scc_2_root_2_bz2_bz_decompress_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_2_root_2_BZ2_bzDecompressEnd` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:13:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_2_root_2_BZ2_bzDecompressEnd;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_2_root_2_bz2_bz_decompress_end`\u001b[0m\n\n"}
{"message":"module `scc_3_BZ2_bzReadClose` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":531,"byte_end":552,"line_start":15,"line_end":15,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_3_BZ2_bzReadClose;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":531,"byte_end":552,"line_start":15,"line_end":15,"column_start":9,"column_end":30,"is_primary":true,"text":[{"text":"pub mod scc_3_BZ2_bzReadClose;","highlight_start":9,"highlight_end":30}],"label":null,"suggested_replacement":"scc_3_bz2_bz_read_close","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_3_BZ2_bzReadClose` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_3_BZ2_bzReadClose;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_3_bz2_bz_read_close`\u001b[0m\n\n"}
{"message":"module `scc_7_unRLE_obuf_to_output_SMALL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":630,"byte_end":662,"line_start":18,"line_end":18,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_7_unRLE_obuf_to_output_SMALL;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":630,"byte_end":662,"line_start":18,"line_end":18,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_7_unRLE_obuf_to_output_SMALL;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":"scc_7_un_rle_obuf_to_output_small","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_7_unRLE_obuf_to_output_SMALL` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_7_unRLE_obuf_to_output_SMALL;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_7_un_rle_obuf_to_output_small`\u001b[0m\n\n"}
{"message":"module `scc_73_BZ2_bzWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":672,"byte_end":690,"line_start":19,"line_end":19,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub mod scc_73_BZ2_bzWrite;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":672,"byte_end":690,"line_start":19,"line_end":19,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub mod scc_73_BZ2_bzWrite;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"scc_73_bz2_bz_write","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_73_BZ2_bzWrite` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:19:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_73_BZ2_bzWrite;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_73_bz2_bz_write`\u001b[0m\n\n"}
{"message":"module `scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":700,"byte_end":744,"line_start":20,"line_end":20,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"pub mod scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen;","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":700,"byte_end":744,"line_start":20,"line_end":20,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"pub mod scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen;","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":"scc_41_bz2_bz_compress_init_42_bz2_bz_write_open","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_41_bz2_bz_compress_init_42_bz2_bz_write_open`\u001b[0m\n\n"}
{"message":"module `scc_42_root_57_BZ2_bzlibVersion` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":833,"byte_end":864,"line_start":23,"line_end":23,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_42_root_57_BZ2_bzlibVersion;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":833,"byte_end":864,"line_start":23,"line_end":23,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub mod scc_42_root_57_BZ2_bzlibVersion;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":"scc_42_root_57_bz2_bzlib_version","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_42_root_57_BZ2_bzlibVersion` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:23:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_42_root_57_BZ2_bzlibVersion;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_42_root_57_bz2_bzlib_version`\u001b[0m\n\n"}
{"message":"module `scc_16_root_13_BZ2_bzCompressEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":908,"byte_end":940,"line_start":25,"line_end":25,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_16_root_13_BZ2_bzCompressEnd;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":908,"byte_end":940,"line_start":25,"line_end":25,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"pub mod scc_16_root_13_BZ2_bzCompressEnd;","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":"scc_16_root_13_bz2_bz_compress_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_16_root_13_BZ2_bzCompressEnd` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:25:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_16_root_13_BZ2_bzCompressEnd;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_16_root_13_bz2_bz_compress_end`\u001b[0m\n\n"}
{"message":"module `scc_25_root_33_prepare_new_block_init_RL_isempty_RL_flush_RL_bzlib_static` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":1088,"byte_end":1161,"line_start":28,"line_end":28,"column_start":9,"column_end":82,"is_primary":true,"text":[{"text":"pub mod scc_25_root_33_prepare_new_block_init_RL_isempty_RL_flush_RL_bzlib_static;","highlight_start":9,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":1088,"byte_end":1161,"line_start":28,"line_end":28,"column_start":9,"column_end":82,"is_primary":true,"text":[{"text":"pub mod scc_25_root_33_prepare_new_block_init_RL_isempty_RL_flush_RL_bzlib_static;","highlight_start":9,"highlight_end":82}],"label":null,"suggested_replacement":"scc_25_root_33_prepare_new_block_init_rl_isempty_rl_flush_rl_bzlib_static","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_25_root_33_prepare_new_block_init_RL_isempty_RL_flush_RL_bzlib_static` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:28:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_25_root_33_prepare_new_block_init_RL_isempty_RL_flush_RL_bzlib_static;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_25_root_33_prepare_new_block_init_rl_isempty_rl_flush_rl_bzlib_static`\u001b[0m\n\n"}
{"message":"module `scc_8_root_6_unRLE_obuf_to_output_FAST` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":1171,"byte_end":1209,"line_start":29,"line_end":29,"column_start":9,"column_end":47,"is_primary":true,"text":[{"text":"pub mod scc_8_root_6_unRLE_obuf_to_output_FAST;","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":1171,"byte_end":1209,"line_start":29,"line_end":29,"column_start":9,"column_end":47,"is_primary":true,"text":[{"text":"pub mod scc_8_root_6_unRLE_obuf_to_output_FAST;","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":"scc_8_root_6_un_rle_obuf_to_output_fast","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_8_root_6_unRLE_obuf_to_output_FAST` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:29:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_8_root_6_unRLE_obuf_to_output_FAST;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_8_root_6_un_rle_obuf_to_output_fast`\u001b[0m\n\n"}
{"message":"module `scc_39_BZ2_bzDecompressInit_40_bzReadOpen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":1254,"byte_end":1295,"line_start":31,"line_end":31,"column_start":9,"column_end":50,"is_primary":true,"text":[{"text":"pub mod scc_39_BZ2_bzDecompressInit_40_bzReadOpen;","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/mod.rs","byte_start":1254,"byte_end":1295,"line_start":31,"line_end":31,"column_start":9,"column_end":50,"is_primary":true,"text":[{"text":"pub mod scc_39_BZ2_bzDecompressInit_40_bzReadOpen;","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":"scc_39_bz2_bz_decompress_init_40_bz_read_open","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_39_BZ2_bzDecompressInit_40_bzReadOpen` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/mod.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_39_BZ2_bzDecompressInit_40_bzReadOpen;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_39_bz2_bz_decompress_init_40_bz_read_open`\u001b[0m\n\n"}
{"message":"function `BZ2_bzDecompress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":473,"byte_end":489,"line_start":13,"line_end":13,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"pub fn BZ2_bzDecompress(strm: *mut bz_stream_DState) -> i32 {","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":473,"byte_end":489,"line_start":13,"line_end":13,"column_start":8,"column_end":24,"is_primary":true,"text":[{"text":"pub fn BZ2_bzDecompress(strm: *mut bz_stream_DState) -> i32 {","highlight_start":8,"highlight_end":24}],"label":null,"suggested_replacement":"bz2_bz_decompress","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `BZ2_bzDecompress` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:13:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzDecompress(strm: *mut bz_stream_DState) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bz2_bz_decompress`\u001b[0m\n\n"}
{"message":"function `BZ2_bzRead` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2691,"byte_end":2701,"line_start":68,"line_end":68,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs","byte_start":2691,"byte_end":2701,"line_start":68,"line_end":68,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"pub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"bz2_bz_read","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `BZ2_bzRead` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_64_BZ2_bzDecompress_65_BZ2_bzRead.rs:68:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzRead(bzerror: &mut i32, b: BZFILE, buf: &mut [u8]) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bz2_bz_read`\u001b[0m\n\n"}
{"message":"structure field `blockRandomised` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1363,"byte_end":1378,"line_start":57,"line_end":57,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"  pub  blockRandomised: Bool, // Whether the block is randomised","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1363,"byte_end":1378,"line_start":57,"line_end":57,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"  pub  blockRandomised: Bool, // Whether the block is randomised","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":"block_randomised","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockRandomised` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:57:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  blockRandomised: Bool, // Whether the block is randomised\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_randomised`\u001b[0m\n\n"}
{"message":"structure field `rNToGo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1428,"byte_end":1434,"line_start":58,"line_end":58,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"  pub  rNToGo: Int32,         // RLE repeat count","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1428,"byte_end":1434,"line_start":58,"line_end":58,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"  pub  rNToGo: Int32,         // RLE repeat count","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"r_nto_go","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rNToGo` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:58:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  rNToGo: Int32,         // RLE repeat count\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_nto_go`\u001b[0m\n\n"}
{"message":"structure field `rTPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1478,"byte_end":1483,"line_start":59,"line_end":59,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"  pub  rTPos: Int32,          // RLE value last output","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1478,"byte_end":1483,"line_start":59,"line_end":59,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"  pub  rTPos: Int32,          // RLE value last output","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":"r_tpos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rTPos` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:59:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  rTPos: Int32,          // RLE value last output\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_tpos`\u001b[0m\n\n"}
{"message":"structure field `bsBuff` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1534,"byte_end":1540,"line_start":61,"line_end":61,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"  pub  bsBuff: UInt32,        // Bitstream buffer","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1534,"byte_end":1540,"line_start":61,"line_end":61,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"  pub  bsBuff: UInt32,        // Bitstream buffer","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"bs_buff","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bsBuff` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:61:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  bsBuff: UInt32,        // Bitstream buffer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_buff`\u001b[0m\n\n"}
{"message":"structure field `bsLive` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1584,"byte_end":1590,"line_start":62,"line_end":62,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"   pub bsLive: Int32,         // Number of bits left in bsBuff","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1584,"byte_end":1590,"line_start":62,"line_end":62,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"   pub bsLive: Int32,         // Number of bits left in bsBuff","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"bs_live","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bsLive` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:62:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m   pub bsLive: Int32,         // Number of bits left in bsBuff\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bs_live`\u001b[0m\n\n"}
{"message":"structure field `blockSize100k` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1648,"byte_end":1661,"line_start":64,"line_end":64,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   blockSize100k: Int32,  // Block size, units of 100k","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1648,"byte_end":1661,"line_start":64,"line_end":64,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   blockSize100k: Int32,  // Block size, units of 100k","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"block_size100k","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `blockSize100k` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:64:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   blockSize100k: Int32,  // Block size, units of 100k\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `block_size100k`\u001b[0m\n\n"}
{"message":"structure field `smallDecompress` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1707,"byte_end":1722,"line_start":65,"line_end":65,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"  pub  smallDecompress: Bool, // Use the slower, smaller decompression routine","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1707,"byte_end":1722,"line_start":65,"line_end":65,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"  pub  smallDecompress: Bool, // Use the slower, smaller decompression routine","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":"small_decompress","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `smallDecompress` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:65:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  smallDecompress: Bool, // Use the slower, smaller decompression routine\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `small_decompress`\u001b[0m\n\n"}
{"message":"structure field `currBlockNo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1786,"byte_end":1797,"line_start":66,"line_end":66,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"  pub  currBlockNo: Int32,    // The current block number","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1786,"byte_end":1797,"line_start":66,"line_end":66,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"  pub  currBlockNo: Int32,    // The current block number","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"curr_block_no","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `currBlockNo` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:66:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  currBlockNo: Int32,    // The current block number\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `curr_block_no`\u001b[0m\n\n"}
{"message":"structure field `origPtr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1894,"byte_end":1901,"line_start":69,"line_end":69,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   origPtr: Int32,        // Pointer to original data","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1894,"byte_end":1901,"line_start":69,"line_end":69,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   origPtr: Int32,        // Pointer to original data","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"orig_ptr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `origPtr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:69:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   origPtr: Int32,        // Pointer to original data\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `orig_ptr`\u001b[0m\n\n"}
{"message":"structure field `tPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1952,"byte_end":1956,"line_start":70,"line_end":70,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   tPos: UInt32,          // Current position in buffer","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":1952,"byte_end":1956,"line_start":70,"line_end":70,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   tPos: UInt32,          // Current position in buffer","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"t_pos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `tPos` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:70:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   tPos: UInt32,          // Current position in buffer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t_pos`\u001b[0m\n\n"}
{"message":"structure field `cftabCopy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2277,"byte_end":2286,"line_start":75,"line_end":75,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":" pub   cftabCopy: [Int32; 257], // A copy of the cftab array","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2277,"byte_end":2286,"line_start":75,"line_end":75,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":" pub   cftabCopy: [Int32; 257], // A copy of the cftab array","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"cftab_copy","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `cftabCopy` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:75:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   cftabCopy: [Int32; 257], // A copy of the cftab array\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cftab_copy`\u001b[0m\n\n"}
{"message":"structure field `storedBlockCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2571,"byte_end":2585,"line_start":81,"line_end":81,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"  pub  storedBlockCRC: UInt32,  // CRC value of stored block","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2571,"byte_end":2585,"line_start":81,"line_end":81,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"  pub  storedBlockCRC: UInt32,  // CRC value of stored block","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":"stored_block_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `storedBlockCRC` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:81:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  storedBlockCRC: UInt32,  // CRC value of stored block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `stored_block_crc`\u001b[0m\n\n"}
{"message":"structure field `storedCombinedCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2632,"byte_end":2649,"line_start":82,"line_end":82,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"  pub  storedCombinedCRC: UInt32, // Combined CRC value","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2632,"byte_end":2649,"line_start":82,"line_end":82,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"  pub  storedCombinedCRC: UInt32, // Combined CRC value","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":"stored_combined_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `storedCombinedCRC` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:82:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  storedCombinedCRC: UInt32, // Combined CRC value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `stored_combined_crc`\u001b[0m\n\n"}
{"message":"structure field `calculatedBlockCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2688,"byte_end":2706,"line_start":83,"line_end":83,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"  pub  calculatedBlockCRC: UInt32, // Calculated CRC value of block","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2688,"byte_end":2706,"line_start":83,"line_end":83,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"  pub  calculatedBlockCRC: UInt32, // Calculated CRC value of block","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":"calculated_block_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `calculatedBlockCRC` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:83:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  calculatedBlockCRC: UInt32, // Calculated CRC value of block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `calculated_block_crc`\u001b[0m\n\n"}
{"message":"structure field `calculatedCombinedCRC` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2756,"byte_end":2777,"line_start":84,"line_end":84,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"  pub  calculatedCombinedCRC: UInt32, // Calculated combined CRC value","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2756,"byte_end":2777,"line_start":84,"line_end":84,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"  pub  calculatedCombinedCRC: UInt32, // Calculated combined CRC value","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":"calculated_combined_crc","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `calculatedCombinedCRC` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:84:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  calculatedCombinedCRC: UInt32, // Calculated combined CRC value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `calculated_combined_crc`\u001b[0m\n\n"}
{"message":"structure field `nInUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2828,"byte_end":2834,"line_start":86,"line_end":86,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"  pub  nInUse: Int32,           // Number of bytes in use","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2828,"byte_end":2834,"line_start":86,"line_end":86,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":"  pub  nInUse: Int32,           // Number of bytes in use","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"n_in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `nInUse` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:86:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  nInUse: Int32,           // Number of bytes in use\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_in_use`\u001b[0m\n\n"}
{"message":"structure field `inUse` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2886,"byte_end":2891,"line_start":87,"line_end":87,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"  pub  inUse: [Bool; 256],      // Flags indicating which values are in use","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2886,"byte_end":2891,"line_start":87,"line_end":87,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"  pub  inUse: [Bool; 256],      // Flags indicating which values are in use","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":"in_use","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `inUse` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:87:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  inUse: [Bool; 256],      // Flags indicating which values are in use\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `in_use`\u001b[0m\n\n"}
{"message":"structure field `inUse16` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2962,"byte_end":2969,"line_start":88,"line_end":88,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"  pub  inUse16: [Bool; 16],     // Flags for 16-bit values","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":2962,"byte_end":2969,"line_start":88,"line_end":88,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"  pub  inUse16: [Bool; 16],     // Flags for 16-bit values","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"in_use16","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `inUse16` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:88:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  inUse16: [Bool; 16],     // Flags for 16-bit values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `in_use16`\u001b[0m\n\n"}
{"message":"structure field `seqToUnseq` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3021,"byte_end":3031,"line_start":89,"line_end":89,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"  pub  seqToUnseq: [UChar; 256], // MTF values","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3021,"byte_end":3031,"line_start":89,"line_end":89,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"  pub  seqToUnseq: [UChar; 256], // MTF values","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"seq_to_unseq","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `seqToUnseq` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:89:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  seqToUnseq: [UChar; 256], // MTF values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `seq_to_unseq`\u001b[0m\n\n"}
{"message":"structure field `selectorMtf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3266,"byte_end":3277,"line_start":95,"line_end":95,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"  pub  selectorMtf: [UChar; 2 + (900000 / 50)], // MTF'd selector values","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3266,"byte_end":3277,"line_start":95,"line_end":95,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"  pub  selectorMtf: [UChar; 2 + (900000 / 50)], // MTF'd selector values","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"selector_mtf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `selectorMtf` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:95:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  selectorMtf: [UChar; 2 + (900000 / 50)], // MTF'd selector values\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `selector_mtf`\u001b[0m\n\n"}
{"message":"structure field `minLens` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3622,"byte_end":3629,"line_start":102,"line_end":102,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"  pub  minLens: [Int32; 6],      // Minimum lengths of Huffman coding tables","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3622,"byte_end":3629,"line_start":102,"line_end":102,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"  pub  minLens: [Int32; 6],      // Minimum lengths of Huffman coding tables","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"min_lens","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `minLens` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:102:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  minLens: [Int32; 6],      // Minimum lengths of Huffman coding tables\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `min_lens`\u001b[0m\n\n"}
{"message":"structure field `save_alphaSize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3834,"byte_end":3848,"line_start":108,"line_end":108,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":" pub   save_alphaSize: Int32,","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3834,"byte_end":3848,"line_start":108,"line_end":108,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":" pub   save_alphaSize: Int32,","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":"save_alpha_size","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_alphaSize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:108:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_alphaSize: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_alpha_size`\u001b[0m\n\n"}
{"message":"structure field `save_nGroups` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3864,"byte_end":3876,"line_start":109,"line_end":109,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":" pub   save_nGroups: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3864,"byte_end":3876,"line_start":109,"line_end":109,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":" pub   save_nGroups: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":"save_n_groups","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nGroups` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:109:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_nGroups: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_n_groups`\u001b[0m\n\n"}
{"message":"structure field `save_nSelectors` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3892,"byte_end":3907,"line_start":110,"line_end":110,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":" pub   save_nSelectors: Int32,","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3892,"byte_end":3907,"line_start":110,"line_end":110,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":" pub   save_nSelectors: Int32,","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":"save_n_selectors","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nSelectors` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:110:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_nSelectors: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_n_selectors`\u001b[0m\n\n"}
{"message":"structure field `save_EOB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3923,"byte_end":3931,"line_start":111,"line_end":111,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":" pub   save_EOB: Int32,","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3923,"byte_end":3931,"line_start":111,"line_end":111,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":" pub   save_EOB: Int32,","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":"save_eob","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_EOB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:111:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_EOB: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_eob`\u001b[0m\n\n"}
{"message":"structure field `save_groupNo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3947,"byte_end":3959,"line_start":112,"line_end":112,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":" pub   save_groupNo: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3947,"byte_end":3959,"line_start":112,"line_end":112,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":" pub   save_groupNo: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":"save_group_no","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_groupNo` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:112:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_groupNo: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_group_no`\u001b[0m\n\n"}
{"message":"structure field `save_groupPos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3975,"byte_end":3988,"line_start":113,"line_end":113,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   save_groupPos: Int32,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":3975,"byte_end":3988,"line_start":113,"line_end":113,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   save_groupPos: Int32,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"save_group_pos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_groupPos` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:113:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_groupPos: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_group_pos`\u001b[0m\n\n"}
{"message":"structure field `save_nextSym` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4004,"byte_end":4016,"line_start":114,"line_end":114,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":" pub   save_nextSym: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4004,"byte_end":4016,"line_start":114,"line_end":114,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":" pub   save_nextSym: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":"save_next_sym","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nextSym` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:114:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_nextSym: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_next_sym`\u001b[0m\n\n"}
{"message":"structure field `save_nblockMAX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4032,"byte_end":4046,"line_start":115,"line_end":115,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":" pub   save_nblockMAX: Int32,","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4032,"byte_end":4046,"line_start":115,"line_end":115,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":" pub   save_nblockMAX: Int32,","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":"save_nblock_max","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_nblockMAX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:115:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_nblockMAX: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_nblock_max`\u001b[0m\n\n"}
{"message":"structure field `save_N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4112,"byte_end":4118,"line_start":118,"line_end":118,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   save_N: Int32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4112,"byte_end":4118,"line_start":118,"line_end":118,"column_start":8,"column_end":14,"is_primary":true,"text":[{"text":" pub   save_N: Int32,","highlight_start":8,"highlight_end":14}],"label":null,"suggested_replacement":"save_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_N` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:118:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_N: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_n`\u001b[0m\n\n"}
{"message":"structure field `save_gSel` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4253,"byte_end":4262,"line_start":124,"line_end":124,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"  pub  save_gSel: Int32,","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4253,"byte_end":4262,"line_start":124,"line_end":124,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"  pub  save_gSel: Int32,","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"save_g_sel","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gSel` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:124:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  pub  save_gSel: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_sel`\u001b[0m\n\n"}
{"message":"structure field `save_gMinlen` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4278,"byte_end":4290,"line_start":125,"line_end":125,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"pub    save_gMinlen: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4278,"byte_end":4290,"line_start":125,"line_end":125,"column_start":8,"column_end":20,"is_primary":true,"text":[{"text":"pub    save_gMinlen: Int32,","highlight_start":8,"highlight_end":20}],"label":null,"suggested_replacement":"save_g_minlen","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gMinlen` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:125:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub    save_gMinlen: Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_minlen`\u001b[0m\n\n"}
{"message":"structure field `save_gLimit` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4306,"byte_end":4317,"line_start":126,"line_end":126,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":" pub   save_gLimit: *mut Int32,","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4306,"byte_end":4317,"line_start":126,"line_end":126,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":" pub   save_gLimit: *mut Int32,","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"save_g_limit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gLimit` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:126:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_gLimit: *mut Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_limit`\u001b[0m\n\n"}
{"message":"structure field `save_gBase` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4338,"byte_end":4348,"line_start":127,"line_end":127,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"pub    save_gBase: *mut Int32,","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4338,"byte_end":4348,"line_start":127,"line_end":127,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"pub    save_gBase: *mut Int32,","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"save_g_base","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gBase` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:127:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub    save_gBase: *mut Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_base`\u001b[0m\n\n"}
{"message":"structure field `save_gPerm` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4369,"byte_end":4379,"line_start":128,"line_end":128,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":" pub   save_gPerm: *mut Int32,","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs","byte_start":4369,"byte_end":4379,"line_start":128,"line_end":128,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":" pub   save_gPerm: *mut Int32,","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"save_g_perm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `save_gPerm` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_2_root_2_BZ2_bzDecompressEnd.rs:128:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   save_gPerm: *mut Int32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `save_g_perm`\u001b[0m\n\n"}
{"message":"structure field `bufN` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":584,"byte_end":588,"line_start":21,"line_end":21,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   bufN: i32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":584,"byte_end":588,"line_start":21,"line_end":21,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":" pub   bufN: i32,","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"buf_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `bufN` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_3_BZ2_bzReadClose.rs:21:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   bufN: i32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `buf_n`\u001b[0m\n\n"}
{"message":"structure field `lastErr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":649,"byte_end":656,"line_start":24,"line_end":24,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   lastErr: i32,","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":649,"byte_end":656,"line_start":24,"line_end":24,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":" pub   lastErr: i32,","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":"last_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `lastErr` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_3_BZ2_bzReadClose.rs:24:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   lastErr: i32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_err`\u001b[0m\n\n"}
{"message":"structure field `initialisedOk` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":670,"byte_end":683,"line_start":25,"line_end":25,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   initialisedOk: bool,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":670,"byte_end":683,"line_start":25,"line_end":25,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":" pub   initialisedOk: bool,","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"initialised_ok","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `initialisedOk` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_3_BZ2_bzReadClose.rs:25:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m pub   initialisedOk: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `initialised_ok`\u001b[0m\n\n"}
{"message":"function `BZ2_bzReadClose` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":783,"byte_end":798,"line_start":30,"line_end":30,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn BZ2_bzReadClose(bzerror: &mut Option<i32>, b: BZFILE) {","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_3_BZ2_bzReadClose.rs","byte_start":783,"byte_end":798,"line_start":30,"line_end":30,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn BZ2_bzReadClose(bzerror: &mut Option<i32>, b: BZFILE) {","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":"bz2_bz_read_close","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `BZ2_bzReadClose` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_3_BZ2_bzReadClose.rs:30:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzReadClose(bzerror: &mut Option<i32>, b: BZFILE) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bz2_bz_read_close`\u001b[0m\n\n"}
{"message":"variable `tTmp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":786,"byte_end":790,"line_start":22,"line_end":22,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"            let mut tTmp = *tt.offset((t >> 8) as isize);","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":786,"byte_end":790,"line_start":22,"line_end":22,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"            let mut tTmp = *tt.offset((t >> 8) as isize);","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"t_tmp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tTmp` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs:22:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut tTmp = *tt.offset((t >> 8) as isize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t_tmp`\u001b[0m\n\n"}
{"message":"comparison is useless due to type limits","code":{"code":"unused_comparisons","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs","byte_start":2811,"byte_end":2842,"line_start":79,"line_end":79,"column_start":20,"column_end":51,"is_primary":true,"text":[{"text":"                if (*(*s).strm).total_out_lo32 < 0 {","highlight_start":20,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_comparisons)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: comparison is useless due to type limits\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_7_unRLE_obuf_to_output_SMALL.rs:79:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if (*(*s).strm).total_out_lo32 < 0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_comparisons)]` on by default\u001b[0m\n\n"}
{"message":"variable `lastErr` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":5383,"byte_end":5390,"line_start":162,"line_end":162,"column_start":41,"column_end":48,"is_primary":true,"text":[{"text":"fn set_error(bzerror: &mut Option<i32>, lastErr: &mut i32, err: i32) {","highlight_start":41,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_73_BZ2_bzWrite.rs","byte_start":5383,"byte_end":5390,"line_start":162,"line_end":162,"column_start":41,"column_end":48,"is_primary":true,"text":[{"text":"fn set_error(bzerror: &mut Option<i32>, lastErr: &mut i32, err: i32) {","highlight_start":41,"highlight_end":48}],"label":null,"suggested_replacement":"last_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `lastErr` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_73_BZ2_bzWrite.rs:162:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn set_error(bzerror: &mut Option<i32>, lastErr: &mut i32, err: i32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_err`\u001b[0m\n\n"}
{"message":"unused return value of `Box::<T>::from_raw` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":2117,"byte_end":2142,"line_start":68,"line_end":68,"column_start":13,"column_end":38,"is_primary":true,"text":[{"text":"            Box::from_raw(bzf.handle);","highlight_start":13,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"call `drop(Box::from_raw(ptr))` if you intend to drop the `Box`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs","byte_start":2117,"byte_end":2117,"line_start":68,"line_end":68,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"            Box::from_raw(bzf.handle);","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused return value of `Box::<T>::from_raw` that must be used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_41_BZ2_bzCompressInit_42_BZ2_bzWriteOpen.rs:68:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Box::from_raw(bzf.handle);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: call `drop(Box::from_raw(ptr))` if you intend to drop the `Box`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mBox::from_raw(bzf.handle);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"function `BZ2_bzCompressEnd` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs","byte_start":76,"byte_end":93,"line_start":3,"line_end":3,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"pub fn BZ2_bzCompressEnd(strm: &mut Option<bz_stream>) -> i32 {","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs","byte_start":76,"byte_end":93,"line_start":3,"line_end":3,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"pub fn BZ2_bzCompressEnd(strm: &mut Option<bz_stream>) -> i32 {","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":"bz2_bz_compress_end","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `BZ2_bzCompressEnd` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_16_root_13_BZ2_bzCompressEnd.rs:3:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn BZ2_bzCompressEnd(strm: &mut Option<bz_stream>) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bz2_bz_compress_end`\u001b[0m\n\n"}
{"message":"function `unRLE_obuf_to_output_FAST` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":215,"byte_end":240,"line_start":11,"line_end":11,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn unRLE_obuf_to_output_FAST(s: &mut DState) {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":215,"byte_end":240,"line_start":11,"line_end":11,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn unRLE_obuf_to_output_FAST(s: &mut DState) {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":"un_rle_obuf_to_output_fast","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `unRLE_obuf_to_output_FAST` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs:11:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn unRLE_obuf_to_output_FAST(s: &mut DState) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `un_rle_obuf_to_output_fast`\u001b[0m\n\n"}
{"message":"comparison is useless due to type limits","code":{"code":"unused_comparisons","explanation":null},"level":"warning","spans":[{"file_name":"src/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs","byte_start":536,"byte_end":542,"line_start":21,"line_end":21,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"    while j >= 0 {","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: comparison is useless due to type limits\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bzlib/scc_8_root_6_unRLE_obuf_to_output_FAST.rs:21:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    while j >= 0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"module `scc_24_compress_root_19_bsFinishWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/mod.rs","byte_start":8,"byte_end":45,"line_start":1,"line_end":1,"column_start":9,"column_end":46,"is_primary":true,"text":[{"text":"pub mod scc_24_compress_root_19_bsFinishWrite;","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/mod.rs","byte_start":8,"byte_end":45,"line_start":1,"line_end":1,"column_start":9,"column_end":46,"is_primary":true,"text":[{"text":"pub mod scc_24_compress_root_19_bsFinishWrite;","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":"scc_24_compress_root_19_bs_finish_write","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_24_compress_root_19_bsFinishWrite` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/mod.rs:1:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_24_compress_root_19_bsFinishWrite;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_24_compress_root_19_bs_finish_write`\u001b[0m\n\n"}
{"message":"module `scc_63_sendMTFValues` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/mod.rs","byte_start":92,"byte_end":112,"line_start":3,"line_end":3,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"pub mod scc_63_sendMTFValues;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/mod.rs","byte_start":92,"byte_end":112,"line_start":3,"line_end":3,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"pub mod scc_63_sendMTFValues;","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"scc_63_send_mtfvalues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_63_sendMTFValues` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/mod.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_63_sendMTFValues;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_63_send_mtfvalues`\u001b[0m\n\n"}
{"message":"module `scc_28_root_21_BZ2_bsInitWrite` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/mod.rs","byte_start":122,"byte_end":152,"line_start":4,"line_end":4,"column_start":9,"column_end":39,"is_primary":true,"text":[{"text":"pub mod scc_28_root_21_BZ2_bsInitWrite;","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/mod.rs","byte_start":122,"byte_end":152,"line_start":4,"line_end":4,"column_start":9,"column_end":39,"is_primary":true,"text":[{"text":"pub mod scc_28_root_21_BZ2_bsInitWrite;","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":"scc_28_root_21_bz2_bs_init_write","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_28_root_21_BZ2_bsInitWrite` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/mod.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_28_root_21_BZ2_bsInitWrite;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_28_root_21_bz2_bs_init_write`\u001b[0m\n\n"}
{"message":"module `scc_18_root_15_makeMaps_e_scc_19_generateMTFValues` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/mod.rs","byte_start":162,"byte_end":212,"line_start":5,"line_end":5,"column_start":9,"column_end":59,"is_primary":true,"text":[{"text":"pub mod scc_18_root_15_makeMaps_e_scc_19_generateMTFValues;","highlight_start":9,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/mod.rs","byte_start":162,"byte_end":212,"line_start":5,"line_end":5,"column_start":9,"column_end":59,"is_primary":true,"text":[{"text":"pub mod scc_18_root_15_makeMaps_e_scc_19_generateMTFValues;","highlight_start":9,"highlight_end":59}],"label":null,"suggested_replacement":"scc_18_root_15_make_maps_e_scc_19_generate_mtfvalues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_18_root_15_makeMaps_e_scc_19_generateMTFValues` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/mod.rs:5:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_18_root_15_makeMaps_e_scc_19_generateMTFValues;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_18_root_15_make_maps_e_scc_19_generate_mtfvalues`\u001b[0m\n\n"}
{"message":"module `scc_20_root_25_bsW` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/mod.rs","byte_start":222,"byte_end":240,"line_start":6,"line_end":6,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub mod scc_20_root_25_bsW;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/mod.rs","byte_start":222,"byte_end":240,"line_start":6,"line_end":6,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"pub mod scc_20_root_25_bsW;","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"scc_20_root_25_bs_w","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_20_root_25_bsW` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/mod.rs:6:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_20_root_25_bsW;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_20_root_25_bs_w`\u001b[0m\n\n"}
{"message":"module `scc_69_BZ2_compressBlock` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/mod.rs","byte_start":250,"byte_end":274,"line_start":7,"line_end":7,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"pub mod scc_69_BZ2_compressBlock;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/mod.rs","byte_start":250,"byte_end":274,"line_start":7,"line_end":7,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"pub mod scc_69_BZ2_compressBlock;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"scc_69_bz2_compress_block","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `scc_69_BZ2_compressBlock` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/mod.rs:7:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod scc_69_BZ2_compressBlock;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `scc_69_bz2_compress_block`\u001b[0m\n\n"}
{"message":"function `sendMTFValues` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":451,"byte_end":464,"line_start":11,"line_end":11,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"pub fn sendMTFValues(s: &mut EState) {","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":451,"byte_end":464,"line_start":11,"line_end":11,"column_start":8,"column_end":21,"is_primary":true,"text":[{"text":"pub fn sendMTFValues(s: &mut EState) {","highlight_start":8,"highlight_end":21}],"label":null,"suggested_replacement":"send_mtfvalues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `sendMTFValues` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:11:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn sendMTFValues(s: &mut EState) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `send_mtfvalues`\u001b[0m\n\n"}
{"message":"variable `nGroups` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":830,"byte_end":837,"line_start":26,"line_end":26,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut nGroups: i32;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_63_sendMTFValues.rs","byte_start":830,"byte_end":837,"line_start":26,"line_end":26,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut nGroups: i32;","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"n_groups","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `nGroups` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_63_sendMTFValues.rs:26:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut nGroups: i32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_groups`\u001b[0m\n\n"}
{"message":"variable `EOB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":1281,"byte_end":1284,"line_start":51,"line_end":51,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let EOB:i32; ","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":1281,"byte_end":1284,"line_start":51,"line_end":51,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let EOB:i32; ","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"eob","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `EOB` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:51:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let EOB:i32; \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `eob`\u001b[0m\n\n"}
{"message":"variable `tempValue` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":2991,"byte_end":3000,"line_start":107,"line_end":107,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                let mut tempValue: u8 = yy[1];","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":2991,"byte_end":3000,"line_start":107,"line_end":107,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"                let mut tempValue: u8 = yy[1];","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":"temp_value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tempValue` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:107:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut tempValue: u8 = yy[1];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `temp_value`\u001b[0m\n\n"}
{"message":"variable `currentPointer` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3069,"byte_end":3083,"line_start":109,"line_end":109,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"                let mut currentPointer: usize = 1;","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3069,"byte_end":3083,"line_start":109,"line_end":109,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"                let mut currentPointer: usize = 1;","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":"current_pointer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `currentPointer` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:109:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut currentPointer: usize = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `current_pointer`\u001b[0m\n\n"}
{"message":"variable `targetValue` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3116,"byte_end":3127,"line_start":110,"line_end":110,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                let targetValue: u8 = ll_i;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3116,"byte_end":3127,"line_start":110,"line_end":110,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                let targetValue: u8 = ll_i;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"target_value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `targetValue` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:110:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m110\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let targetValue: u8 = ll_i;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `target_value`\u001b[0m\n\n"}
{"message":"variable `tempSwap` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3230,"byte_end":3238,"line_start":113,"line_end":113,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"                    let mut tempSwap: u8;","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs","byte_start":3230,"byte_end":3238,"line_start":113,"line_end":113,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"                    let mut tempSwap: u8;","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":"temp_swap","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tempSwap` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/compress/scc_18_root_15_makeMaps_e_scc_19_generateMTFValues.rs:113:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let mut tempSwap: u8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `temp_swap`\u001b[0m\n\n"}
{"message":"533 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 533 warnings emitted\u001b[0m\n\n"}
