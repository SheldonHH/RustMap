{"type": "source_file", "children": [{"type": "line_comment", "children": [], "start_byte": 0, "end_byte": 43, "start_point": [0, 0], "end_point": [0, 43], "text": "// use crate::bzip2::scc_57_root_38_pad::*;"}, {"type": "line_comment", "children": [], "start_byte": 44, "end_byte": 88, "start_point": [1, 0], "end_point": [1, 44], "text": "// use crate::bzip2::scc_55_root_37_open::*;"}, {"type": "line_comment", "children": [], "start_byte": 89, "end_byte": 133, "start_point": [2, 0], "end_point": [2, 44], "text": "// use crate::global_vars::bzip2_c2::{FILE};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 136, "end_byte": 139, "start_point": [5, 0], "end_point": [5, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 140, "end_byte": 143, "start_point": [5, 4], "end_point": [5, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 143, "end_byte": 145, "start_point": [5, 7], "end_point": [5, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 145, "end_byte": 147, "start_point": [5, 9], "end_point": [5, 11], "text": "fs"}], "start_byte": 140, "end_byte": 147, "start_point": [5, 4], "end_point": [5, 11], "text": "std::fs"}, {"type": "::", "children": [], "start_byte": 147, "end_byte": 149, "start_point": [5, 11], "end_point": [5, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 149, "end_byte": 160, "start_point": [5, 13], "end_point": [5, 24], "text": "OpenOptions"}], "start_byte": 140, "end_byte": 160, "start_point": [5, 4], "end_point": [5, 24], "text": "std::fs::OpenOptions"}, {"type": ";", "children": [], "start_byte": 160, "end_byte": 161, "start_point": [5, 24], "end_point": [5, 25], "text": ";"}], "start_byte": 136, "end_byte": 161, "start_point": [5, 0], "end_point": [5, 25], "text": "use std::fs::OpenOptions;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 162, "end_byte": 165, "start_point": [6, 0], "end_point": [6, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 166, "end_byte": 169, "start_point": [6, 4], "end_point": [6, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 169, "end_byte": 171, "start_point": [6, 7], "end_point": [6, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 171, "end_byte": 173, "start_point": [6, 9], "end_point": [6, 11], "text": "io"}], "start_byte": 166, "end_byte": 173, "start_point": [6, 4], "end_point": [6, 11], "text": "std::io"}, {"type": "::", "children": [], "start_byte": 173, "end_byte": 175, "start_point": [6, 11], "end_point": [6, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 175, "end_byte": 182, "start_point": [6, 13], "end_point": [6, 20], "text": "prelude"}], "start_byte": 166, "end_byte": 182, "start_point": [6, 4], "end_point": [6, 20], "text": "std::io::prelude"}, {"type": "::", "children": [], "start_byte": 182, "end_byte": 184, "start_point": [6, 20], "end_point": [6, 22], "text": "::"}, {"type": "*", "children": [], "start_byte": 184, "end_byte": 185, "start_point": [6, 22], "end_point": [6, 23], "text": "*"}], "start_byte": 166, "end_byte": 185, "start_point": [6, 4], "end_point": [6, 23], "text": "std::io::prelude::*"}, {"type": ";", "children": [], "start_byte": 185, "end_byte": 186, "start_point": [6, 23], "end_point": [6, 24], "text": ";"}], "start_byte": 162, "end_byte": 186, "start_point": [6, 0], "end_point": [6, 24], "text": "use std::io::prelude::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 187, "end_byte": 190, "start_point": [7, 0], "end_point": [7, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 191, "end_byte": 194, "start_point": [7, 4], "end_point": [7, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 194, "end_byte": 196, "start_point": [7, 7], "end_point": [7, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 196, "end_byte": 198, "start_point": [7, 9], "end_point": [7, 11], "text": "os"}], "start_byte": 191, "end_byte": 198, "start_point": [7, 4], "end_point": [7, 11], "text": "std::os"}, {"type": "::", "children": [], "start_byte": 198, "end_byte": 200, "start_point": [7, 11], "end_point": [7, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 200, "end_byte": 204, "start_point": [7, 13], "end_point": [7, 17], "text": "unix"}], "start_byte": 191, "end_byte": 204, "start_point": [7, 4], "end_point": [7, 17], "text": "std::os::unix"}, {"type": "::", "children": [], "start_byte": 204, "end_byte": 206, "start_point": [7, 17], "end_point": [7, 19], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 206, "end_byte": 208, "start_point": [7, 19], "end_point": [7, 21], "text": "io"}], "start_byte": 191, "end_byte": 208, "start_point": [7, 4], "end_point": [7, 21], "text": "std::os::unix::io"}, {"type": "::", "children": [], "start_byte": 208, "end_byte": 210, "start_point": [7, 21], "end_point": [7, 23], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 210, "end_byte": 211, "start_point": [7, 23], "end_point": [7, 24], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 211, "end_byte": 220, "start_point": [7, 24], "end_point": [7, 33], "text": "FromRawFd"}, {"type": ",", "children": [], "start_byte": 220, "end_byte": 221, "start_point": [7, 33], "end_point": [7, 34], "text": ","}, {"type": "identifier", "children": [], "start_byte": 222, "end_byte": 231, "start_point": [7, 35], "end_point": [7, 44], "text": "IntoRawFd"}, {"type": "}", "children": [], "start_byte": 231, "end_byte": 232, "start_point": [7, 44], "end_point": [7, 45], "text": "}"}], "start_byte": 210, "end_byte": 232, "start_point": [7, 23], "end_point": [7, 45], "text": "{FromRawFd, IntoRawFd}"}], "start_byte": 191, "end_byte": 232, "start_point": [7, 4], "end_point": [7, 45], "text": "std::os::unix::io::{FromRawFd, IntoRawFd}"}, {"type": ";", "children": [], "start_byte": 232, "end_byte": 233, "start_point": [7, 45], "end_point": [7, 46], "text": ";"}], "start_byte": 187, "end_byte": 233, "start_point": [7, 0], "end_point": [7, 46], "text": "use std::os::unix::io::{FromRawFd, IntoRawFd};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 234, "end_byte": 237, "start_point": [8, 0], "end_point": [8, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 238, "end_byte": 241, "start_point": [8, 4], "end_point": [8, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 241, "end_byte": 243, "start_point": [8, 7], "end_point": [8, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 243, "end_byte": 250, "start_point": [8, 9], "end_point": [8, 16], "text": "process"}], "start_byte": 238, "end_byte": 250, "start_point": [8, 4], "end_point": [8, 16], "text": "std::process"}, {"type": "::", "children": [], "start_byte": 250, "end_byte": 252, "start_point": [8, 16], "end_point": [8, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 252, "end_byte": 259, "start_point": [8, 18], "end_point": [8, 25], "text": "Command"}], "start_byte": 238, "end_byte": 259, "start_point": [8, 4], "end_point": [8, 25], "text": "std::process::Command"}, {"type": ";", "children": [], "start_byte": 259, "end_byte": 260, "start_point": [8, 25], "end_point": [8, 26], "text": ";"}], "start_byte": 234, "end_byte": 260, "start_point": [8, 0], "end_point": [8, 26], "text": "use std::process::Command;"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 262, "end_byte": 265, "start_point": [10, 0], "end_point": [10, 3], "text": "pub"}], "start_byte": 262, "end_byte": 265, "start_point": [10, 0], "end_point": [10, 3], "text": "pub"}, {"type": "fn", "children": [], "start_byte": 266, "end_byte": 268, "start_point": [10, 4], "end_point": [10, 6], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 269, "end_byte": 288, "start_point": [10, 7], "end_point": [10, 26], "text": "fopen_output_safely"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 288, "end_byte": 289, "start_point": [10, 26], "end_point": [10, 27], "text": "("}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 289, "end_byte": 293, "start_point": [10, 27], "end_point": [10, 31], "text": "name"}, {"type": ":", "children": [], "start_byte": 293, "end_byte": 294, "start_point": [10, 31], "end_point": [10, 32], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 295, "end_byte": 296, "start_point": [10, 33], "end_point": [10, 34], "text": "&"}, {"type": "primitive_type", "children": [], "start_byte": 296, "end_byte": 299, "start_point": [10, 34], "end_point": [10, 37], "text": "str"}], "start_byte": 295, "end_byte": 299, "start_point": [10, 33], "end_point": [10, 37], "text": "&str"}], "start_byte": 289, "end_byte": 299, "start_point": [10, 27], "end_point": [10, 37], "text": "name: &str"}, {"type": ",", "children": [], "start_byte": 299, "end_byte": 300, "start_point": [10, 37], "end_point": [10, 38], "text": ","}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 301, "end_byte": 305, "start_point": [10, 39], "end_point": [10, 43], "text": "mode"}, {"type": ":", "children": [], "start_byte": 305, "end_byte": 306, "start_point": [10, 43], "end_point": [10, 44], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 307, "end_byte": 308, "start_point": [10, 45], "end_point": [10, 46], "text": "&"}, {"type": "primitive_type", "children": [], "start_byte": 308, "end_byte": 311, "start_point": [10, 46], "end_point": [10, 49], "text": "str"}], "start_byte": 307, "end_byte": 311, "start_point": [10, 45], "end_point": [10, 49], "text": "&str"}], "start_byte": 301, "end_byte": 311, "start_point": [10, 39], "end_point": [10, 49], "text": "mode: &str"}, {"type": ")", "children": [], "start_byte": 311, "end_byte": 312, "start_point": [10, 49], "end_point": [10, 50], "text": ")"}], "start_byte": 288, "end_byte": 312, "start_point": [10, 26], "end_point": [10, 50], "text": "(name: &str, mode: &str)"}, {"type": "->", "children": [], "start_byte": 313, "end_byte": 315, "start_point": [10, 51], "end_point": [10, 53], "text": "->"}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 316, "end_byte": 322, "start_point": [10, 54], "end_point": [10, 60], "text": "Option"}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 322, "end_byte": 323, "start_point": [10, 60], "end_point": [10, 61], "text": "<"}, {"type": "scoped_type_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 323, "end_byte": 326, "start_point": [10, 61], "end_point": [10, 64], "text": "std"}, {"type": "::", "children": [], "start_byte": 326, "end_byte": 328, "start_point": [10, 64], "end_point": [10, 66], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 328, "end_byte": 330, "start_point": [10, 66], "end_point": [10, 68], "text": "fs"}], "start_byte": 323, "end_byte": 330, "start_point": [10, 61], "end_point": [10, 68], "text": "std::fs"}, {"type": "::", "children": [], "start_byte": 330, "end_byte": 332, "start_point": [10, 68], "end_point": [10, 70], "text": "::"}, {"type": "type_identifier", "children": [], "start_byte": 332, "end_byte": 336, "start_point": [10, 70], "end_point": [10, 74], "text": "File"}], "start_byte": 323, "end_byte": 336, "start_point": [10, 61], "end_point": [10, 74], "text": "std::fs::File"}, {"type": ">", "children": [], "start_byte": 336, "end_byte": 337, "start_point": [10, 74], "end_point": [10, 75], "text": ">"}], "start_byte": 322, "end_byte": 337, "start_point": [10, 60], "end_point": [10, 75], "text": "<std::fs::File>"}], "start_byte": 316, "end_byte": 337, "start_point": [10, 54], "end_point": [10, 75], "text": "Option<std::fs::File>"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 338, "end_byte": 339, "start_point": [10, 76], "end_point": [10, 77], "text": "{"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 344, "end_byte": 346, "start_point": [11, 4], "end_point": [11, 6], "text": "if"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 347, "end_byte": 351, "start_point": [11, 7], "end_point": [11, 11], "text": "mode"}, {"type": "!=", "children": [], "start_byte": 352, "end_byte": 354, "start_point": [11, 12], "end_point": [11, 14], "text": "!="}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 355, "end_byte": 356, "start_point": [11, 15], "end_point": [11, 16], "text": "\""}, {"type": "\"", "children": [], "start_byte": 357, "end_byte": 358, "start_point": [11, 17], "end_point": [11, 18], "text": "\""}], "start_byte": 355, "end_byte": 358, "start_point": [11, 15], "end_point": [11, 18], "text": "\"w\""}], "start_byte": 347, "end_byte": 358, "start_point": [11, 7], "end_point": [11, 18], "text": "mode != \"w\""}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 359, "end_byte": 360, "start_point": [11, 19], "end_point": [11, 20], "text": "{"}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 369, "end_byte": 375, "start_point": [12, 8], "end_point": [12, 14], "text": "return"}, {"type": "identifier", "children": [], "start_byte": 376, "end_byte": 380, "start_point": [12, 15], "end_point": [12, 19], "text": "None"}], "start_byte": 369, "end_byte": 380, "start_point": [12, 8], "end_point": [12, 19], "text": "return None"}, {"type": ";", "children": [], "start_byte": 380, "end_byte": 381, "start_point": [12, 19], "end_point": [12, 20], "text": ";"}], "start_byte": 369, "end_byte": 381, "start_point": [12, 8], "end_point": [12, 20], "text": "return None;"}, {"type": "}", "children": [], "start_byte": 386, "end_byte": 387, "start_point": [13, 4], "end_point": [13, 5], "text": "}"}], "start_byte": 359, "end_byte": 387, "start_point": [11, 19], "end_point": [13, 5], "text": "{\n        return None;\n    }"}], "start_byte": 344, "end_byte": 387, "start_point": [11, 4], "end_point": [13, 5], "text": "if mode != \"w\" {\n        return None;\n    }"}], "start_byte": 344, "end_byte": 387, "start_point": [11, 4], "end_point": [13, 5], "text": "if mode != \"w\" {\n        return None;\n    }"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 393, "end_byte": 396, "start_point": [15, 4], "end_point": [15, 7], "text": "let"}, {"type": "identifier", "children": [], "start_byte": 397, "end_byte": 401, "start_point": [15, 8], "end_point": [15, 12], "text": "file"}, {"type": "=", "children": [], "start_byte": 402, "end_byte": 403, "start_point": [15, 13], "end_point": [15, 14], "text": "="}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 404, "end_byte": 415, "start_point": [15, 15], "end_point": [15, 26], "text": "OpenOptions"}, {"type": "::", "children": [], "start_byte": 415, "end_byte": 417, "start_point": [15, 26], "end_point": [15, 28], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 417, "end_byte": 420, "start_point": [15, 28], "end_point": [15, 31], "text": "new"}], "start_byte": 404, "end_byte": 420, "start_point": [15, 15], "end_point": [15, 31], "text": "OpenOptions::new"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 420, "end_byte": 421, "start_point": [15, 31], "end_point": [15, 32], "text": "("}, {"type": ")", "children": [], "start_byte": 421, "end_byte": 422, "start_point": [15, 32], "end_point": [15, 33], "text": ")"}], "start_byte": 420, "end_byte": 422, "start_point": [15, 31], "end_point": [15, 33], "text": "()"}], "start_byte": 404, "end_byte": 422, "start_point": [15, 15], "end_point": [15, 33], "text": "OpenOptions::new()"}, {"type": ".", "children": [], "start_byte": 431, "end_byte": 432, "start_point": [16, 8], "end_point": [16, 9], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 432, "end_byte": 436, "start_point": [16, 9], "end_point": [16, 13], "text": "read"}], "start_byte": 404, "end_byte": 436, "start_point": [15, 15], "end_point": [16, 13], "text": "OpenOptions::new()\n        .read"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 436, "end_byte": 437, "start_point": [16, 13], "end_point": [16, 14], "text": "("}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 437, "end_byte": 441, "start_point": [16, 14], "end_point": [16, 18], "text": "true"}], "start_byte": 437, "end_byte": 441, "start_point": [16, 14], "end_point": [16, 18], "text": "true"}, {"type": ")", "children": [], "start_byte": 441, "end_byte": 442, "start_point": [16, 18], "end_point": [16, 19], "text": ")"}], "start_byte": 436, "end_byte": 442, "start_point": [16, 13], "end_point": [16, 19], "text": "(true)"}], "start_byte": 404, "end_byte": 442, "start_point": [15, 15], "end_point": [16, 19], "text": "OpenOptions::new()\n        .read(true)"}, {"type": ".", "children": [], "start_byte": 451, "end_byte": 452, "start_point": [17, 8], "end_point": [17, 9], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 452, "end_byte": 457, "start_point": [17, 9], "end_point": [17, 14], "text": "write"}], "start_byte": 404, "end_byte": 457, "start_point": [15, 15], "end_point": [17, 14], "text": "OpenOptions::new()\n        .read(true)\n        .write"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 457, "end_byte": 458, "start_point": [17, 14], "end_point": [17, 15], "text": "("}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 458, "end_byte": 462, "start_point": [17, 15], "end_point": [17, 19], "text": "true"}], "start_byte": 458, "end_byte": 462, "start_point": [17, 15], "end_point": [17, 19], "text": "true"}, {"type": ")", "children": [], "start_byte": 462, "end_byte": 463, "start_point": [17, 19], "end_point": [17, 20], "text": ")"}], "start_byte": 457, "end_byte": 463, "start_point": [17, 14], "end_point": [17, 20], "text": "(true)"}], "start_byte": 404, "end_byte": 463, "start_point": [15, 15], "end_point": [17, 20], "text": "OpenOptions::new()\n        .read(true)\n        .write(true)"}, {"type": ".", "children": [], "start_byte": 472, "end_byte": 473, "start_point": [18, 8], "end_point": [18, 9], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 473, "end_byte": 479, "start_point": [18, 9], "end_point": [18, 15], "text": "create"}], "start_byte": 404, "end_byte": 479, "start_point": [15, 15], "end_point": [18, 15], "text": "OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 479, "end_byte": 480, "start_point": [18, 15], "end_point": [18, 16], "text": "("}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 480, "end_byte": 484, "start_point": [18, 16], "end_point": [18, 20], "text": "true"}], "start_byte": 480, "end_byte": 484, "start_point": [18, 16], "end_point": [18, 20], "text": "true"}, {"type": ")", "children": [], "start_byte": 484, "end_byte": 485, "start_point": [18, 20], "end_point": [18, 21], "text": ")"}], "start_byte": 479, "end_byte": 485, "start_point": [18, 15], "end_point": [18, 21], "text": "(true)"}], "start_byte": 404, "end_byte": 485, "start_point": [15, 15], "end_point": [18, 21], "text": "OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)"}, {"type": ".", "children": [], "start_byte": 494, "end_byte": 495, "start_point": [19, 8], "end_point": [19, 9], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 495, "end_byte": 499, "start_point": [19, 9], "end_point": [19, 13], "text": "open"}], "start_byte": 404, "end_byte": 499, "start_point": [15, 15], "end_point": [19, 13], "text": "OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 499, "end_byte": 500, "start_point": [19, 13], "end_point": [19, 14], "text": "("}, {"type": "identifier", "children": [], "start_byte": 500, "end_byte": 504, "start_point": [19, 14], "end_point": [19, 18], "text": "name"}, {"type": ")", "children": [], "start_byte": 504, "end_byte": 505, "start_point": [19, 18], "end_point": [19, 19], "text": ")"}], "start_byte": 499, "end_byte": 505, "start_point": [19, 13], "end_point": [19, 19], "text": "(name)"}], "start_byte": 404, "end_byte": 505, "start_point": [15, 15], "end_point": [19, 19], "text": "OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(name)"}, {"type": ";", "children": [], "start_byte": 505, "end_byte": 506, "start_point": [19, 19], "end_point": [19, 20], "text": ";"}], "start_byte": 393, "end_byte": 506, "start_point": [15, 4], "end_point": [19, 20], "text": "let file = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(name);"}, {"type": "expression_statement", "children": [{"type": "match_expression", "children": [{"type": "match", "children": [], "start_byte": 512, "end_byte": 517, "start_point": [21, 4], "end_point": [21, 9], "text": "match"}, {"type": "identifier", "children": [], "start_byte": 518, "end_byte": 522, "start_point": [21, 10], "end_point": [21, 14], "text": "file"}, {"type": "match_block", "children": [{"type": "{", "children": [], "start_byte": 523, "end_byte": 524, "start_point": [21, 15], "end_point": [21, 16], "text": "{"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 533, "end_byte": 535, "start_point": [22, 8], "end_point": [22, 10], "text": "Ok"}, {"type": "(", "children": [], "start_byte": 535, "end_byte": 536, "start_point": [22, 10], "end_point": [22, 11], "text": "("}, {"type": "identifier", "children": [], "start_byte": 536, "end_byte": 537, "start_point": [22, 11], "end_point": [22, 12], "text": "f"}, {"type": ")", "children": [], "start_byte": 537, "end_byte": 538, "start_point": [22, 12], "end_point": [22, 13], "text": ")"}], "start_byte": 533, "end_byte": 538, "start_point": [22, 8], "end_point": [22, 13], "text": "Ok(f)"}], "start_byte": 533, "end_byte": 538, "start_point": [22, 8], "end_point": [22, 13], "text": "Ok(f)"}, {"type": "=>", "children": [], "start_byte": 539, "end_byte": 541, "start_point": [22, 14], "end_point": [22, 16], "text": "=>"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 542, "end_byte": 546, "start_point": [22, 17], "end_point": [22, 21], "text": "Some"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 546, "end_byte": 547, "start_point": [22, 21], "end_point": [22, 22], "text": "("}, {"type": "identifier", "children": [], "start_byte": 547, "end_byte": 548, "start_point": [22, 22], "end_point": [22, 23], "text": "f"}, {"type": ")", "children": [], "start_byte": 548, "end_byte": 549, "start_point": [22, 23], "end_point": [22, 24], "text": ")"}], "start_byte": 546, "end_byte": 549, "start_point": [22, 21], "end_point": [22, 24], "text": "(f)"}], "start_byte": 542, "end_byte": 549, "start_point": [22, 17], "end_point": [22, 24], "text": "Some(f)"}, {"type": ",", "children": [], "start_byte": 549, "end_byte": 550, "start_point": [22, 24], "end_point": [22, 25], "text": ","}], "start_byte": 533, "end_byte": 550, "start_point": [22, 8], "end_point": [22, 25], "text": "Ok(f) => Some(f),"}, {"type": "match_arm", "children": [{"type": "match_pattern", "children": [{"type": "tuple_struct_pattern", "children": [{"type": "identifier", "children": [], "start_byte": 559, "end_byte": 562, "start_point": [23, 8], "end_point": [23, 11], "text": "Err"}, {"type": "(", "children": [], "start_byte": 562, "end_byte": 563, "start_point": [23, 11], "end_point": [23, 12], "text": "("}, {"type": "_", "children": [], "start_byte": 563, "end_byte": 564, "start_point": [23, 12], "end_point": [23, 13], "text": "_"}, {"type": ")", "children": [], "start_byte": 564, "end_byte": 565, "start_point": [23, 13], "end_point": [23, 14], "text": ")"}], "start_byte": 559, "end_byte": 565, "start_point": [23, 8], "end_point": [23, 14], "text": "Err(_)"}], "start_byte": 559, "end_byte": 565, "start_point": [23, 8], "end_point": [23, 14], "text": "Err(_)"}, {"type": "=>", "children": [], "start_byte": 566, "end_byte": 568, "start_point": [23, 15], "end_point": [23, 17], "text": "=>"}, {"type": "identifier", "children": [], "start_byte": 569, "end_byte": 573, "start_point": [23, 18], "end_point": [23, 22], "text": "None"}, {"type": ",", "children": [], "start_byte": 573, "end_byte": 574, "start_point": [23, 22], "end_point": [23, 23], "text": ","}], "start_byte": 559, "end_byte": 574, "start_point": [23, 8], "end_point": [23, 23], "text": "Err(_) => None,"}, {"type": "}", "children": [], "start_byte": 579, "end_byte": 580, "start_point": [24, 4], "end_point": [24, 5], "text": "}"}], "start_byte": 523, "end_byte": 580, "start_point": [21, 15], "end_point": [24, 5], "text": "{\n        Ok(f) => Some(f),\n        Err(_) => None,\n    }"}], "start_byte": 512, "end_byte": 580, "start_point": [21, 4], "end_point": [24, 5], "text": "match file {\n        Ok(f) => Some(f),\n        Err(_) => None,\n    }"}], "start_byte": 512, "end_byte": 580, "start_point": [21, 4], "end_point": [24, 5], "text": "match file {\n        Ok(f) => Some(f),\n        Err(_) => None,\n    }"}, {"type": "}", "children": [], "start_byte": 581, "end_byte": 582, "start_point": [25, 0], "end_point": [25, 1], "text": "}"}], "start_byte": 338, "end_byte": 582, "start_point": [10, 76], "end_point": [25, 1], "text": "{\n    if mode != \"w\" {\n        return None;\n    }\n\n    let file = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(name);\n\n    match file {\n        Ok(f) => Some(f),\n        Err(_) => None,\n    }\n}"}], "start_byte": 262, "end_byte": 582, "start_point": [10, 0], "end_point": [25, 1], "text": "pub fn fopen_output_safely(name: &str, mode: &str) -> Option<std::fs::File> {\n    if mode != \"w\" {\n        return None;\n    }\n\n    let file = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(name);\n\n    match file {\n        Ok(f) => Some(f),\n        Err(_) => None,\n    }\n}"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 584, "end_byte": 585, "start_point": [27, 0], "end_point": [27, 1], "text": "#"}, {"type": "[", "children": [], "start_byte": 585, "end_byte": 586, "start_point": [27, 1], "end_point": [27, 2], "text": "["}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 586, "end_byte": 589, "start_point": [27, 2], "end_point": [27, 5], "text": "cfg"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 589, "end_byte": 590, "start_point": [27, 5], "end_point": [27, 6], "text": "("}, {"type": "identifier", "children": [], "start_byte": 590, "end_byte": 594, "start_point": [27, 6], "end_point": [27, 10], "text": "test"}, {"type": ")", "children": [], "start_byte": 594, "end_byte": 595, "start_point": [27, 10], "end_point": [27, 11], "text": ")"}], "start_byte": 589, "end_byte": 595, "start_point": [27, 5], "end_point": [27, 11], "text": "(test)"}], "start_byte": 586, "end_byte": 595, "start_point": [27, 2], "end_point": [27, 11], "text": "cfg(test)"}, {"type": "]", "children": [], "start_byte": 595, "end_byte": 596, "start_point": [27, 11], "end_point": [27, 12], "text": "]"}], "start_byte": 584, "end_byte": 596, "start_point": [27, 0], "end_point": [27, 12], "text": "#[cfg(test)]"}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 597, "end_byte": 600, "start_point": [28, 0], "end_point": [28, 3], "text": "mod"}, {"type": "identifier", "children": [], "start_byte": 601, "end_byte": 606, "start_point": [28, 4], "end_point": [28, 9], "text": "tests"}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 607, "end_byte": 608, "start_point": [28, 10], "end_point": [28, 11], "text": "{"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 613, "end_byte": 616, "start_point": [29, 4], "end_point": [29, 7], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 617, "end_byte": 622, "start_point": [29, 8], "end_point": [29, 13], "text": "super"}, {"type": "::", "children": [], "start_byte": 622, "end_byte": 624, "start_point": [29, 13], "end_point": [29, 15], "text": "::"}, {"type": "*", "children": [], "start_byte": 624, "end_byte": 625, "start_point": [29, 15], "end_point": [29, 16], "text": "*"}], "start_byte": 617, "end_byte": 625, "start_point": [29, 8], "end_point": [29, 16], "text": "super::*"}, {"type": ";", "children": [], "start_byte": 625, "end_byte": 626, "start_point": [29, 16], "end_point": [29, 17], "text": ";"}], "start_byte": 613, "end_byte": 626, "start_point": [29, 4], "end_point": [29, 17], "text": "use super::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 631, "end_byte": 634, "start_point": [30, 4], "end_point": [30, 7], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 635, "end_byte": 638, "start_point": [30, 8], "end_point": [30, 11], "text": "std"}, {"type": "::", "children": [], "start_byte": 638, "end_byte": 640, "start_point": [30, 11], "end_point": [30, 13], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 640, "end_byte": 642, "start_point": [30, 13], "end_point": [30, 15], "text": "fs"}], "start_byte": 635, "end_byte": 642, "start_point": [30, 8], "end_point": [30, 15], "text": "std::fs"}, {"type": ";", "children": [], "start_byte": 642, "end_byte": 643, "start_point": [30, 15], "end_point": [30, 16], "text": ";"}], "start_byte": 631, "end_byte": 643, "start_point": [30, 4], "end_point": [30, 16], "text": "use std::fs;"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 649, "end_byte": 650, "start_point": [32, 4], "end_point": [32, 5], "text": "#"}, {"type": "[", "children": [], "start_byte": 650, "end_byte": 651, "start_point": [32, 5], "end_point": [32, 6], "text": "["}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 651, "end_byte": 655, "start_point": [32, 6], "end_point": [32, 10], "text": "test"}], "start_byte": 651, "end_byte": 655, "start_point": [32, 6], "end_point": [32, 10], "text": "test"}, {"type": "]", "children": [], "start_byte": 655, "end_byte": 656, "start_point": [32, 10], "end_point": [32, 11], "text": "]"}], "start_byte": 649, "end_byte": 656, "start_point": [32, 4], "end_point": [32, 11], "text": "#[test]"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 661, "end_byte": 663, "start_point": [33, 4], "end_point": [33, 6], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 664, "end_byte": 688, "start_point": [33, 7], "end_point": [33, 31], "text": "test_fopen_output_safely"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 688, "end_byte": 689, "start_point": [33, 31], "end_point": [33, 32], "text": "("}, {"type": ")", "children": [], "start_byte": 689, "end_byte": 690, "start_point": [33, 32], "end_point": [33, 33], "text": ")"}], "start_byte": 688, "end_byte": 690, "start_point": [33, 31], "end_point": [33, 33], "text": "()"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 691, "end_byte": 692, "start_point": [33, 34], "end_point": [33, 35], "text": "{"}, {"type": "line_comment", "children": [], "start_byte": 701, "end_byte": 745, "start_point": [34, 8], "end_point": [34, 52], "text": "// \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u521b\u5efa\u4e00\u4e2atest.txt\n        let _output ="}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 754, "end_byte": 757, "start_point": [35, 8], "end_point": [35, 11], "text": ":ne"}, {"type": "identifier", "children": [], "start_byte": 758, "end_byte": 765, "start_point": [35, 12], "end_point": [35, 19], "text": "(\"touch"}, {"type": "=", "children": [], "start_byte": 766, "end_byte": 767, "start_point": [35, 20], "end_point": [35, 21], "text": ")"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 768, "end_byte": 775, "start_point": [35, 22], "end_point": [35, 29], "text": "arg(\"te"}, {"type": "::", "children": [], "start_byte": 775, "end_byte": 777, "start_point": [35, 29], "end_point": [35, 31], "text": "st"}, {"type": "identifier", "children": [], "start_byte": 777, "end_byte": 780, "start_point": [35, 31], "end_point": [35, 34], "text": ".tx"}], "start_byte": 768, "end_byte": 780, "start_point": [35, 22], "end_point": [35, 34], "text": "arg(\"test.tx"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 780, "end_byte": 781, "start_point": [35, 34], "end_point": [35, 35], "text": "t"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 781, "end_byte": 782, "start_point": [35, 35], "end_point": [35, 36], "text": "\""}, {"type": "\"", "children": [], "start_byte": 787, "end_byte": 788, "start_point": [35, 41], "end_point": [35, 42], "text": "p"}], "start_byte": 781, "end_byte": 788, "start_point": [35, 35], "end_point": [35, 42], "text": "\").outp"}, {"type": ")", "children": [], "start_byte": 788, "end_byte": 789, "start_point": [35, 42], "end_point": [35, 43], "text": "u"}], "start_byte": 780, "end_byte": 789, "start_point": [35, 34], "end_point": [35, 43], "text": "t\").outpu"}], "start_byte": 768, "end_byte": 789, "start_point": [35, 22], "end_point": [35, 43], "text": "arg(\"test.txt\").outpu"}, {"type": ".", "children": [], "start_byte": 789, "end_byte": 790, "start_point": [35, 43], "end_point": [35, 44], "text": "t"}, {"type": "field_identifier", "children": [], "start_byte": 790, "end_byte": 793, "start_point": [35, 44], "end_point": [35, 47], "text": "()."}], "start_byte": 768, "end_byte": 793, "start_point": [35, 22], "end_point": [35, 47], "text": "arg(\"test.txt\").output()."}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 793, "end_byte": 794, "start_point": [35, 47], "end_point": [35, 48], "text": "e"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 794, "end_byte": 795, "start_point": [35, 48], "end_point": [35, 49], "text": "x"}, {"type": "\"", "children": [], "start_byte": 803, "end_byte": 804, "start_point": [35, 57], "end_point": [35, 58], "text": "i"}], "start_byte": 794, "end_byte": 804, "start_point": [35, 48], "end_point": [35, 58], "text": "xpect(\"Fai"}, {"type": ")", "children": [], "start_byte": 804, "end_byte": 805, "start_point": [35, 58], "end_point": [35, 59], "text": "l"}], "start_byte": 793, "end_byte": 805, "start_point": [35, 47], "end_point": [35, 59], "text": "expect(\"Fail"}], "start_byte": 768, "end_byte": 805, "start_point": [35, 22], "end_point": [35, 59], "text": "arg(\"test.txt\").output().expect(\"Fail"}, {"type": ".", "children": [], "start_byte": 805, "end_byte": 806, "start_point": [35, 59], "end_point": [35, 60], "text": "e"}, {"type": "field_identifier", "children": [], "start_byte": 806, "end_byte": 812, "start_point": [35, 60], "end_point": [35, 66], "text": "d to c"}], "start_byte": 768, "end_byte": 812, "start_point": [35, 22], "end_point": [35, 66], "text": "arg(\"test.txt\").output().expect(\"Failed to c"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 812, "end_byte": 813, "start_point": [35, 66], "end_point": [35, 67], "text": "r"}, {"type": ")", "children": [], "start_byte": 813, "end_byte": 814, "start_point": [35, 67], "end_point": [35, 68], "text": "e"}], "start_byte": 812, "end_byte": 814, "start_point": [35, 66], "end_point": [35, 68], "text": "re"}], "start_byte": 768, "end_byte": 814, "start_point": [35, 22], "end_point": [35, 68], "text": "arg(\"test.txt\").output().expect(\"Failed to cre"}, {"type": ".", "children": [], "start_byte": 814, "end_byte": 815, "start_point": [35, 68], "end_point": [35, 69], "text": "a"}, {"type": "field_identifier", "children": [], "start_byte": 815, "end_byte": 821, "start_point": [35, 69], "end_point": [35, 75], "text": "te tes"}], "start_byte": 768, "end_byte": 821, "start_point": [35, 22], "end_point": [35, 75], "text": "arg(\"test.txt\").output().expect(\"Failed to create tes"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 821, "end_byte": 822, "start_point": [35, 75], "end_point": [35, 76], "text": "t"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 822, "end_byte": 823, "start_point": [35, 76], "end_point": [35, 77], "text": "."}, {"type": "\"", "children": [], "start_byte": 860, "end_byte": 861, "start_point": [35, 114], "end_point": [35, 115], "text": "n"}], "start_byte": 822, "end_byte": 861, "start_point": [35, 76], "end_point": [35, 115], "text": ".txt using touch\");\n\n        // \u4f7f\u7528fopen"}, {"type": ")", "children": [], "start_byte": 861, "end_byte": 862, "start_point": [35, 115], "end_point": [35, 116], "text": "_"}], "start_byte": 821, "end_byte": 862, "start_point": [35, 75], "end_point": [35, 116], "text": "t.txt using touch\");\n\n        // \u4f7f\u7528fopen_"}], "start_byte": 768, "end_byte": 862, "start_point": [35, 22], "end_point": [35, 116], "text": "arg(\"test.txt\").output().expect(\"Failed to create test.txt using touch\");\n\n        // \u4f7f\u7528fopen_"}, {"type": ";", "children": [], "start_byte": 862, "end_byte": 863, "start_point": [35, 116], "end_point": [35, 117], "text": "o"}], "start_byte": 754, "end_byte": 863, "start_point": [35, 8], "end_point": [35, 117], "text": ":new(\"touch\").arg(\"test.txt\").output().expect(\"Failed to create test.txt using touch\");\n\n        // \u4f7f\u7528fopen_o"}, {"type": "line_comment", "children": [], "start_byte": 873, "end_byte": 913, "start_point": [37, 8], "end_point": [37, 48], "text": "ly\u6253\u5f00\u6587\u4ef6\n        let file = fopen_output_s"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 922, "end_byte": 925, "start_point": [38, 8], "end_point": [38, 11], "text": "st."}, {"type": "identifier", "children": [], "start_byte": 926, "end_byte": 930, "start_point": [38, 12], "end_point": [38, 16], "text": "xt\","}, {"type": "=", "children": [], "start_byte": 931, "end_byte": 932, "start_point": [38, 17], "end_point": [38, 18], "text": "\""}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 933, "end_byte": 952, "start_point": [38, 19], "end_point": [38, 38], "text": "\");\n        assert!"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 952, "end_byte": 953, "start_point": [38, 38], "end_point": [38, 39], "text": "("}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 953, "end_byte": 954, "start_point": [38, 39], "end_point": [38, 40], "text": "f"}, {"type": "\"", "children": [], "start_byte": 962, "end_byte": 963, "start_point": [38, 48], "end_point": [38, 49], "text": "o"}], "start_byte": 953, "end_byte": 963, "start_point": [38, 39], "end_point": [38, 49], "text": "file.is_so"}, {"type": ",", "children": [], "start_byte": 963, "end_byte": 964, "start_point": [38, 49], "end_point": [38, 50], "text": "m"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 965, "end_byte": 966, "start_point": [38, 51], "end_point": [38, 52], "text": "("}, {"type": "\"", "children": [], "start_byte": 967, "end_byte": 968, "start_point": [38, 53], "end_point": [38, 54], "text": ")"}], "start_byte": 965, "end_byte": 968, "start_point": [38, 51], "end_point": [38, 54], "text": "())"}, {"type": ")", "children": [], "start_byte": 968, "end_byte": 969, "start_point": [38, 54], "end_point": [38, 55], "text": ";"}], "start_byte": 952, "end_byte": 969, "start_point": [38, 38], "end_point": [38, 55], "text": "(file.is_some());"}], "start_byte": 933, "end_byte": 969, "start_point": [38, 19], "end_point": [38, 55], "text": "\");\n        assert!(file.is_some());"}, {"type": ";", "children": [], "start_byte": 969, "end_byte": 970, "start_point": [38, 55], "end_point": [38, 56], "text": " "}], "start_byte": 922, "end_byte": 970, "start_point": [38, 8], "end_point": [38, 56], "text": "st.txt\", \"w\");\n        assert!(file.is_some()); "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 979, "end_byte": 985, "start_point": [39, 8], "end_point": [39, 14], "text": "\u4e0d\u4e3aNone"}, {"type": "!", "children": [], "start_byte": 985, "end_byte": 986, "start_point": [39, 14], "end_point": [39, 15], "text": "\uff0c"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 986, "end_byte": 987, "start_point": [39, 15], "end_point": [39, 16], "text": "\u8868"}, {"type": "identifier", "children": [], "start_byte": 987, "end_byte": 991, "start_point": [39, 16], "end_point": [39, 20], "text": "\u793a\u6587\u4ef6\u6210"}, {"type": "identifier", "children": [], "start_byte": 992, "end_byte": 999, "start_point": [39, 21], "end_point": [39, 28], "text": "\u6253\u5f00\n    "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 999, "end_byte": 1000, "start_point": [39, 28], "end_point": [39, 29], "text": " "}, {"type": ")", "children": [], "start_byte": 1000, "end_byte": 1001, "start_point": [39, 29], "end_point": [39, 30], "text": " "}], "start_byte": 999, "end_byte": 1001, "start_point": [39, 28], "end_point": [39, 30], "text": "  "}, {"type": ")", "children": [], "start_byte": 1001, "end_byte": 1002, "start_point": [39, 30], "end_point": [39, 31], "text": " "}], "start_byte": 986, "end_byte": 1002, "start_point": [39, 15], "end_point": [39, 31], "text": "\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n       "}], "start_byte": 979, "end_byte": 1002, "start_point": [39, 8], "end_point": [39, 31], "text": "\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n       "}, {"type": ";", "children": [], "start_byte": 1002, "end_byte": 1003, "start_point": [39, 31], "end_point": [39, 32], "text": " "}], "start_byte": 979, "end_byte": 1003, "start_point": [39, 8], "end_point": [39, 32], "text": "\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n        "}, {"type": "line_comment", "children": [], "start_byte": 1004, "end_byte": 1062, "start_point": [39, 33], "end_point": [39, 91], "text": "rop(file); // \u660e\u786e\u5173\u95ed\u6587\u4ef6\n\n        // \u786e\u4fdd\u6587\u4ef6\u786e\u5b9e\u88ab\u521b\u5efa\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528open\u6765\u6253\u5f00\u5b83\n"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1071, "end_byte": 1075, "start_point": [40, 8], "end_point": [40, 12], "text": "et f"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1075, "end_byte": 1076, "start_point": [40, 12], "end_point": [40, 13], "text": "i"}, {"type": "identifier", "children": [], "start_byte": 1076, "end_byte": 1080, "start_point": [40, 13], "end_point": [40, 17], "text": "le ="}, {"type": ")", "children": [], "start_byte": 1080, "end_byte": 1081, "start_point": [40, 17], "end_point": [40, 18], "text": " "}], "start_byte": 1075, "end_byte": 1081, "start_point": [40, 12], "end_point": [40, 18], "text": "ile = "}], "start_byte": 1071, "end_byte": 1081, "start_point": [40, 8], "end_point": [40, 18], "text": "et file = "}, {"type": ";", "children": [], "start_byte": 1081, "end_byte": 1082, "start_point": [40, 18], "end_point": [40, 19], "text": "f"}], "start_byte": 1071, "end_byte": 1082, "start_point": [40, 8], "end_point": [40, 19], "text": "et file = f"}, {"type": "line_comment", "children": [], "start_byte": 1083, "end_byte": 1104, "start_point": [40, 20], "end_point": [40, 41], "text": "::File::open(\"test.tx"}, {"type": "line_comment", "children": [], "start_byte": 1114, "end_byte": 1181, "start_point": [42, 8], "end_point": [42, 75], "text": "   assert!(file.is_ok()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u786e\u5b9e\u5b58\u5728\u5e76\u88ab\u6210\u529f\u6253\u5f00\n\n        /"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1190, "end_byte": 1193, "start_point": [43, 8], "end_point": [43, 11], "text": "\u5220\u9664t"}, {"type": "identifier", "children": [], "start_byte": 1194, "end_byte": 1198, "start_point": [43, 12], "end_point": [43, 16], "text": "st.t"}, {"type": "=", "children": [], "start_byte": 1199, "end_byte": 1200, "start_point": [43, 17], "end_point": [43, 18], "text": "t"}, {"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1201, "end_byte": 1203, "start_point": [43, 19], "end_point": [43, 21], "text": "  "}, {"type": "::", "children": [], "start_byte": 1203, "end_byte": 1205, "start_point": [43, 21], "end_point": [43, 23], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 1205, "end_byte": 1209, "start_point": [43, 23], "end_point": [43, 27], "text": "    "}], "start_byte": 1201, "end_byte": 1209, "start_point": [43, 19], "end_point": [43, 27], "text": "        "}, {"type": "::", "children": [], "start_byte": 1209, "end_byte": 1211, "start_point": [43, 27], "end_point": [43, 29], "text": "le"}, {"type": "identifier", "children": [], "start_byte": 1211, "end_byte": 1215, "start_point": [43, 29], "end_point": [43, 33], "text": "t _o"}], "start_byte": 1201, "end_byte": 1215, "start_point": [43, 19], "end_point": [43, 33], "text": "        let _o"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1215, "end_byte": 1216, "start_point": [43, 33], "end_point": [43, 34], "text": "u"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1216, "end_byte": 1217, "start_point": [43, 34], "end_point": [43, 35], "text": "t"}, {"type": "\"", "children": [], "start_byte": 1225, "end_byte": 1226, "start_point": [43, 43], "end_point": [43, 44], "text": "m"}], "start_byte": 1216, "end_byte": 1226, "start_point": [43, 34], "end_point": [43, 44], "text": "tput = Com"}, {"type": ")", "children": [], "start_byte": 1226, "end_byte": 1227, "start_point": [43, 44], "end_point": [43, 45], "text": "m"}], "start_byte": 1215, "end_byte": 1227, "start_point": [43, 33], "end_point": [43, 45], "text": "utput = Comm"}], "start_byte": 1201, "end_byte": 1227, "start_point": [43, 19], "end_point": [43, 45], "text": "        let _output = Comm"}, {"type": ";", "children": [], "start_byte": 1227, "end_byte": 1228, "start_point": [43, 45], "end_point": [43, 46], "text": "a"}], "start_byte": 1190, "end_byte": 1228, "start_point": [43, 8], "end_point": [43, 46], "text": "\u5220\u9664test.txt\n        let _output = Comma"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1237, "end_byte": 1243, "start_point": [44, 8], "end_point": [44, 14], "text": "rm\").a"}, {"type": "!", "children": [], "start_byte": 1243, "end_byte": 1244, "start_point": [44, 14], "end_point": [44, 15], "text": "r"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1244, "end_byte": 1245, "start_point": [44, 15], "end_point": [44, 16], "text": "g"}, {"type": "identifier", "children": [], "start_byte": 1245, "end_byte": 1249, "start_point": [44, 16], "end_point": [44, 20], "text": "(\"te"}, {"type": "identifier", "children": [], "start_byte": 1250, "end_byte": 1255, "start_point": [44, 21], "end_point": [44, 26], "text": "t.txt"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1255, "end_byte": 1256, "start_point": [44, 26], "end_point": [44, 27], "text": "\""}, {"type": ")", "children": [], "start_byte": 1256, "end_byte": 1257, "start_point": [44, 27], "end_point": [44, 28], "text": ")"}], "start_byte": 1255, "end_byte": 1257, "start_point": [44, 26], "end_point": [44, 28], "text": "\")"}, {"type": ")", "children": [], "start_byte": 1257, "end_byte": 1258, "start_point": [44, 28], "end_point": [44, 29], "text": "."}], "start_byte": 1244, "end_byte": 1258, "start_point": [44, 15], "end_point": [44, 29], "text": "g(\"test.txt\")."}], "start_byte": 1237, "end_byte": 1258, "start_point": [44, 8], "end_point": [44, 29], "text": "rm\").arg(\"test.txt\")."}, {"type": ";", "children": [], "start_byte": 1258, "end_byte": 1259, "start_point": [44, 29], "end_point": [44, 30], "text": "o"}], "start_byte": 1237, "end_byte": 1259, "start_point": [44, 8], "end_point": [44, 30], "text": "rm\").arg(\"test.txt\").o"}, {"type": "line_comment", "children": [], "start_byte": 1260, "end_byte": 1336, "start_point": [44, 31], "end_point": [44, 107], "text": "tput().expect(\"Failed to remove test.txt using rm\");\n    }\n}\n"}, {"type": "line_comment", "children": [], "start_byte": 1346, "end_byte": 1384, "start_point": [46, 8], "end_point": [46, 46], "text": ""}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1393, "end_byte": 1396, "start_point": [47, 8], "end_point": [47, 11], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1397, "end_byte": 1404, "start_point": [47, 12], "end_point": [47, 19], "text": ""}, {"type": "=", "children": [], "start_byte": 1405, "end_byte": 1406, "start_point": [47, 20], "end_point": [47, 21], "text": ""}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1407, "end_byte": 1414, "start_point": [47, 22], "end_point": [47, 29], "text": ""}, {"type": "::", "children": [], "start_byte": 1414, "end_byte": 1416, "start_point": [47, 29], "end_point": [47, 31], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1416, "end_byte": 1419, "start_point": [47, 31], "end_point": [47, 34], "text": ""}], "start_byte": 1407, "end_byte": 1419, "start_point": [47, 22], "end_point": [47, 34], "text": ""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1419, "end_byte": 1420, "start_point": [47, 34], "end_point": [47, 35], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1420, "end_byte": 1421, "start_point": [47, 35], "end_point": [47, 36], "text": ""}, {"type": "\"", "children": [], "start_byte": 1423, "end_byte": 1424, "start_point": [47, 38], "end_point": [47, 39], "text": ""}], "start_byte": 1420, "end_byte": 1424, "start_point": [47, 35], "end_point": [47, 39], "text": ""}, {"type": ")", "children": [], "start_byte": 1424, "end_byte": 1425, "start_point": [47, 39], "end_point": [47, 40], "text": ""}], "start_byte": 1419, "end_byte": 1425, "start_point": [47, 34], "end_point": [47, 40], "text": ""}], "start_byte": 1407, "end_byte": 1425, "start_point": [47, 22], "end_point": [47, 40], "text": ""}, {"type": ".", "children": [], "start_byte": 1425, "end_byte": 1426, "start_point": [47, 40], "end_point": [47, 41], "text": ""}, {"type": "field_identifier", "children": [], "start_byte": 1426, "end_byte": 1429, "start_point": [47, 41], "end_point": [47, 44], "text": ""}], "start_byte": 1407, "end_byte": 1429, "start_point": [47, 22], "end_point": [47, 44], "text": ""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1429, "end_byte": 1430, "start_point": [47, 44], "end_point": [47, 45], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1430, "end_byte": 1431, "start_point": [47, 45], "end_point": [47, 46], "text": ""}, {"type": "\"", "children": [], "start_byte": 1439, "end_byte": 1440, "start_point": [47, 54], "end_point": [47, 55], "text": ""}], "start_byte": 1430, "end_byte": 1440, "start_point": [47, 45], "end_point": [47, 55], "text": ""}, {"type": ")", "children": [], "start_byte": 1440, "end_byte": 1441, "start_point": [47, 55], "end_point": [47, 56], "text": ""}], "start_byte": 1429, "end_byte": 1441, "start_point": [47, 44], "end_point": [47, 56], "text": ""}], "start_byte": 1407, "end_byte": 1441, "start_point": [47, 22], "end_point": [47, 56], "text": ""}, {"type": ".", "children": [], "start_byte": 1441, "end_byte": 1442, "start_point": [47, 56], "end_point": [47, 57], "text": ""}, {"type": "field_identifier", "children": [], "start_byte": 1442, "end_byte": 1448, "start_point": [47, 57], "end_point": [47, 63], "text": ""}], "start_byte": 1407, "end_byte": 1448, "start_point": [47, 22], "end_point": [47, 63], "text": ""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1448, "end_byte": 1449, "start_point": [47, 63], "end_point": [47, 64], "text": ""}, {"type": ")", "children": [], "start_byte": 1449, "end_byte": 1450, "start_point": [47, 64], "end_point": [47, 65], "text": ""}], "start_byte": 1448, "end_byte": 1450, "start_point": [47, 63], "end_point": [47, 65], "text": ""}], "start_byte": 1407, "end_byte": 1450, "start_point": [47, 22], "end_point": [47, 65], "text": ""}, {"type": ".", "children": [], "start_byte": 1450, "end_byte": 1451, "start_point": [47, 65], "end_point": [47, 66], "text": ""}, {"type": "field_identifier", "children": [], "start_byte": 1451, "end_byte": 1457, "start_point": [47, 66], "end_point": [47, 72], "text": ""}], "start_byte": 1407, "end_byte": 1457, "start_point": [47, 22], "end_point": [47, 72], "text": ""}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1457, "end_byte": 1458, "start_point": [47, 72], "end_point": [47, 73], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1458, "end_byte": 1459, "start_point": [47, 73], "end_point": [47, 74], "text": ""}, {"type": "\"", "children": [], "start_byte": 1493, "end_byte": 1494, "start_point": [47, 108], "end_point": [47, 109], "text": ""}], "start_byte": 1458, "end_byte": 1494, "start_point": [47, 73], "end_point": [47, 109], "text": ""}, {"type": ")", "children": [], "start_byte": 1494, "end_byte": 1495, "start_point": [47, 109], "end_point": [47, 110], "text": ""}], "start_byte": 1457, "end_byte": 1495, "start_point": [47, 72], "end_point": [47, 110], "text": ""}], "start_byte": 1407, "end_byte": 1495, "start_point": [47, 22], "end_point": [47, 110], "text": ""}, {"type": ";", "children": [], "start_byte": 1495, "end_byte": 1496, "start_point": [47, 110], "end_point": [47, 111], "text": ""}], "start_byte": 1393, "end_byte": 1496, "start_point": [47, 8], "end_point": [47, 111], "text": ""}, {"type": "}", "children": [], "start_byte": 1501, "end_byte": 1502, "start_point": [48, 4], "end_point": [48, 5], "text": ""}], "start_byte": 691, "end_byte": 1502, "start_point": [33, 34], "end_point": [48, 5], "text": "{\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u521b\u5efa\u4e00\u4e2atest.txt\n        let _output = Command::new(\"touch\").arg(\"test.txt\").output().expect(\"Failed to create test.txt using touch\");\n\n        // \u4f7f\u7528fopen_output_safely\u6253\u5f00\u6587\u4ef6\n        let file = fopen_output_safely(\"test.txt\", \"w\");\n        assert!(file.is_some()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n        drop(file); // \u660e\u786e\u5173\u95ed\u6587\u4ef6\n\n        // \u786e\u4fdd\u6587\u4ef6\u786e\u5b9e\u88ab\u521b\u5efa\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528open\u6765\u6253\u5f00\u5b83\n        let file = fs::File::open(\"test.txt\");\n        assert!(file.is_ok()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u786e\u5b9e\u5b58\u5728\u5e76\u88ab\u6210\u529f\u6253\u5f00\n\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u5220\u9664test.txt\n        let _output = Command::new(\"rm\").arg(\"test.txt\").output().expect(\"Failed to remove test.txt using rm\");\n    }\n}\n"}], "start_byte": 661, "end_byte": 1502, "start_point": [33, 4], "end_point": [48, 5], "text": "fn test_fopen_output_safely() {\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u521b\u5efa\u4e00\u4e2atest.txt\n        let _output = Command::new(\"touch\").arg(\"test.txt\").output().expect(\"Failed to create test.txt using touch\");\n\n        // \u4f7f\u7528fopen_output_safely\u6253\u5f00\u6587\u4ef6\n        let file = fopen_output_safely(\"test.txt\", \"w\");\n        assert!(file.is_some()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n        drop(file); // \u660e\u786e\u5173\u95ed\u6587\u4ef6\n\n        // \u786e\u4fdd\u6587\u4ef6\u786e\u5b9e\u88ab\u521b\u5efa\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528open\u6765\u6253\u5f00\u5b83\n        let file = fs::File::open(\"test.txt\");\n        assert!(file.is_ok()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u786e\u5b9e\u5b58\u5728\u5e76\u88ab\u6210\u529f\u6253\u5f00\n\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u5220\u9664test.txt\n        let _output = Command::new(\"rm\").arg(\"test.txt\").output().expect(\"Failed to remove test.txt using rm\");\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1503, "end_byte": 1504, "start_point": [49, 0], "end_point": [49, 1], "text": ""}], "start_byte": 607, "end_byte": 1504, "start_point": [28, 10], "end_point": [49, 1], "text": "{\n    use super::*;\n    use std::fs;\n\n    #[test]\n    fn test_fopen_output_safely() {\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u521b\u5efa\u4e00\u4e2atest.txt\n        let _output = Command::new(\"touch\").arg(\"test.txt\").output().expect(\"Failed to create test.txt using touch\");\n\n        // \u4f7f\u7528fopen_output_safely\u6253\u5f00\u6587\u4ef6\n        let file = fopen_output_safely(\"test.txt\", \"w\");\n        assert!(file.is_some()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n        drop(file); // \u660e\u786e\u5173\u95ed\u6587\u4ef6\n\n        // \u786e\u4fdd\u6587\u4ef6\u786e\u5b9e\u88ab\u521b\u5efa\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528open\u6765\u6253\u5f00\u5b83\n        let file = fs::File::open(\"test.txt\");\n        assert!(file.is_ok()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u786e\u5b9e\u5b58\u5728\u5e76\u88ab\u6210\u529f\u6253\u5f00\n\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u5220\u9664test.txt\n        let _output = Command::new(\"rm\").arg(\"test.txt\").output().expect(\"Failed to remove test.txt using rm\");\n    }\n}\n"}], "start_byte": 597, "end_byte": 1504, "start_point": [28, 0], "end_point": [49, 1], "text": "mod tests {\n    use super::*;\n    use std::fs;\n\n    #[test]\n    fn test_fopen_output_safely() {\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u521b\u5efa\u4e00\u4e2atest.txt\n        let _output = Command::new(\"touch\").arg(\"test.txt\").output().expect(\"Failed to create test.txt using touch\");\n\n        // \u4f7f\u7528fopen_output_safely\u6253\u5f00\u6587\u4ef6\n        let file = fopen_output_safely(\"test.txt\", \"w\");\n        assert!(file.is_some()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n        drop(file); // \u660e\u786e\u5173\u95ed\u6587\u4ef6\n\n        // \u786e\u4fdd\u6587\u4ef6\u786e\u5b9e\u88ab\u521b\u5efa\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528open\u6765\u6253\u5f00\u5b83\n        let file = fs::File::open(\"test.txt\");\n        assert!(file.is_ok()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u786e\u5b9e\u5b58\u5728\u5e76\u88ab\u6210\u529f\u6253\u5f00\n\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u5220\u9664test.txt\n        let _output = Command::new(\"rm\").arg(\"test.txt\").output().expect(\"Failed to remove test.txt using rm\");\n    }\n}\n"}], "start_byte": 0, "end_byte": 1505, "start_point": [0, 0], "end_point": [50, 0], "text": "// use crate::bzip2::scc_57_root_38_pad::*;\n// use crate::bzip2::scc_55_root_37_open::*;\n// use crate::global_vars::bzip2_c2::{FILE};\n\n\nuse std::fs::OpenOptions;\nuse std::io::prelude::*;\nuse std::os::unix::io::{FromRawFd, IntoRawFd};\nuse std::process::Command;\n\npub fn fopen_output_safely(name: &str, mode: &str) -> Option<std::fs::File> {\n    if mode != \"w\" {\n        return None;\n    }\n\n    let file = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(name);\n\n    match file {\n        Ok(f) => Some(f),\n        Err(_) => None,\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use std::fs;\n\n    #[test]\n    fn test_fopen_output_safely() {\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u521b\u5efa\u4e00\u4e2atest.txt\n        let _output = Command::new(\"touch\").arg(\"test.txt\").output().expect(\"Failed to create test.txt using touch\");\n\n        // \u4f7f\u7528fopen_output_safely\u6253\u5f00\u6587\u4ef6\n        let file = fopen_output_safely(\"test.txt\", \"w\");\n        assert!(file.is_some()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u6210\u529f\u6253\u5f00\n        drop(file); // \u660e\u786e\u5173\u95ed\u6587\u4ef6\n\n        // \u786e\u4fdd\u6587\u4ef6\u786e\u5b9e\u88ab\u521b\u5efa\uff0c\u6211\u4eec\u518d\u6b21\u4f7f\u7528open\u6765\u6253\u5f00\u5b83\n        let file = fs::File::open(\"test.txt\");\n        assert!(file.is_ok()); // \u65ad\u8a00\u6587\u4ef6\u6307\u9488\u4e0d\u4e3aNone\uff0c\u8868\u793a\u6587\u4ef6\u786e\u5b9e\u5b58\u5728\u5e76\u88ab\u6210\u529f\u6253\u5f00\n\n        // \u4f7f\u7528\u547d\u4ee4\u884c\u771f\u7684\u5220\u9664test.txt\n        let _output = Command::new(\"rm\").arg(\"test.txt\").output().expect(\"Failed to remove test.txt using rm\");\n    }\n}\n"}