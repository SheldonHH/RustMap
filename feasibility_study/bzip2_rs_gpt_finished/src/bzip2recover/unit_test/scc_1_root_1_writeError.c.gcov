        -:    0:Source:scc_1_root_1_writeError.c
        -:    0:Graph:scc_1_root_1_writeError.gcno
        -:    0:Data:scc_1_root_1_writeError.gcda
        -:    0:Runs:1
        -:    1:// use crate::global_vars::bzip2_c2::{inFileName, progName};
        -:    2:
        -:    3:
        -:    4:// writeError ( void )
        -:    5:
        -:    6:#include <stdio.h>
        -:    7:#include <string.h>
        -:    8:#include <CUnit/Basic.h>
        -:    9:
        -:   10:typedef char Char;
        -:   11:// 你的代码定义...
        -:   12:Char inFileName[2000];
        -:   13:Char outFileName[2000];
        -:   14:Char progName[2000];
        -:   15:
        -:   16:
        1:   17:static void writeError ( void )
        -:   18:{
        1:   19:   fprintf ( 
        -:   20:            stderr
        -:   21:                  ,
        -:   22:             "%s: I/O error reading `%s', possible reason follows.\n",
        -:   23:            progName, inFileName );
        1:   24:   perror ( progName );
        1:   25:   fprintf ( 
        -:   26:            stderr
        -:   27:                  , "%s: warning: output file(s) may be incomplete.\n",
        -:   28:             progName );
        1:   29:   exit ( 1 );
        -:   30:}
        -:   31:
        -:   32:
        -:   33:// 测试函数
        1:   34:void test_writeError(void) {
        -:   35:    // 重定向stderr到一个文件以捕获输出
        1:   36:    freopen("stderr_output.txt", "w", stderr);
        -:   37:
        1:   38:    strcpy(progName, "testProgram");
        1:   39:    strcpy(inFileName, "testFile.txt");
        -:   40:    
        1:   41:    writeError();
        -:   42:
        -:   43:    // 重置stderr
    #####:   44:    freopen("/dev/tty", "w", stderr);
        -:   45:
        -:   46:    // 从文件中读取输出并验证
    #####:   47:    FILE *fp = fopen("stderr_output.txt", "r");
        -:   48:    char line[4000];
        -:   49:
    #####:   50:    fgets(line, sizeof(line), fp);
    #####:   51:    CU_ASSERT_STRING_EQUAL(line, "testProgram: I/O error reading `testFile.txt', possible reason follows.\n");
        -:   52:
    #####:   53:    fgets(line, sizeof(line), fp);
        -:   54:    // 由于perror产生的消息是基于系统的，所以我们只检查progName是否存在
    #####:   55:    CU_ASSERT_PTR_NOT_NULL(strstr(line, "testProgram"));
        -:   56:
    #####:   57:    fgets(line, sizeof(line), fp);
    #####:   58:    CU_ASSERT_STRING_EQUAL(line, "testProgram: warning: output file(s) may be incomplete.\n");
        -:   59:
    #####:   60:    fclose(fp);
    #####:   61:}
        -:   62:
        1:   63:int main() {
        -:   64:    // 初始化CUnit测试框架
        1:   65:    CU_initialize_registry();
        -:   66:
        -:   67:    // 添加测试
        1:   68:    CU_pSuite suite = CU_add_suite("writeError_suite", 0, 0);
        1:   69:    CU_add_test(suite, "test_writeError", test_writeError);
        -:   70:
        -:   71:    // 运行所有测试
        1:   72:    CU_basic_set_mode(CU_BRM_VERBOSE);
        1:   73:    CU_basic_run_tests();
        -:   74:
    #####:   75:    CU_cleanup_registry();
    #####:   76:    return 0;
        -:   77:}
