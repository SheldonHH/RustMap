{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 4, "end_byte": 9, "start_point": [0, 4], "end_point": [0, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 11, "end_byte": 16, "start_point": [0, 11], "end_point": [0, 16], "text": "bzip2"}], "start_byte": 4, "end_byte": 16, "start_point": [0, 4], "end_point": [0, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 16, "end_byte": 18, "start_point": [0, 16], "end_point": [0, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 18, "end_byte": 40, "start_point": [0, 18], "end_point": [0, 40], "text": "scc_90_root_52_setExit"}], "start_byte": 4, "end_byte": 40, "start_point": [0, 4], "end_point": [0, 40], "text": "crate::bzip2::scc_90_root_52_setExit"}, {"type": "::", "children": [], "start_byte": 40, "end_byte": 42, "start_point": [0, 40], "end_point": [0, 42], "text": "::"}, {"type": "*", "children": [], "start_byte": 42, "end_byte": 43, "start_point": [0, 42], "end_point": [0, 43], "text": "*"}], "start_byte": 4, "end_byte": 43, "start_point": [0, 4], "end_point": [0, 43], "text": "crate::bzip2::scc_90_root_52_setExit::*"}, {"type": ";", "children": [], "start_byte": 43, "end_byte": 44, "start_point": [0, 43], "end_point": [0, 44], "text": ";"}], "start_byte": 0, "end_byte": 44, "start_point": [0, 0], "end_point": [0, 44], "text": "use crate::bzip2::scc_90_root_52_setExit::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 45, "end_byte": 48, "start_point": [1, 0], "end_point": [1, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 49, "end_byte": 54, "start_point": [1, 4], "end_point": [1, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 54, "end_byte": 56, "start_point": [1, 9], "end_point": [1, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 56, "end_byte": 67, "start_point": [1, 11], "end_point": [1, 22], "text": "global_vars"}], "start_byte": 49, "end_byte": 67, "start_point": [1, 4], "end_point": [1, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 67, "end_byte": 69, "start_point": [1, 22], "end_point": [1, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 69, "end_byte": 77, "start_point": [1, 24], "end_point": [1, 32], "text": "bzip2_c5"}], "start_byte": 49, "end_byte": 77, "start_point": [1, 4], "end_point": [1, 32], "text": "crate::global_vars::bzip2_c5"}, {"type": "::", "children": [], "start_byte": 77, "end_byte": 79, "start_point": [1, 32], "end_point": [1, 34], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 79, "end_byte": 80, "start_point": [1, 34], "end_point": [1, 35], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 80, "end_byte": 89, "start_point": [1, 35], "end_point": [1, 44], "text": "exitValue"}, {"type": ",", "children": [], "start_byte": 89, "end_byte": 90, "start_point": [1, 44], "end_point": [1, 45], "text": ","}, {"type": "identifier", "children": [], "start_byte": 91, "end_byte": 98, "start_point": [1, 46], "end_point": [1, 53], "text": "IN_NAME"}, {"type": ",", "children": [], "start_byte": 98, "end_byte": 99, "start_point": [1, 53], "end_point": [1, 54], "text": ","}, {"type": "identifier", "children": [], "start_byte": 100, "end_byte": 107, "start_point": [1, 55], "end_point": [1, 62], "text": "OP_MODE"}, {"type": ",", "children": [], "start_byte": 107, "end_byte": 108, "start_point": [1, 62], "end_point": [1, 63], "text": ","}, {"type": "identifier", "children": [], "start_byte": 109, "end_byte": 117, "start_point": [1, 64], "end_point": [1, 72], "text": "OUT_NAME"}, {"type": "}", "children": [], "start_byte": 117, "end_byte": 118, "start_point": [1, 72], "end_point": [1, 73], "text": "}"}], "start_byte": 79, "end_byte": 118, "start_point": [1, 34], "end_point": [1, 73], "text": "{exitValue, IN_NAME, OP_MODE, OUT_NAME}"}], "start_byte": 49, "end_byte": 118, "start_point": [1, 4], "end_point": [1, 73], "text": "crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME}"}, {"type": ";", "children": [], "start_byte": 118, "end_byte": 119, "start_point": [1, 73], "end_point": [1, 74], "text": ";"}], "start_byte": 45, "end_byte": 119, "start_point": [1, 0], "end_point": [1, 74], "text": "use crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 120, "end_byte": 123, "start_point": [2, 0], "end_point": [2, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 124, "end_byte": 129, "start_point": [2, 4], "end_point": [2, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 129, "end_byte": 131, "start_point": [2, 9], "end_point": [2, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 131, "end_byte": 142, "start_point": [2, 11], "end_point": [2, 22], "text": "global_vars"}], "start_byte": 124, "end_byte": 142, "start_point": [2, 4], "end_point": [2, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 142, "end_byte": 144, "start_point": [2, 22], "end_point": [2, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 144, "end_byte": 152, "start_point": [2, 24], "end_point": [2, 32], "text": "bzip2_c2"}], "start_byte": 124, "end_byte": 152, "start_point": [2, 4], "end_point": [2, 32], "text": "crate::global_vars::bzip2_c2"}, {"type": "::", "children": [], "start_byte": 152, "end_byte": 154, "start_point": [2, 32], "end_point": [2, 34], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 154, "end_byte": 155, "start_point": [2, 34], "end_point": [2, 35], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 155, "end_byte": 164, "start_point": [2, 35], "end_point": [2, 44], "text": "PROG_NAME"}, {"type": "}", "children": [], "start_byte": 164, "end_byte": 165, "start_point": [2, 44], "end_point": [2, 45], "text": "}"}], "start_byte": 154, "end_byte": 165, "start_point": [2, 34], "end_point": [2, 45], "text": "{PROG_NAME}"}], "start_byte": 124, "end_byte": 165, "start_point": [2, 4], "end_point": [2, 45], "text": "crate::global_vars::bzip2_c2::{PROG_NAME}"}, {"type": ";", "children": [], "start_byte": 165, "end_byte": 166, "start_point": [2, 45], "end_point": [2, 46], "text": ";"}], "start_byte": 120, "end_byte": 166, "start_point": [2, 0], "end_point": [2, 46], "text": "use crate::global_vars::bzip2_c2::{PROG_NAME};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 167, "end_byte": 170, "start_point": [3, 0], "end_point": [3, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 171, "end_byte": 174, "start_point": [3, 4], "end_point": [3, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 174, "end_byte": 176, "start_point": [3, 7], "end_point": [3, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 176, "end_byte": 178, "start_point": [3, 9], "end_point": [3, 11], "text": "io"}], "start_byte": 171, "end_byte": 178, "start_point": [3, 4], "end_point": [3, 11], "text": "std::io"}, {"type": "::", "children": [], "start_byte": 178, "end_byte": 180, "start_point": [3, 11], "end_point": [3, 13], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 180, "end_byte": 181, "start_point": [3, 13], "end_point": [3, 14], "text": "{"}, {"type": "self", "children": [], "start_byte": 181, "end_byte": 185, "start_point": [3, 14], "end_point": [3, 18], "text": "self"}, {"type": ",", "children": [], "start_byte": 185, "end_byte": 186, "start_point": [3, 18], "end_point": [3, 19], "text": ","}, {"type": "identifier", "children": [], "start_byte": 187, "end_byte": 192, "start_point": [3, 20], "end_point": [3, 25], "text": "Write"}, {"type": "}", "children": [], "start_byte": 192, "end_byte": 193, "start_point": [3, 25], "end_point": [3, 26], "text": "}"}], "start_byte": 180, "end_byte": 193, "start_point": [3, 13], "end_point": [3, 26], "text": "{self, Write}"}], "start_byte": 171, "end_byte": 193, "start_point": [3, 4], "end_point": [3, 26], "text": "std::io::{self, Write}"}, {"type": ";", "children": [], "start_byte": 193, "end_byte": 194, "start_point": [3, 26], "end_point": [3, 27], "text": ";"}], "start_byte": 167, "end_byte": 194, "start_point": [3, 0], "end_point": [3, 27], "text": "use std::io::{self, Write};"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 195, "end_byte": 198, "start_point": [4, 0], "end_point": [4, 3], "text": "use"}, {"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 199, "end_byte": 202, "start_point": [4, 4], "end_point": [4, 7], "text": "std"}, {"type": "::", "children": [], "start_byte": 202, "end_byte": 204, "start_point": [4, 7], "end_point": [4, 9], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 204, "end_byte": 211, "start_point": [4, 9], "end_point": [4, 16], "text": "process"}], "start_byte": 199, "end_byte": 211, "start_point": [4, 4], "end_point": [4, 16], "text": "std::process"}, {"type": ";", "children": [], "start_byte": 211, "end_byte": 212, "start_point": [4, 16], "end_point": [4, 17], "text": ";"}], "start_byte": 195, "end_byte": 212, "start_point": [4, 0], "end_point": [4, 17], "text": "use std::process;"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 214, "end_byte": 217, "start_point": [6, 0], "end_point": [6, 3], "text": "pub"}], "start_byte": 214, "end_byte": 217, "start_point": [6, 0], "end_point": [6, 3], "text": "pub"}, {"type": "fn", "children": [], "start_byte": 218, "end_byte": 220, "start_point": [6, 4], "end_point": [6, 6], "text": "fn"}, {"type": "identifier", "children": [], "start_byte": 221, "end_byte": 249, "start_point": [6, 7], "end_point": [6, 35], "text": "my_sigsegv_or_sigbus_catcher"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 249, "end_byte": 250, "start_point": [6, 35], "end_point": [6, 36], "text": "("}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 250, "end_byte": 257, "start_point": [6, 36], "end_point": [6, 43], "text": "op_mode"}, {"type": ":", "children": [], "start_byte": 257, "end_byte": 258, "start_point": [6, 43], "end_point": [6, 44], "text": ":"}, {"type": "primitive_type", "children": [], "start_byte": 259, "end_byte": 262, "start_point": [6, 45], "end_point": [6, 48], "text": "i32"}], "start_byte": 250, "end_byte": 262, "start_point": [6, 36], "end_point": [6, 48], "text": "op_mode: i32"}, {"type": ")", "children": [], "start_byte": 262, "end_byte": 263, "start_point": [6, 48], "end_point": [6, 49], "text": ")"}], "start_byte": 249, "end_byte": 263, "start_point": [6, 35], "end_point": [6, 49], "text": "(op_mode: i32)"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 264, "end_byte": 265, "start_point": [6, 50], "end_point": [6, 51], "text": "{"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 270, "end_byte": 273, "start_point": [7, 4], "end_point": [7, 7], "text": "let"}, {"type": "identifier", "children": [], "start_byte": 274, "end_byte": 277, "start_point": [7, 8], "end_point": [7, 11], "text": "msg"}, {"type": ":", "children": [], "start_byte": 277, "end_byte": 278, "start_point": [7, 11], "end_point": [7, 12], "text": ":"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 279, "end_byte": 280, "start_point": [7, 13], "end_point": [7, 14], "text": "&"}, {"type": "primitive_type", "children": [], "start_byte": 280, "end_byte": 283, "start_point": [7, 14], "end_point": [7, 17], "text": "str"}], "start_byte": 279, "end_byte": 283, "start_point": [7, 13], "end_point": [7, 17], "text": "&str"}, {"type": ";", "children": [], "start_byte": 283, "end_byte": 284, "start_point": [7, 17], "end_point": [7, 18], "text": ";"}], "start_byte": 270, "end_byte": 284, "start_point": [7, 4], "end_point": [7, 18], "text": "let msg: &str;"}, {"type": "expression_statement", "children": [{"type": "unsafe_block", "children": [{"type": "unsafe", "children": [], "start_byte": 289, "end_byte": 295, "start_point": [8, 4], "end_point": [8, 10], "text": "unsafe"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 296, "end_byte": 297, "start_point": [8, 11], "end_point": [8, 12], "text": "{"}, {"type": "line_comment", "children": [], "start_byte": 306, "end_byte": 345, "start_point": [9, 8], "end_point": [9, 47], "text": "// \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u5224\u65ad\u9519\u8bef\u6d88\u606f\n        msg = if op_mod"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 354, "end_byte": 357, "start_point": [10, 8], "end_point": [10, 11], "text": "   "}, {"type": "=", "children": [], "start_byte": 358, "end_byte": 359, "start_point": [10, 12], "end_point": [10, 13], "text": " "}, {"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 360, "end_byte": 362, "start_point": [10, 14], "end_point": [10, 16], "text": "  "}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 363, "end_byte": 370, "start_point": [10, 17], "end_point": [10, 24], "text": "   \"Com"}, {"type": "==", "children": [], "start_byte": 371, "end_byte": 373, "start_point": [10, 25], "end_point": [10, 27], "text": "re"}, {"type": "integer_literal", "children": [], "start_byte": 374, "end_byte": 375, "start_point": [10, 28], "end_point": [10, 29], "text": "s"}], "start_byte": 363, "end_byte": 375, "start_point": [10, 17], "end_point": [10, 29], "text": "   \"Compress"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 376, "end_byte": 377, "start_point": [10, 30], "end_point": [10, 31], "text": "o"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 390, "end_byte": 391, "start_point": [11, 12], "end_point": [11, 13], "text": "g"}, {"type": "\"", "children": [], "start_byte": 416, "end_byte": 417, "start_point": [11, 38], "end_point": [11, 39], "text": "e"}], "start_byte": 390, "end_byte": 417, "start_point": [11, 12], "end_point": [11, 39], "text": "ge\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } e"}, {"type": "line_comment", "children": [], "start_byte": 418, "end_byte": 445, "start_point": [11, 40], "end_point": [11, 67], "text": "se {\n            \"Decompres"}, {"type": "}", "children": [], "start_byte": 454, "end_byte": 455, "start_point": [12, 8], "end_point": [12, 9], "text": "r"}], "start_byte": 376, "end_byte": 455, "start_point": [10, 30], "end_point": [12, 9], "text": "on error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error"}, {"type": "else_clause", "children": [{"type": "else", "children": [], "start_byte": 456, "end_byte": 460, "start_point": [12, 10], "end_point": [12, 14], "text": "mess"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 461, "end_byte": 462, "start_point": [12, 15], "end_point": [12, 16], "text": "g"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 475, "end_byte": 476, "start_point": [13, 12], "end_point": [13, 13], "text": "\u6d88"}, {"type": "\"", "children": [], "start_byte": 503, "end_byte": 504, "start_point": [13, 40], "end_point": [13, 41], "text": "\u9519"}], "start_byte": 475, "end_byte": 504, "start_point": [13, 12], "end_point": [13, 41], "text": "\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519"}, {"type": "line_comment", "children": [], "start_byte": 505, "end_byte": 535, "start_point": [13, 42], "end_point": [13, 72], "text": "\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::"}, {"type": "}", "children": [], "start_byte": 544, "end_byte": 545, "start_point": [14, 8], "end_point": [14, 9], "text": "w"}], "start_byte": 461, "end_byte": 545, "start_point": [12, 15], "end_point": [14, 9], "text": "ge\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().w"}], "start_byte": 456, "end_byte": 545, "start_point": [12, 10], "end_point": [14, 9], "text": "message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().w"}], "start_byte": 360, "end_byte": 545, "start_point": [10, 14], "end_point": [14, 9], "text": "      \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().w"}], "start_byte": 354, "end_byte": 545, "start_point": [10, 8], "end_point": [14, 9], "text": "            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().w"}, {"type": ";", "children": [], "start_byte": 545, "end_byte": 546, "start_point": [14, 9], "end_point": [14, 10], "text": "r"}], "start_byte": 354, "end_byte": 546, "start_point": [10, 8], "end_point": [14, 10], "text": "            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().wr"}, {"type": "line_comment", "children": [], "start_byte": 556, "end_byte": 598, "start_point": [16, 8], "end_point": [16, 50], "text": "\\n\");\n        let _ = io::stderr().write_a"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 607, "end_byte": 610, "start_point": [17, 8], "end_point": [17, 11], "text": "NAM"}, {"type": "_", "children": [], "start_byte": 611, "end_byte": 612, "start_point": [17, 12], "end_point": [17, 13], "text": ")"}, {"type": "=", "children": [], "start_byte": 613, "end_byte": 614, "start_point": [17, 14], "end_point": [17, 15], "text": "\n"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 615, "end_byte": 617, "start_point": [17, 16], "end_point": [17, 18], "text": "  "}, {"type": "::", "children": [], "start_byte": 617, "end_byte": 619, "start_point": [17, 18], "end_point": [17, 20], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 619, "end_byte": 625, "start_point": [17, 20], "end_point": [17, 26], "text": "   let"}], "start_byte": 615, "end_byte": 625, "start_point": [17, 16], "end_point": [17, 26], "text": "       let"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 625, "end_byte": 626, "start_point": [17, 26], "end_point": [17, 27], "text": " "}, {"type": ")", "children": [], "start_byte": 626, "end_byte": 627, "start_point": [17, 27], "end_point": [17, 28], "text": "_"}], "start_byte": 625, "end_byte": 627, "start_point": [17, 26], "end_point": [17, 28], "text": " _"}], "start_byte": 615, "end_byte": 627, "start_point": [17, 16], "end_point": [17, 28], "text": "       let _"}, {"type": ".", "children": [], "start_byte": 627, "end_byte": 628, "start_point": [17, 28], "end_point": [17, 29], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 628, "end_byte": 637, "start_point": [17, 29], "end_point": [17, 38], "text": "= io::std"}], "start_byte": 615, "end_byte": 637, "start_point": [17, 16], "end_point": [17, 38], "text": "       let _ = io::std"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 637, "end_byte": 638, "start_point": [17, 38], "end_point": [17, 39], "text": "e"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 638, "end_byte": 640, "start_point": [17, 39], "end_point": [17, 41], "text": "rr"}, {"type": "escape_sequence", "children": [], "start_byte": 640, "end_byte": 642, "start_point": [17, 41], "end_point": [17, 43], "text": "()"}, {"type": "\"", "children": [], "start_byte": 642, "end_byte": 643, "start_point": [17, 43], "end_point": [17, 44], "text": "."}], "start_byte": 638, "end_byte": 643, "start_point": [17, 39], "end_point": [17, 44], "text": "rr()."}, {"type": ")", "children": [], "start_byte": 643, "end_byte": 644, "start_point": [17, 44], "end_point": [17, 45], "text": "w"}], "start_byte": 637, "end_byte": 644, "start_point": [17, 38], "end_point": [17, 45], "text": "err().w"}], "start_byte": 615, "end_byte": 644, "start_point": [17, 16], "end_point": [17, 45], "text": "       let _ = io::stderr().w"}, {"type": ";", "children": [], "start_byte": 644, "end_byte": 645, "start_point": [17, 45], "end_point": [17, 46], "text": "r"}], "start_byte": 607, "end_byte": 645, "start_point": [17, 8], "end_point": [17, 46], "text": "NAME);\n        let _ = io::stderr().wr"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 654, "end_byte": 657, "start_point": [18, 8], "end_point": [18, 11], "text": "sg."}, {"type": "_", "children": [], "start_byte": 658, "end_byte": 659, "start_point": [18, 12], "end_point": [18, 13], "text": "s"}, {"type": "=", "children": [], "start_byte": 660, "end_byte": 661, "start_point": [18, 14], "end_point": [18, 15], "text": "b"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 662, "end_byte": 664, "start_point": [18, 16], "end_point": [18, 18], "text": "te"}, {"type": "::", "children": [], "start_byte": 664, "end_byte": 666, "start_point": [18, 18], "end_point": [18, 20], "text": "s("}, {"type": "identifier", "children": [], "start_byte": 666, "end_byte": 672, "start_point": [18, 20], "end_point": [18, 26], "text": "));\n\n "}], "start_byte": 662, "end_byte": 672, "start_point": [18, 16], "end_point": [18, 26], "text": "tes());\n\n "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 672, "end_byte": 673, "start_point": [18, 26], "end_point": [18, 27], "text": " "}, {"type": ")", "children": [], "start_byte": 673, "end_byte": 674, "start_point": [18, 27], "end_point": [18, 28], "text": " "}], "start_byte": 672, "end_byte": 674, "start_point": [18, 26], "end_point": [18, 28], "text": "  "}], "start_byte": 662, "end_byte": 674, "start_point": [18, 16], "end_point": [18, 28], "text": "tes());\n\n   "}, {"type": ".", "children": [], "start_byte": 674, "end_byte": 675, "start_point": [18, 28], "end_point": [18, 29], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 675, "end_byte": 684, "start_point": [18, 29], "end_point": [18, 38], "text": "    // \u8f93\u51fa"}], "start_byte": 662, "end_byte": 684, "start_point": [18, 16], "end_point": [18, 38], "text": "tes());\n\n        // \u8f93\u51fa"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 684, "end_byte": 685, "start_point": [18, 38], "end_point": [18, 39], "text": "\u5f53"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 685, "end_byte": 686, "start_point": [18, 39], "end_point": [18, 40], "text": "\u524d"}, {"type": "identifier", "children": [], "start_byte": 686, "end_byte": 695, "start_point": [18, 40], "end_point": [18, 49], "text": "\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d"}], "start_byte": 685, "end_byte": 695, "start_point": [18, 39], "end_point": [18, 49], "text": "\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d"}, {"type": ")", "children": [], "start_byte": 695, "end_byte": 696, "start_point": [18, 49], "end_point": [18, 50], "text": "\u5b57"}], "start_byte": 684, "end_byte": 696, "start_point": [18, 38], "end_point": [18, 50], "text": "\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57"}], "start_byte": 662, "end_byte": 696, "start_point": [18, 16], "end_point": [18, 50], "text": "tes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57"}, {"type": ";", "children": [], "start_byte": 696, "end_byte": 697, "start_point": [18, 50], "end_point": [18, 51], "text": "\n"}], "start_byte": 654, "end_byte": 697, "start_point": [18, 8], "end_point": [18, 51], "text": "sg.as_bytes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 706, "end_byte": 709, "start_point": [19, 8], "end_point": [19, 11], "text": "et "}, {"type": "_", "children": [], "start_byte": 710, "end_byte": 711, "start_point": [19, 12], "end_point": [19, 13], "text": " "}, {"type": "=", "children": [], "start_byte": 712, "end_byte": 713, "start_point": [19, 14], "end_point": [19, 15], "text": " "}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 714, "end_byte": 716, "start_point": [19, 16], "end_point": [19, 18], "text": "o:"}, {"type": "::", "children": [], "start_byte": 716, "end_byte": 718, "start_point": [19, 18], "end_point": [19, 20], "text": ":s"}, {"type": "identifier", "children": [], "start_byte": 718, "end_byte": 724, "start_point": [19, 20], "end_point": [19, 26], "text": "tderr("}], "start_byte": 714, "end_byte": 724, "start_point": [19, 16], "end_point": [19, 26], "text": "o::stderr("}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 724, "end_byte": 725, "start_point": [19, 26], "end_point": [19, 27], "text": ")"}, {"type": ")", "children": [], "start_byte": 725, "end_byte": 726, "start_point": [19, 27], "end_point": [19, 28], "text": "."}], "start_byte": 724, "end_byte": 726, "start_point": [19, 26], "end_point": [19, 28], "text": ")."}], "start_byte": 714, "end_byte": 726, "start_point": [19, 16], "end_point": [19, 28], "text": "o::stderr()."}, {"type": ".", "children": [], "start_byte": 726, "end_byte": 727, "start_point": [19, 28], "end_point": [19, 29], "text": "w"}, {"type": "field_identifier", "children": [], "start_byte": 727, "end_byte": 736, "start_point": [19, 29], "end_point": [19, 38], "text": "rite_all("}], "start_byte": 714, "end_byte": 736, "start_point": [19, 16], "end_point": [19, 38], "text": "o::stderr().write_all("}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 736, "end_byte": 737, "start_point": [19, 38], "end_point": [19, 39], "text": "b"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 737, "end_byte": 740, "start_point": [19, 39], "end_point": [19, 42], "text": "\"\\t"}, {"type": ".", "children": [], "start_byte": 740, "end_byte": 741, "start_point": [19, 42], "end_point": [19, 43], "text": "I"}, {"type": "field_identifier", "children": [], "start_byte": 741, "end_byte": 749, "start_point": [19, 43], "end_point": [19, 51], "text": "nput fil"}], "start_byte": 737, "end_byte": 749, "start_point": [19, 39], "end_point": [19, 51], "text": "\"\\tInput fil"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 749, "end_byte": 750, "start_point": [19, 51], "end_point": [19, 52], "text": "e"}, {"type": ")", "children": [], "start_byte": 750, "end_byte": 751, "start_point": [19, 52], "end_point": [19, 53], "text": " "}], "start_byte": 749, "end_byte": 751, "start_point": [19, 51], "end_point": [19, 53], "text": "e "}], "start_byte": 737, "end_byte": 751, "start_point": [19, 39], "end_point": [19, 53], "text": "\"\\tInput file "}, {"type": ")", "children": [], "start_byte": 751, "end_byte": 752, "start_point": [19, 53], "end_point": [19, 54], "text": "="}], "start_byte": 736, "end_byte": 752, "start_point": [19, 38], "end_point": [19, 54], "text": "b\"\\tInput file ="}], "start_byte": 714, "end_byte": 752, "start_point": [19, 16], "end_point": [19, 54], "text": "o::stderr().write_all(b\"\\tInput file ="}, {"type": ";", "children": [], "start_byte": 752, "end_byte": 753, "start_point": [19, 54], "end_point": [19, 55], "text": " "}], "start_byte": 706, "end_byte": 753, "start_point": [19, 8], "end_point": [19, 55], "text": "et _ = io::stderr().write_all(b\"\\tInput file = "}, {"type": "line_comment", "children": [], "start_byte": 763, "end_byte": 808, "start_point": [21, 8], "end_point": [21, 53], "text": "  let _ = io::stderr().write_all(&IN_NAME);\n "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 817, "end_byte": 820, "start_point": [22, 8], "end_point": [22, 11], "text": "t _"}, {"type": "_", "children": [], "start_byte": 821, "end_byte": 822, "start_point": [22, 12], "end_point": [22, 13], "text": "="}, {"type": "=", "children": [], "start_byte": 823, "end_byte": 824, "start_point": [22, 14], "end_point": [22, 15], "text": "i"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 825, "end_byte": 827, "start_point": [22, 16], "end_point": [22, 18], "text": "::"}, {"type": "::", "children": [], "start_byte": 827, "end_byte": 829, "start_point": [22, 18], "end_point": [22, 20], "text": "st"}, {"type": "identifier", "children": [], "start_byte": 829, "end_byte": 835, "start_point": [22, 20], "end_point": [22, 26], "text": "derr()"}], "start_byte": 825, "end_byte": 835, "start_point": [22, 16], "end_point": [22, 26], "text": "::stderr()"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 835, "end_byte": 836, "start_point": [22, 26], "end_point": [22, 27], "text": "."}, {"type": ")", "children": [], "start_byte": 836, "end_byte": 837, "start_point": [22, 27], "end_point": [22, 28], "text": "w"}], "start_byte": 835, "end_byte": 837, "start_point": [22, 26], "end_point": [22, 28], "text": ".w"}], "start_byte": 825, "end_byte": 837, "start_point": [22, 16], "end_point": [22, 28], "text": "::stderr().w"}, {"type": ".", "children": [], "start_byte": 837, "end_byte": 838, "start_point": [22, 28], "end_point": [22, 29], "text": "r"}, {"type": "field_identifier", "children": [], "start_byte": 838, "end_byte": 847, "start_point": [22, 29], "end_point": [22, 38], "text": "ite_all(b"}], "start_byte": 825, "end_byte": 847, "start_point": [22, 16], "end_point": [22, 38], "text": "::stderr().write_all(b"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 847, "end_byte": 848, "start_point": [22, 38], "end_point": [22, 39], "text": "\""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 848, "end_byte": 850, "start_point": [22, 39], "end_point": [22, 41], "text": "\\n"}, {"type": "escape_sequence", "children": [], "start_byte": 850, "end_byte": 852, "start_point": [22, 41], "end_point": [22, 43], "text": "\")"}, {"type": "\"", "children": [], "start_byte": 865, "end_byte": 866, "start_point": [22, 56], "end_point": [22, 57], "text": "t"}], "start_byte": 848, "end_byte": 866, "start_point": [22, 39], "end_point": [22, 57], "text": "\\n\");\n\n        let"}, {"type": ")", "children": [], "start_byte": 866, "end_byte": 867, "start_point": [22, 57], "end_point": [22, 58], "text": " "}], "start_byte": 847, "end_byte": 867, "start_point": [22, 38], "end_point": [22, 58], "text": "\"\\n\");\n\n        let "}], "start_byte": 825, "end_byte": 867, "start_point": [22, 16], "end_point": [22, 58], "text": "::stderr().write_all(b\"\\n\");\n\n        let "}, {"type": ";", "children": [], "start_byte": 867, "end_byte": 868, "start_point": [22, 58], "end_point": [22, 59], "text": "_"}], "start_byte": 817, "end_byte": 868, "start_point": [22, 8], "end_point": [22, 59], "text": "t _ = io::stderr().write_all(b\"\\n\");\n\n        let _"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 877, "end_byte": 880, "start_point": [23, 8], "end_point": [23, 11], "text": "der"}, {"type": "_", "children": [], "start_byte": 881, "end_byte": 882, "start_point": [23, 12], "end_point": [23, 13], "text": "("}, {"type": "=", "children": [], "start_byte": 883, "end_byte": 884, "start_point": [23, 14], "end_point": [23, 15], "text": "."}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 885, "end_byte": 887, "start_point": [23, 16], "end_point": [23, 18], "text": "ri"}, {"type": "::", "children": [], "start_byte": 887, "end_byte": 889, "start_point": [23, 18], "end_point": [23, 20], "text": "te"}, {"type": "identifier", "children": [], "start_byte": 889, "end_byte": 895, "start_point": [23, 20], "end_point": [23, 26], "text": "_all(b"}], "start_byte": 885, "end_byte": 895, "start_point": [23, 16], "end_point": [23, 26], "text": "rite_all(b"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 895, "end_byte": 896, "start_point": [23, 26], "end_point": [23, 27], "text": "\""}, {"type": ")", "children": [], "start_byte": 896, "end_byte": 897, "start_point": [23, 27], "end_point": [23, 28], "text": "\\"}], "start_byte": 895, "end_byte": 897, "start_point": [23, 26], "end_point": [23, 28], "text": "\"\\"}], "start_byte": 885, "end_byte": 897, "start_point": [23, 16], "end_point": [23, 28], "text": "rite_all(b\"\\"}, {"type": ".", "children": [], "start_byte": 897, "end_byte": 898, "start_point": [23, 28], "end_point": [23, 29], "text": "t"}, {"type": "field_identifier", "children": [], "start_byte": 898, "end_byte": 907, "start_point": [23, 29], "end_point": [23, 38], "text": "Output fi"}], "start_byte": 885, "end_byte": 907, "start_point": [23, 16], "end_point": [23, 38], "text": "rite_all(b\"\\tOutput fi"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 907, "end_byte": 908, "start_point": [23, 38], "end_point": [23, 39], "text": "l"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 908, "end_byte": 909, "start_point": [23, 39], "end_point": [23, 40], "text": "e"}, {"type": "identifier", "children": [], "start_byte": 909, "end_byte": 916, "start_point": [23, 40], "end_point": [23, 47], "text": " = \");\n"}], "start_byte": 908, "end_byte": 916, "start_point": [23, 39], "end_point": [23, 47], "text": "e = \");\n"}, {"type": ")", "children": [], "start_byte": 916, "end_byte": 917, "start_point": [23, 47], "end_point": [23, 48], "text": " "}], "start_byte": 907, "end_byte": 917, "start_point": [23, 38], "end_point": [23, 48], "text": "le = \");\n "}], "start_byte": 885, "end_byte": 917, "start_point": [23, 16], "end_point": [23, 48], "text": "rite_all(b\"\\tOutput file = \");\n "}, {"type": ";", "children": [], "start_byte": 917, "end_byte": 918, "start_point": [23, 48], "end_point": [23, 49], "text": " "}], "start_byte": 877, "end_byte": 918, "start_point": [23, 8], "end_point": [23, 49], "text": "derr().write_all(b\"\\tOutput file = \");\n  "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 927, "end_byte": 930, "start_point": [24, 8], "end_point": [24, 11], "text": " _ "}, {"type": "_", "children": [], "start_byte": 931, "end_byte": 932, "start_point": [24, 12], "end_point": [24, 13], "text": " "}, {"type": "=", "children": [], "start_byte": 933, "end_byte": 934, "start_point": [24, 14], "end_point": [24, 15], "text": "o"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 935, "end_byte": 937, "start_point": [24, 16], "end_point": [24, 18], "text": ":s"}, {"type": "::", "children": [], "start_byte": 937, "end_byte": 939, "start_point": [24, 18], "end_point": [24, 20], "text": "td"}, {"type": "identifier", "children": [], "start_byte": 939, "end_byte": 945, "start_point": [24, 20], "end_point": [24, 26], "text": "err()."}], "start_byte": 935, "end_byte": 945, "start_point": [24, 16], "end_point": [24, 26], "text": ":stderr()."}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 945, "end_byte": 946, "start_point": [24, 26], "end_point": [24, 27], "text": "w"}, {"type": ")", "children": [], "start_byte": 946, "end_byte": 947, "start_point": [24, 27], "end_point": [24, 28], "text": "r"}], "start_byte": 945, "end_byte": 947, "start_point": [24, 26], "end_point": [24, 28], "text": "wr"}], "start_byte": 935, "end_byte": 947, "start_point": [24, 16], "end_point": [24, 28], "text": ":stderr().wr"}, {"type": ".", "children": [], "start_byte": 947, "end_byte": 948, "start_point": [24, 28], "end_point": [24, 29], "text": "i"}, {"type": "field_identifier", "children": [], "start_byte": 948, "end_byte": 957, "start_point": [24, 29], "end_point": [24, 38], "text": "te_all(&O"}], "start_byte": 935, "end_byte": 957, "start_point": [24, 16], "end_point": [24, 38], "text": ":stderr().write_all(&O"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 957, "end_byte": 958, "start_point": [24, 38], "end_point": [24, 39], "text": "U"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 958, "end_byte": 960, "start_point": [24, 39], "end_point": [24, 41], "text": "T_"}, {"type": "escape_sequence", "children": [], "start_byte": 960, "end_byte": 962, "start_point": [24, 41], "end_point": [24, 43], "text": "NA"}, {"type": "\"", "children": [], "start_byte": 962, "end_byte": 963, "start_point": [24, 43], "end_point": [24, 44], "text": "M"}], "start_byte": 958, "end_byte": 963, "start_point": [24, 39], "end_point": [24, 44], "text": "T_NAM"}, {"type": ")", "children": [], "start_byte": 963, "end_byte": 964, "start_point": [24, 44], "end_point": [24, 45], "text": "E"}], "start_byte": 957, "end_byte": 964, "start_point": [24, 38], "end_point": [24, 45], "text": "UT_NAME"}], "start_byte": 935, "end_byte": 964, "start_point": [24, 16], "end_point": [24, 45], "text": ":stderr().write_all(&OUT_NAME"}, {"type": ";", "children": [], "start_byte": 964, "end_byte": 965, "start_point": [24, 45], "end_point": [24, 46], "text": ")"}], "start_byte": 927, "end_byte": 965, "start_point": [24, 8], "end_point": [24, 46], "text": " _ = io::stderr().write_all(&OUT_NAME)"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 975, "end_byte": 978, "start_point": [26, 8], "end_point": [26, 11], "text": "let"}, {"type": "_", "children": [], "start_byte": 979, "end_byte": 980, "start_point": [26, 12], "end_point": [26, 13], "text": "_"}, {"type": "=", "children": [], "start_byte": 981, "end_byte": 982, "start_point": [26, 14], "end_point": [26, 15], "text": "="}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 983, "end_byte": 985, "start_point": [26, 16], "end_point": [26, 18], "text": "io"}, {"type": "::", "children": [], "start_byte": 985, "end_byte": 987, "start_point": [26, 18], "end_point": [26, 20], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 987, "end_byte": 993, "start_point": [26, 20], "end_point": [26, 26], "text": "stderr"}], "start_byte": 983, "end_byte": 993, "start_point": [26, 16], "end_point": [26, 26], "text": "io::stderr"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 993, "end_byte": 994, "start_point": [26, 26], "end_point": [26, 27], "text": "("}, {"type": ")", "children": [], "start_byte": 994, "end_byte": 995, "start_point": [26, 27], "end_point": [26, 28], "text": ")"}], "start_byte": 993, "end_byte": 995, "start_point": [26, 26], "end_point": [26, 28], "text": "()"}], "start_byte": 983, "end_byte": 995, "start_point": [26, 16], "end_point": [26, 28], "text": "io::stderr()"}, {"type": ".", "children": [], "start_byte": 995, "end_byte": 996, "start_point": [26, 28], "end_point": [26, 29], "text": "."}, {"type": "field_identifier", "children": [], "start_byte": 996, "end_byte": 1005, "start_point": [26, 29], "end_point": [26, 38], "text": "write_all"}], "start_byte": 983, "end_byte": 1005, "start_point": [26, 16], "end_point": [26, 38], "text": "io::stderr().write_all"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1005, "end_byte": 1006, "start_point": [26, 38], "end_point": [26, 39], "text": "("}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1006, "end_byte": 1008, "start_point": [26, 39], "end_point": [26, 41], "text": "b\""}, {"type": "escape_sequence", "children": [], "start_byte": 1008, "end_byte": 1010, "start_point": [26, 41], "end_point": [26, 43], "text": "\\n"}, {"type": "\"", "children": [], "start_byte": 1024, "end_byte": 1025, "start_point": [26, 57], "end_point": [26, 58], "text": "/"}], "start_byte": 1006, "end_byte": 1025, "start_point": [26, 39], "end_point": [26, 58], "text": "b\"\\n\");\n\n        //"}, {"type": ")", "children": [], "start_byte": 1025, "end_byte": 1026, "start_point": [26, 58], "end_point": [26, 59], "text": " "}], "start_byte": 1005, "end_byte": 1026, "start_point": [26, 38], "end_point": [26, 59], "text": "(b\"\\n\");\n\n        // "}], "start_byte": 983, "end_byte": 1026, "start_point": [26, 16], "end_point": [26, 59], "text": "io::stderr().write_all(b\"\\n\");\n\n        // "}, {"type": ";", "children": [], "start_byte": 1026, "end_byte": 1027, "start_point": [26, 59], "end_point": [26, 60], "text": "\u8bbe"}], "start_byte": 975, "end_byte": 1027, "start_point": [26, 8], "end_point": [26, 60], "text": "let _ = io::stderr().write_all(b\"\\n\");\n\n        // \u8bbe"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1036, "end_byte": 1039, "start_point": [27, 8], "end_point": [27, 11], "text": "\u5e8f\n "}, {"type": "_", "children": [], "start_byte": 1040, "end_byte": 1041, "start_point": [27, 12], "end_point": [27, 13], "text": " "}, {"type": "=", "children": [], "start_byte": 1042, "end_byte": 1043, "start_point": [27, 14], "end_point": [27, 15], "text": " "}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1044, "end_byte": 1046, "start_point": [27, 16], "end_point": [27, 18], "text": "  "}, {"type": "::", "children": [], "start_byte": 1046, "end_byte": 1048, "start_point": [27, 18], "end_point": [27, 20], "text": "if"}, {"type": "identifier", "children": [], "start_byte": 1048, "end_byte": 1054, "start_point": [27, 20], "end_point": [27, 26], "text": " op_mo"}], "start_byte": 1044, "end_byte": 1054, "start_point": [27, 16], "end_point": [27, 26], "text": "  if op_mo"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1054, "end_byte": 1055, "start_point": [27, 26], "end_point": [27, 27], "text": "d"}, {"type": ")", "children": [], "start_byte": 1055, "end_byte": 1056, "start_point": [27, 27], "end_point": [27, 28], "text": "e"}], "start_byte": 1054, "end_byte": 1056, "start_point": [27, 26], "end_point": [27, 28], "text": "de"}], "start_byte": 1044, "end_byte": 1056, "start_point": [27, 16], "end_point": [27, 28], "text": "  if op_mode"}, {"type": ".", "children": [], "start_byte": 1056, "end_byte": 1057, "start_point": [27, 28], "end_point": [27, 29], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1057, "end_byte": 1066, "start_point": [27, 29], "end_point": [27, 38], "text": "== 1 { se"}], "start_byte": 1044, "end_byte": 1066, "start_point": [27, 16], "end_point": [27, 38], "text": "  if op_mode == 1 { se"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1066, "end_byte": 1067, "start_point": [27, 38], "end_point": [27, 39], "text": "t"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1067, "end_byte": 1068, "start_point": [27, 39], "end_point": [27, 40], "text": "_"}, {"type": "identifier", "children": [], "start_byte": 1068, "end_byte": 1076, "start_point": [27, 40], "end_point": [27, 48], "text": "exit(3);"}], "start_byte": 1067, "end_byte": 1076, "start_point": [27, 39], "end_point": [27, 48], "text": "_exit(3);"}, {"type": ")", "children": [], "start_byte": 1076, "end_byte": 1077, "start_point": [27, 48], "end_point": [27, 49], "text": " "}], "start_byte": 1066, "end_byte": 1077, "start_point": [27, 38], "end_point": [27, 49], "text": "t_exit(3); "}], "start_byte": 1044, "end_byte": 1077, "start_point": [27, 16], "end_point": [27, 49], "text": "  if op_mode == 1 { set_exit(3); "}, {"type": ";", "children": [], "start_byte": 1077, "end_byte": 1078, "start_point": [27, 49], "end_point": [27, 50], "text": "}"}], "start_byte": 1036, "end_byte": 1078, "start_point": [27, 8], "end_point": [27, 50], "text": "\u5e8f\n        if op_mode == 1 { set_exit(3); }"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1087, "end_byte": 1090, "start_point": [28, 8], "end_point": [28, 11], "text": "et_"}, {"type": "_", "children": [], "start_byte": 1091, "end_byte": 1092, "start_point": [28, 12], "end_point": [28, 13], "text": "x"}, {"type": "=", "children": [], "start_byte": 1093, "end_byte": 1094, "start_point": [28, 14], "end_point": [28, 15], "text": "t"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "scoped_identifier", "children": [{"type": "identifier", "children": [], "start_byte": 1095, "end_byte": 1097, "start_point": [28, 16], "end_point": [28, 18], "text": "2)"}, {"type": "::", "children": [], "start_byte": 1097, "end_byte": 1099, "start_point": [28, 18], "end_point": [28, 20], "text": "; "}, {"type": "identifier", "children": [], "start_byte": 1099, "end_byte": 1105, "start_point": [28, 20], "end_point": [28, 26], "text": "}\n    "}], "start_byte": 1095, "end_byte": 1105, "start_point": [28, 16], "end_point": [28, 26], "text": "2); }\n    "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1105, "end_byte": 1106, "start_point": [28, 26], "end_point": [28, 27], "text": "}"}, {"type": ")", "children": [], "start_byte": 1106, "end_byte": 1107, "start_point": [28, 27], "end_point": [28, 28], "text": "\n"}], "start_byte": 1105, "end_byte": 1107, "start_point": [28, 26], "end_point": [28, 28], "text": "}\n"}], "start_byte": 1095, "end_byte": 1107, "start_point": [28, 16], "end_point": [28, 28], "text": "2); }\n    }\n"}, {"type": ".", "children": [], "start_byte": 1107, "end_byte": 1108, "start_point": [28, 28], "end_point": [28, 29], "text": "\n"}, {"type": "field_identifier", "children": [], "start_byte": 1108, "end_byte": 1117, "start_point": [28, 29], "end_point": [28, 38], "text": "    // pr"}], "start_byte": 1095, "end_byte": 1117, "start_point": [28, 16], "end_point": [28, 38], "text": "2); }\n    }\n\n    // pr"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1117, "end_byte": 1118, "start_point": [28, 38], "end_point": [28, 39], "text": "o"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1118, "end_byte": 1120, "start_point": [28, 39], "end_point": [28, 41], "text": "ce"}, {"type": "escape_sequence", "children": [], "start_byte": 1120, "end_byte": 1122, "start_point": [28, 41], "end_point": [28, 43], "text": "ss"}, {"type": "\"", "children": [], "start_byte": 1122, "end_byte": 1123, "start_point": [28, 43], "end_point": [28, 44], "text": ":"}], "start_byte": 1118, "end_byte": 1123, "start_point": [28, 39], "end_point": [28, 44], "text": "cess:"}, {"type": ")", "children": [], "start_byte": 1123, "end_byte": 1124, "start_point": [28, 44], "end_point": [28, 45], "text": ":"}], "start_byte": 1117, "end_byte": 1124, "start_point": [28, 38], "end_point": [28, 45], "text": "ocess::"}], "start_byte": 1095, "end_byte": 1124, "start_point": [28, 16], "end_point": [28, 45], "text": "2); }\n    }\n\n    // process::"}, {"type": ";", "children": [], "start_byte": 1124, "end_byte": 1125, "start_point": [28, 45], "end_point": [28, 46], "text": "e"}], "start_byte": 1087, "end_byte": 1125, "start_point": [28, 8], "end_point": [28, 46], "text": "et_exit(2); }\n    }\n\n    // process::e"}, {"type": "line_comment", "children": [], "start_byte": 1135, "end_byte": 1171, "start_point": [30, 8], "end_point": [30, 44], "text": " { exitValue });\n}\n\n\n\n// pub fn my_s"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 1180, "end_byte": 1182, "start_point": [31, 8], "end_point": [31, 10], "text": "_s"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1183, "end_byte": 1190, "start_point": [31, 11], "end_point": [31, 18], "text": "gbus_ca"}, {"type": "==", "children": [], "start_byte": 1191, "end_byte": 1193, "start_point": [31, 19], "end_point": [31, 21], "text": "ch"}, {"type": "integer_literal", "children": [], "start_byte": 1194, "end_byte": 1195, "start_point": [31, 22], "end_point": [31, 23], "text": "r"}], "start_byte": 1183, "end_byte": 1195, "start_point": [31, 11], "end_point": [31, 23], "text": "gbus_catcher"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1196, "end_byte": 1197, "start_point": [31, 24], "end_point": [31, 25], "text": "n"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1198, "end_byte": 1206, "start_point": [31, 26], "end_point": [31, 34], "text": " i32) {\n"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1206, "end_byte": 1207, "start_point": [31, 34], "end_point": [31, 35], "text": "/"}, {"type": "integer_literal", "children": [], "start_byte": 1207, "end_byte": 1208, "start_point": [31, 35], "end_point": [31, 36], "text": "/"}, {"type": ")", "children": [], "start_byte": 1208, "end_byte": 1209, "start_point": [31, 36], "end_point": [31, 37], "text": " "}], "start_byte": 1206, "end_byte": 1209, "start_point": [31, 34], "end_point": [31, 37], "text": "// "}], "start_byte": 1198, "end_byte": 1209, "start_point": [31, 26], "end_point": [31, 37], "text": " i32) {\n// "}, {"type": ";", "children": [], "start_byte": 1209, "end_byte": 1210, "start_point": [31, 37], "end_point": [31, 38], "text": " "}], "start_byte": 1198, "end_byte": 1210, "start_point": [31, 26], "end_point": [31, 38], "text": " i32) {\n//  "}, {"type": "}", "children": [], "start_byte": 1211, "end_byte": 1212, "start_point": [31, 39], "end_point": [31, 40], "text": " "}], "start_byte": 1196, "end_byte": 1212, "start_point": [31, 24], "end_point": [31, 40], "text": "n: i32) {\n//    "}, {"type": "else_clause", "children": [{"type": "else", "children": [], "start_byte": 1213, "end_byte": 1217, "start_point": [31, 41], "end_point": [31, 45], "text": "let "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1218, "end_byte": 1219, "start_point": [31, 46], "end_point": [31, 47], "text": "s"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1220, "end_byte": 1228, "start_point": [31, 48], "end_point": [31, 56], "text": " = if un"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1228, "end_byte": 1229, "start_point": [31, 56], "end_point": [31, 57], "text": "s"}, {"type": "integer_literal", "children": [], "start_byte": 1229, "end_byte": 1230, "start_point": [31, 57], "end_point": [31, 58], "text": "a"}, {"type": ")", "children": [], "start_byte": 1230, "end_byte": 1231, "start_point": [31, 58], "end_point": [31, 59], "text": "f"}], "start_byte": 1228, "end_byte": 1231, "start_point": [31, 56], "end_point": [31, 59], "text": "saf"}], "start_byte": 1220, "end_byte": 1231, "start_point": [31, 48], "end_point": [31, 59], "text": " = if unsaf"}, {"type": ";", "children": [], "start_byte": 1231, "end_byte": 1232, "start_point": [31, 59], "end_point": [31, 60], "text": "e"}], "start_byte": 1220, "end_byte": 1232, "start_point": [31, 48], "end_point": [31, 60], "text": " = if unsafe"}, {"type": "}", "children": [], "start_byte": 1233, "end_byte": 1234, "start_point": [31, 61], "end_point": [31, 62], "text": "{"}], "start_byte": 1218, "end_byte": 1234, "start_point": [31, 46], "end_point": [31, 62], "text": "sg = if unsafe {"}], "start_byte": 1213, "end_byte": 1234, "start_point": [31, 41], "end_point": [31, 62], "text": "let msg = if unsafe {"}], "start_byte": 1180, "end_byte": 1234, "start_point": [31, 8], "end_point": [31, 62], "text": "_sigbus_catcher(n: i32) {\n//     let msg = if unsafe {"}], "start_byte": 1180, "end_byte": 1234, "start_point": [31, 8], "end_point": [31, 62], "text": "_sigbus_catcher(n: i32) {\n//     let msg = if unsafe {"}, {"type": "}", "children": [], "start_byte": 1239, "end_byte": 1240, "start_point": [32, 4], "end_point": [32, 5], "text": "O"}], "start_byte": 296, "end_byte": 1240, "start_point": [8, 11], "end_point": [32, 5], "text": "{\n        // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u5224\u65ad\u9519\u8bef\u6d88\u606f\n        msg = if op_mode == 1 {\n            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().write_all(b\"\\n\");\n        let _ = io::stderr().write_all(&PROG_NAME);\n        let _ = io::stderr().write_all(msg.as_bytes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n        let _ = io::stderr().write_all(b\"\\tInput file = \");\n        let _ = io::stderr().write_all(&IN_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        let _ = io::stderr().write_all(b\"\\tOutput file = \");\n        let _ = io::stderr().write_all(&OUT_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        // \u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\u5e76\u9000\u51fa\u7a0b\u5e8f\n        if op_mode == 1 { set_exit(3); } else { set_exit(2); }\n    }\n\n    // process::exit(unsafe { exitValue });\n}\n\n\n\n// pub fn my_sigsegv_or_sigbus_catcher(n: i32) {\n//     let msg = if unsafe { OP_MO"}], "start_byte": 289, "end_byte": 1240, "start_point": [8, 4], "end_point": [32, 5], "text": "unsafe {\n        // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u5224\u65ad\u9519\u8bef\u6d88\u606f\n        msg = if op_mode == 1 {\n            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().write_all(b\"\\n\");\n        let _ = io::stderr().write_all(&PROG_NAME);\n        let _ = io::stderr().write_all(msg.as_bytes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n        let _ = io::stderr().write_all(b\"\\tInput file = \");\n        let _ = io::stderr().write_all(&IN_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        let _ = io::stderr().write_all(b\"\\tOutput file = \");\n        let _ = io::stderr().write_all(&OUT_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        // \u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\u5e76\u9000\u51fa\u7a0b\u5e8f\n        if op_mode == 1 { set_exit(3); } else { set_exit(2); }\n    }\n\n    // process::exit(unsafe { exitValue });\n}\n\n\n\n// pub fn my_sigsegv_or_sigbus_catcher(n: i32) {\n//     let msg = if unsafe { OP_MO"}], "start_byte": 289, "end_byte": 1240, "start_point": [8, 4], "end_point": [32, 5], "text": "unsafe {\n        // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u5224\u65ad\u9519\u8bef\u6d88\u606f\n        msg = if op_mode == 1 {\n            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().write_all(b\"\\n\");\n        let _ = io::stderr().write_all(&PROG_NAME);\n        let _ = io::stderr().write_all(msg.as_bytes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n        let _ = io::stderr().write_all(b\"\\tInput file = \");\n        let _ = io::stderr().write_all(&IN_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        let _ = io::stderr().write_all(b\"\\tOutput file = \");\n        let _ = io::stderr().write_all(&OUT_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        // \u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\u5e76\u9000\u51fa\u7a0b\u5e8f\n        if op_mode == 1 { set_exit(3); } else { set_exit(2); }\n    }\n\n    // process::exit(unsafe { exitValue });\n}\n\n\n\n// pub fn my_sigsegv_or_sigbus_catcher(n: i32) {\n//     let msg = if unsafe { OP_MO"}, {"type": "line_comment", "children": [], "start_byte": 1246, "end_byte": 1285, "start_point": [34, 4], "end_point": [34, 43], "text": "= 1 {\n//         \"...\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5177\u4f53\u5185\u5bb9"}, {"type": "}", "children": [], "start_byte": 1286, "end_byte": 1287, "start_point": [35, 0], "end_point": [35, 1], "text": "\u7b80"}], "start_byte": 264, "end_byte": 1287, "start_point": [6, 50], "end_point": [35, 1], "text": "{\n    let msg: &str;\n    unsafe {\n        // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u5224\u65ad\u9519\u8bef\u6d88\u606f\n        msg = if op_mode == 1 {\n            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().write_all(b\"\\n\");\n        let _ = io::stderr().write_all(&PROG_NAME);\n        let _ = io::stderr().write_all(msg.as_bytes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n        let _ = io::stderr().write_all(b\"\\tInput file = \");\n        let _ = io::stderr().write_all(&IN_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        let _ = io::stderr().write_all(b\"\\tOutput file = \");\n        let _ = io::stderr().write_all(&OUT_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        // \u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\u5e76\u9000\u51fa\u7a0b\u5e8f\n        if op_mode == 1 { set_exit(3); } else { set_exit(2); }\n    }\n\n    // process::exit(unsafe { exitValue });\n}\n\n\n\n// pub fn my_sigsegv_or_sigbus_catcher(n: i32) {\n//     let msg = if unsafe { OP_MODE } == 1 {\n//         \"...\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5177\u4f53\u5185\u5bb9\u5df2\u7b80"}], "start_byte": 214, "end_byte": 1287, "start_point": [6, 0], "end_point": [35, 1], "text": "pub fn my_sigsegv_or_sigbus_catcher(op_mode: i32) {\n    let msg: &str;\n    unsafe {\n        // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u5224\u65ad\u9519\u8bef\u6d88\u606f\n        msg = if op_mode == 1 {\n            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().write_all(b\"\\n\");\n        let _ = io::stderr().write_all(&PROG_NAME);\n        let _ = io::stderr().write_all(msg.as_bytes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n        let _ = io::stderr().write_all(b\"\\tInput file = \");\n        let _ = io::stderr().write_all(&IN_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        let _ = io::stderr().write_all(b\"\\tOutput file = \");\n        let _ = io::stderr().write_all(&OUT_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        // \u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\u5e76\u9000\u51fa\u7a0b\u5e8f\n        if op_mode == 1 { set_exit(3); } else { set_exit(2); }\n    }\n\n    // process::exit(unsafe { exitValue });\n}\n\n\n\n// pub fn my_sigsegv_or_sigbus_catcher(n: i32) {\n//     let msg = if unsafe { OP_MODE } == 1 {\n//         \"...\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5177\u4f53\u5185\u5bb9\u5df2\u7b80"}, {"type": "line_comment", "children": [], "start_byte": 1291, "end_byte": 1339, "start_point": [39, 0], "end_point": [39, 48], "text": "     } else {\n//         \"...\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5177\u4f53\u5185\u5bb9"}, {"type": "line_comment", "children": [], "start_byte": 1340, "end_byte": 1385, "start_point": [40, 0], "end_point": [40, 45], "text": "\u7b80\u7565\n//     };\n\n//     // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n//     "}, {"type": "line_comment", "children": [], "start_byte": 1386, "end_byte": 1454, "start_point": [41, 0], "end_point": [41, 68], "text": "et stderr = std::fs::OpenOptions::new().write(true).open(\"/dev/stder"}, {"type": "line_comment", "children": [], "start_byte": 1455, "end_byte": 1470, "start_point": [42, 0], "end_point": [42, 15], "text": "\").unwrap().int"}, {"type": "line_comment", "children": [], "start_byte": 1471, "end_byte": 1542, "start_point": [43, 0], "end_point": [43, 71], "text": "_raw_fd();\n//     let _ = write(stderr, b\"\\n\");\n//     let _ = write(st"}, {"type": "line_comment", "children": [], "start_byte": 1543, "end_byte": 1552, "start_point": [44, 0], "end_point": [44, 9], "text": "err, PROG"}, {"type": "line_comment", "children": [], "start_byte": 1554, "end_byte": 1603, "start_point": [46, 0], "end_point": [46, 49], "text": "AME.as_bytes());\n//     let _ = write(stderr, msg"}, {"type": "line_comment", "children": [], "start_byte": 1604, "end_byte": 1707, "start_point": [47, 0], "end_point": [47, 103], "text": "as_bytes());\n\n//     // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n//     let msg = \"\\tInput file = \";\n//     let _ = write(stderr,"}, {"type": "line_comment", "children": [], "start_byte": 1708, "end_byte": 1744, "start_point": [48, 0], "end_point": [48, 36], "text": "msg.as_bytes());\n//     let _ = writ"}, {"type": "line_comment", "children": [], "start_byte": 1745, "end_byte": 1796, "start_point": [49, 0], "end_point": [49, 51], "text": "(stderr, IN_NAME.as_bytes());\n//     let _ = write("}, {"type": "line_comment", "children": [], "start_byte": 1797, "end_byte": 1842, "start_point": [50, 0], "end_point": [50, 45], "text": "tderr, b\"\\n\");\n\n//     let msg = \"\\tOutput fi"}, {"type": "line_comment", "children": [], "start_byte": 1844, "end_byte": 1896, "start_point": [52, 0], "end_point": [52, 52], "text": " = \";\n//     let _ = write(stderr, msg.as_bytes());\n"}, {"type": "line_comment", "children": [], "start_byte": 1897, "end_byte": 1932, "start_point": [53, 0], "end_point": [53, 35], "text": "/     let _ = write(stderr, OUT_NAM"}, {"type": "line_comment", "children": [], "start_byte": 1933, "end_byte": 1978, "start_point": [54, 0], "end_point": [54, 45], "text": ".as_bytes());\n//     let _ = write(stderr, b\""}, {"type": "line_comment", "children": [], "start_byte": 1979, "end_byte": 2028, "start_point": [55, 0], "end_point": [55, 49], "text": "n\");\n\n//     // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\uff0c\u5e76\u9000\u51fa\u7a0b\u5e8f\n//     if unsa"}, {"type": "line_comment", "children": [], "start_byte": 2029, "end_byte": 2065, "start_point": [56, 0], "end_point": [56, 36], "text": "e { OP_MODE } == 1 {\n//         set_"}, {"type": "line_comment", "children": [], "start_byte": 2067, "end_byte": 2103, "start_point": [58, 0], "end_point": [58, 36], "text": "it(3);\n//     } else {\n//         se"}, {"type": "line_comment", "children": [], "start_byte": 2104, "end_byte": 2149, "start_point": [59, 0], "end_point": [59, 45], "text": "_exit(2);\n//     }\n//     process::exit(unsaf"}, {"type": "line_comment", "children": [], "start_byte": 2150, "end_byte": 2200, "start_point": [60, 0], "end_point": [60, 50], "text": " { EXIT_VALUE });\n// }"}, {"type": "line_comment", "children": [], "start_byte": 2201, "end_byte": 2237, "start_point": [61, 0], "end_point": [61, 36], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2239, "end_byte": 2303, "start_point": [63, 0], "end_point": [63, 64], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2304, "end_byte": 2339, "start_point": [64, 0], "end_point": [64, 35], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2340, "end_byte": 2363, "start_point": [65, 0], "end_point": [65, 23], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2364, "end_byte": 2379, "start_point": [66, 0], "end_point": [66, 15], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2380, "end_byte": 2403, "start_point": [67, 0], "end_point": [67, 23], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2404, "end_byte": 2412, "start_point": [68, 0], "end_point": [68, 8], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2413, "end_byte": 2457, "start_point": [69, 0], "end_point": [69, 44], "text": ""}, {"type": "line_comment", "children": [], "start_byte": 2458, "end_byte": 2462, "start_point": [70, 0], "end_point": [70, 4], "text": ""}], "start_byte": 0, "end_byte": 2462, "start_point": [0, 0], "end_point": [70, 4], "text": "use crate::bzip2::scc_90_root_52_setExit::*;\nuse crate::global_vars::bzip2_c5::{exitValue, IN_NAME, OP_MODE, OUT_NAME};\nuse crate::global_vars::bzip2_c2::{PROG_NAME};\nuse std::io::{self, Write};\nuse std::process;\n\npub fn my_sigsegv_or_sigbus_catcher(op_mode: i32) {\n    let msg: &str;\n    unsafe {\n        // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u5224\u65ad\u9519\u8bef\u6d88\u606f\n        msg = if op_mode == 1 {\n            \"Compression error message\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        } else {\n            \"Decompression error message\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\n        };\n\n        // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n        let _ = io::stderr().write_all(b\"\\n\");\n        let _ = io::stderr().write_all(&PROG_NAME);\n        let _ = io::stderr().write_all(msg.as_bytes());\n\n        // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n        let _ = io::stderr().write_all(b\"\\tInput file = \");\n        let _ = io::stderr().write_all(&IN_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        let _ = io::stderr().write_all(b\"\\tOutput file = \");\n        let _ = io::stderr().write_all(&OUT_NAME);\n        let _ = io::stderr().write_all(b\"\\n\");\n\n        // \u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\u5e76\u9000\u51fa\u7a0b\u5e8f\n        if op_mode == 1 { set_exit(3); } else { set_exit(2); }\n    }\n\n    // process::exit(unsafe { exitValue });\n}\n\n\n\n// pub fn my_sigsegv_or_sigbus_catcher(n: i32) {\n//     let msg = if unsafe { OP_MODE } == 1 {\n//         \"...\" // \u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5177\u4f53\u5185\u5bb9\u5df2\u7b80\u7565\n//     } else {\n//         \"...\" // \u89e3\u538b\u7f29\u65f6\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5177\u4f53\u5185\u5bb9\u5df2\u7b80\u7565\n//     };\n\n//     // \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa\n//     let stderr = std::fs::OpenOptions::new().write(true).open(\"/dev/stderr\").unwrap().into_raw_fd();\n//     let _ = write(stderr, b\"\\n\");\n//     let _ = write(stderr, PROG_NAME.as_bytes());\n//     let _ = write(stderr, msg.as_bytes());\n\n//     // \u8f93\u51fa\u5f53\u524d\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u5b57\n//     let msg = \"\\tInput file = \";\n//     let _ = write(stderr, msg.as_bytes());\n//     let _ = write(stderr, IN_NAME.as_bytes());\n//     let _ = write(stderr, b\"\\n\");\n\n//     let msg = \"\\tOutput file = \";\n//     let _ = write(stderr, msg.as_bytes());\n//     let _ = write(stderr, OUT_NAME.as_bytes());\n//     let _ = write(stderr, b\"\\n\");\n\n//     // \u6839\u636e\u64cd\u4f5c\u6a21\u5f0f\u8bbe\u7f6e\u9000\u51fa\u72b6\u6001\uff0c\u5e76\u9000\u51fa\u7a0b\u5e8f\n//     if unsafe { OP_MODE } == 1 {\n//         set_exit(3);\n//     } else {\n//         set_exit(2);\n//     }\n//     process::exit(unsafe { EXIT_VALUE });\n// }"}