{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 0, "end_byte": 3, "start_point": [0, 0], "end_point": [0, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 4, "end_byte": 9, "start_point": [0, 4], "end_point": [0, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 9, "end_byte": 11, "start_point": [0, 9], "end_point": [0, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 11, "end_byte": 22, "start_point": [0, 11], "end_point": [0, 22], "text": "global_vars"}], "start_byte": 4, "end_byte": 22, "start_point": [0, 4], "end_point": [0, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 22, "end_byte": 24, "start_point": [0, 22], "end_point": [0, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 24, "end_byte": 32, "start_point": [0, 24], "end_point": [0, 32], "text": "bzip2_c2"}], "start_byte": 4, "end_byte": 32, "start_point": [0, 4], "end_point": [0, 32], "text": "crate::global_vars::bzip2_c2"}, {"type": "::", "children": [], "start_byte": 32, "end_byte": 34, "start_point": [0, 32], "end_point": [0, 34], "text": "::"}, {"type": "*", "children": [], "start_byte": 34, "end_byte": 35, "start_point": [0, 34], "end_point": [0, 35], "text": "*"}], "start_byte": 4, "end_byte": 35, "start_point": [0, 4], "end_point": [0, 35], "text": "crate::global_vars::bzip2_c2::*"}, {"type": ";", "children": [], "start_byte": 35, "end_byte": 36, "start_point": [0, 35], "end_point": [0, 36], "text": ";"}], "start_byte": 0, "end_byte": 36, "start_point": [0, 0], "end_point": [0, 36], "text": "use crate::global_vars::bzip2_c2::*;"}, {"type": "line_comment", "children": [], "start_byte": 37, "end_byte": 83, "start_point": [1, 0], "end_point": [1, 46], "text": "// \u68c0\u67e5\u5b57\u7b26\u4e32s\u662f\u5426\u4ee5suffix\u4e3a\u540e\u7f00\u3002\npub fn has_suffix(s: &["}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 84, "end_byte": 87, "start_point": [2, 0], "end_point": [2, 3], "text": "har"}], "start_byte": 84, "end_byte": 87, "start_point": [2, 0], "end_point": [2, 3], "text": "har"}, {"type": "fn", "children": [], "start_byte": 88, "end_byte": 90, "start_point": [2, 4], "end_point": [2, 6], "text": ", "}, {"type": "identifier", "children": [], "start_byte": 91, "end_byte": 101, "start_point": [2, 7], "end_point": [2, 17], "text": "uffix: &[C"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 101, "end_byte": 102, "start_point": [2, 17], "end_point": [2, 18], "text": "h"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 102, "end_byte": 103, "start_point": [2, 18], "end_point": [2, 19], "text": "a"}, {"type": ":", "children": [], "start_byte": 103, "end_byte": 104, "start_point": [2, 19], "end_point": [2, 20], "text": "r"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 105, "end_byte": 106, "start_point": [2, 21], "end_point": [2, 22], "text": ")"}, {"type": "array_type", "children": [{"type": "[", "children": [], "start_byte": 106, "end_byte": 107, "start_point": [2, 22], "end_point": [2, 23], "text": " "}, {"type": "type_identifier", "children": [], "start_byte": 107, "end_byte": 111, "start_point": [2, 23], "end_point": [2, 27], "text": "-> b"}, {"type": "]", "children": [], "start_byte": 111, "end_byte": 112, "start_point": [2, 27], "end_point": [2, 28], "text": "o"}], "start_byte": 106, "end_byte": 112, "start_point": [2, 22], "end_point": [2, 28], "text": " -> bo"}], "start_byte": 105, "end_byte": 112, "start_point": [2, 21], "end_point": [2, 28], "text": ") -> bo"}], "start_byte": 102, "end_byte": 112, "start_point": [2, 18], "end_point": [2, 28], "text": "ar]) -> bo"}, {"type": ",", "children": [], "start_byte": 112, "end_byte": 113, "start_point": [2, 28], "end_point": [2, 29], "text": "o"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 114, "end_byte": 120, "start_point": [2, 30], "end_point": [2, 36], "text": " {\n   "}, {"type": ":", "children": [], "start_byte": 120, "end_byte": 121, "start_point": [2, 36], "end_point": [2, 37], "text": " "}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 122, "end_byte": 123, "start_point": [2, 38], "end_point": [2, 39], "text": "/"}, {"type": "array_type", "children": [{"type": "[", "children": [], "start_byte": 123, "end_byte": 124, "start_point": [2, 39], "end_point": [2, 40], "text": " "}, {"type": "type_identifier", "children": [], "start_byte": 124, "end_byte": 128, "start_point": [2, 40], "end_point": [2, 44], "text": "\u83b7\u53d6s\u7684"}, {"type": "]", "children": [], "start_byte": 128, "end_byte": 129, "start_point": [2, 44], "end_point": [2, 45], "text": "\u957f"}], "start_byte": 123, "end_byte": 129, "start_point": [2, 39], "end_point": [2, 45], "text": " \u83b7\u53d6s\u7684\u957f"}], "start_byte": 122, "end_byte": 129, "start_point": [2, 38], "end_point": [2, 45], "text": "/ \u83b7\u53d6s\u7684\u957f"}], "start_byte": 114, "end_byte": 129, "start_point": [2, 30], "end_point": [2, 45], "text": " {\n    // \u83b7\u53d6s\u7684\u957f"}, {"type": ")", "children": [], "start_byte": 129, "end_byte": 130, "start_point": [2, 45], "end_point": [2, 46], "text": "\u5ea6"}], "start_byte": 101, "end_byte": 130, "start_point": [2, 17], "end_point": [2, 46], "text": "har]) -> bool {\n    // \u83b7\u53d6s\u7684\u957f\u5ea6"}, {"type": "->", "children": [], "start_byte": 131, "end_byte": 133, "start_point": [2, 47], "end_point": [2, 49], "text": "  "}, {"type": "primitive_type", "children": [], "start_byte": 134, "end_byte": 138, "start_point": [2, 50], "end_point": [2, 54], "text": " let"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 139, "end_byte": 140, "start_point": [2, 55], "end_point": [2, 56], "text": "n"}, {"type": "line_comment", "children": [], "start_byte": 145, "end_byte": 164, "start_point": [3, 4], "end_point": [3, 23], "text": ".len(); \n    // \u83b7\u53d6s"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 169, "end_byte": 172, "start_point": [4, 4], "end_point": [4, 7], "text": "\u7684\u957f\u5ea6"}, {"type": "identifier", "children": [], "start_byte": 173, "end_byte": 175, "start_point": [4, 8], "end_point": [4, 10], "text": "  "}, {"type": "=", "children": [], "start_byte": 176, "end_byte": 177, "start_point": [4, 11], "end_point": [4, 12], "text": " "}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 178, "end_byte": 179, "start_point": [4, 13], "end_point": [4, 14], "text": "e"}, {"type": ".", "children": [], "start_byte": 179, "end_byte": 180, "start_point": [4, 14], "end_point": [4, 15], "text": "t"}, {"type": "field_identifier", "children": [], "start_byte": 180, "end_byte": 183, "start_point": [4, 15], "end_point": [4, 18], "text": " nx"}], "start_byte": 178, "end_byte": 183, "start_point": [4, 13], "end_point": [4, 18], "text": "et nx"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 183, "end_byte": 184, "start_point": [4, 18], "end_point": [4, 19], "text": " "}, {"type": ")", "children": [], "start_byte": 184, "end_byte": 185, "start_point": [4, 19], "end_point": [4, 20], "text": "="}], "start_byte": 183, "end_byte": 185, "start_point": [4, 18], "end_point": [4, 20], "text": " ="}], "start_byte": 178, "end_byte": 185, "start_point": [4, 13], "end_point": [4, 20], "text": "et nx ="}, {"type": ";", "children": [], "start_byte": 185, "end_byte": 186, "start_point": [4, 20], "end_point": [4, 21], "text": " "}], "start_byte": 169, "end_byte": 186, "start_point": [4, 4], "end_point": [4, 21], "text": "\u7684\u957f\u5ea6\n    let nx = "}, {"type": "line_comment", "children": [], "start_byte": 192, "end_byte": 216, "start_point": [5, 4], "end_point": [5, 28], "text": ".len(); \n    // \u5982\u679cs\u7684\u957f\u5ea6\u5c0f\u4e8e"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 221, "end_byte": 224, "start_point": [6, 4], "end_point": [6, 7], "text": "x\u7684\u957f"}, {"type": "identifier", "children": [], "start_byte": 225, "end_byte": 227, "start_point": [6, 8], "end_point": [6, 10], "text": "\uff0c\u5219"}, {"type": "=", "children": [], "start_byte": 228, "end_byte": 229, "start_point": [6, 11], "end_point": [6, 12], "text": "\u56de"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 230, "end_byte": 236, "start_point": [6, 13], "end_point": [6, 19], "text": "alse\n "}, {"type": ".", "children": [], "start_byte": 236, "end_byte": 237, "start_point": [6, 19], "end_point": [6, 20], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 237, "end_byte": 240, "start_point": [6, 20], "end_point": [6, 23], "text": "  i"}], "start_byte": 230, "end_byte": 240, "start_point": [6, 13], "end_point": [6, 23], "text": "alse\n    i"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 240, "end_byte": 241, "start_point": [6, 23], "end_point": [6, 24], "text": "f"}, {"type": ")", "children": [], "start_byte": 241, "end_byte": 242, "start_point": [6, 24], "end_point": [6, 25], "text": " "}], "start_byte": 240, "end_byte": 242, "start_point": [6, 23], "end_point": [6, 25], "text": "f "}], "start_byte": 230, "end_byte": 242, "start_point": [6, 13], "end_point": [6, 25], "text": "alse\n    if "}, {"type": ";", "children": [], "start_byte": 242, "end_byte": 243, "start_point": [6, 25], "end_point": [6, 26], "text": "n"}], "start_byte": 221, "end_byte": 243, "start_point": [6, 4], "end_point": [6, 26], "text": "x\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56defalse\n    if n"}, {"type": "line_comment", "children": [], "start_byte": 249, "end_byte": 306, "start_point": [7, 4], "end_point": [7, 61], "text": " {\n        return false;\n    }\n    // \u6bd4\u8f83s\u7684\u6700\u540e\u51e0\u4e2a\u5b57\u7b26\u548csuffix\u662f\u5426"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 311, "end_byte": 313, "start_point": [8, 4], "end_point": [8, 6], "text": "\u5219\u8fd4"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 314, "end_byte": 316, "start_point": [8, 7], "end_point": [8, 9], "text": "tr"}, {"type": "<", "children": [], "start_byte": 317, "end_byte": 318, "start_point": [8, 10], "end_point": [8, 11], "text": "e"}, {"type": "identifier", "children": [], "start_byte": 319, "end_byte": 321, "start_point": [8, 12], "end_point": [8, 14], "text": "\u5426\u5219"}], "start_byte": 314, "end_byte": 321, "start_point": [8, 7], "end_point": [8, 14], "text": "true\uff0c\u5426\u5219"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 322, "end_byte": 323, "start_point": [8, 15], "end_point": [8, 16], "text": "\u56de"}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 332, "end_byte": 338, "start_point": [9, 8], "end_point": [9, 14], "text": " &s[(n"}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 339, "end_byte": 344, "start_point": [9, 15], "end_point": [9, 20], "text": "-nx)."}], "start_byte": 339, "end_byte": 344, "start_point": [9, 15], "end_point": [9, 20], "text": "-nx)."}], "start_byte": 332, "end_byte": 344, "start_point": [9, 8], "end_point": [9, 20], "text": " &s[(ns-nx)."}, {"type": ";", "children": [], "start_byte": 344, "end_byte": 345, "start_point": [9, 20], "end_point": [9, 21], "text": "."}], "start_byte": 332, "end_byte": 345, "start_point": [9, 8], "end_point": [9, 21], "text": " &s[(ns-nx).."}, {"type": "}", "children": [], "start_byte": 350, "end_byte": 351, "start_point": [10, 4], "end_point": [10, 5], "text": "s"}], "start_byte": 322, "end_byte": 351, "start_point": [8, 15], "end_point": [10, 5], "text": "\u56defalse\n    &s[(ns-nx)..] == s"}], "start_byte": 311, "end_byte": 351, "start_point": [8, 4], "end_point": [10, 5], "text": "\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\n    &s[(ns-nx)..] == s"}], "start_byte": 311, "end_byte": 351, "start_point": [8, 4], "end_point": [10, 5], "text": "\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\n    &s[(ns-nx)..] == s"}, {"type": "line_comment", "children": [], "start_byte": 356, "end_byte": 450, "start_point": [11, 4], "end_point": [11, 98], "text": "\n}\n\n// \u66ff\u6362\u5b57\u7b26\u4e32name\u7684\u540e\u7f00oldSuffix\u4e3anewSuffix\u3002\npub fn map_suffix(name: &mut Vec<Char>, old_suffix: &["}, {"type": "binary_expression", "children": [{"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 455, "end_byte": 456, "start_point": [12, 4], "end_point": [12, 5], "text": ","}, {"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 456, "end_byte": 457, "start_point": [12, 5], "end_point": [12, 6], "text": " "}, {"type": "[", "children": [], "start_byte": 457, "end_byte": 458, "start_point": [12, 6], "end_point": [12, 7], "text": "n"}, {"type": "range_expression", "children": [{"type": "parenthesized_expression", "children": [{"type": "(", "children": [], "start_byte": 458, "end_byte": 459, "start_point": [12, 7], "end_point": [12, 8], "text": "e"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 459, "end_byte": 461, "start_point": [12, 8], "end_point": [12, 10], "text": "w_"}, {"type": "-", "children": [], "start_byte": 461, "end_byte": 462, "start_point": [12, 10], "end_point": [12, 11], "text": "s"}, {"type": "identifier", "children": [], "start_byte": 462, "end_byte": 464, "start_point": [12, 11], "end_point": [12, 13], "text": "uf"}], "start_byte": 459, "end_byte": 464, "start_point": [12, 8], "end_point": [12, 13], "text": "w_suf"}, {"type": ")", "children": [], "start_byte": 464, "end_byte": 465, "start_point": [12, 13], "end_point": [12, 14], "text": "f"}], "start_byte": 458, "end_byte": 465, "start_point": [12, 7], "end_point": [12, 14], "text": "ew_suff"}, {"type": "..", "children": [], "start_byte": 465, "end_byte": 467, "start_point": [12, 14], "end_point": [12, 16], "text": "ix"}], "start_byte": 458, "end_byte": 467, "start_point": [12, 7], "end_point": [12, 16], "text": "ew_suffix"}, {"type": "]", "children": [], "start_byte": 467, "end_byte": 468, "start_point": [12, 16], "end_point": [12, 17], "text": ":"}], "start_byte": 456, "end_byte": 468, "start_point": [12, 5], "end_point": [12, 17], "text": " new_suffix:"}], "start_byte": 455, "end_byte": 468, "start_point": [12, 4], "end_point": [12, 17], "text": ", new_suffix:"}, {"type": "==", "children": [], "start_byte": 469, "end_byte": 471, "start_point": [12, 18], "end_point": [12, 20], "text": "&["}, {"type": "identifier", "children": [], "start_byte": 472, "end_byte": 478, "start_point": [12, 21], "end_point": [12, 27], "text": "har]) "}], "start_byte": 455, "end_byte": 478, "start_point": [12, 4], "end_point": [12, 27], "text": ", new_suffix: &[Char]) "}, {"type": "}", "children": [], "start_byte": 479, "end_byte": 480, "start_point": [13, 0], "end_point": [13, 1], "text": ">"}], "start_byte": 139, "end_byte": 480, "start_point": [2, 55], "end_point": [13, 1], "text": "ns = s.len(); \n    // \u83b7\u53d6suffix\u7684\u957f\u5ea6\n    let nx = suffix.len(); \n    // \u5982\u679cs\u7684\u957f\u5ea6\u5c0f\u4e8esuffix\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56defalse\n    if ns < nx {\n        return false;\n    }\n    // \u6bd4\u8f83s\u7684\u6700\u540e\u51e0\u4e2a\u5b57\u7b26\u548csuffix\u662f\u5426\u76f8\u540c\uff0c\u76f8\u540c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\n    &s[(ns-nx)..] == suffix\n}\n\n// \u66ff\u6362\u5b57\u7b26\u4e32name\u7684\u540e\u7f00oldSuffix\u4e3anewSuffix\u3002\npub fn map_suffix(name: &mut Vec<Char>, old_suffix: &[Char], new_suffix: &[Char]) ->"}], "start_byte": 84, "end_byte": 480, "start_point": [2, 0], "end_point": [13, 1], "text": "har], suffix: &[Char]) -> bool {\n    // \u83b7\u53d6s\u7684\u957f\u5ea6\n    let ns = s.len(); \n    // \u83b7\u53d6suffix\u7684\u957f\u5ea6\n    let nx = suffix.len(); \n    // \u5982\u679cs\u7684\u957f\u5ea6\u5c0f\u4e8esuffix\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56defalse\n    if ns < nx {\n        return false;\n    }\n    // \u6bd4\u8f83s\u7684\u6700\u540e\u51e0\u4e2a\u5b57\u7b26\u548csuffix\u662f\u5426\u76f8\u540c\uff0c\u76f8\u540c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\n    &s[(ns-nx)..] == suffix\n}\n\n// \u66ff\u6362\u5b57\u7b26\u4e32name\u7684\u540e\u7f00oldSuffix\u4e3anewSuffix\u3002\npub fn map_suffix(name: &mut Vec<Char>, old_suffix: &[Char], new_suffix: &[Char]) ->"}, {"type": "line_comment", "children": [], "start_byte": 482, "end_byte": 537, "start_point": [15, 0], "end_point": [15, 55], "text": "ool {\n    // \u5982\u679cname\u4e0d\u4ee5oldSuffix\u4e3a\u540e\u7f00\uff0c\u5219\u8fd4\u56defalse\n    if !has_"}, {"type": "function_item", "children": [{"type": "visibility_modifier", "children": [{"type": "pub", "children": [], "start_byte": 538, "end_byte": 541, "start_point": [16, 0], "end_point": [16, 3], "text": "uff"}], "start_byte": 538, "end_byte": 541, "start_point": [16, 0], "end_point": [16, 3], "text": "uff"}, {"type": "fn", "children": [], "start_byte": 542, "end_byte": 544, "start_point": [16, 4], "end_point": [16, 6], "text": "x("}, {"type": "identifier", "children": [], "start_byte": 545, "end_byte": 555, "start_point": [16, 7], "end_point": [16, 17], "text": "ame, old_s"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 555, "end_byte": 556, "start_point": [16, 17], "end_point": [16, 18], "text": "u"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 556, "end_byte": 560, "start_point": [16, 18], "end_point": [16, 22], "text": "ffix"}, {"type": ":", "children": [], "start_byte": 560, "end_byte": 561, "start_point": [16, 22], "end_point": [16, 23], "text": ")"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 562, "end_byte": 563, "start_point": [16, 24], "end_point": [16, 25], "text": "{"}, {"type": "mutable_specifier", "children": [], "start_byte": 563, "end_byte": 566, "start_point": [16, 25], "end_point": [16, 28], "text": "\n  "}, {"type": "generic_type", "children": [{"type": "type_identifier", "children": [], "start_byte": 567, "end_byte": 570, "start_point": [16, 29], "end_point": [16, 32], "text": "   "}, {"type": "type_arguments", "children": [{"type": "<", "children": [], "start_byte": 570, "end_byte": 571, "start_point": [16, 32], "end_point": [16, 33], "text": " "}, {"type": "type_identifier", "children": [], "start_byte": 571, "end_byte": 575, "start_point": [16, 33], "end_point": [16, 37], "text": " ret"}, {"type": ">", "children": [], "start_byte": 575, "end_byte": 576, "start_point": [16, 37], "end_point": [16, 38], "text": "u"}], "start_byte": 570, "end_byte": 576, "start_point": [16, 32], "end_point": [16, 38], "text": "  retu"}], "start_byte": 567, "end_byte": 576, "start_point": [16, 29], "end_point": [16, 38], "text": "     retu"}], "start_byte": 562, "end_byte": 576, "start_point": [16, 24], "end_point": [16, 38], "text": "{\n        retu"}], "start_byte": 556, "end_byte": 576, "start_point": [16, 18], "end_point": [16, 38], "text": "ffix) {\n        retu"}, {"type": ",", "children": [], "start_byte": 576, "end_byte": 577, "start_point": [16, 38], "end_point": [16, 39], "text": "r"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 578, "end_byte": 588, "start_point": [16, 40], "end_point": [16, 50], "text": " false;\n  "}, {"type": ":", "children": [], "start_byte": 588, "end_byte": 589, "start_point": [16, 50], "end_point": [16, 51], "text": " "}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 590, "end_byte": 591, "start_point": [16, 52], "end_point": [16, 53], "text": "}"}, {"type": "array_type", "children": [{"type": "[", "children": [], "start_byte": 591, "end_byte": 592, "start_point": [16, 53], "end_point": [16, 54], "text": "\n"}, {"type": "type_identifier", "children": [], "start_byte": 592, "end_byte": 596, "start_point": [16, 54], "end_point": [16, 58], "text": "    "}, {"type": "]", "children": [], "start_byte": 596, "end_byte": 597, "start_point": [16, 58], "end_point": [16, 59], "text": "/"}], "start_byte": 591, "end_byte": 597, "start_point": [16, 53], "end_point": [16, 59], "text": "\n    /"}], "start_byte": 590, "end_byte": 597, "start_point": [16, 52], "end_point": [16, 59], "text": "}\n    /"}], "start_byte": 578, "end_byte": 597, "start_point": [16, 40], "end_point": [16, 59], "text": " false;\n    }\n    /"}, {"type": ",", "children": [], "start_byte": 597, "end_byte": 598, "start_point": [16, 59], "end_point": [16, 60], "text": "/"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 599, "end_byte": 609, "start_point": [16, 61], "end_point": [16, 71], "text": "\u5c06name\u7684\u540e\u7f00ol"}, {"type": ":", "children": [], "start_byte": 609, "end_byte": 610, "start_point": [16, 71], "end_point": [16, 72], "text": "d"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 611, "end_byte": 612, "start_point": [16, 73], "end_point": [16, 74], "text": "u"}, {"type": "array_type", "children": [{"type": "[", "children": [], "start_byte": 612, "end_byte": 613, "start_point": [16, 74], "end_point": [16, 75], "text": "f"}, {"type": "type_identifier", "children": [], "start_byte": 613, "end_byte": 617, "start_point": [16, 75], "end_point": [16, 79], "text": "fix\u53bb"}, {"type": "]", "children": [], "start_byte": 617, "end_byte": 618, "start_point": [16, 79], "end_point": [16, 80], "text": "\u9664"}], "start_byte": 612, "end_byte": 618, "start_point": [16, 74], "end_point": [16, 80], "text": "ffix\u53bb\u9664"}], "start_byte": 611, "end_byte": 618, "start_point": [16, 73], "end_point": [16, 80], "text": "uffix\u53bb\u9664"}], "start_byte": 599, "end_byte": 618, "start_point": [16, 61], "end_point": [16, 80], "text": "\u5c06name\u7684\u540e\u7f00oldSuffix\u53bb\u9664"}, {"type": ")", "children": [], "start_byte": 618, "end_byte": 619, "start_point": [16, 80], "end_point": [16, 81], "text": "\n"}], "start_byte": 555, "end_byte": 619, "start_point": [16, 17], "end_point": [16, 81], "text": "uffix) {\n        return false;\n    }\n    // \u5c06name\u7684\u540e\u7f00oldSuffix\u53bb\u9664\n"}, {"type": "->", "children": [], "start_byte": 620, "end_byte": 622, "start_point": [16, 82], "end_point": [16, 84], "text": "  "}, {"type": "primitive_type", "children": [], "start_byte": 623, "end_byte": 627, "start_point": [16, 85], "end_point": [16, 89], "text": "let "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 628, "end_byte": 629, "start_point": [16, 90], "end_point": [16, 91], "text": "e"}, {"type": "line_comment", "children": [], "start_byte": 634, "end_byte": 688, "start_point": [17, 4], "end_point": [17, 58], "text": "gth = name.len() - old_suffix.len();\n    name.truncate"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 693, "end_byte": 695, "start_point": [18, 4], "end_point": [18, 6], "text": "le"}, {"type": "unary_expression", "children": [{"type": "!", "children": [], "start_byte": 696, "end_byte": 697, "start_point": [18, 7], "end_point": [18, 8], "text": "g"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 697, "end_byte": 707, "start_point": [18, 8], "end_point": [18, 18], "text": "th);\n    /"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 707, "end_byte": 708, "start_point": [18, 18], "end_point": [18, 19], "text": "/"}, {"type": "identifier", "children": [], "start_byte": 708, "end_byte": 712, "start_point": [18, 19], "end_point": [18, 23], "text": " \u8ffd\u52a0\u65b0"}, {"type": ",", "children": [], "start_byte": 712, "end_byte": 713, "start_point": [18, 23], "end_point": [18, 24], "text": "\u540e"}, {"type": "identifier", "children": [], "start_byte": 714, "end_byte": 724, "start_point": [18, 25], "end_point": [18, 35], "text": "newSuffix\n"}, {"type": ")", "children": [], "start_byte": 724, "end_byte": 725, "start_point": [18, 35], "end_point": [18, 36], "text": " "}], "start_byte": 707, "end_byte": 725, "start_point": [18, 18], "end_point": [18, 36], "text": "/ \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n "}], "start_byte": 697, "end_byte": 725, "start_point": [18, 8], "end_point": [18, 36], "text": "th);\n    // \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n "}], "start_byte": 696, "end_byte": 725, "start_point": [18, 7], "end_point": [18, 36], "text": "gth);\n    // \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 726, "end_byte": 727, "start_point": [18, 37], "end_point": [18, 38], "text": " "}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 736, "end_byte": 742, "start_point": [19, 8], "end_point": [19, 14], "text": "end_fr"}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 743, "end_byte": 748, "start_point": [19, 15], "end_point": [19, 20], "text": "m_sli"}], "start_byte": 743, "end_byte": 748, "start_point": [19, 15], "end_point": [19, 20], "text": "m_sli"}], "start_byte": 736, "end_byte": 748, "start_point": [19, 8], "end_point": [19, 20], "text": "end_from_sli"}, {"type": ";", "children": [], "start_byte": 748, "end_byte": 749, "start_point": [19, 20], "end_point": [19, 21], "text": "c"}], "start_byte": 736, "end_byte": 749, "start_point": [19, 8], "end_point": [19, 21], "text": "end_from_slic"}, {"type": "}", "children": [], "start_byte": 754, "end_byte": 755, "start_point": [20, 4], "end_point": [20, 5], "text": "_"}], "start_byte": 726, "end_byte": 755, "start_point": [18, 37], "end_point": [20, 5], "text": "  name.extend_from_slice(new_"}], "start_byte": 693, "end_byte": 755, "start_point": [18, 4], "end_point": [20, 5], "text": "length);\n    // \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n    name.extend_from_slice(new_"}], "start_byte": 693, "end_byte": 755, "start_point": [18, 4], "end_point": [20, 5], "text": "length);\n    // \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n    name.extend_from_slice(new_"}, {"type": "line_comment", "children": [], "start_byte": 760, "end_byte": 794, "start_point": [21, 4], "end_point": [21, 38], "text": "x);\n    true  // \u8fd4\u56detrue\u8868\u793a\u540e\u7f00\u5df2\u6210\u529f\u66f4\u6539\n}"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 799, "end_byte": 802, "start_point": [22, 4], "end_point": [22, 7], "text": "fg("}, {"type": "identifier", "children": [], "start_byte": 803, "end_byte": 813, "start_point": [22, 8], "end_point": [22, 18], "text": "est)]\nmod "}, {"type": "=", "children": [], "start_byte": 814, "end_byte": 815, "start_point": [22, 19], "end_point": [22, 20], "text": "e"}, {"type": "binary_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 816, "end_byte": 820, "start_point": [22, 21], "end_point": [22, 25], "text": "ts {"}, {"type": ".", "children": [], "start_byte": 820, "end_byte": 821, "start_point": [22, 25], "end_point": [22, 26], "text": "\n"}, {"type": "field_identifier", "children": [], "start_byte": 821, "end_byte": 824, "start_point": [22, 26], "end_point": [22, 29], "text": "   "}], "start_byte": 816, "end_byte": 824, "start_point": [22, 21], "end_point": [22, 29], "text": "ts {\n   "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 824, "end_byte": 825, "start_point": [22, 29], "end_point": [22, 30], "text": " "}, {"type": ")", "children": [], "start_byte": 825, "end_byte": 826, "start_point": [22, 30], "end_point": [22, 31], "text": "u"}], "start_byte": 824, "end_byte": 826, "start_point": [22, 29], "end_point": [22, 31], "text": " u"}], "start_byte": 816, "end_byte": 826, "start_point": [22, 21], "end_point": [22, 31], "text": "ts {\n    u"}, {"type": "-", "children": [], "start_byte": 827, "end_byte": 828, "start_point": [22, 32], "end_point": [22, 33], "text": "e"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 829, "end_byte": 839, "start_point": [22, 34], "end_point": [22, 44], "text": "super::*;\n"}, {"type": ".", "children": [], "start_byte": 839, "end_byte": 840, "start_point": [22, 44], "end_point": [22, 45], "text": "\n"}, {"type": "field_identifier", "children": [], "start_byte": 840, "end_byte": 843, "start_point": [22, 45], "end_point": [22, 48], "text": "   "}], "start_byte": 829, "end_byte": 843, "start_point": [22, 34], "end_point": [22, 48], "text": "super::*;\n\n   "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 843, "end_byte": 844, "start_point": [22, 48], "end_point": [22, 49], "text": " "}, {"type": ")", "children": [], "start_byte": 844, "end_byte": 845, "start_point": [22, 49], "end_point": [22, 50], "text": "#"}], "start_byte": 843, "end_byte": 845, "start_point": [22, 48], "end_point": [22, 50], "text": " #"}], "start_byte": 829, "end_byte": 845, "start_point": [22, 34], "end_point": [22, 50], "text": "super::*;\n\n    #"}], "start_byte": 816, "end_byte": 845, "start_point": [22, 21], "end_point": [22, 50], "text": "ts {\n    use super::*;\n\n    #"}, {"type": ";", "children": [], "start_byte": 845, "end_byte": 846, "start_point": [22, 50], "end_point": [22, 51], "text": "["}], "start_byte": 799, "end_byte": 846, "start_point": [22, 4], "end_point": [22, 51], "text": "fg(test)]\nmod tests {\n    use super::*;\n\n    #["}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 851, "end_byte": 855, "start_point": [23, 4], "end_point": [23, 8], "text": "\n   "}, {"type": ".", "children": [], "start_byte": 855, "end_byte": 856, "start_point": [23, 8], "end_point": [23, 9], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 856, "end_byte": 864, "start_point": [23, 9], "end_point": [23, 17], "text": "fn test_"}], "start_byte": 851, "end_byte": 864, "start_point": [23, 4], "end_point": [23, 17], "text": "\n    fn test_"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 864, "end_byte": 865, "start_point": [23, 17], "end_point": [23, 18], "text": "h"}, {"type": "identifier", "children": [], "start_byte": 865, "end_byte": 875, "start_point": [23, 18], "end_point": [23, 28], "text": "as_suffix("}, {"type": ")", "children": [], "start_byte": 875, "end_byte": 876, "start_point": [23, 28], "end_point": [23, 29], "text": ")"}], "start_byte": 864, "end_byte": 876, "start_point": [23, 17], "end_point": [23, 29], "text": "has_suffix()"}], "start_byte": 851, "end_byte": 876, "start_point": [23, 4], "end_point": [23, 29], "text": "\n    fn test_has_suffix()"}, {"type": ";", "children": [], "start_byte": 876, "end_byte": 877, "start_point": [23, 29], "end_point": [23, 30], "text": " "}], "start_byte": 851, "end_byte": 877, "start_point": [23, 4], "end_point": [23, 30], "text": "\n    fn test_has_suffix() "}, {"type": "line_comment", "children": [], "start_byte": 882, "end_byte": 909, "start_point": [24, 4], "end_point": [24, 31], "text": "     assert!(has_suffix(b\"f"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 914, "end_byte": 918, "start_point": [25, 4], "end_point": [25, 8], "text": "me.t"}, {"type": ".", "children": [], "start_byte": 918, "end_byte": 919, "start_point": [25, 8], "end_point": [25, 9], "text": "x"}, {"type": "field_identifier", "children": [], "start_byte": 919, "end_byte": 936, "start_point": [25, 9], "end_point": [25, 26], "text": "t\", b\".txt\"));\n  "}], "start_byte": 914, "end_byte": 936, "start_point": [25, 4], "end_point": [25, 26], "text": "me.txt\", b\".txt\"));\n  "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 936, "end_byte": 937, "start_point": [25, 26], "end_point": [25, 27], "text": " "}, {"type": "identifier", "children": [], "start_byte": 937, "end_byte": 947, "start_point": [25, 27], "end_point": [25, 37], "text": "     asser"}, {"type": ")", "children": [], "start_byte": 947, "end_byte": 948, "start_point": [25, 37], "end_point": [25, 38], "text": "t"}], "start_byte": 936, "end_byte": 948, "start_point": [25, 26], "end_point": [25, 38], "text": "      assert"}], "start_byte": 914, "end_byte": 948, "start_point": [25, 4], "end_point": [25, 38], "text": "me.txt\", b\".txt\"));\n        assert"}, {"type": ";", "children": [], "start_byte": 948, "end_byte": 949, "start_point": [25, 38], "end_point": [25, 39], "text": "!"}], "start_byte": 914, "end_byte": 949, "start_point": [25, 4], "end_point": [25, 39], "text": "me.txt\", b\".txt\"));\n        assert!"}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 954, "end_byte": 958, "start_point": [26, 4], "end_point": [26, 8], "text": "_suf"}], "start_byte": 954, "end_byte": 958, "start_point": [26, 4], "end_point": [26, 8], "text": "_suf"}, {"type": "line_comment", "children": [], "start_byte": 960, "end_byte": 1000, "start_point": [26, 10], "end_point": [26, 50], "text": "x(b\"filename.txt\", b\".png\"));\n    }\n\n   "}, {"type": "}", "children": [], "start_byte": 1001, "end_byte": 1002, "start_point": [27, 0], "end_point": [27, 1], "text": "#"}], "start_byte": 628, "end_byte": 1002, "start_point": [16, 90], "end_point": [27, 1], "text": "ew_length = name.len() - old_suffix.len();\n    name.truncate(new_length);\n    // \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n    name.extend_from_slice(new_suffix);\n    true  // \u8fd4\u56detrue\u8868\u793a\u540e\u7f00\u5df2\u6210\u529f\u66f4\u6539\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_has_suffix() {\n        assert!(has_suffix(b\"filename.txt\", b\".txt\"));\n        assert!(!has_suffix(b\"filename.txt\", b\".png\"));\n    }\n\n    #"}], "start_byte": 538, "end_byte": 1002, "start_point": [16, 0], "end_point": [27, 1], "text": "uffix(name, old_suffix) {\n        return false;\n    }\n    // \u5c06name\u7684\u540e\u7f00oldSuffix\u53bb\u9664\n    let new_length = name.len() - old_suffix.len();\n    name.truncate(new_length);\n    // \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n    name.extend_from_slice(new_suffix);\n    true  // \u8fd4\u56detrue\u8868\u793a\u540e\u7f00\u5df2\u6210\u529f\u66f4\u6539\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_has_suffix() {\n        assert!(has_suffix(b\"filename.txt\", b\".txt\"));\n        assert!(!has_suffix(b\"filename.txt\", b\".png\"));\n    }\n\n    #"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 1004, "end_byte": 1005, "start_point": [29, 0], "end_point": [29, 1], "text": "e"}, {"type": "[", "children": [], "start_byte": 1005, "end_byte": 1006, "start_point": [29, 1], "end_point": [29, 2], "text": "s"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 1006, "end_byte": 1009, "start_point": [29, 2], "end_point": [29, 5], "text": "t]\n"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1009, "end_byte": 1010, "start_point": [29, 5], "end_point": [29, 6], "text": " "}, {"type": "identifier", "children": [], "start_byte": 1010, "end_byte": 1014, "start_point": [29, 6], "end_point": [29, 10], "text": "   f"}, {"type": ")", "children": [], "start_byte": 1014, "end_byte": 1015, "start_point": [29, 10], "end_point": [29, 11], "text": "n"}], "start_byte": 1009, "end_byte": 1015, "start_point": [29, 5], "end_point": [29, 11], "text": "    fn"}], "start_byte": 1006, "end_byte": 1015, "start_point": [29, 2], "end_point": [29, 11], "text": "t]\n    fn"}, {"type": "]", "children": [], "start_byte": 1015, "end_byte": 1016, "start_point": [29, 11], "end_point": [29, 12], "text": " "}], "start_byte": 1004, "end_byte": 1016, "start_point": [29, 0], "end_point": [29, 12], "text": "est]\n    fn "}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 1017, "end_byte": 1020, "start_point": [30, 0], "end_point": [30, 3], "text": "est"}, {"type": "identifier", "children": [], "start_byte": 1021, "end_byte": 1026, "start_point": [30, 4], "end_point": [30, 9], "text": "map_s"}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 1027, "end_byte": 1028, "start_point": [30, 10], "end_point": [30, 11], "text": "f"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 1033, "end_byte": 1036, "start_point": [31, 4], "end_point": [31, 7], "text": " {\n"}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 1037, "end_byte": 1042, "start_point": [31, 8], "end_point": [31, 13], "text": "     "}, {"type": "::", "children": [], "start_byte": 1042, "end_byte": 1044, "start_point": [31, 13], "end_point": [31, 15], "text": "  "}, {"type": "*", "children": [], "start_byte": 1044, "end_byte": 1045, "start_point": [31, 15], "end_point": [31, 16], "text": "l"}], "start_byte": 1037, "end_byte": 1045, "start_point": [31, 8], "end_point": [31, 16], "text": "       l"}, {"type": ";", "children": [], "start_byte": 1045, "end_byte": 1046, "start_point": [31, 16], "end_point": [31, 17], "text": "e"}], "start_byte": 1033, "end_byte": 1046, "start_point": [31, 4], "end_point": [31, 17], "text": " {\n        le"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 1052, "end_byte": 1053, "start_point": [33, 4], "end_point": [33, 5], "text": "n"}, {"type": "[", "children": [], "start_byte": 1053, "end_byte": 1054, "start_point": [33, 5], "end_point": [33, 6], "text": "a"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 1054, "end_byte": 1058, "start_point": [33, 6], "end_point": [33, 10], "text": "me1 "}], "start_byte": 1054, "end_byte": 1058, "start_point": [33, 6], "end_point": [33, 10], "text": "me1 "}, {"type": "]", "children": [], "start_byte": 1058, "end_byte": 1059, "start_point": [33, 10], "end_point": [33, 11], "text": "="}], "start_byte": 1052, "end_byte": 1059, "start_point": [33, 4], "end_point": [33, 11], "text": "name1 ="}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 1064, "end_byte": 1066, "start_point": [34, 4], "end_point": [34, 6], "text": "ag"}, {"type": "identifier", "children": [], "start_byte": 1067, "end_byte": 1082, "start_point": [34, 7], "end_point": [34, 22], "text": ".jpg\".to_vec();"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 1082, "end_byte": 1083, "start_point": [34, 22], "end_point": [34, 23], "text": "\n"}, {"type": ")", "children": [], "start_byte": 1083, "end_byte": 1084, "start_point": [34, 23], "end_point": [34, 24], "text": " "}], "start_byte": 1082, "end_byte": 1084, "start_point": [34, 22], "end_point": [34, 24], "text": "\n "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1085, "end_byte": 1086, "start_point": [34, 25], "end_point": [34, 26], "text": " "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1095, "end_byte": 1101, "start_point": [35, 8], "end_point": [35, 14], "text": "mut na"}, {"type": "!", "children": [], "start_byte": 1101, "end_byte": 1102, "start_point": [35, 14], "end_point": [35, 15], "text": "m"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1102, "end_byte": 1103, "start_point": [35, 15], "end_point": [35, 16], "text": "e"}, {"type": "identifier", "children": [], "start_byte": 1103, "end_byte": 1113, "start_point": [35, 16], "end_point": [35, 26], "text": "2 = b\"docu"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1113, "end_byte": 1114, "start_point": [35, 26], "end_point": [35, 27], "text": "m"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1114, "end_byte": 1116, "start_point": [35, 27], "end_point": [35, 29], "text": "en"}, {"type": "\"", "children": [], "start_byte": 1128, "end_byte": 1129, "start_point": [35, 41], "end_point": [35, 42], "text": "c"}], "start_byte": 1114, "end_byte": 1129, "start_point": [35, 27], "end_point": [35, 42], "text": "ent.txt\".to_vec"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1131, "end_byte": 1133, "start_point": [35, 44], "end_point": [35, 46], "text": ";\n"}, {"type": "\"", "children": [], "start_byte": 1137, "end_byte": 1138, "start_point": [35, 50], "end_point": [35, 51], "text": " "}], "start_byte": 1131, "end_byte": 1138, "start_point": [35, 44], "end_point": [35, 51], "text": ";\n     "}, {"type": ")", "children": [], "start_byte": 1138, "end_byte": 1139, "start_point": [35, 51], "end_point": [35, 52], "text": " "}], "start_byte": 1113, "end_byte": 1139, "start_point": [35, 26], "end_point": [35, 52], "text": "ment.txt\".to_vec();\n      "}, {"type": ")", "children": [], "start_byte": 1139, "end_byte": 1140, "start_point": [35, 52], "end_point": [35, 53], "text": " "}], "start_byte": 1102, "end_byte": 1140, "start_point": [35, 15], "end_point": [35, 53], "text": "e2 = b\"document.txt\".to_vec();\n       "}], "start_byte": 1095, "end_byte": 1140, "start_point": [35, 8], "end_point": [35, 53], "text": "mut name2 = b\"document.txt\".to_vec();\n       "}, {"type": ";", "children": [], "start_byte": 1140, "end_byte": 1141, "start_point": [35, 53], "end_point": [35, 54], "text": " "}], "start_byte": 1095, "end_byte": 1141, "start_point": [35, 8], "end_point": [35, 54], "text": "mut name2 = b\"document.txt\".to_vec();\n        "}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1150, "end_byte": 1156, "start_point": [36, 8], "end_point": [36, 14], "text": "assert"}, {"type": "!", "children": [], "start_byte": 1156, "end_byte": 1157, "start_point": [36, 14], "end_point": [36, 15], "text": "!"}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1157, "end_byte": 1158, "start_point": [36, 15], "end_point": [36, 16], "text": "("}, {"type": "identifier", "children": [], "start_byte": 1159, "end_byte": 1169, "start_point": [36, 17], "end_point": [36, 27], "text": "ap_suffix("}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1169, "end_byte": 1170, "start_point": [36, 27], "end_point": [36, 28], "text": "&"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1170, "end_byte": 1172, "start_point": [36, 28], "end_point": [36, 30], "text": "mu"}, {"type": "\"", "children": [], "start_byte": 1184, "end_byte": 1185, "start_point": [36, 42], "end_point": [36, 43], "text": "j"}], "start_byte": 1170, "end_byte": 1185, "start_point": [36, 28], "end_point": [36, 43], "text": "mut name1, b\".j"}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1187, "end_byte": 1189, "start_point": [36, 45], "end_point": [36, 47], "text": "\","}, {"type": "\"", "children": [], "start_byte": 1193, "end_byte": 1194, "start_point": [36, 51], "end_point": [36, 52], "text": "p"}], "start_byte": 1187, "end_byte": 1194, "start_point": [36, 45], "end_point": [36, 52], "text": "\", b\".p"}, {"type": ")", "children": [], "start_byte": 1194, "end_byte": 1195, "start_point": [36, 52], "end_point": [36, 53], "text": "n"}], "start_byte": 1169, "end_byte": 1195, "start_point": [36, 27], "end_point": [36, 53], "text": "&mut name1, b\".jpg\", b\".pn"}, {"type": ")", "children": [], "start_byte": 1195, "end_byte": 1196, "start_point": [36, 53], "end_point": [36, 54], "text": "g"}], "start_byte": 1157, "end_byte": 1196, "start_point": [36, 15], "end_point": [36, 54], "text": "(map_suffix(&mut name1, b\".jpg\", b\".png"}], "start_byte": 1150, "end_byte": 1196, "start_point": [36, 8], "end_point": [36, 54], "text": "assert!(map_suffix(&mut name1, b\".jpg\", b\".png"}, {"type": ";", "children": [], "start_byte": 1196, "end_byte": 1197, "start_point": [36, 54], "end_point": [36, 55], "text": "\""}], "start_byte": 1150, "end_byte": 1197, "start_point": [36, 8], "end_point": [36, 55], "text": "assert!(map_suffix(&mut name1, b\".jpg\", b\".png\""}, {"type": "}", "children": [], "start_byte": 1202, "end_byte": 1203, "start_point": [37, 4], "end_point": [37, 5], "text": " "}], "start_byte": 1085, "end_byte": 1203, "start_point": [34, 25], "end_point": [37, 5], "text": "      let mut name2 = b\"document.txt\".to_vec();\n        \n        assert!(map_suffix(&mut name1, b\".jpg\", b\".png\"));\n  "}], "start_byte": 1064, "end_byte": 1203, "start_point": [34, 4], "end_point": [37, 5], "text": "age.jpg\".to_vec();\n        let mut name2 = b\"document.txt\".to_vec();\n        \n        assert!(map_suffix(&mut name1, b\".jpg\", b\".png\"));\n  "}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 1209, "end_byte": 1210, "start_point": [39, 4], "end_point": [39, 5], "text": "a"}, {"type": "[", "children": [], "start_byte": 1210, "end_byte": 1211, "start_point": [39, 5], "end_point": [39, 6], "text": "s"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 1211, "end_byte": 1215, "start_point": [39, 6], "end_point": [39, 10], "text": "sert"}], "start_byte": 1211, "end_byte": 1215, "start_point": [39, 6], "end_point": [39, 10], "text": "sert"}, {"type": "]", "children": [], "start_byte": 1215, "end_byte": 1216, "start_point": [39, 10], "end_point": [39, 11], "text": "_"}], "start_byte": 1209, "end_byte": 1216, "start_point": [39, 4], "end_point": [39, 11], "text": "assert_"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 1221, "end_byte": 1223, "start_point": [40, 4], "end_point": [40, 6], "text": "am"}, {"type": "identifier", "children": [], "start_byte": 1224, "end_byte": 1239, "start_point": [40, 7], "end_point": [40, 22], "text": "1, b\"image.png\""}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 1239, "end_byte": 1240, "start_point": [40, 22], "end_point": [40, 23], "text": ")"}, {"type": ")", "children": [], "start_byte": 1240, "end_byte": 1241, "start_point": [40, 23], "end_point": [40, 24], "text": ";"}], "start_byte": 1239, "end_byte": 1241, "start_point": [40, 22], "end_point": [40, 24], "text": ");"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1242, "end_byte": 1243, "start_point": [40, 25], "end_point": [40, 26], "text": " "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1252, "end_byte": 1255, "start_point": [41, 8], "end_point": [41, 11], "text": "   "}, {"type": "mutable_specifier", "children": [], "start_byte": 1256, "end_byte": 1259, "start_point": [41, 12], "end_point": [41, 15], "text": "   "}, {"type": "identifier", "children": [], "start_byte": 1260, "end_byte": 1265, "start_point": [41, 16], "end_point": [41, 21], "text": "ssert"}, {"type": "=", "children": [], "start_byte": 1266, "end_byte": 1267, "start_point": [41, 22], "end_point": [41, 23], "text": "("}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1268, "end_byte": 1270, "start_point": [41, 24], "end_point": [41, 26], "text": "ma"}, {"type": "\"", "children": [], "start_byte": 1279, "end_byte": 1280, "start_point": [41, 35], "end_point": [41, 36], "text": "&"}], "start_byte": 1268, "end_byte": 1280, "start_point": [41, 24], "end_point": [41, 36], "text": "map_suffix(&"}, {"type": ".", "children": [], "start_byte": 1280, "end_byte": 1281, "start_point": [41, 36], "end_point": [41, 37], "text": "m"}, {"type": "field_identifier", "children": [], "start_byte": 1281, "end_byte": 1287, "start_point": [41, 37], "end_point": [41, 43], "text": "ut nam"}], "start_byte": 1268, "end_byte": 1287, "start_point": [41, 24], "end_point": [41, 43], "text": "map_suffix(&mut nam"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1287, "end_byte": 1288, "start_point": [41, 43], "end_point": [41, 44], "text": "e"}, {"type": ")", "children": [], "start_byte": 1288, "end_byte": 1289, "start_point": [41, 44], "end_point": [41, 45], "text": "2"}], "start_byte": 1287, "end_byte": 1289, "start_point": [41, 43], "end_point": [41, 45], "text": "e2"}], "start_byte": 1268, "end_byte": 1289, "start_point": [41, 24], "end_point": [41, 45], "text": "map_suffix(&mut name2"}, {"type": ";", "children": [], "start_byte": 1289, "end_byte": 1290, "start_point": [41, 45], "end_point": [41, 46], "text": ","}], "start_byte": 1252, "end_byte": 1290, "start_point": [41, 8], "end_point": [41, 46], "text": "       assert!(!map_suffix(&mut name2,"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1299, "end_byte": 1302, "start_point": [42, 8], "end_point": [42, 11], "text": " b\""}, {"type": "mutable_specifier", "children": [], "start_byte": 1303, "end_byte": 1306, "start_point": [42, 12], "end_point": [42, 15], "text": "png"}, {"type": "identifier", "children": [], "start_byte": 1307, "end_byte": 1312, "start_point": [42, 16], "end_point": [42, 21], "text": "));\n "}, {"type": "=", "children": [], "start_byte": 1313, "end_byte": 1314, "start_point": [42, 22], "end_point": [42, 23], "text": " "}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1315, "end_byte": 1317, "start_point": [42, 24], "end_point": [42, 26], "text": "  "}, {"type": "\"", "children": [], "start_byte": 1329, "end_byte": 1330, "start_point": [42, 38], "end_point": [42, 39], "text": "("}], "start_byte": 1315, "end_byte": 1330, "start_point": [42, 24], "end_point": [42, 39], "text": "    assert_eq!("}, {"type": ".", "children": [], "start_byte": 1330, "end_byte": 1331, "start_point": [42, 39], "end_point": [42, 40], "text": "n"}, {"type": "field_identifier", "children": [], "start_byte": 1331, "end_byte": 1337, "start_point": [42, 40], "end_point": [42, 46], "text": "ame2, "}], "start_byte": 1315, "end_byte": 1337, "start_point": [42, 24], "end_point": [42, 46], "text": "    assert_eq!(name2, "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1337, "end_byte": 1338, "start_point": [42, 46], "end_point": [42, 47], "text": "b"}, {"type": ")", "children": [], "start_byte": 1338, "end_byte": 1339, "start_point": [42, 47], "end_point": [42, 48], "text": "\""}], "start_byte": 1337, "end_byte": 1339, "start_point": [42, 46], "end_point": [42, 48], "text": "b\""}], "start_byte": 1315, "end_byte": 1339, "start_point": [42, 24], "end_point": [42, 48], "text": "    assert_eq!(name2, b\""}, {"type": ";", "children": [], "start_byte": 1339, "end_byte": 1340, "start_point": [42, 48], "end_point": [42, 49], "text": "d"}], "start_byte": 1299, "end_byte": 1340, "start_point": [42, 8], "end_point": [42, 49], "text": " b\".png\"));\n        assert_eq!(name2, b\"d"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1358, "end_byte": 1364, "start_point": [44, 8], "end_point": [44, 14], "text": " }\n}\n"}, {"type": "!", "children": [], "start_byte": 1364, "end_byte": 1365, "start_point": [44, 14], "end_point": [44, 15], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1365, "end_byte": 1366, "start_point": [44, 15], "end_point": [44, 16], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1366, "end_byte": 1376, "start_point": [44, 16], "end_point": [44, 26], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1376, "end_byte": 1377, "start_point": [44, 26], "end_point": [44, 27], "text": ""}, {"type": "mutable_specifier", "children": [], "start_byte": 1378, "end_byte": 1381, "start_point": [44, 28], "end_point": [44, 31], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1382, "end_byte": 1387, "start_point": [44, 32], "end_point": [44, 37], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1389, "end_byte": 1391, "start_point": [44, 39], "end_point": [44, 41], "text": ""}, {"type": "\"", "children": [], "start_byte": 1395, "end_byte": 1396, "start_point": [44, 45], "end_point": [44, 46], "text": ""}], "start_byte": 1389, "end_byte": 1396, "start_point": [44, 39], "end_point": [44, 46], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1398, "end_byte": 1400, "start_point": [44, 48], "end_point": [44, 50], "text": ""}, {"type": "\"", "children": [], "start_byte": 1404, "end_byte": 1405, "start_point": [44, 54], "end_point": [44, 55], "text": ""}], "start_byte": 1398, "end_byte": 1405, "start_point": [44, 48], "end_point": [44, 55], "text": ""}, {"type": ")", "children": [], "start_byte": 1405, "end_byte": 1406, "start_point": [44, 55], "end_point": [44, 56], "text": ""}], "start_byte": 1376, "end_byte": 1406, "start_point": [44, 26], "end_point": [44, 56], "text": ""}, {"type": ")", "children": [], "start_byte": 1406, "end_byte": 1407, "start_point": [44, 56], "end_point": [44, 57], "text": ""}], "start_byte": 1365, "end_byte": 1407, "start_point": [44, 15], "end_point": [44, 57], "text": ""}], "start_byte": 1358, "end_byte": 1407, "start_point": [44, 8], "end_point": [44, 57], "text": " }\n}\n"}, {"type": ";", "children": [], "start_byte": 1407, "end_byte": 1408, "start_point": [44, 57], "end_point": [44, 58], "text": ""}], "start_byte": 1358, "end_byte": 1408, "start_point": [44, 8], "end_point": [44, 58], "text": " }\n}\n"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1417, "end_byte": 1426, "start_point": [45, 8], "end_point": [45, 17], "text": ""}, {"type": "!", "children": [], "start_byte": 1426, "end_byte": 1427, "start_point": [45, 17], "end_point": [45, 18], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1427, "end_byte": 1428, "start_point": [45, 18], "end_point": [45, 19], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1428, "end_byte": 1433, "start_point": [45, 19], "end_point": [45, 24], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1435, "end_byte": 1437, "start_point": [45, 26], "end_point": [45, 28], "text": ""}, {"type": "\"", "children": [], "start_byte": 1446, "end_byte": 1447, "start_point": [45, 37], "end_point": [45, 38], "text": ""}], "start_byte": 1435, "end_byte": 1447, "start_point": [45, 26], "end_point": [45, 38], "text": ""}, {"type": ")", "children": [], "start_byte": 1447, "end_byte": 1448, "start_point": [45, 38], "end_point": [45, 39], "text": ""}], "start_byte": 1427, "end_byte": 1448, "start_point": [45, 18], "end_point": [45, 39], "text": ""}], "start_byte": 1417, "end_byte": 1448, "start_point": [45, 8], "end_point": [45, 39], "text": ""}, {"type": ";", "children": [], "start_byte": 1448, "end_byte": 1449, "start_point": [45, 39], "end_point": [45, 40], "text": ""}], "start_byte": 1417, "end_byte": 1449, "start_point": [45, 8], "end_point": [45, 40], "text": ""}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1467, "end_byte": 1473, "start_point": [47, 8], "end_point": [47, 14], "text": ""}, {"type": "!", "children": [], "start_byte": 1473, "end_byte": 1474, "start_point": [47, 14], "end_point": [47, 15], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1474, "end_byte": 1475, "start_point": [47, 15], "end_point": [47, 16], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1476, "end_byte": 1486, "start_point": [47, 17], "end_point": [47, 27], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1486, "end_byte": 1487, "start_point": [47, 27], "end_point": [47, 28], "text": ""}, {"type": "mutable_specifier", "children": [], "start_byte": 1488, "end_byte": 1491, "start_point": [47, 29], "end_point": [47, 32], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1492, "end_byte": 1497, "start_point": [47, 33], "end_point": [47, 38], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1499, "end_byte": 1501, "start_point": [47, 40], "end_point": [47, 42], "text": ""}, {"type": "\"", "children": [], "start_byte": 1505, "end_byte": 1506, "start_point": [47, 46], "end_point": [47, 47], "text": ""}], "start_byte": 1499, "end_byte": 1506, "start_point": [47, 40], "end_point": [47, 47], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1508, "end_byte": 1510, "start_point": [47, 49], "end_point": [47, 51], "text": ""}, {"type": "\"", "children": [], "start_byte": 1514, "end_byte": 1515, "start_point": [47, 55], "end_point": [47, 56], "text": ""}], "start_byte": 1508, "end_byte": 1515, "start_point": [47, 49], "end_point": [47, 56], "text": ""}, {"type": ")", "children": [], "start_byte": 1515, "end_byte": 1516, "start_point": [47, 56], "end_point": [47, 57], "text": ""}], "start_byte": 1486, "end_byte": 1516, "start_point": [47, 27], "end_point": [47, 57], "text": ""}, {"type": ")", "children": [], "start_byte": 1516, "end_byte": 1517, "start_point": [47, 57], "end_point": [47, 58], "text": ""}], "start_byte": 1474, "end_byte": 1517, "start_point": [47, 15], "end_point": [47, 58], "text": ""}], "start_byte": 1467, "end_byte": 1517, "start_point": [47, 8], "end_point": [47, 58], "text": ""}, {"type": ";", "children": [], "start_byte": 1517, "end_byte": 1518, "start_point": [47, 58], "end_point": [47, 59], "text": ""}], "start_byte": 1467, "end_byte": 1518, "start_point": [47, 8], "end_point": [47, 59], "text": ""}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1527, "end_byte": 1536, "start_point": [48, 8], "end_point": [48, 17], "text": ""}, {"type": "!", "children": [], "start_byte": 1536, "end_byte": 1537, "start_point": [48, 17], "end_point": [48, 18], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1537, "end_byte": 1538, "start_point": [48, 18], "end_point": [48, 19], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1538, "end_byte": 1543, "start_point": [48, 19], "end_point": [48, 24], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1545, "end_byte": 1547, "start_point": [48, 26], "end_point": [48, 28], "text": ""}, {"type": "\"", "children": [], "start_byte": 1559, "end_byte": 1560, "start_point": [48, 40], "end_point": [48, 41], "text": ""}], "start_byte": 1545, "end_byte": 1560, "start_point": [48, 26], "end_point": [48, 41], "text": ""}, {"type": ")", "children": [], "start_byte": 1560, "end_byte": 1561, "start_point": [48, 41], "end_point": [48, 42], "text": ""}], "start_byte": 1537, "end_byte": 1561, "start_point": [48, 18], "end_point": [48, 42], "text": ""}], "start_byte": 1527, "end_byte": 1561, "start_point": [48, 8], "end_point": [48, 42], "text": ""}, {"type": ";", "children": [], "start_byte": 1561, "end_byte": 1562, "start_point": [48, 42], "end_point": [48, 43], "text": ""}], "start_byte": 1527, "end_byte": 1562, "start_point": [48, 8], "end_point": [48, 43], "text": ""}, {"type": "}", "children": [], "start_byte": 1567, "end_byte": 1568, "start_point": [49, 4], "end_point": [49, 5], "text": ""}], "start_byte": 1242, "end_byte": 1568, "start_point": [40, 25], "end_point": [49, 5], "text": "        \n        assert!(!map_suffix(&mut name2, b\".jpg\", b\".png\"));\n        assert_eq!(name2, b\"document.txt\");\n    }\n}\n"}], "start_byte": 1221, "end_byte": 1568, "start_point": [40, 4], "end_point": [49, 5], "text": "ame1, b\"image.png\");\n        \n        assert!(!map_suffix(&mut name2, b\".jpg\", b\".png\"));\n        assert_eq!(name2, b\"document.txt\");\n    }\n}\n"}, {"type": "}", "children": [], "start_byte": 1569, "end_byte": 1570, "start_point": [50, 0], "end_point": [50, 1], "text": ""}], "start_byte": 1027, "end_byte": 1570, "start_point": [30, 10], "end_point": [50, 1], "text": "ffix() {\n        let mut name1 = b\"image.jpg\".to_vec();\n        let mut name2 = b\"document.txt\".to_vec();\n        \n        assert!(map_suffix(&mut name1, b\".jpg\", b\".png\"));\n        assert_eq!(name1, b\"image.png\");\n        \n        assert!(!map_suffix(&mut name2, b\".jpg\", b\".png\"));\n        assert_eq!(name2, b\"document.txt\");\n    }\n}\n"}], "start_byte": 1017, "end_byte": 1570, "start_point": [30, 0], "end_point": [50, 1], "text": "est_map_suffix() {\n        let mut name1 = b\"image.jpg\".to_vec();\n        let mut name2 = b\"document.txt\".to_vec();\n        \n        assert!(map_suffix(&mut name1, b\".jpg\", b\".png\"));\n        assert_eq!(name1, b\"image.png\");\n        \n        assert!(!map_suffix(&mut name2, b\".jpg\", b\".png\"));\n        assert_eq!(name2, b\"document.txt\");\n    }\n}\n"}], "start_byte": 0, "end_byte": 1571, "start_point": [0, 0], "end_point": [51, 0], "text": "use crate::global_vars::bzip2_c2::*;\n// \u68c0\u67e5\u5b57\u7b26\u4e32s\u662f\u5426\u4ee5suffix\u4e3a\u540e\u7f00\u3002\npub fn has_suffix(s: &[Char], suffix: &[Char]) -> bool {\n    // \u83b7\u53d6s\u7684\u957f\u5ea6\n    let ns = s.len(); \n    // \u83b7\u53d6suffix\u7684\u957f\u5ea6\n    let nx = suffix.len(); \n    // \u5982\u679cs\u7684\u957f\u5ea6\u5c0f\u4e8esuffix\u7684\u957f\u5ea6\uff0c\u5219\u8fd4\u56defalse\n    if ns < nx {\n        return false;\n    }\n    // \u6bd4\u8f83s\u7684\u6700\u540e\u51e0\u4e2a\u5b57\u7b26\u548csuffix\u662f\u5426\u76f8\u540c\uff0c\u76f8\u540c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\n    &s[(ns-nx)..] == suffix\n}\n\n// \u66ff\u6362\u5b57\u7b26\u4e32name\u7684\u540e\u7f00oldSuffix\u4e3anewSuffix\u3002\npub fn map_suffix(name: &mut Vec<Char>, old_suffix: &[Char], new_suffix: &[Char]) -> bool {\n    // \u5982\u679cname\u4e0d\u4ee5oldSuffix\u4e3a\u540e\u7f00\uff0c\u5219\u8fd4\u56defalse\n    if !has_suffix(name, old_suffix) {\n        return false;\n    }\n    // \u5c06name\u7684\u540e\u7f00oldSuffix\u53bb\u9664\n    let new_length = name.len() - old_suffix.len();\n    name.truncate(new_length);\n    // \u8ffd\u52a0\u65b0\u540e\u7f00newSuffix\n    name.extend_from_slice(new_suffix);\n    true  // \u8fd4\u56detrue\u8868\u793a\u540e\u7f00\u5df2\u6210\u529f\u66f4\u6539\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_has_suffix() {\n        assert!(has_suffix(b\"filename.txt\", b\".txt\"));\n        assert!(!has_suffix(b\"filename.txt\", b\".png\"));\n    }\n\n    #[test]\n    fn test_map_suffix() {\n        let mut name1 = b\"image.jpg\".to_vec();\n        let mut name2 = b\"document.txt\".to_vec();\n        \n        assert!(map_suffix(&mut name1, b\".jpg\", b\".png\"));\n        assert_eq!(name1, b\"image.png\");\n        \n        assert!(!map_suffix(&mut name2, b\".jpg\", b\".png\"));\n        assert_eq!(name2, b\"document.txt\");\n    }\n}\n"}