{"type": "source_file", "children": [{"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 1, "end_byte": 4, "start_point": [1, 0], "end_point": [1, 3], "text": "use"}, {"type": "use_wildcard", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 5, "end_byte": 10, "start_point": [1, 4], "end_point": [1, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 10, "end_byte": 12, "start_point": [1, 9], "end_point": [1, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 12, "end_byte": 17, "start_point": [1, 11], "end_point": [1, 16], "text": "bzip2"}], "start_byte": 5, "end_byte": 17, "start_point": [1, 4], "end_point": [1, 16], "text": "crate::bzip2"}, {"type": "::", "children": [], "start_byte": 17, "end_byte": 19, "start_point": [1, 16], "end_point": [1, 18], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 19, "end_byte": 46, "start_point": [1, 18], "end_point": [1, 45], "text": "scc_20_root_13_uInt64_qrm10"}], "start_byte": 5, "end_byte": 46, "start_point": [1, 4], "end_point": [1, 45], "text": "crate::bzip2::scc_20_root_13_uInt64_qrm10"}, {"type": "::", "children": [], "start_byte": 46, "end_byte": 48, "start_point": [1, 45], "end_point": [1, 47], "text": "::"}, {"type": "*", "children": [], "start_byte": 48, "end_byte": 49, "start_point": [1, 47], "end_point": [1, 48], "text": "*"}], "start_byte": 5, "end_byte": 49, "start_point": [1, 4], "end_point": [1, 48], "text": "crate::bzip2::scc_20_root_13_uInt64_qrm10::*"}, {"type": ";", "children": [], "start_byte": 49, "end_byte": 50, "start_point": [1, 48], "end_point": [1, 49], "text": ";"}], "start_byte": 1, "end_byte": 50, "start_point": [1, 0], "end_point": [1, 49], "text": "use crate::bzip2::scc_20_root_13_uInt64_qrm10::*;"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 51, "end_byte": 54, "start_point": [2, 0], "end_point": [2, 3], "text": "use"}, {"type": "scoped_use_list", "children": [{"type": "scoped_identifier", "children": [{"type": "scoped_identifier", "children": [{"type": "crate", "children": [], "start_byte": 55, "end_byte": 60, "start_point": [2, 4], "end_point": [2, 9], "text": "crate"}, {"type": "::", "children": [], "start_byte": 60, "end_byte": 62, "start_point": [2, 9], "end_point": [2, 11], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 62, "end_byte": 73, "start_point": [2, 11], "end_point": [2, 22], "text": "global_vars"}], "start_byte": 55, "end_byte": 73, "start_point": [2, 4], "end_point": [2, 22], "text": "crate::global_vars"}, {"type": "::", "children": [], "start_byte": 73, "end_byte": 75, "start_point": [2, 22], "end_point": [2, 24], "text": "::"}, {"type": "identifier", "children": [], "start_byte": 75, "end_byte": 83, "start_point": [2, 24], "end_point": [2, 32], "text": "bzip2_c1"}], "start_byte": 55, "end_byte": 83, "start_point": [2, 4], "end_point": [2, 32], "text": "crate::global_vars::bzip2_c1"}, {"type": "::", "children": [], "start_byte": 83, "end_byte": 85, "start_point": [2, 32], "end_point": [2, 34], "text": "::"}, {"type": "use_list", "children": [{"type": "{", "children": [], "start_byte": 85, "end_byte": 86, "start_point": [2, 34], "end_point": [2, 35], "text": "{"}, {"type": "identifier", "children": [], "start_byte": 86, "end_byte": 92, "start_point": [2, 35], "end_point": [2, 41], "text": "UInt64"}, {"type": "}", "children": [], "start_byte": 92, "end_byte": 93, "start_point": [2, 41], "end_point": [2, 42], "text": "}"}], "start_byte": 85, "end_byte": 93, "start_point": [2, 34], "end_point": [2, 42], "text": "{UInt64}"}], "start_byte": 55, "end_byte": 93, "start_point": [2, 4], "end_point": [2, 42], "text": "crate::global_vars::bzip2_c1::{UInt64}"}, {"type": ";", "children": [], "start_byte": 93, "end_byte": 94, "start_point": [2, 42], "end_point": [2, 43], "text": ";"}], "start_byte": 51, "end_byte": 94, "start_point": [2, 0], "end_point": [2, 43], "text": "use crate::global_vars::bzip2_c1::{UInt64};"}, {"type": "line_comment", "children": [], "start_byte": 97, "end_byte": 142, "start_point": [5, 0], "end_point": [5, 45], "text": "// uInt64_toAscii ( char* outbuf, UInt64* n )"}, {"type": "line_comment", "children": [], "start_byte": 144, "end_byte": 169, "start_point": [7, 0], "end_point": [7, 25], "text": "// \u5224\u65adUInt64\u662f\u5426\u4e3a0\nfn uInt64"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 170, "end_byte": 172, "start_point": [8, 0], "end_point": [8, 2], "text": "is"}, {"type": "identifier", "children": [], "start_byte": 173, "end_byte": 186, "start_point": [8, 3], "end_point": [8, 16], "text": "ero(n: &UInt6"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 186, "end_byte": 187, "start_point": [8, 16], "end_point": [8, 17], "text": "4"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 187, "end_byte": 188, "start_point": [8, 17], "end_point": [8, 18], "text": ")"}, {"type": ":", "children": [], "start_byte": 188, "end_byte": 189, "start_point": [8, 18], "end_point": [8, 19], "text": " "}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 190, "end_byte": 191, "start_point": [8, 20], "end_point": [8, 21], "text": ">"}, {"type": "type_identifier", "children": [], "start_byte": 191, "end_byte": 197, "start_point": [8, 21], "end_point": [8, 27], "text": " bool "}], "start_byte": 190, "end_byte": 197, "start_point": [8, 20], "end_point": [8, 27], "text": "> bool "}], "start_byte": 187, "end_byte": 197, "start_point": [8, 17], "end_point": [8, 27], "text": ") -> bool "}, {"type": ")", "children": [], "start_byte": 197, "end_byte": 198, "start_point": [8, 27], "end_point": [8, 28], "text": "{"}], "start_byte": 186, "end_byte": 198, "start_point": [8, 16], "end_point": [8, 28], "text": "4) -> bool {"}, {"type": "->", "children": [], "start_byte": 199, "end_byte": 201, "start_point": [8, 29], "end_point": [8, 31], "text": "  "}, {"type": "primitive_type", "children": [], "start_byte": 202, "end_byte": 206, "start_point": [8, 32], "end_point": [8, 36], "text": " for"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 207, "end_byte": 208, "start_point": [8, 37], "end_point": [8, 38], "text": "&"}, {"type": "expression_statement", "children": [{"type": "for_expression", "children": [{"type": "for", "children": [], "start_byte": 213, "end_byte": 216, "start_point": [9, 4], "end_point": [9, 7], "text": "in "}, {"type": "reference_pattern", "children": [{"type": "&", "children": [], "start_byte": 217, "end_byte": 218, "start_point": [9, 8], "end_point": [9, 9], "text": "n"}, {"type": "identifier", "children": [], "start_byte": 218, "end_byte": 222, "start_point": [9, 9], "end_point": [9, 13], "text": ".b {"}], "start_byte": 217, "end_byte": 222, "start_point": [9, 8], "end_point": [9, 13], "text": "n.b {"}, {"type": "in", "children": [], "start_byte": 223, "end_byte": 225, "start_point": [9, 14], "end_point": [9, 16], "text": "  "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 226, "end_byte": 227, "start_point": [9, 17], "end_point": [9, 18], "text": " "}, {"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 227, "end_byte": 228, "start_point": [9, 18], "end_point": [9, 19], "text": " "}, {"type": ".", "children": [], "start_byte": 228, "end_byte": 229, "start_point": [9, 19], "end_point": [9, 20], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 229, "end_byte": 230, "start_point": [9, 20], "end_point": [9, 21], "text": " "}], "start_byte": 227, "end_byte": 230, "start_point": [9, 18], "end_point": [9, 21], "text": "   "}], "start_byte": 226, "end_byte": 230, "start_point": [9, 17], "end_point": [9, 21], "text": "    "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 231, "end_byte": 232, "start_point": [9, 22], "end_point": [9, 23], "text": "i"}, {"type": "expression_statement", "children": [{"type": "if_expression", "children": [{"type": "if", "children": [], "start_byte": 241, "end_byte": 243, "start_point": [10, 8], "end_point": [10, 10], "text": " 0"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 244, "end_byte": 248, "start_point": [10, 11], "end_point": [10, 15], "text": "{\n  "}, {"type": "!=", "children": [], "start_byte": 249, "end_byte": 251, "start_point": [10, 16], "end_point": [10, 18], "text": "  "}, {"type": "integer_literal", "children": [], "start_byte": 252, "end_byte": 253, "start_point": [10, 19], "end_point": [10, 20], "text": " "}], "start_byte": 244, "end_byte": 253, "start_point": [10, 11], "end_point": [10, 20], "text": "{\n       "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 254, "end_byte": 255, "start_point": [10, 21], "end_point": [10, 22], "text": " "}, {"type": "expression_statement", "children": [{"type": "return_expression", "children": [{"type": "return", "children": [], "start_byte": 268, "end_byte": 274, "start_point": [11, 12], "end_point": [11, 18], "text": "se;\n  "}, {"type": "boolean_literal", "children": [{"type": "false", "children": [], "start_byte": 275, "end_byte": 280, "start_point": [11, 19], "end_point": [11, 24], "text": "     "}], "start_byte": 275, "end_byte": 280, "start_point": [11, 19], "end_point": [11, 24], "text": "     "}], "start_byte": 268, "end_byte": 280, "start_point": [11, 12], "end_point": [11, 24], "text": "se;\n        "}, {"type": ";", "children": [], "start_byte": 280, "end_byte": 281, "start_point": [11, 24], "end_point": [11, 25], "text": "}"}], "start_byte": 268, "end_byte": 281, "start_point": [11, 12], "end_point": [11, 25], "text": "se;\n        }"}, {"type": "}", "children": [], "start_byte": 290, "end_byte": 291, "start_point": [12, 8], "end_point": [12, 9], "text": " "}], "start_byte": 254, "end_byte": 291, "start_point": [10, 21], "end_point": [12, 9], "text": "    return false;\n        }\n    }\n   "}], "start_byte": 241, "end_byte": 291, "start_point": [10, 8], "end_point": [12, 9], "text": " 0 {\n            return false;\n        }\n    }\n   "}], "start_byte": 241, "end_byte": 291, "start_point": [10, 8], "end_point": [12, 9], "text": " 0 {\n            return false;\n        }\n    }\n   "}, {"type": "}", "children": [], "start_byte": 296, "end_byte": 297, "start_point": [13, 4], "end_point": [13, 5], "text": "\n"}], "start_byte": 231, "end_byte": 297, "start_point": [9, 22], "end_point": [13, 5], "text": "if byte != 0 {\n            return false;\n        }\n    }\n    true\n"}], "start_byte": 213, "end_byte": 297, "start_point": [9, 4], "end_point": [13, 5], "text": "in &n.b {\n        if byte != 0 {\n            return false;\n        }\n    }\n    true\n"}], "start_byte": 213, "end_byte": 297, "start_point": [9, 4], "end_point": [13, 5], "text": "in &n.b {\n        if byte != 0 {\n            return false;\n        }\n    }\n    true\n"}, {"type": "boolean_literal", "children": [{"type": "true", "children": [], "start_byte": 302, "end_byte": 306, "start_point": [14, 4], "end_point": [14, 8], "text": " \u5c06UI"}], "start_byte": 302, "end_byte": 306, "start_point": [14, 4], "end_point": [14, 8], "text": " \u5c06UI"}, {"type": "}", "children": [], "start_byte": 307, "end_byte": 308, "start_point": [15, 0], "end_point": [15, 1], "text": "t"}], "start_byte": 207, "end_byte": 308, "start_point": [8, 37], "end_point": [15, 1], "text": "&byte in &n.b {\n        if byte != 0 {\n            return false;\n        }\n    }\n    true\n}\n\n// \u5c06UInt"}], "start_byte": 170, "end_byte": 308, "start_point": [8, 0], "end_point": [15, 1], "text": "isZero(n: &UInt64) -> bool {\n    for &byte in &n.b {\n        if byte != 0 {\n            return false;\n        }\n    }\n    true\n}\n\n// \u5c06UInt"}, {"type": "line_comment", "children": [], "start_byte": 310, "end_byte": 342, "start_point": [17, 0], "end_point": [17, 32], "text": "\u8f6c\u6362\u4e3aASCII\u8868\u793a\nfn uInt64_toAscii(out"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 343, "end_byte": 345, "start_point": [18, 0], "end_point": [18, 2], "text": "uf"}, {"type": "identifier", "children": [], "start_byte": 346, "end_byte": 360, "start_point": [18, 3], "end_point": [18, 17], "text": " &mut [char; 3"}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 360, "end_byte": 361, "start_point": [18, 17], "end_point": [18, 18], "text": "2"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 361, "end_byte": 367, "start_point": [18, 18], "end_point": [18, 24], "text": "], n: "}, {"type": ":", "children": [], "start_byte": 367, "end_byte": 368, "start_point": [18, 24], "end_point": [18, 25], "text": "&"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 369, "end_byte": 370, "start_point": [18, 26], "end_point": [18, 27], "text": "I"}, {"type": "mutable_specifier", "children": [], "start_byte": 370, "end_byte": 373, "start_point": [18, 27], "end_point": [18, 30], "text": "nt6"}, {"type": "array_type", "children": [{"type": "[", "children": [], "start_byte": 374, "end_byte": 375, "start_point": [18, 31], "end_point": [18, 32], "text": ")"}, {"type": "primitive_type", "children": [], "start_byte": 375, "end_byte": 379, "start_point": [18, 32], "end_point": [18, 36], "text": " {\n "}, {"type": ";", "children": [], "start_byte": 379, "end_byte": 380, "start_point": [18, 36], "end_point": [18, 37], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 381, "end_byte": 383, "start_point": [18, 38], "end_point": [18, 40], "text": " l"}, {"type": "]", "children": [], "start_byte": 383, "end_byte": 384, "start_point": [18, 40], "end_point": [18, 41], "text": "e"}], "start_byte": 374, "end_byte": 384, "start_point": [18, 31], "end_point": [18, 41], "text": ") {\n    le"}], "start_byte": 369, "end_byte": 384, "start_point": [18, 26], "end_point": [18, 41], "text": "Int64) {\n    le"}], "start_byte": 361, "end_byte": 384, "start_point": [18, 18], "end_point": [18, 41], "text": "], n: &UInt64) {\n    le"}, {"type": ",", "children": [], "start_byte": 384, "end_byte": 385, "start_point": [18, 41], "end_point": [18, 42], "text": "t"}, {"type": "parameter", "children": [{"type": "identifier", "children": [], "start_byte": 386, "end_byte": 387, "start_point": [18, 43], "end_point": [18, 44], "text": "m"}, {"type": ":", "children": [], "start_byte": 387, "end_byte": 388, "start_point": [18, 44], "end_point": [18, 45], "text": "u"}, {"type": "reference_type", "children": [{"type": "&", "children": [], "start_byte": 389, "end_byte": 390, "start_point": [18, 46], "end_point": [18, 47], "text": " "}, {"type": "type_identifier", "children": [], "start_byte": 390, "end_byte": 396, "start_point": [18, 47], "end_point": [18, 53], "text": "q;\n   "}], "start_byte": 389, "end_byte": 396, "start_point": [18, 46], "end_point": [18, 53], "text": " q;\n   "}], "start_byte": 386, "end_byte": 396, "start_point": [18, 43], "end_point": [18, 53], "text": "mut q;\n   "}, {"type": ")", "children": [], "start_byte": 396, "end_byte": 397, "start_point": [18, 53], "end_point": [18, 54], "text": " "}], "start_byte": 360, "end_byte": 397, "start_point": [18, 17], "end_point": [18, 54], "text": "2], n: &UInt64) {\n    let mut q;\n    "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 398, "end_byte": 399, "start_point": [18, 55], "end_point": [18, 56], "text": "e"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 404, "end_byte": 407, "start_point": [19, 4], "end_point": [19, 7], "text": " bu"}, {"type": "mutable_specifier", "children": [], "start_byte": 408, "end_byte": 411, "start_point": [19, 8], "end_point": [19, 11], "text": " = "}, {"type": "identifier", "children": [], "start_byte": 412, "end_byte": 413, "start_point": [19, 12], "end_point": [19, 13], "text": "'"}, {"type": ";", "children": [], "start_byte": 413, "end_byte": 414, "start_point": [19, 13], "end_point": [19, 14], "text": "\\"}], "start_byte": 404, "end_byte": 414, "start_point": [19, 4], "end_point": [19, 14], "text": " buf = ['\\"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 419, "end_byte": 422, "start_point": [20, 4], "end_point": [20, 7], "text": "2];"}, {"type": "mutable_specifier", "children": [], "start_byte": 423, "end_byte": 426, "start_point": [20, 8], "end_point": [20, 11], "text": "// "}, {"type": "identifier", "children": [], "start_byte": 427, "end_byte": 430, "start_point": [20, 12], "end_point": [20, 15], "text": "\u59cb\u5316\u4e3a"}, {"type": "=", "children": [], "start_byte": 431, "end_byte": 432, "start_point": [20, 16], "end_point": [20, 17], "text": "u"}, {"type": "array_expression", "children": [{"type": "[", "children": [], "start_byte": 433, "end_byte": 434, "start_point": [20, 18], "end_point": [20, 19], "text": "l"}, {"type": "char_literal", "children": [], "start_byte": 434, "end_byte": 438, "start_point": [20, 19], "end_point": [20, 23], "text": "\u5b57\u7b26\n "}, {"type": ";", "children": [], "start_byte": 438, "end_byte": 439, "start_point": [20, 23], "end_point": [20, 24], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 440, "end_byte": 442, "start_point": [20, 25], "end_point": [20, 27], "text": " l"}, {"type": "]", "children": [], "start_byte": 442, "end_byte": 443, "start_point": [20, 27], "end_point": [20, 28], "text": "e"}], "start_byte": 433, "end_byte": 443, "start_point": [20, 18], "end_point": [20, 28], "text": "l\u5b57\u7b26\n    le"}, {"type": ";", "children": [], "start_byte": 443, "end_byte": 444, "start_point": [20, 28], "end_point": [20, 29], "text": "t"}], "start_byte": 419, "end_byte": 444, "start_point": [20, 4], "end_point": [20, 29], "text": "2]; // \u521d\u59cb\u5316\u4e3anull\u5b57\u7b26\n    let"}, {"type": "line_comment", "children": [], "start_byte": 445, "end_byte": 470, "start_point": [20, 30], "end_point": [20, 55], "text": "mut nBuf = 0usize;\n    le"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 475, "end_byte": 478, "start_point": [21, 4], "end_point": [21, 7], "text": " n_"}, {"type": "mutable_specifier", "children": [], "start_byte": 479, "end_byte": 482, "start_point": [21, 8], "end_point": [21, 11], "text": "opy"}, {"type": "identifier", "children": [], "start_byte": 483, "end_byte": 487, "start_point": [21, 12], "end_point": [21, 16], "text": "= *n"}, {"type": "=", "children": [], "start_byte": 488, "end_byte": 489, "start_point": [21, 17], "end_point": [21, 18], "text": "\n"}, {"type": "integer_literal", "children": [], "start_byte": 490, "end_byte": 496, "start_point": [21, 19], "end_point": [21, 25], "text": "    //"}, {"type": ";", "children": [], "start_byte": 496, "end_byte": 497, "start_point": [21, 25], "end_point": [21, 26], "text": " "}], "start_byte": 475, "end_byte": 497, "start_point": [21, 4], "end_point": [21, 26], "text": " n_copy = *n;\n\n    // "}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 502, "end_byte": 505, "start_point": [22, 4], "end_point": [22, 7], "text": "_co"}, {"type": "mutable_specifier", "children": [], "start_byte": 506, "end_byte": 509, "start_point": [22, 8], "end_point": [22, 11], "text": "y\u4e3a0"}, {"type": "identifier", "children": [], "start_byte": 510, "end_byte": 516, "start_point": [22, 12], "end_point": [22, 18], "text": "    wh"}, {"type": "=", "children": [], "start_byte": 517, "end_byte": 518, "start_point": [22, 19], "end_point": [22, 20], "text": "l"}, {"type": "unary_expression", "children": [{"type": "*", "children": [], "start_byte": 519, "end_byte": 520, "start_point": [22, 21], "end_point": [22, 22], "text": " "}, {"type": "identifier", "children": [], "start_byte": 520, "end_byte": 521, "start_point": [22, 22], "end_point": [22, 23], "text": "!"}], "start_byte": 519, "end_byte": 521, "start_point": [22, 21], "end_point": [22, 23], "text": " !"}, {"type": ";", "children": [], "start_byte": 521, "end_byte": 522, "start_point": [22, 23], "end_point": [22, 24], "text": "u"}], "start_byte": 502, "end_byte": 522, "start_point": [22, 4], "end_point": [22, 24], "text": "_copy\u4e3a0\n    while !u"}, {"type": "line_comment", "children": [], "start_byte": 528, "end_byte": 553, "start_point": [24, 4], "end_point": [24, 29], "text": "isZero(&n_copy) {\n       "}, {"type": "expression_statement", "children": [{"type": "while_expression", "children": [{"type": "while", "children": [], "start_byte": 558, "end_byte": 563, "start_point": [25, 4], "end_point": [25, 9], "text": "uInt6"}, {"type": "unary_expression", "children": [{"type": "!", "children": [], "start_byte": 564, "end_byte": 565, "start_point": [25, 10], "end_point": [25, 11], "text": "_"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 565, "end_byte": 578, "start_point": [25, 11], "end_point": [25, 24], "text": "qrm10(&mut n_"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 578, "end_byte": 579, "start_point": [25, 24], "end_point": [25, 25], "text": "c"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 579, "end_byte": 580, "start_point": [25, 25], "end_point": [25, 26], "text": "o"}, {"type": "identifier", "children": [], "start_byte": 580, "end_byte": 586, "start_point": [25, 26], "end_point": [25, 32], "text": "py);\n "}], "start_byte": 579, "end_byte": 586, "start_point": [25, 25], "end_point": [25, 32], "text": "opy);\n "}, {"type": ")", "children": [], "start_byte": 586, "end_byte": 587, "start_point": [25, 32], "end_point": [25, 33], "text": " "}], "start_byte": 578, "end_byte": 587, "start_point": [25, 24], "end_point": [25, 33], "text": "copy);\n  "}], "start_byte": 565, "end_byte": 587, "start_point": [25, 11], "end_point": [25, 33], "text": "qrm10(&mut n_copy);\n  "}], "start_byte": 564, "end_byte": 587, "start_point": [25, 10], "end_point": [25, 33], "text": "_qrm10(&mut n_copy);\n  "}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 588, "end_byte": 589, "start_point": [25, 34], "end_point": [25, 35], "text": " "}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "identifier", "children": [], "start_byte": 598, "end_byte": 599, "start_point": [26, 8], "end_point": [26, 9], "text": "B"}, {"type": "=", "children": [], "start_byte": 600, "end_byte": 601, "start_point": [26, 10], "end_point": [26, 11], "text": "f"}, {"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 602, "end_byte": 614, "start_point": [26, 12], "end_point": [26, 24], "text": " = (q + '0' "}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 614, "end_byte": 615, "start_point": [26, 24], "end_point": [26, 25], "text": "a"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 615, "end_byte": 616, "start_point": [26, 25], "end_point": [26, 26], "text": "s"}, {"type": "mutable_specifier", "children": [], "start_byte": 616, "end_byte": 619, "start_point": [26, 26], "end_point": [26, 29], "text": " i3"}, {"type": "identifier", "children": [], "start_byte": 620, "end_byte": 626, "start_point": [26, 30], "end_point": [26, 36], "text": ") as u"}], "start_byte": 615, "end_byte": 626, "start_point": [26, 25], "end_point": [26, 36], "text": "s i32) as u"}, {"type": ")", "children": [], "start_byte": 626, "end_byte": 627, "start_point": [26, 36], "end_point": [26, 37], "text": "8"}], "start_byte": 614, "end_byte": 627, "start_point": [26, 24], "end_point": [26, 37], "text": "as i32) as u8"}], "start_byte": 602, "end_byte": 627, "start_point": [26, 12], "end_point": [26, 37], "text": " = (q + '0' as i32) as u8"}], "start_byte": 598, "end_byte": 627, "start_point": [26, 8], "end_point": [26, 37], "text": "Buf] = (q + '0' as i32) as u8"}, {"type": ";", "children": [], "start_byte": 627, "end_byte": 628, "start_point": [26, 37], "end_point": [26, 38], "text": " "}], "start_byte": 598, "end_byte": 628, "start_point": [26, 8], "end_point": [26, 38], "text": "Buf] = (q + '0' as i32) as u8 "}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 637, "end_byte": 640, "start_point": [27, 8], "end_point": [27, 11], "text": "   "}, {"type": "[", "children": [], "start_byte": 640, "end_byte": 641, "start_point": [27, 11], "end_point": [27, 12], "text": " "}, {"type": "identifier", "children": [], "start_byte": 641, "end_byte": 645, "start_point": [27, 12], "end_point": [27, 16], "text": "    "}, {"type": "]", "children": [], "start_byte": 645, "end_byte": 646, "start_point": [27, 16], "end_point": [27, 17], "text": "n"}], "start_byte": 637, "end_byte": 646, "start_point": [27, 8], "end_point": [27, 17], "text": "        n"}, {"type": "=", "children": [], "start_byte": 647, "end_byte": 648, "start_point": [27, 18], "end_point": [27, 19], "text": "u"}, {"type": "type_cast_expression", "children": [{"type": "type_cast_expression", "children": [{"type": "parenthesized_expression", "children": [{"type": "(", "children": [], "start_byte": 649, "end_byte": 650, "start_point": [27, 20], "end_point": [27, 21], "text": " "}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 650, "end_byte": 651, "start_point": [27, 21], "end_point": [27, 22], "text": "+"}, {"type": "+", "children": [], "start_byte": 652, "end_byte": 653, "start_point": [27, 23], "end_point": [27, 24], "text": " "}, {"type": "type_cast_expression", "children": [{"type": "char_literal", "children": [], "start_byte": 654, "end_byte": 657, "start_point": [27, 25], "end_point": [27, 28], "text": ";\n "}, {"type": "as", "children": [], "start_byte": 658, "end_byte": 660, "start_point": [27, 29], "end_point": [27, 31], "text": "  "}, {"type": "primitive_type", "children": [], "start_byte": 661, "end_byte": 664, "start_point": [27, 32], "end_point": [27, 35], "text": "\n\n "}], "start_byte": 654, "end_byte": 664, "start_point": [27, 25], "end_point": [27, 35], "text": ";\n    }\n\n "}], "start_byte": 650, "end_byte": 664, "start_point": [27, 21], "end_point": [27, 35], "text": "+= 1;\n    }\n\n "}, {"type": ")", "children": [], "start_byte": 664, "end_byte": 665, "start_point": [27, 35], "end_point": [27, 36], "text": " "}], "start_byte": 649, "end_byte": 665, "start_point": [27, 20], "end_point": [27, 36], "text": " += 1;\n    }\n\n  "}, {"type": "as", "children": [], "start_byte": 666, "end_byte": 668, "start_point": [27, 37], "end_point": [27, 39], "text": " o"}, {"type": "primitive_type", "children": [], "start_byte": 669, "end_byte": 671, "start_point": [27, 40], "end_point": [27, 42], "text": "tb"}], "start_byte": 649, "end_byte": 671, "start_point": [27, 20], "end_point": [27, 42], "text": " += 1;\n    }\n\n    outb"}, {"type": "as", "children": [], "start_byte": 672, "end_byte": 674, "start_point": [27, 43], "end_point": [27, 45], "text": "f["}, {"type": "primitive_type", "children": [], "start_byte": 675, "end_byte": 679, "start_point": [27, 46], "end_point": [27, 50], "text": "Buf]"}], "start_byte": 649, "end_byte": 679, "start_point": [27, 20], "end_point": [27, 50], "text": " += 1;\n    }\n\n    outbuf[nBuf]"}], "start_byte": 637, "end_byte": 679, "start_point": [27, 8], "end_point": [27, 50], "text": "        nBuf += 1;\n    }\n\n    outbuf[nBuf]"}, {"type": ";", "children": [], "start_byte": 679, "end_byte": 680, "start_point": [27, 50], "end_point": [27, 51], "text": " "}], "start_byte": 637, "end_byte": 680, "start_point": [27, 8], "end_point": [27, 51], "text": "        nBuf += 1;\n    }\n\n    outbuf[nBuf] "}, {"type": "expression_statement", "children": [{"type": "compound_assignment_expr", "children": [{"type": "identifier", "children": [], "start_byte": 689, "end_byte": 693, "start_point": [28, 8], "end_point": [28, 12], "text": "/ \u8bbe\u7f6e"}, {"type": "+=", "children": [], "start_byte": 694, "end_byte": 696, "start_point": [28, 13], "end_point": [28, 15], "text": "\u7b26\u4e32"}, {"type": "integer_literal", "children": [], "start_byte": 697, "end_byte": 698, "start_point": [28, 16], "end_point": [28, 17], "text": "\u675f"}], "start_byte": 689, "end_byte": 698, "start_point": [28, 8], "end_point": [28, 17], "text": "/ \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f"}, {"type": ";", "children": [], "start_byte": 698, "end_byte": 699, "start_point": [28, 17], "end_point": [28, 18], "text": "\u6807"}], "start_byte": 689, "end_byte": 699, "start_point": [28, 8], "end_point": [28, 18], "text": "/ \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f\u6807"}, {"type": "}", "children": [], "start_byte": 704, "end_byte": 705, "start_point": [29, 4], "end_point": [29, 5], "text": " "}], "start_byte": 588, "end_byte": 705, "start_point": [25, 34], "end_point": [29, 5], "text": "     buf[nBuf] = (q + '0' as i32) as u8 as char;\n        nBuf += 1;\n    }\n\n    outbuf[nBuf] = '\\0'; // \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\n    "}], "start_byte": 558, "end_byte": 705, "start_point": [25, 4], "end_point": [29, 5], "text": "uInt64_qrm10(&mut n_copy);\n        buf[nBuf] = (q + '0' as i32) as u8 as char;\n        nBuf += 1;\n    }\n\n    outbuf[nBuf] = '\\0'; // \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\n    "}], "start_byte": 558, "end_byte": 705, "start_point": [25, 4], "end_point": [29, 5], "text": "uInt64_qrm10(&mut n_copy);\n        buf[nBuf] = (q + '0' as i32) as u8 as char;\n        nBuf += 1;\n    }\n\n    outbuf[nBuf] = '\\0'; // \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\n    "}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 711, "end_byte": 717, "start_point": [31, 4], "end_point": [31, 10], "text": "in 0.."}, {"type": "[", "children": [], "start_byte": 717, "end_byte": 718, "start_point": [31, 10], "end_point": [31, 11], "text": "n"}, {"type": "identifier", "children": [], "start_byte": 718, "end_byte": 722, "start_point": [31, 11], "end_point": [31, 15], "text": "Buf "}, {"type": "]", "children": [], "start_byte": 722, "end_byte": 723, "start_point": [31, 15], "end_point": [31, 16], "text": "{"}], "start_byte": 711, "end_byte": 723, "start_point": [31, 4], "end_point": [31, 16], "text": "in 0..nBuf {"}, {"type": "=", "children": [], "start_byte": 724, "end_byte": 725, "start_point": [31, 17], "end_point": [31, 18], "text": " "}, {"type": "char_literal", "children": [], "start_byte": 726, "end_byte": 730, "start_point": [31, 19], "end_point": [31, 23], "text": "    "}], "start_byte": 711, "end_byte": 730, "start_point": [31, 4], "end_point": [31, 23], "text": "in 0..nBuf {\n      "}, {"type": ";", "children": [], "start_byte": 730, "end_byte": 731, "start_point": [31, 23], "end_point": [31, 24], "text": " "}], "start_byte": 711, "end_byte": 731, "start_point": [31, 4], "end_point": [31, 24], "text": "in 0..nBuf {\n       "}, {"type": "line_comment", "children": [], "start_byte": 732, "end_byte": 762, "start_point": [31, 25], "end_point": [31, 55], "text": "outbuf[i] = buf[nBuf - i - 1];"}, {"type": "expression_statement", "children": [{"type": "for_expression", "children": [{"type": "for", "children": [], "start_byte": 767, "end_byte": 770, "start_point": [32, 4], "end_point": [32, 7], "text": "}\n}"}, {"type": "identifier", "children": [], "start_byte": 771, "end_byte": 772, "start_point": [32, 8], "end_point": [32, 9], "text": "\n"}, {"type": "in", "children": [], "start_byte": 773, "end_byte": 775, "start_point": [32, 10], "end_point": [32, 12], "text": "/ "}, {"type": "range_expression", "children": [{"type": "integer_literal", "children": [], "start_byte": 776, "end_byte": 777, "start_point": [32, 13], "end_point": [32, 14], "text": "\u610f"}, {"type": "..", "children": [], "start_byte": 777, "end_byte": 779, "start_point": [32, 14], "end_point": [32, 16], "text": "\uff1a\u7531"}, {"type": "identifier", "children": [], "start_byte": 779, "end_byte": 783, "start_point": [32, 16], "end_point": [32, 20], "text": "\u4e8eRus"}], "start_byte": 776, "end_byte": 783, "start_point": [32, 13], "end_point": [32, 20], "text": "\u610f\uff1a\u7531\u4e8eRus"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 784, "end_byte": 785, "start_point": [32, 21], "end_point": [32, 22], "text": "\u6ca1"}, {"type": "expression_statement", "children": [{"type": "assignment_expression", "children": [{"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 794, "end_byte": 800, "start_point": [33, 8], "end_point": [33, 14], "text": "CUnit\uff0c"}, {"type": "[", "children": [], "start_byte": 800, "end_byte": 801, "start_point": [33, 14], "end_point": [33, 15], "text": "\u6211"}, {"type": "identifier", "children": [], "start_byte": 801, "end_byte": 802, "start_point": [33, 15], "end_point": [33, 16], "text": "\u4eec"}, {"type": "]", "children": [], "start_byte": 802, "end_byte": 803, "start_point": [33, 16], "end_point": [33, 17], "text": "\u5c06"}], "start_byte": 794, "end_byte": 803, "start_point": [33, 8], "end_point": [33, 17], "text": "CUnit\uff0c\u6211\u4eec\u5c06"}, {"type": "=", "children": [], "start_byte": 804, "end_byte": 805, "start_point": [33, 18], "end_point": [33, 19], "text": "\u7528"}, {"type": "index_expression", "children": [{"type": "identifier", "children": [], "start_byte": 806, "end_byte": 809, "start_point": [33, 20], "end_point": [33, 23], "text": "ust"}, {"type": "[", "children": [], "start_byte": 809, "end_byte": 810, "start_point": [33, 23], "end_point": [33, 24], "text": "\u7684"}, {"type": "binary_expression", "children": [{"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 810, "end_byte": 814, "start_point": [33, 24], "end_point": [33, 28], "text": "\u6d4b\u8bd5\u6846\u67b6"}, {"type": "-", "children": [], "start_byte": 815, "end_byte": 816, "start_point": [33, 29], "end_point": [33, 30], "text": "#"}, {"type": "identifier", "children": [], "start_byte": 817, "end_byte": 818, "start_point": [33, 31], "end_point": [33, 32], "text": "c"}], "start_byte": 810, "end_byte": 818, "start_point": [33, 24], "end_point": [33, 32], "text": "\u6d4b\u8bd5\u6846\u67b6\n#[c"}, {"type": "-", "children": [], "start_byte": 819, "end_byte": 820, "start_point": [33, 33], "end_point": [33, 34], "text": "g"}, {"type": "integer_literal", "children": [], "start_byte": 821, "end_byte": 822, "start_point": [33, 35], "end_point": [33, 36], "text": "t"}], "start_byte": 810, "end_byte": 822, "start_point": [33, 24], "end_point": [33, 36], "text": "\u6d4b\u8bd5\u6846\u67b6\n#[cfg(t"}, {"type": "]", "children": [], "start_byte": 822, "end_byte": 823, "start_point": [33, 36], "end_point": [33, 37], "text": "e"}], "start_byte": 806, "end_byte": 823, "start_point": [33, 20], "end_point": [33, 37], "text": "ust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(te"}], "start_byte": 794, "end_byte": 823, "start_point": [33, 8], "end_point": [33, 37], "text": "CUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(te"}, {"type": ";", "children": [], "start_byte": 823, "end_byte": 824, "start_point": [33, 37], "end_point": [33, 38], "text": "s"}], "start_byte": 794, "end_byte": 824, "start_point": [33, 8], "end_point": [33, 38], "text": "CUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(tes"}, {"type": "}", "children": [], "start_byte": 829, "end_byte": 830, "start_point": [34, 4], "end_point": [34, 5], "text": "o"}], "start_byte": 784, "end_byte": 830, "start_point": [32, 21], "end_point": [34, 5], "text": "\u6ca1\u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u6846\u67b6\u50cfCUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(test)]\nmo"}], "start_byte": 767, "end_byte": 830, "start_point": [32, 4], "end_point": [34, 5], "text": "}\n}\n\n// \u6ce8\u610f\uff1a\u7531\u4e8eRust\u6ca1\u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u6846\u67b6\u50cfCUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(test)]\nmo"}], "start_byte": 767, "end_byte": 830, "start_point": [32, 4], "end_point": [34, 5], "text": "}\n}\n\n// \u6ce8\u610f\uff1a\u7531\u4e8eRust\u6ca1\u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u6846\u67b6\u50cfCUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(test)]\nmo"}, {"type": "}", "children": [], "start_byte": 831, "end_byte": 832, "start_point": [35, 0], "end_point": [35, 1], "text": " "}], "start_byte": 398, "end_byte": 832, "start_point": [18, 55], "end_point": [35, 1], "text": "et mut buf = ['\\0'; 32]; // \u521d\u59cb\u5316\u4e3anull\u5b57\u7b26\n    let mut nBuf = 0usize;\n    let mut n_copy = *n;\n\n    // \u5faa\u73af\u76f4\u5230n_copy\u4e3a0\n    while !uInt64_isZero(&n_copy) {\n        q = uInt64_qrm10(&mut n_copy);\n        buf[nBuf] = (q + '0' as i32) as u8 as char;\n        nBuf += 1;\n    }\n\n    outbuf[nBuf] = '\\0'; // \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\n    for i in 0..nBuf {\n        outbuf[i] = buf[nBuf - i - 1];\n    }\n}\n\n// \u6ce8\u610f\uff1a\u7531\u4e8eRust\u6ca1\u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u6846\u67b6\u50cfCUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(test)]\nmod "}], "start_byte": 343, "end_byte": 832, "start_point": [18, 0], "end_point": [35, 1], "text": "uf: &mut [char; 32], n: &UInt64) {\n    let mut q;\n    let mut buf = ['\\0'; 32]; // \u521d\u59cb\u5316\u4e3anull\u5b57\u7b26\n    let mut nBuf = 0usize;\n    let mut n_copy = *n;\n\n    // \u5faa\u73af\u76f4\u5230n_copy\u4e3a0\n    while !uInt64_isZero(&n_copy) {\n        q = uInt64_qrm10(&mut n_copy);\n        buf[nBuf] = (q + '0' as i32) as u8 as char;\n        nBuf += 1;\n    }\n\n    outbuf[nBuf] = '\\0'; // \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\n    for i in 0..nBuf {\n        outbuf[i] = buf[nBuf - i - 1];\n    }\n}\n\n// \u6ce8\u610f\uff1a\u7531\u4e8eRust\u6ca1\u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u6846\u67b6\u50cfCUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(test)]\nmod "}, {"type": "line_comment", "children": [], "start_byte": 834, "end_byte": 928, "start_point": [37, 0], "end_point": [37, 94], "text": "sts {\n    use super::*;\n\n    #[test]\n    fn test_uInt64_toAscii() {\n        let number = UInt6"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 929, "end_byte": 930, "start_point": [38, 0], "end_point": [38, 1], "text": " "}, {"type": "[", "children": [], "start_byte": 930, "end_byte": 931, "start_point": [38, 1], "end_point": [38, 2], "text": "{"}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 931, "end_byte": 934, "start_point": [38, 2], "end_point": [38, 5], "text": "\n  "}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 934, "end_byte": 935, "start_point": [38, 5], "end_point": [38, 6], "text": " "}, {"type": "identifier", "children": [], "start_byte": 935, "end_byte": 939, "start_point": [38, 6], "end_point": [38, 10], "text": "    "}, {"type": ")", "children": [], "start_byte": 939, "end_byte": 940, "start_point": [38, 10], "end_point": [38, 11], "text": " "}], "start_byte": 934, "end_byte": 940, "start_point": [38, 5], "end_point": [38, 11], "text": "      "}], "start_byte": 931, "end_byte": 940, "start_point": [38, 2], "end_point": [38, 11], "text": "\n        "}, {"type": "]", "children": [], "start_byte": 940, "end_byte": 941, "start_point": [38, 11], "end_point": [38, 12], "text": " "}], "start_byte": 929, "end_byte": 941, "start_point": [38, 0], "end_point": [38, 12], "text": " {\n         "}, {"type": "mod_item", "children": [{"type": "mod", "children": [], "start_byte": 942, "end_byte": 945, "start_point": [39, 0], "end_point": [39, 3], "text": "  b"}, {"type": "identifier", "children": [], "start_byte": 946, "end_byte": 951, "start_point": [39, 4], "end_point": [39, 9], "text": " [12,"}, {"type": "declaration_list", "children": [{"type": "{", "children": [], "start_byte": 952, "end_byte": 953, "start_point": [39, 10], "end_point": [39, 11], "text": "0"}, {"type": "use_declaration", "children": [{"type": "use", "children": [], "start_byte": 958, "end_byte": 961, "start_point": [40, 4], "end_point": [40, 7], "text": "0, "}, {"type": "use_wildcard", "children": [{"type": "super", "children": [], "start_byte": 962, "end_byte": 967, "start_point": [40, 8], "end_point": [40, 13], "text": ", 0, "}, {"type": "::", "children": [], "start_byte": 967, "end_byte": 969, "start_point": [40, 13], "end_point": [40, 15], "text": "0,"}, {"type": "*", "children": [], "start_byte": 969, "end_byte": 970, "start_point": [40, 15], "end_point": [40, 16], "text": " "}], "start_byte": 962, "end_byte": 970, "start_point": [40, 8], "end_point": [40, 16], "text": ", 0, 0, "}, {"type": ";", "children": [], "start_byte": 970, "end_byte": 971, "start_point": [40, 16], "end_point": [40, 17], "text": "0"}], "start_byte": 958, "end_byte": 971, "start_point": [40, 4], "end_point": [40, 17], "text": "0, 0, 0, 0, 0"}, {"type": "attribute_item", "children": [{"type": "#", "children": [], "start_byte": 977, "end_byte": 978, "start_point": [42, 4], "end_point": [42, 5], "text": " "}, {"type": "[", "children": [], "start_byte": 978, "end_byte": 979, "start_point": [42, 5], "end_point": [42, 6], "text": " "}, {"type": "attribute", "children": [{"type": "identifier", "children": [], "start_byte": 979, "end_byte": 983, "start_point": [42, 6], "end_point": [42, 10], "text": "   }"}], "start_byte": 979, "end_byte": 983, "start_point": [42, 6], "end_point": [42, 10], "text": "   }"}, {"type": "]", "children": [], "start_byte": 983, "end_byte": 984, "start_point": [42, 10], "end_point": [42, 11], "text": ";"}], "start_byte": 977, "end_byte": 984, "start_point": [42, 4], "end_point": [42, 11], "text": "     };"}, {"type": "function_item", "children": [{"type": "fn", "children": [], "start_byte": 989, "end_byte": 991, "start_point": [43, 4], "end_point": [43, 6], "text": "  "}, {"type": "identifier", "children": [], "start_byte": 992, "end_byte": 1011, "start_point": [43, 7], "end_point": [43, 26], "text": " let mut output = ["}, {"type": "parameters", "children": [{"type": "(", "children": [], "start_byte": 1011, "end_byte": 1012, "start_point": [43, 26], "end_point": [43, 27], "text": "'"}, {"type": ")", "children": [], "start_byte": 1012, "end_byte": 1013, "start_point": [43, 27], "end_point": [43, 28], "text": "\\"}], "start_byte": 1011, "end_byte": 1013, "start_point": [43, 26], "end_point": [43, 28], "text": "'\\"}, {"type": "block", "children": [{"type": "{", "children": [], "start_byte": 1014, "end_byte": 1015, "start_point": [43, 29], "end_point": [43, 30], "text": "'"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1024, "end_byte": 1027, "start_point": [44, 8], "end_point": [44, 11], "text": "   "}, {"type": "identifier", "children": [], "start_byte": 1028, "end_byte": 1034, "start_point": [44, 12], "end_point": [44, 18], "text": "  uInt"}, {"type": "=", "children": [], "start_byte": 1035, "end_byte": 1036, "start_point": [44, 19], "end_point": [44, 20], "text": "4"}, {"type": "struct_expression", "children": [{"type": "type_identifier", "children": [], "start_byte": 1037, "end_byte": 1043, "start_point": [44, 21], "end_point": [44, 27], "text": "toAsci"}, {"type": "field_initializer_list", "children": [{"type": "{", "children": [], "start_byte": 1044, "end_byte": 1045, "start_point": [44, 28], "end_point": [44, 29], "text": "("}, {"type": "field_initializer", "children": [{"type": "field_identifier", "children": [], "start_byte": 1058, "end_byte": 1059, "start_point": [45, 12], "end_point": [45, 13], "text": "&"}, {"type": ":", "children": [], "start_byte": 1059, "end_byte": 1060, "start_point": [45, 13], "end_point": [45, 14], "text": "n"}, {"type": "array_expression", "children": [{"type": "[", "children": [], "start_byte": 1061, "end_byte": 1062, "start_point": [45, 15], "end_point": [45, 16], "text": "m"}, {"type": "integer_literal", "children": [], "start_byte": 1062, "end_byte": 1064, "start_point": [45, 16], "end_point": [45, 18], "text": "be"}, {"type": ",", "children": [], "start_byte": 1064, "end_byte": 1065, "start_point": [45, 18], "end_point": [45, 19], "text": "r"}, {"type": "integer_literal", "children": [], "start_byte": 1066, "end_byte": 1067, "start_point": [45, 20], "end_point": [45, 21], "text": ";"}, {"type": ",", "children": [], "start_byte": 1067, "end_byte": 1068, "start_point": [45, 21], "end_point": [45, 22], "text": "\n"}, {"type": "integer_literal", "children": [], "start_byte": 1069, "end_byte": 1070, "start_point": [45, 23], "end_point": [45, 24], "text": " "}, {"type": ",", "children": [], "start_byte": 1070, "end_byte": 1071, "start_point": [45, 24], "end_point": [45, 25], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 1072, "end_byte": 1073, "start_point": [45, 26], "end_point": [45, 27], "text": " "}, {"type": ",", "children": [], "start_byte": 1073, "end_byte": 1074, "start_point": [45, 27], "end_point": [45, 28], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 1075, "end_byte": 1076, "start_point": [45, 29], "end_point": [45, 30], "text": " "}, {"type": ",", "children": [], "start_byte": 1076, "end_byte": 1077, "start_point": [45, 30], "end_point": [45, 31], "text": " "}, {"type": "integer_literal", "children": [], "start_byte": 1078, "end_byte": 1079, "start_point": [45, 32], "end_point": [45, 33], "text": "e"}, {"type": ",", "children": [], "start_byte": 1079, "end_byte": 1080, "start_point": [45, 33], "end_point": [45, 34], "text": "t"}, {"type": "integer_literal", "children": [], "start_byte": 1081, "end_byte": 1082, "start_point": [45, 35], "end_point": [45, 36], "text": "o"}, {"type": ",", "children": [], "start_byte": 1082, "end_byte": 1083, "start_point": [45, 36], "end_point": [45, 37], "text": "u"}, {"type": "integer_literal", "children": [], "start_byte": 1084, "end_byte": 1085, "start_point": [45, 38], "end_point": [45, 39], "text": "p"}, {"type": "]", "children": [], "start_byte": 1085, "end_byte": 1086, "start_point": [45, 39], "end_point": [45, 40], "text": "u"}], "start_byte": 1061, "end_byte": 1086, "start_point": [45, 15], "end_point": [45, 40], "text": "mber);\n\n        let outpu"}], "start_byte": 1058, "end_byte": 1086, "start_point": [45, 12], "end_point": [45, 40], "text": "&number);\n\n        let outpu"}, {"type": ",", "children": [], "start_byte": 1086, "end_byte": 1087, "start_point": [45, 40], "end_point": [45, 41], "text": "t"}, {"type": "}", "children": [], "start_byte": 1096, "end_byte": 1097, "start_point": [46, 8], "end_point": [46, 9], "text": "S"}], "start_byte": 1044, "end_byte": 1097, "start_point": [44, 28], "end_point": [46, 9], "text": "(&mut output, &number);\n\n        let output_string: S"}], "start_byte": 1037, "end_byte": 1097, "start_point": [44, 21], "end_point": [46, 9], "text": "toAscii(&mut output, &number);\n\n        let output_string: S"}, {"type": ";", "children": [], "start_byte": 1097, "end_byte": 1098, "start_point": [46, 9], "end_point": [46, 10], "text": "t"}], "start_byte": 1024, "end_byte": 1098, "start_point": [44, 8], "end_point": [46, 10], "text": "      uInt64_toAscii(&mut output, &number);\n\n        let output_string: St"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1107, "end_byte": 1110, "start_point": [47, 8], "end_point": [47, 11], "text": "tpu"}, {"type": "mutable_specifier", "children": [], "start_byte": 1111, "end_byte": 1114, "start_point": [47, 12], "end_point": [47, 15], "text": ".it"}, {"type": "identifier", "children": [], "start_byte": 1115, "end_byte": 1121, "start_point": [47, 16], "end_point": [47, 22], "text": "r().ta"}, {"type": "=", "children": [], "start_byte": 1122, "end_byte": 1123, "start_point": [47, 23], "end_point": [47, 24], "text": "e"}, {"type": "array_expression", "children": [{"type": "[", "children": [], "start_byte": 1124, "end_byte": 1125, "start_point": [47, 25], "end_point": [47, 26], "text": "w"}, {"type": "char_literal", "children": [], "start_byte": 1125, "end_byte": 1129, "start_point": [47, 26], "end_point": [47, 30], "text": "hile"}, {"type": ";", "children": [], "start_byte": 1129, "end_byte": 1130, "start_point": [47, 30], "end_point": [47, 31], "text": "("}, {"type": "integer_literal", "children": [], "start_byte": 1131, "end_byte": 1133, "start_point": [47, 32], "end_point": [47, 34], "text": "&&"}, {"type": "]", "children": [], "start_byte": 1133, "end_byte": 1134, "start_point": [47, 34], "end_point": [47, 35], "text": "c"}], "start_byte": 1124, "end_byte": 1134, "start_point": [47, 25], "end_point": [47, 35], "text": "while(|&&c"}, {"type": ";", "children": [], "start_byte": 1134, "end_byte": 1135, "start_point": [47, 35], "end_point": [47, 36], "text": "|"}], "start_byte": 1107, "end_byte": 1135, "start_point": [47, 8], "end_point": [47, 36], "text": "tput.iter().take_while(|&&c|"}, {"type": "expression_statement", "children": [{"type": "call_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1144, "end_byte": 1158, "start_point": [48, 8], "end_point": [48, 22], "text": "').collect();\n"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1158, "end_byte": 1159, "start_point": [48, 22], "end_point": [48, 23], "text": " "}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1159, "end_byte": 1160, "start_point": [48, 23], "end_point": [48, 24], "text": " "}, {"type": "mutable_specifier", "children": [], "start_byte": 1160, "end_byte": 1163, "start_point": [48, 24], "end_point": [48, 27], "text": "   "}, {"type": "identifier", "children": [], "start_byte": 1164, "end_byte": 1170, "start_point": [48, 28], "end_point": [48, 34], "text": "  asse"}], "start_byte": 1159, "end_byte": 1170, "start_point": [48, 23], "end_point": [48, 34], "text": "       asse"}, {"type": ",", "children": [], "start_byte": 1170, "end_byte": 1171, "start_point": [48, 34], "end_point": [48, 35], "text": "r"}, {"type": "reference_expression", "children": [{"type": "&", "children": [], "start_byte": 1172, "end_byte": 1173, "start_point": [48, 36], "end_point": [48, 37], "text": "_"}, {"type": "identifier", "children": [], "start_byte": 1173, "end_byte": 1179, "start_point": [48, 37], "end_point": [48, 43], "text": "eq!(ou"}], "start_byte": 1172, "end_byte": 1179, "start_point": [48, 36], "end_point": [48, 43], "text": "_eq!(ou"}, {"type": ")", "children": [], "start_byte": 1179, "end_byte": 1180, "start_point": [48, 43], "end_point": [48, 44], "text": "t"}], "start_byte": 1158, "end_byte": 1180, "start_point": [48, 22], "end_point": [48, 44], "text": "        assert_eq!(out"}], "start_byte": 1144, "end_byte": 1180, "start_point": [48, 8], "end_point": [48, 44], "text": "').collect();\n        assert_eq!(out"}, {"type": ";", "children": [], "start_byte": 1180, "end_byte": 1181, "start_point": [48, 44], "end_point": [48, 45], "text": "p"}], "start_byte": 1144, "end_byte": 1181, "start_point": [48, 8], "end_point": [48, 45], "text": "').collect();\n        assert_eq!(outp"}, {"type": "let_declaration", "children": [{"type": "let", "children": [], "start_byte": 1191, "end_byte": 1194, "start_point": [50, 8], "end_point": [50, 11], "text": " \"1"}, {"type": "identifier", "children": [], "start_byte": 1195, "end_byte": 1208, "start_point": [50, 12], "end_point": [50, 25], "text": "\");\n    }\n}\n\n"}, {"type": ":", "children": [], "start_byte": 1208, "end_byte": 1209, "start_point": [50, 25], "end_point": [50, 26], "text": "/"}, {"type": "type_identifier", "children": [], "start_byte": 1210, "end_byte": 1216, "start_point": [50, 27], "end_point": [50, 33], "text": " \u5728Rust"}, {"type": "=", "children": [], "start_byte": 1217, "end_byte": 1218, "start_point": [50, 34], "end_point": [50, 35], "text": "\uff0c"}, {"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "call_expression", "children": [{"type": "field_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1219, "end_byte": 1225, "start_point": [50, 36], "end_point": [50, 42], "text": "\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c"}, {"type": ".", "children": [], "start_byte": 1225, "end_byte": 1226, "start_point": [50, 42], "end_point": [50, 43], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1226, "end_byte": 1230, "start_point": [50, 43], "end_point": [50, 47], "text": "`car"}], "start_byte": 1219, "end_byte": 1230, "start_point": [50, 36], "end_point": [50, 47], "text": "\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `car"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1230, "end_byte": 1231, "start_point": [50, 47], "end_point": [50, 48], "text": "g"}, {"type": ")", "children": [], "start_byte": 1231, "end_byte": 1232, "start_point": [50, 48], "end_point": [50, 49], "text": "o"}], "start_byte": 1230, "end_byte": 1232, "start_point": [50, 47], "end_point": [50, 49], "text": "go"}], "start_byte": 1219, "end_byte": 1232, "start_point": [50, 36], "end_point": [50, 49], "text": "\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo"}, {"type": ".", "children": [], "start_byte": 1232, "end_byte": 1233, "start_point": [50, 49], "end_point": [50, 50], "text": " "}, {"type": "field_identifier", "children": [], "start_byte": 1233, "end_byte": 1243, "start_point": [50, 50], "end_point": [50, 60], "text": "test` \u6765\u8fd0\u884c\u4e0a"}], "start_byte": 1219, "end_byte": 1243, "start_point": [50, 36], "end_point": [50, 60], "text": "\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1243, "end_byte": 1244, "start_point": [50, 60], "end_point": [50, 61], "text": "\u9762"}, {"type": "closure_expression", "children": [{"type": "closure_parameters", "children": [{"type": "|", "children": [], "start_byte": 1244, "end_byte": 1245, "start_point": [50, 61], "end_point": [50, 62], "text": "\u7684"}, {"type": "reference_pattern", "children": [{"type": "&", "children": [], "start_byte": 1245, "end_byte": 1246, "start_point": [50, 62], "end_point": [50, 63], "text": "\u6d4b"}, {"type": "reference_pattern", "children": [{"type": "&", "children": [], "start_byte": 1246, "end_byte": 1247, "start_point": [50, 63], "end_point": [50, 64], "text": "\u8bd5"}, {"type": "identifier", "children": [], "start_byte": 1247, "end_byte": 1248, "start_point": [50, 64], "end_point": [50, 65], "text": "\u6848"}], "start_byte": 1246, "end_byte": 1248, "start_point": [50, 63], "end_point": [50, 65], "text": "\u8bd5\u6848"}], "start_byte": 1245, "end_byte": 1248, "start_point": [50, 62], "end_point": [50, 65], "text": "\u6d4b\u8bd5\u6848"}, {"type": "|", "children": [], "start_byte": 1248, "end_byte": 1249, "start_point": [50, 65], "end_point": [50, 66], "text": "\u4f8b"}], "start_byte": 1244, "end_byte": 1249, "start_point": [50, 61], "end_point": [50, 66], "text": "\u7684\u6d4b\u8bd5\u6848\u4f8b"}, {"type": "binary_expression", "children": [{"type": "identifier", "children": [], "start_byte": 1250, "end_byte": 1251, "start_point": [50, 67], "end_point": [50, 68], "text": "\n"}, {"type": "!=", "children": [], "start_byte": 1252, "end_byte": 1254, "start_point": [50, 69], "end_point": [50, 71], "text": ""}, {"type": "char_literal", "children": [], "start_byte": 1255, "end_byte": 1259, "start_point": [50, 72], "end_point": [50, 76], "text": ""}], "start_byte": 1250, "end_byte": 1259, "start_point": [50, 67], "end_point": [50, 76], "text": "\n"}], "start_byte": 1244, "end_byte": 1259, "start_point": [50, 61], "end_point": [50, 76], "text": "\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}, {"type": ")", "children": [], "start_byte": 1259, "end_byte": 1260, "start_point": [50, 76], "end_point": [50, 77], "text": ""}], "start_byte": 1243, "end_byte": 1260, "start_point": [50, 60], "end_point": [50, 77], "text": "\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}], "start_byte": 1219, "end_byte": 1260, "start_point": [50, 36], "end_point": [50, 77], "text": "\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}, {"type": ".", "children": [], "start_byte": 1260, "end_byte": 1261, "start_point": [50, 77], "end_point": [50, 78], "text": ""}, {"type": "field_identifier", "children": [], "start_byte": 1261, "end_byte": 1268, "start_point": [50, 78], "end_point": [50, 85], "text": ""}], "start_byte": 1219, "end_byte": 1268, "start_point": [50, 36], "end_point": [50, 85], "text": "\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}, {"type": "arguments", "children": [{"type": "(", "children": [], "start_byte": 1268, "end_byte": 1269, "start_point": [50, 85], "end_point": [50, 86], "text": ""}, {"type": ")", "children": [], "start_byte": 1269, "end_byte": 1270, "start_point": [50, 86], "end_point": [50, 87], "text": ""}], "start_byte": 1268, "end_byte": 1270, "start_point": [50, 85], "end_point": [50, 87], "text": ""}], "start_byte": 1219, "end_byte": 1270, "start_point": [50, 36], "end_point": [50, 87], "text": "\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}, {"type": ";", "children": [], "start_byte": 1270, "end_byte": 1271, "start_point": [50, 87], "end_point": [50, 88], "text": ""}], "start_byte": 1191, "end_byte": 1271, "start_point": [50, 8], "end_point": [50, 88], "text": " \"12\");\n    }\n}\n\n// \u5728Rust\u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}, {"type": "expression_statement", "children": [{"type": "macro_invocation", "children": [{"type": "identifier", "children": [], "start_byte": 1280, "end_byte": 1289, "start_point": [51, 8], "end_point": [51, 17], "text": ""}, {"type": "!", "children": [], "start_byte": 1289, "end_byte": 1290, "start_point": [51, 17], "end_point": [51, 18], "text": ""}, {"type": "token_tree", "children": [{"type": "(", "children": [], "start_byte": 1290, "end_byte": 1291, "start_point": [51, 18], "end_point": [51, 19], "text": ""}, {"type": "identifier", "children": [], "start_byte": 1291, "end_byte": 1304, "start_point": [51, 19], "end_point": [51, 32], "text": ""}, {"type": "string_literal", "children": [{"type": "\"", "children": [], "start_byte": 1306, "end_byte": 1307, "start_point": [51, 34], "end_point": [51, 35], "text": ""}, {"type": "\"", "children": [], "start_byte": 1309, "end_byte": 1310, "start_point": [51, 37], "end_point": [51, 38], "text": ""}], "start_byte": 1306, "end_byte": 1310, "start_point": [51, 34], "end_point": [51, 38], "text": ""}, {"type": ")", "children": [], "start_byte": 1310, "end_byte": 1311, "start_point": [51, 38], "end_point": [51, 39], "text": ""}], "start_byte": 1290, "end_byte": 1311, "start_point": [51, 18], "end_point": [51, 39], "text": ""}], "start_byte": 1280, "end_byte": 1311, "start_point": [51, 8], "end_point": [51, 39], "text": ""}, {"type": ";", "children": [], "start_byte": 1311, "end_byte": 1312, "start_point": [51, 39], "end_point": [51, 40], "text": ""}], "start_byte": 1280, "end_byte": 1312, "start_point": [51, 8], "end_point": [51, 40], "text": ""}, {"type": "}", "children": [], "start_byte": 1317, "end_byte": 1318, "start_point": [52, 4], "end_point": [52, 5], "text": ""}], "start_byte": 1014, "end_byte": 1318, "start_point": [43, 29], "end_point": [52, 5], "text": "'; 32];\n        uInt64_toAscii(&mut output, &number);\n\n        let output_string: String = output.iter().take_while(|&&c| c != '\\0').collect();\n        assert_eq!(output_string, \"12\");\n    }\n}\n\n// \u5728Rust\u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}], "start_byte": 989, "end_byte": 1318, "start_point": [43, 4], "end_point": [52, 5], "text": "    let mut output = ['\\0'; 32];\n        uInt64_toAscii(&mut output, &number);\n\n        let output_string: String = output.iter().take_while(|&&c| c != '\\0').collect();\n        assert_eq!(output_string, \"12\");\n    }\n}\n\n// \u5728Rust\u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}, {"type": "}", "children": [], "start_byte": 1319, "end_byte": 1320, "start_point": [53, 0], "end_point": [53, 1], "text": ""}], "start_byte": 952, "end_byte": 1320, "start_point": [39, 10], "end_point": [53, 1], "text": "0, 0, 0, 0, 0, 0, 0],\n        };\n        let mut output = ['\\0'; 32];\n        uInt64_toAscii(&mut output, &number);\n\n        let output_string: String = output.iter().take_while(|&&c| c != '\\0').collect();\n        assert_eq!(output_string, \"12\");\n    }\n}\n\n// \u5728Rust\u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}], "start_byte": 942, "end_byte": 1320, "start_point": [39, 0], "end_point": [53, 1], "text": "  b: [12, 0, 0, 0, 0, 0, 0, 0],\n        };\n        let mut output = ['\\0'; 32];\n        uInt64_toAscii(&mut output, &number);\n\n        let output_string: String = output.iter().take_while(|&&c| c != '\\0').collect();\n        assert_eq!(output_string, \"12\");\n    }\n}\n\n// \u5728Rust\u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}, {"type": "line_comment", "children": [], "start_byte": 1322, "end_byte": 1406, "start_point": [55, 0], "end_point": [55, 84], "text": ""}], "start_byte": 1, "end_byte": 1407, "start_point": [1, 0], "end_point": [56, 0], "text": "use crate::bzip2::scc_20_root_13_uInt64_qrm10::*;\nuse crate::global_vars::bzip2_c1::{UInt64};\n\n\n// uInt64_toAscii ( char* outbuf, UInt64* n )\n\n// \u5224\u65adUInt64\u662f\u5426\u4e3a0\nfn uInt64_isZero(n: &UInt64) -> bool {\n    for &byte in &n.b {\n        if byte != 0 {\n            return false;\n        }\n    }\n    true\n}\n\n// \u5c06UInt64\u8f6c\u6362\u4e3aASCII\u8868\u793a\nfn uInt64_toAscii(outbuf: &mut [char; 32], n: &UInt64) {\n    let mut q;\n    let mut buf = ['\\0'; 32]; // \u521d\u59cb\u5316\u4e3anull\u5b57\u7b26\n    let mut nBuf = 0usize;\n    let mut n_copy = *n;\n\n    // \u5faa\u73af\u76f4\u5230n_copy\u4e3a0\n    while !uInt64_isZero(&n_copy) {\n        q = uInt64_qrm10(&mut n_copy);\n        buf[nBuf] = (q + '0' as i32) as u8 as char;\n        nBuf += 1;\n    }\n\n    outbuf[nBuf] = '\\0'; // \u8bbe\u7f6e\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\n    for i in 0..nBuf {\n        outbuf[i] = buf[nBuf - i - 1];\n    }\n}\n\n// \u6ce8\u610f\uff1a\u7531\u4e8eRust\u6ca1\u6709\u5185\u5efa\u7684\u6d4b\u8bd5\u6846\u67b6\u50cfCUnit\uff0c\u6211\u4eec\u5c06\u4f7f\u7528Rust\u7684\u6d4b\u8bd5\u6846\u67b6\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn test_uInt64_toAscii() {\n        let number = UInt64 {\n            b: [12, 0, 0, 0, 0, 0, 0, 0],\n        };\n        let mut output = ['\\0'; 32];\n        uInt64_toAscii(&mut output, &number);\n\n        let output_string: String = output.iter().take_while(|&&c| c != '\\0').collect();\n        assert_eq!(output_string, \"12\");\n    }\n}\n\n// \u5728Rust\u4e2d\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c `cargo test` \u6765\u8fd0\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\u6848\u4f8b\u3002\n"}